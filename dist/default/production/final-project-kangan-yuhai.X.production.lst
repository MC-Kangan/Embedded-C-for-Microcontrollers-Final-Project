

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Mar 10 09:35:43 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71  0000                     
    72                           ; Version 2.35
    73                           ; Generated 05/05/2021 GMT
    74                           ; 
    75                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F67K40 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     
   108                           	psect	idataBANK0
   109  004396                     __pidataBANK0:
   110                           	callstack 0
   111                           
   112                           ;initializer for _CALIBRATION_180
   113  004396  28                 	db	40
   114                           
   115                           ;initializer for _SENSITIVITY
   116  004397  0B                 	db	11
   117                           
   118                           	psect	smallconst
   119  000E00                     __psmallconst:
   120                           	callstack 0
   121  000E00  00                 	db	0
   122  000E01  0000               	dw	0
   123  000E03  4B00               	dw	19200
   124  000E05                     __end_of_toint:
   125                           	callstack 0
   126  0000                     _TRISFbits	set	3974
   127  0000                     _TX4REG	set	3812
   128  0000                     _RC4STAbits	set	3815
   129  0000                     _SP4BRGH	set	3814
   130  0000                     _TRISGbits	set	3975
   131  0000                     _TRISEbits	set	3973
   132  0000                     _SSP2CON2bits	set	3802
   133  0000                     _LATG	set	3967
   134  0000                     _LATE	set	3965
   135  0000                     _RX4PPS	set	3605
   136  0000                     _SSP2CLKPPS	set	3612
   137  0000                     _SSP2DATPPS	set	3613
   138  0000                     _ANSELDbits	set	3751
   139  0000                     _SSP2ADD	set	3798
   140  0000                     _SSP2CON1bits	set	3801
   141  0000                     _LATAbits	set	3961
   142  0000                     _LATFbits	set	3966
   143  0000                     _LATGbits	set	3967
   144  0000                     _TRISAbits	set	3969
   145  0000                     _TRISCbits	set	3971
   146  0000                     _TRISDbits	set	3972
   147  0000                     _LATCbits	set	3963
   148  0000                     _LATEbits	set	3965
   149  0000                     _RC4REG	set	3811
   150  0000                     _SP4BRGL	set	3813
   151  0000                     _TX4STAbits	set	3816
   152  0000                     _BAUD4CONbits	set	3817
   153  0000                     _SSP2CON2	set	3802
   154  0000                     _SSP2STAT	set	3800
   155  0000                     _ANSELFbits	set	3764
   156  0000                     _SSP2BUF	set	3797
   157  0000                     _PIE4bits	set	3629
   158  0000                     _PIR4bits	set	3639
   159  0000                     _RC0PPS	set	3682
   160  0000                     _RC7PPS	set	3689
   161  0000                     _RD5PPS	set	3695
   162  0000                     _RE2PPS	set	3700
   163  0000                     _RD6PPS	set	3696
   164  0000                     _PORTFbits	set	3982
   165  0000                     _T2PR	set	4028
   166  0000                     _T2CONbits	set	4029
   167  0000                     _PWM7DCH	set	4000
   168  0000                     _PWM6DCH	set	4003
   169  0000                     _T2CLKCONbits	set	4031
   170  0000                     _T2HLTbits	set	4030
   171  0000                     _PWM6CONbits	set	4004
   172  0000                     _PWM7CONbits	set	4001
   173  0000                     _ADREFbits	set	3928
   174  0000                     _ADPCH	set	3935
   175  0000                     _ADRESH	set	3940
   176  0000                     _ADCON0bits	set	3936
   177  000E05                     STR_1:
   178  000E05  25                 	db	37
   179  000E06  64                 	db	100	;'d'
   180  000E07  09                 	db	9
   181  000E08  25                 	db	37
   182  000E09  64                 	db	100	;'d'
   183  000E0A  09                 	db	9
   184  000E0B  25                 	db	37
   185  000E0C  64                 	db	100	;'d'
   186  000E0D  09                 	db	9
   187  000E0E  25                 	db	37
   188  000E0F  64                 	db	100	;'d'
   189  000E10  0D                 	db	13
   190  000E11  0A                 	db	10
   191  000E12  00                 	db	0
   192  000E13  4C                 	db	76	;'L'
   193  000E14  69                 	db	105	;'i'
   194  000E15  67                 	db	103	;'g'
   195  000E16  68                 	db	104	;'h'
   196  000E17  74                 	db	116	;'t'
   197  000E18  20                 	db	32
   198  000E19  62                 	db	98	;'b'
   199  000E1A  6C                 	db	108	;'l'
   200  000E1B  75                 	db	117	;'u'
   201  000E1C  65                 	db	101	;'e'
   202  000E1D  00                 	db	0
   203  000E1E  4F                 	db	79	;'O'
   204  000E1F  72                 	db	114	;'r'
   205  000E20  61                 	db	97	;'a'
   206  000E21  6E                 	db	110	;'n'
   207  000E22  67                 	db	103	;'g'
   208  000E23  65                 	db	101	;'e'
   209  000E24  00                 	db	0
   210  000E25  59                 	db	89	;'Y'
   211  000E26  65                 	db	101	;'e'
   212  000E27  6C                 	db	108	;'l'
   213  000E28  6C                 	db	108	;'l'
   214  000E29  6F                 	db	111	;'o'
   215  000E2A  77                 	db	119	;'w'
   216  000E2B  00                 	db	0
   217  000E2C  57                 	db	87	;'W'
   218  000E2D  68                 	db	104	;'h'
   219  000E2E  69                 	db	105	;'i'
   220  000E2F  74                 	db	116	;'t'
   221  000E30  65                 	db	101	;'e'
   222  000E31  00                 	db	0
   223  000E32  42                 	db	66	;'B'
   224  000E33  6C                 	db	108	;'l'
   225  000E34  61                 	db	97	;'a'
   226  000E35  63                 	db	99	;'c'
   227  000E36  6B                 	db	107	;'k'
   228  000E37  00                 	db	0
   229  000E38  47                 	db	71	;'G'
   230  000E39  72                 	db	114	;'r'
   231  000E3A  65                 	db	101	;'e'
   232  000E3B  65                 	db	101	;'e'
   233  000E3C  6E                 	db	110	;'n'
   234  000E3D  00                 	db	0
   235  000E3E  45                 	db	69	;'E'
   236  000E3F  72                 	db	114	;'r'
   237  000E40  72                 	db	114	;'r'
   238  000E41  6F                 	db	111	;'o'
   239  000E42  72                 	db	114	;'r'
   240  000E43  00                 	db	0
   241  000E44  42                 	db	66	;'B'
   242  000E45  6C                 	db	108	;'l'
   243  000E46  75                 	db	117	;'u'
   244  000E47  65                 	db	101	;'e'
   245  000E48  00                 	db	0
   246  000E49  50                 	db	80	;'P'
   247  000E4A  69                 	db	105	;'i'
   248  000E4B  6E                 	db	110	;'n'
   249  000E4C  6B                 	db	107	;'k'
   250  000E4D  00                 	db	0
   251  000E4E  52                 	db	82	;'R'
   252  000E4F  65                 	db	101	;'e'
   253  000E50  64                 	db	100	;'d'
   254  000E51  00                 	db	0
   255  000E52  00                 	db	0	; dummy byte at the end
   256  0000                     
   257                           ; #config settings
   258                           
   259                           	psect	cinit
   260  0040A4                     __pcinit:
   261                           	callstack 0
   262  0040A4                     start_initialization:
   263                           	callstack 0
   264  0040A4                     __initialization:
   265                           	callstack 0
   266                           
   267                           ; Initialize objects allocated to BANK0 (2 bytes)
   268                           ; load TBLPTR registers with __pidataBANK0
   269  0040A4  0E96               	movlw	low __pidataBANK0
   270  0040A6  6EF6               	movwf	tblptrl,c
   271  0040A8  0E43               	movlw	high __pidataBANK0
   272  0040AA  6EF7               	movwf	tblptrh,c
   273  0040AC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   274  0040AE  6EF8               	movwf	tblptru,c
   275  0040B0  0009               	tblrd		*+	;fetch initializer
   276  0040B2  CFF5 F0F6          	movff	tablat,__pdataBANK0
   277  0040B6  0009               	tblrd		*+	;fetch initializer
   278  0040B8  CFF5 F0F7          	movff	tablat,__pdataBANK0+1
   279                           
   280                           ; Clear objects allocated to BANK1 (133 bytes)
   281  0040BC  EE01  F000         	lfsr	0,__pbssBANK1
   282  0040C0  0E85               	movlw	133
   283  0040C2                     clear_0:
   284  0040C2  6AEE               	clrf	postinc0,c
   285  0040C4  06E8               	decf	wreg,f,c
   286  0040C6  E1FD               	bnz	clear_0
   287                           
   288                           ; Clear objects allocated to BANK0 (16 bytes)
   289  0040C8  EE00  F0E6         	lfsr	0,__pbssBANK0
   290  0040CC  0E10               	movlw	16
   291  0040CE                     clear_1:
   292  0040CE  6AEE               	clrf	postinc0,c
   293  0040D0  06E8               	decf	wreg,f,c
   294  0040D2  E1FD               	bnz	clear_1
   295  0040D4                     end_of_initialization:
   296                           	callstack 0
   297  0040D4                     __end_of__initialization:
   298                           	callstack 0
   299  0040D4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   300  0040D6  6EF8               	movwf	tblptru,c
   301  0040D8  0E0E               	movlw	high __Lsmallconst
   302  0040DA  6EF7               	movwf	tblptrh,c
   303  0040DC  0100               	movlb	0
   304  0040DE  EF50  F01E         	goto	_main	;jump to C main() function
   305                           
   306                           	psect	bssBANK0
   307  0000E6                     __pbssBANK0:
   308                           	callstack 0
   309  0000E6                     roundf@F527:
   310                           	callstack 0
   311  0000E6                     	ds	4
   312  0000EA                     _nout:
   313                           	callstack 0
   314  0000EA                     	ds	2
   315  0000EC                     _width:
   316                           	callstack 0
   317  0000EC                     	ds	2
   318  0000EE                     _prec:
   319                           	callstack 0
   320  0000EE                     	ds	2
   321  0000F0                     _flags:
   322                           	callstack 0
   323  0000F0                     	ds	2
   324  0000F2                     _TxBufReadCnt:
   325                           	callstack 0
   326  0000F2                     	ds	1
   327  0000F3                     _TxBufWriteCnt:
   328                           	callstack 0
   329  0000F3                     	ds	1
   330  0000F4                     _RxBufReadCnt:
   331                           	callstack 0
   332  0000F4                     	ds	1
   333  0000F5                     _RxBufWriteCnt:
   334                           	callstack 0
   335  0000F5                     	ds	1
   336                           
   337                           	psect	dataBANK0
   338  0000F6                     __pdataBANK0:
   339                           	callstack 0
   340  0000F6                     _CALIBRATION_180:
   341                           	callstack 0
   342  0000F6                     	ds	1
   343  0000F7                     _SENSITIVITY:
   344                           	callstack 0
   345  0000F7                     	ds	1
   346                           
   347                           	psect	bssBANK1
   348  000100                     __pbssBANK1:
   349                           	callstack 0
   350  000100                     _EUSART4TXbuf:
   351                           	callstack 0
   352  000100                     	ds	60
   353  00013C                     _EUSART4RXbuf:
   354                           	callstack 0
   355  00013C                     	ds	20
   356  000150                     _motorR:
   357                           	callstack 0
   358  000150                     	ds	10
   359  00015A                     _motorL:
   360                           	callstack 0
   361  00015A                     	ds	10
   362  000164                     _color:
   363                           	callstack 0
   364  000164                     	ds	1
   365  000165                     _dbuf:
   366                           	callstack 0
   367  000165                     	ds	32
   368                           
   369                           	psect	cstackBANK1
   370  000185                     __pcstackBANK1:
   371                           	callstack 0
   372  000185                     main@complete:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x0
   376  000185                     	ds	1
   377  000186                     main@motorL:
   378                           	callstack 0
   379                           
   380                           ; 10 bytes @ 0x1
   381  000186                     	ds	10
   382  000190                     main@motorR:
   383                           	callstack 0
   384                           
   385                           ; 10 bytes @ 0xB
   386  000190                     	ds	10
   387  00019A                     main@rgb:
   388                           	callstack 0
   389                           
   390                           ; 8 bytes @ 0x15
   391  00019A                     	ds	8
   392  0001A2                     main@white:
   393                           	callstack 0
   394                           
   395                           ; 18 bytes @ 0x1D
   396  0001A2                     	ds	18
   397                           
   398                           	psect	cstackBANK0
   399  000060                     __pcstackBANK0:
   400                           	callstack 0
   401  000060                     ??___fltol:
   402  000060                     ?_sprintf:
   403                           	callstack 0
   404  000060                     sprintf@s:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x0
   408  000060                     	ds	2
   409  000062                     sprintf@fmt:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x2
   413  000062                     	ds	2
   414  000064                     ___fltol@sign1:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x4
   418  000064                     	ds	1
   419  000065                     ___fltol@exp1:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x5
   423  000065                     	ds	1
   424  000066                     ?_lroundf:
   425                           	callstack 0
   426  000066                     lroundf@x:
   427                           	callstack 0
   428                           
   429                           ; 4 bytes @ 0x6
   430  000066                     	ds	4
   431  00006A                     compare@lower:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0xA
   435  00006A                     	ds	2
   436  00006C                     compare@value2compare:
   437                           	callstack 0
   438  00006C                     sprintf@ap:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0xC
   442  00006C                     	ds	2
   443  00006E                     compare@upper:
   444                           	callstack 0
   445  00006E                     sprintf@f:
   446                           	callstack 0
   447                           
   448                           ; 11 bytes @ 0xE
   449  00006E                     	ds	2
   450  000070                     detect_color@m:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x10
   454  000070                     	ds	2
   455  000072                     detect_color@w:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x12
   459  000072                     	ds	2
   460  000074                     ??_detect_color:
   461                           
   462                           ; 1 bytes @ 0x14
   463  000074                     	ds	4
   464  000078                     detect_color@BC:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x18
   468  000078                     	ds	1
   469  000079                     color_display@buf:
   470                           	callstack 0
   471  000079                     color_predict@buf:
   472                           	callstack 0
   473                           
   474                           ; 100 bytes @ 0x19
   475  000079                     	ds	1
   476  00007A                     detect_color@RG:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x1A
   480  00007A                     	ds	2
   481  00007C                     detect_color@RB:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x1C
   485  00007C                     	ds	2
   486  00007E                     detect_color@GB:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x1E
   490  00007E                     	ds	2
   491  000080                     detect_color@GR:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x20
   495  000080                     	ds	2
   496  000082                     detect_color@GG:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x22
   500  000082                     	ds	2
   501  000084                     detect_color@RR:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x24
   505  000084                     	ds	2
   506  000086                     detect_color@BB:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x26
   510  000086                     	ds	2
   511  000088                     detect_color@GR_REAL:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x28
   515  000088                     	ds	2
   516  00008A                     detect_color@GC_REAL:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x2A
   520  00008A                     	ds	2
   521  00008C                     detect_color@BR:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x2C
   525  00008C                     	ds	2
   526  00008E                     detect_color@BG:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x2E
   530  00008E                     	ds	2
   531  000090                     detect_color@color:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x30
   535  000090                     	ds	1
   536  000091                     _detect_color$2736:
   537                           	callstack 0
   538                           
   539                           ; 4 bytes @ 0x31
   540  000091                     	ds	76
   541  0000DD                     color_predict@color:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x7D
   545  0000DD                     	ds	1
   546  0000DE                     color_data_collection@i:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x7E
   550  0000DE                     	ds	2
   551  0000E0                     color_data_collection@j:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x80
   555  0000E0                     	ds	2
   556  0000E2                     color_data_collection@k:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x82
   560  0000E2                     	ds	2
   561  0000E4                     color_data_collection@x:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x84
   565  0000E4                     	ds	2
   566                           
   567                           	psect	cstackCOMRAM
   568  000001                     __pcstackCOMRAM:
   569                           	callstack 0
   570  000001                     ??_LED_R:
   571  000001                     ??_LED_C:
   572  000001                     ??_LED_B:
   573  000001                     ??_LED_G:
   574  000001                     ??_I2C_2_Master_Idle:
   575  000001                     ?_strlen:
   576                           	callstack 0
   577  000001                     ?___fladd:
   578                           	callstack 0
   579  000001                     ?___flneg:
   580                           	callstack 0
   581  000001                     ?___xxtofl:
   582                           	callstack 0
   583  000001                     ?___aodiv:
   584                           	callstack 0
   585  000001                     ?___aomod:
   586                           	callstack 0
   587  000001                     sendCharSerial4@charToSend:
   588                           	callstack 0
   589  000001                     initDCmotorsPWM@PWMperiod:
   590                           	callstack 0
   591  000001                     initDCmotors_parameter@motorL:
   592                           	callstack 0
   593  000001                     fputc@c:
   594                           	callstack 0
   595  000001                     strlen@s:
   596                           	callstack 0
   597  000001                     ___flge@ff1:
   598                           	callstack 0
   599  000001                     ___flneg@f1:
   600                           	callstack 0
   601  000001                     ___fladd@b:
   602                           	callstack 0
   603  000001                     ___xxtofl@val:
   604                           	callstack 0
   605  000001                     ___aodiv@dividend:
   606                           	callstack 0
   607  000001                     ___aomod@dividend:
   608                           	callstack 0
   609                           
   610                           ; 8 bytes @ 0x0
   611  000001                     	ds	1
   612  000002                     ??_I2C_2_Master_Read:
   613  000002                     I2C_2_Master_Write@data_byte:
   614                           	callstack 0
   615  000002                     sendStringSerial4@string:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x1
   619  000002                     	ds	1
   620  000003                     color_writetoaddr@value:
   621                           	callstack 0
   622  000003                     I2C_2_Master_Read@ack:
   623                           	callstack 0
   624  000003                     initDCmotors_parameter@motorR:
   625                           	callstack 0
   626  000003                     fputc@fp:
   627                           	callstack 0
   628  000003                     strlen@a:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x2
   632  000003                     	ds	1
   633  000004                     color_writetoaddr@address:
   634                           	callstack 0
   635  000004                     I2C_2_Master_Read@tmp:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x3
   639  000004                     	ds	1
   640  000005                     ??_fputc:
   641  000005                     ??_color_click_init:
   642  000005                     ??___xxtofl:
   643  000005                     ?_color_read_Red:
   644                           	callstack 0
   645  000005                     ?_color_read_Blue:
   646                           	callstack 0
   647  000005                     ?_color_read_Green:
   648                           	callstack 0
   649  000005                     ?_color_read_Clear:
   650                           	callstack 0
   651  000005                     ___flge@ff2:
   652                           	callstack 0
   653  000005                     ___fladd@a:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x4
   657  000005                     	ds	2
   658  000007                     ??_color_read_Red:
   659  000007                     ??_color_read_Blue:
   660  000007                     ??_color_read_Green:
   661  000007                     ??_color_read_Clear:
   662                           
   663                           ; 1 bytes @ 0x6
   664  000007                     	ds	2
   665  000009                     ??___fladd:
   666  000009                     ??___flge:
   667  000009                     ___xxtofl@sign:
   668                           	callstack 0
   669  000009                     ___aodiv@divisor:
   670                           	callstack 0
   671  000009                     ___aomod@divisor:
   672                           	callstack 0
   673                           
   674                           ; 8 bytes @ 0x8
   675  000009                     	ds	1
   676  00000A                     ___xxtofl@exp:
   677                           	callstack 0
   678  00000A                     color_read_Red@tmp:
   679                           	callstack 0
   680  00000A                     color_read_Blue@tmp:
   681                           	callstack 0
   682  00000A                     color_read_Green@tmp:
   683                           	callstack 0
   684  00000A                     color_read_Clear@tmp:
   685                           	callstack 0
   686  00000A                     fputs@s:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x9
   690  00000A                     	ds	1
   691  00000B                     ___xxtofl@arg:
   692                           	callstack 0
   693                           
   694                           ; 4 bytes @ 0xA
   695  00000B                     	ds	1
   696  00000C                     read_color@m:
   697                           	callstack 0
   698  00000C                     calibrate_white@w:
   699                           	callstack 0
   700  00000C                     fputs@fp:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0xB
   704  00000C                     	ds	1
   705  00000D                     ___fladd@signs:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0xC
   709  00000D                     	ds	1
   710  00000E                     ??_calibrate_white:
   711  00000E                     ___fladd@aexp:
   712                           	callstack 0
   713  00000E                     fputs@c:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0xD
   717  00000E                     	ds	1
   718  00000F                     ?___fldiv:
   719                           	callstack 0
   720  00000F                     ___fladd@bexp:
   721                           	callstack 0
   722  00000F                     fputs@i:
   723                           	callstack 0
   724  00000F                     ___fldiv@b:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0xE
   728  00000F                     	ds	1
   729  000010                     ___fladd@grs:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0xF
   733  000010                     	ds	1
   734  000011                     ?_pad:
   735                           	callstack 0
   736  000011                     ?___flsub:
   737                           	callstack 0
   738  000011                     ___aodiv@counter:
   739                           	callstack 0
   740  000011                     ___aomod@counter:
   741                           	callstack 0
   742  000011                     pad@fp:
   743                           	callstack 0
   744  000011                     ___flsub@b:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x10
   748  000011                     	ds	1
   749  000012                     ___aodiv@sign:
   750                           	callstack 0
   751  000012                     ___aomod@sign:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x11
   755  000012                     	ds	1
   756  000013                     ?_abs:
   757                           	callstack 0
   758  000013                     pad@buf:
   759                           	callstack 0
   760  000013                     abs@a:
   761                           	callstack 0
   762  000013                     ___fldiv@a:
   763                           	callstack 0
   764  000013                     ___aodiv@quotient:
   765                           	callstack 0
   766                           
   767                           ; 8 bytes @ 0x12
   768  000013                     	ds	2
   769  000015                     ??_abs:
   770  000015                     pad@p:
   771                           	callstack 0
   772  000015                     ___flsub@a:
   773                           	callstack 0
   774                           
   775                           ; 4 bytes @ 0x14
   776  000015                     	ds	2
   777  000017                     ??___fldiv:
   778  000017                     ??_pad:
   779                           
   780                           ; 1 bytes @ 0x16
   781  000017                     	ds	1
   782  000018                     pad@i:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x17
   786  000018                     	ds	1
   787  000019                     
   788                           ; 1 bytes @ 0x18
   789  000019                     	ds	1
   790  00001A                     pad@w:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x19
   794  00001A                     	ds	1
   795  00001B                     ___fldiv@rem:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x1A
   799  00001B                     	ds	1
   800  00001C                     ?_dtoa:
   801                           	callstack 0
   802  00001C                     dtoa@fp:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x1B
   806  00001C                     	ds	2
   807  00001E                     dtoa@d:
   808                           	callstack 0
   809                           
   810                           ; 8 bytes @ 0x1D
   811  00001E                     	ds	1
   812  00001F                     ___fldiv@sign:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x1E
   816  00001F                     	ds	1
   817  000020                     ___fldiv@new_exp:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x1F
   821  000020                     	ds	2
   822  000022                     ___fldiv@grs:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x21
   826  000022                     	ds	4
   827  000026                     ??_dtoa:
   828  000026                     ___fldiv@bexp:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0x25
   832  000026                     	ds	1
   833  000027                     ___fldiv@aexp:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x26
   837  000027                     	ds	1
   838  000028                     ?___flmul:
   839                           	callstack 0
   840  000028                     ___flmul@b:
   841                           	callstack 0
   842                           
   843                           ; 4 bytes @ 0x27
   844  000028                     	ds	4
   845  00002C                     ___flmul@a:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x2B
   849  00002C                     	ds	2
   850  00002E                     _dtoa$2375:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x2D
   854  00002E                     	ds	2
   855  000030                     ??___flmul:
   856  000030                     dtoa@p:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x2F
   860  000030                     	ds	2
   861  000032                     dtoa@w:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x31
   865  000032                     	ds	2
   866  000034                     ___flmul@sign:
   867                           	callstack 0
   868  000034                     dtoa@s:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x33
   872  000034                     	ds	1
   873  000035                     ___flmul@grs:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0x34
   877  000035                     	ds	1
   878  000036                     dtoa@n:
   879                           	callstack 0
   880                           
   881                           ; 8 bytes @ 0x35
   882  000036                     	ds	3
   883  000039                     ___flmul@aexp:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x38
   887  000039                     	ds	1
   888  00003A                     ___flmul@bexp:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0x39
   892  00003A                     	ds	1
   893  00003B                     ___flmul@prod:
   894                           	callstack 0
   895                           
   896                           ; 4 bytes @ 0x3A
   897  00003B                     	ds	3
   898  00003E                     dtoa@i:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x3D
   902  00003E                     	ds	1
   903  00003F                     ___flmul@temp:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x3E
   907  00003F                     	ds	1
   908  000040                     ?_vfpfcnvrt:
   909                           	callstack 0
   910  000040                     vfpfcnvrt@fp:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x3F
   914  000040                     	ds	1
   915  000041                     ?_roundf:
   916                           	callstack 0
   917  000041                     roundf@x:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x40
   921  000041                     	ds	1
   922  000042                     vfpfcnvrt@fmt:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x41
   926  000042                     	ds	2
   927  000044                     vfpfcnvrt@ap:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x43
   931  000044                     	ds	1
   932  000045                     ??_roundf:
   933                           
   934                           ; 1 bytes @ 0x44
   935  000045                     	ds	1
   936  000046                     ??_vfpfcnvrt:
   937                           
   938                           ; 1 bytes @ 0x45
   939  000046                     	ds	2
   940  000048                     vfpfcnvrt@ll:
   941                           	callstack 0
   942                           
   943                           ; 8 bytes @ 0x47
   944  000048                     	ds	1
   945  000049                     _roundf$2738:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x48
   949  000049                     	ds	4
   950  00004D                     roundf@e:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x4C
   954  00004D                     	ds	2
   955  00004F                     _roundf$2737:
   956                           	callstack 0
   957                           
   958                           ; 4 bytes @ 0x4E
   959  00004F                     	ds	1
   960  000050                     ?_vfprintf:
   961                           	callstack 0
   962  000050                     vfprintf@fp:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x4F
   966  000050                     	ds	2
   967  000052                     vfprintf@fmt:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x51
   971  000052                     	ds	1
   972  000053                     roundf@u:
   973                           	callstack 0
   974                           
   975                           ; 4 bytes @ 0x52
   976  000053                     	ds	1
   977  000054                     vfprintf@ap:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x53
   981  000054                     	ds	2
   982  000056                     vfprintf@cfmt:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x55
   986  000056                     	ds	1
   987  000057                     roundf@y:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x56
   991  000057                     	ds	1
   992  000058                     color_display@m:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x57
   996  000058                     	ds	2
   997  00005A                     color_data_collection@m:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x59
  1001  00005A                     	ds	1
  1002  00005B                     ?___fltol:
  1003                           	callstack 0
  1004  00005B                     ___fltol@f1:
  1005                           	callstack 0
  1006                           
  1007                           ; 4 bytes @ 0x5A
  1008  00005B                     	ds	1
  1009  00005C                     ??_color_data_collection:
  1010                           
  1011                           ; 1 bytes @ 0x5B
  1012  00005C                     	ds	3
  1013  00005F                     compare@result:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x5E
  1017  00005F                     	ds	1
  1018  000060                     
  1019                           ; 1 bytes @ 0x5F
  1020 ;;
  1021 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1022 ;;
  1023 ;; *************** function _main *****************
  1024 ;; Defined at:
  1025 ;;		line 24 in file "main.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  white          18   29[BANK1 ] struct white_card
  1030 ;;  motorR         10   11[BANK1 ] struct DC_motor
  1031 ;;  motorL         10    1[BANK1 ] struct DC_motor
  1032 ;;  rgb             8   21[BANK1 ] struct color_rgb
  1033 ;;  complete        1    0[BANK1 ] unsigned char 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1044 ;;      Locals:         0       0      47       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1046 ;;      Totals:         0       0      47       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1047 ;;Total ram usage:       47 bytes
  1048 ;; Hardware stack levels required when called: 10
  1049 ;; This function calls:
  1050 ;;		_I2C_2_Master_Init
  1051 ;;		_calibrate_white
  1052 ;;		_color_click_init
  1053 ;;		_color_data_collection
  1054 ;;		_color_predict
  1055 ;;		_detect_color
  1056 ;;		_initDCmotorsPWM
  1057 ;;		_initDCmotors_parameter
  1058 ;;		_initUSART4
  1059 ;;		_pin_init
  1060 ;; This function is called by:
  1061 ;;		Startup code after reset
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text0
  1066  003CA0                     __ptext0:
  1067                           	callstack 0
  1068  003CA0                     _main:
  1069                           	callstack 21
  1070  003CA0                     
  1071                           ;main.c: 25:     I2C_2_Master_Init();
  1072  003CA0  EC14  F021         	call	_I2C_2_Master_Init	;wreg free
  1073  003CA4                     
  1074                           ;main.c: 26:     color_click_init();
  1075  003CA4  ECE2  F020         	call	_color_click_init	;wreg free
  1076  003CA8                     
  1077                           ;main.c: 27:     initDCmotorsPWM(199);
  1078  003CA8  0E00               	movlw	0
  1079  003CAA  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1080  003CAC  0EC7               	movlw	199
  1081  003CAE  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1082  003CB0  ECF0  F01F         	call	_initDCmotorsPWM	;wreg free
  1083  003CB4                     
  1084                           ;main.c: 29:     initUSART4();
  1085  003CB4  EC8D  F021         	call	_initUSART4	;wreg free
  1086  003CB8                     
  1087                           ;main.c: 31:     struct color_rgb rgb;;main.c: 32:     struct white_card white;;main.c: 
      +                          36:     struct DC_motor motorL, motorR;;main.c: 38:     initDCmotors_parameter(&motorL, 
      +                          &motorR);
  1088  003CB8  0E86               	movlw	low main@motorL
  1089  003CBA  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1090  003CBC  0E01               	movlw	high main@motorL
  1091  003CBE  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1092  003CC0  0E90               	movlw	low main@motorR
  1093  003CC2  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1094  003CC4  0E01               	movlw	high main@motorR
  1095  003CC6  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1096  003CC8  ECE7  F01C         	call	_initDCmotors_parameter	;wreg free
  1097  003CCC                     
  1098                           ;main.c: 39:     pin_init();
  1099  003CCC  EC9C  F021         	call	_pin_init	;wreg free
  1100  003CD0                     
  1101                           ;main.c: 46:     unsigned char complete = 0;
  1102  003CD0  0E00               	movlw	0
  1103  003CD2  0101               	movlb	1	; () banked
  1104  003CD4  6F85               	movwf	main@complete& (0+255),b
  1105  003CD6  EF76  F01E         	goto	l4652
  1106  003CDA                     l4648:
  1107                           
  1108                           ; BSR set to: 1
  1109                           ;main.c: 63:                 color_data_collection(&rgb);
  1110  003CDA  0E9A               	movlw	low main@rgb
  1111  003CDC  6E5A               	movwf	color_data_collection@m^0,c
  1112  003CDE  0E01               	movlw	high main@rgb
  1113  003CE0  6E5B               	movwf	(color_data_collection@m+1)^0,c
  1114  003CE2  EC9C  F018         	call	_color_data_collection	;wreg free
  1115  003CE6                     
  1116                           ;main.c: 64:                 complete = 1;
  1117  003CE6  0E01               	movlw	1
  1118  003CE8  0101               	movlb	1	; () banked
  1119  003CEA  6F85               	movwf	main@complete& (0+255),b
  1120  003CEC                     l4652:
  1121                           
  1122                           ; BSR set to: 1
  1123                           ;main.c: 62:             while (complete == 0){
  1124  003CEC  5185               	movf	main@complete& (0+255),w,b
  1125  003CEE  B4D8               	btfsc	status,2,c
  1126  003CF0  EF7C  F01E         	goto	u4791
  1127  003CF4  EF7E  F01E         	goto	u4790
  1128  003CF8                     u4791:
  1129  003CF8  EF6D  F01E         	goto	l4648
  1130  003CFC                     u4790:
  1131  003CFC  EF76  F01E         	goto	l4652
  1132  003D00  EF00  F000         	goto	start
  1133  003D04                     __end_of_main:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _pin_init *****************
  1137 ;; Defined at:
  1138 ;;		line 58 in file "movement.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		None
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1156 ;;Total ram usage:        0 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; This function calls:
  1159 ;;		Nothing
  1160 ;; This function is called by:
  1161 ;;		_main
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text1
  1166  004338                     __ptext1:
  1167                           	callstack 0
  1168  004338                     _pin_init:
  1169                           	callstack 30
  1170  004338  8486               	bsf	134,2,c	;volatile
  1171                           
  1172                           ;movement.c: 60:     ANSELFbits.ANSELF2=0;
  1173  00433A  010E               	movlb	14	; () banked
  1174  00433C  95B4               	bcf	180,2,b	;volatile
  1175                           
  1176                           ;movement.c: 61:     TRISFbits.TRISF3=1;
  1177  00433E  8686               	bsf	134,3,c	;volatile
  1178                           
  1179                           ;movement.c: 62:     ANSELFbits.ANSELF3=0;
  1180  004340  97B4               	bcf	180,3,b	;volatile
  1181                           
  1182                           ;movement.c: 64:     TRISFbits.TRISF6 = 0;
  1183  004342  9C86               	bcf	134,6,c	;volatile
  1184                           
  1185                           ;movement.c: 65:     LATFbits.LATF6 = 0;
  1186  004344  9C7E               	bcf	126,6,c	;volatile
  1187                           
  1188                           ;movement.c: 67:     TRISGbits.TRISG1 = 0;
  1189  004346  9287               	bcf	135,1,c	;volatile
  1190                           
  1191                           ;movement.c: 68:     TRISFbits.TRISF7 = 0;
  1192  004348  9E86               	bcf	134,7,c	;volatile
  1193                           
  1194                           ;movement.c: 69:     TRISAbits.TRISA4 = 0;
  1195  00434A  9881               	bcf	129,4,c	;volatile
  1196                           
  1197                           ;movement.c: 70:     LATGbits.LATG1 = 1;
  1198  00434C  827F               	bsf	127,1,c	;volatile
  1199                           
  1200                           ;movement.c: 71:     LATFbits.LATF7 = 1;
  1201  00434E  8E7E               	bsf	126,7,c	;volatile
  1202                           
  1203                           ;movement.c: 72:     LATAbits.LATA4 = 1;
  1204  004350  8879               	bsf	121,4,c	;volatile
  1205  004352                     
  1206                           ; BSR set to: 14
  1207  004352  0012               	return		;funcret
  1208  004354                     __end_of_pin_init:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function _initUSART4 *****************
  1212 ;; Defined at:
  1213 ;;		line 4 in file "serial.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;		None
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		wreg, status,2
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;Total ram usage:        0 bytes
  1232 ;; Hardware stack levels used: 1
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text2
  1241  00431A                     __ptext2:
  1242                           	callstack 0
  1243  00431A                     _initUSART4:
  1244                           	callstack 30
  1245  00431A                     
  1246                           ;serial.c: 8:     RC0PPS = 0x12;
  1247  00431A  0E12               	movlw	18
  1248  00431C  010E               	movlb	14	; () banked
  1249  00431E  6F62               	movwf	98,b	;volatile
  1250                           
  1251                           ;serial.c: 9:     RX4PPS = 0x11;
  1252  004320  0E11               	movlw	17
  1253  004322  6F15               	movwf	21,b	;volatile
  1254  004324                     
  1255                           ; BSR set to: 14
  1256                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  1257  004324  97E9               	bcf	233,3,b	;volatile
  1258  004326                     
  1259                           ; BSR set to: 14
  1260                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  1261  004326  95E8               	bcf	232,2,b	;volatile
  1262                           
  1263                           ;serial.c: 13:     SP4BRGL = 51;
  1264  004328  0E33               	movlw	51
  1265  00432A  6FE5               	movwf	229,b	;volatile
  1266                           
  1267                           ;serial.c: 15:     SP4BRGH = 0;
  1268  00432C  0E00               	movlw	0
  1269  00432E  6FE6               	movwf	230,b	;volatile
  1270  004330                     
  1271                           ; BSR set to: 14
  1272                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  1273  004330  89E7               	bsf	231,4,b	;volatile
  1274  004332                     
  1275                           ; BSR set to: 14
  1276                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  1277  004332  8BE8               	bsf	232,5,b	;volatile
  1278  004334                     
  1279                           ; BSR set to: 14
  1280                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  1281  004334  8FE7               	bsf	231,7,b	;volatile
  1282  004336                     
  1283                           ; BSR set to: 14
  1284  004336  0012               	return		;funcret
  1285  004338                     __end_of_initUSART4:
  1286                           	callstack 0
  1287                           
  1288 ;; *************** function _initDCmotors_parameter *****************
  1289 ;; Defined at:
  1290 ;;		line 42 in file "dc_motor.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  1293 ;;		 -> main@motorL(10), 
  1294 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  1295 ;;		 -> main@motorR(10), 
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1307 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1310 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1311 ;;Total ram usage:        4 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_main
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text3
  1321  0039CE                     __ptext3:
  1322                           	callstack 0
  1323  0039CE                     _initDCmotors_parameter:
  1324                           	callstack 30
  1325  0039CE                     
  1326                           ;dc_motor.c: 44:     motorL->power = 0;
  1327  0039CE  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  1328  0039D2  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  1329  0039D6  0E00               	movlw	0
  1330  0039D8  6EDF               	movwf	indf2,c
  1331  0039DA                     
  1332                           ;dc_motor.c: 45:     motorL->direction = 1;
  1333  0039DA  EE20 F001          	lfsr	2,1
  1334  0039DE  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1335  0039E0  26D9               	addwf	fsr2l,f,c
  1336  0039E2  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1337  0039E4  22DA               	addwfc	fsr2h,f,c
  1338  0039E6  0E01               	movlw	1
  1339  0039E8  6EDF               	movwf	indf2,c
  1340  0039EA                     
  1341                           ;dc_motor.c: 46:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  1342  0039EA  EE20 F002          	lfsr	2,2
  1343  0039EE  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1344  0039F0  26D9               	addwf	fsr2l,f,c
  1345  0039F2  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1346  0039F4  22DA               	addwfc	fsr2h,f,c
  1347  0039F6  0EA3               	movlw	163
  1348  0039F8  6EDE               	movwf	postinc2,c
  1349  0039FA  0E0F               	movlw	15
  1350  0039FC  6EDD               	movwf	postdec2,c
  1351  0039FE                     
  1352                           ;dc_motor.c: 47:     motorL->dir_LAT = (unsigned char *)(&LATE);
  1353  0039FE  EE20 F004          	lfsr	2,4
  1354  003A02  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1355  003A04  26D9               	addwf	fsr2l,f,c
  1356  003A06  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1357  003A08  22DA               	addwfc	fsr2h,f,c
  1358  003A0A  0E7D               	movlw	125
  1359  003A0C  6EDE               	movwf	postinc2,c
  1360  003A0E  0E0F               	movlw	15
  1361  003A10  6EDD               	movwf	postdec2,c
  1362  003A12                     
  1363                           ;dc_motor.c: 48:     motorL->dir_pin = 4;
  1364  003A12  EE20 F006          	lfsr	2,6
  1365  003A16  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1366  003A18  26D9               	addwf	fsr2l,f,c
  1367  003A1A  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1368  003A1C  22DA               	addwfc	fsr2h,f,c
  1369  003A1E  0E04               	movlw	4
  1370  003A20  6EDF               	movwf	indf2,c
  1371  003A22                     
  1372                           ;dc_motor.c: 49:     motorL->PWMperiod = 199;
  1373  003A22  EE20 F007          	lfsr	2,7
  1374  003A26  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1375  003A28  26D9               	addwf	fsr2l,f,c
  1376  003A2A  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1377  003A2C  22DA               	addwfc	fsr2h,f,c
  1378  003A2E  0EC7               	movlw	199
  1379  003A30  6EDE               	movwf	postinc2,c
  1380  003A32  0E00               	movlw	0
  1381  003A34  6EDD               	movwf	postdec2,c
  1382  003A36                     
  1383                           ;dc_motor.c: 52:     motorR->power = 0;
  1384  003A36  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  1385  003A3A  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  1386  003A3E  0E00               	movlw	0
  1387  003A40  6EDF               	movwf	indf2,c
  1388                           
  1389                           ;dc_motor.c: 53:     motorR->direction = 1;
  1390  003A42  EE20 F001          	lfsr	2,1
  1391  003A46  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1392  003A48  26D9               	addwf	fsr2l,f,c
  1393  003A4A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1394  003A4C  22DA               	addwfc	fsr2h,f,c
  1395  003A4E  0E01               	movlw	1
  1396  003A50  6EDF               	movwf	indf2,c
  1397                           
  1398                           ;dc_motor.c: 54:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  1399  003A52  EE20 F002          	lfsr	2,2
  1400  003A56  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1401  003A58  26D9               	addwf	fsr2l,f,c
  1402  003A5A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1403  003A5C  22DA               	addwfc	fsr2h,f,c
  1404  003A5E  0EA0               	movlw	160
  1405  003A60  6EDE               	movwf	postinc2,c
  1406  003A62  0E0F               	movlw	15
  1407  003A64  6EDD               	movwf	postdec2,c
  1408                           
  1409                           ;dc_motor.c: 55:     motorR->dir_LAT = (unsigned char *)(&LATG);
  1410  003A66  EE20 F004          	lfsr	2,4
  1411  003A6A  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1412  003A6C  26D9               	addwf	fsr2l,f,c
  1413  003A6E  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1414  003A70  22DA               	addwfc	fsr2h,f,c
  1415  003A72  0E7F               	movlw	127
  1416  003A74  6EDE               	movwf	postinc2,c
  1417  003A76  0E0F               	movlw	15
  1418  003A78  6EDD               	movwf	postdec2,c
  1419                           
  1420                           ;dc_motor.c: 56:     motorR->dir_pin = 6;
  1421  003A7A  EE20 F006          	lfsr	2,6
  1422  003A7E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1423  003A80  26D9               	addwf	fsr2l,f,c
  1424  003A82  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1425  003A84  22DA               	addwfc	fsr2h,f,c
  1426  003A86  0E06               	movlw	6
  1427  003A88  6EDF               	movwf	indf2,c
  1428                           
  1429                           ;dc_motor.c: 57:     motorR->PWMperiod = 199;
  1430  003A8A  EE20 F007          	lfsr	2,7
  1431  003A8E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1432  003A90  26D9               	addwf	fsr2l,f,c
  1433  003A92  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1434  003A94  22DA               	addwfc	fsr2h,f,c
  1435  003A96  0EC7               	movlw	199
  1436  003A98  6EDE               	movwf	postinc2,c
  1437  003A9A  0E00               	movlw	0
  1438  003A9C  6EDD               	movwf	postdec2,c
  1439  003A9E  0012               	return		;funcret
  1440  003AA0                     __end_of_initDCmotors_parameter:
  1441                           	callstack 0
  1442                           
  1443 ;; *************** function _initDCmotorsPWM *****************
  1444 ;; Defined at:
  1445 ;;		line 12 in file "dc_motor.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  PWMperiod       2    0[COMRAM] int 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1463 ;;Total ram usage:        2 bytes
  1464 ;; Hardware stack levels used: 1
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text4
  1473  003FE0                     __ptext4:
  1474                           	callstack 0
  1475  003FE0                     _initDCmotorsPWM:
  1476                           	callstack 30
  1477  003FE0                     
  1478                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  1479  003FE0  9485               	bcf	133,2,c	;volatile
  1480                           
  1481                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  1482  003FE2  9E83               	bcf	131,7,c	;volatile
  1483                           
  1484                           ;dc_motor.c: 17:     TRISGbits.TRISG6=0;
  1485  003FE4  9C87               	bcf	135,6,c	;volatile
  1486                           
  1487                           ;dc_motor.c: 18:     TRISEbits.TRISE4=0;
  1488  003FE6  9885               	bcf	133,4,c	;volatile
  1489                           
  1490                           ;dc_motor.c: 19:     LATEbits.LATE2=0;
  1491  003FE8  947D               	bcf	125,2,c	;volatile
  1492                           
  1493                           ;dc_motor.c: 20:     LATCbits.LATC7=0;
  1494  003FEA  9E7B               	bcf	123,7,c	;volatile
  1495                           
  1496                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1497  003FEC  9C7F               	bcf	127,6,c	;volatile
  1498                           
  1499                           ;dc_motor.c: 22:     LATEbits.LATE4=0;
  1500  003FEE  987D               	bcf	125,4,c	;volatile
  1501  003FF0                     
  1502                           ;dc_motor.c: 25:     T2CONbits.CKPS=0b011;
  1503  003FF0  50BD               	movf	189,w,c	;volatile
  1504  003FF2  0B8F               	andlw	-113
  1505  003FF4  0930               	iorlw	48
  1506  003FF6  6EBD               	movwf	189,c	;volatile
  1507                           
  1508                           ;dc_motor.c: 26:     T2HLTbits.MODE=0b00000;
  1509  003FF8  0EE0               	movlw	-32
  1510  003FFA  16BE               	andwf	190,f,c	;volatile
  1511                           
  1512                           ;dc_motor.c: 27:     T2CLKCONbits.CS=0b0001;
  1513  003FFC  50BF               	movf	191,w,c	;volatile
  1514  003FFE  0BF0               	andlw	-16
  1515  004000  0901               	iorlw	1
  1516  004002  6EBF               	movwf	191,c	;volatile
  1517                           
  1518                           ;dc_motor.c: 30:     T2PR=200-1;
  1519  004004  0EC7               	movlw	199
  1520  004006  6EBC               	movwf	188,c	;volatile
  1521  004008                     
  1522                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  1523  004008  8EBD               	bsf	189,7,c	;volatile
  1524                           
  1525                           ;dc_motor.c: 33:     RE2PPS=0x0A;
  1526  00400A  0E0A               	movlw	10
  1527  00400C  010E               	movlb	14	; () banked
  1528  00400E  6F74               	movwf	116,b	;volatile
  1529                           
  1530                           ;dc_motor.c: 34:     RC7PPS=0x0B;
  1531  004010  0E0B               	movlw	11
  1532  004012  6F69               	movwf	105,b	;volatile
  1533                           
  1534                           ;dc_motor.c: 36:     PWM6DCH=0;
  1535  004014  0E00               	movlw	0
  1536  004016  6EA3               	movwf	163,c	;volatile
  1537                           
  1538                           ;dc_motor.c: 37:     PWM7DCH=0;
  1539  004018  0E00               	movlw	0
  1540  00401A  6EA0               	movwf	160,c	;volatile
  1541  00401C                     
  1542                           ; BSR set to: 14
  1543                           ;dc_motor.c: 39:     PWM6CONbits.EN = 1;
  1544  00401C  8EA4               	bsf	164,7,c	;volatile
  1545  00401E                     
  1546                           ; BSR set to: 14
  1547                           ;dc_motor.c: 40:     PWM7CONbits.EN = 1;
  1548  00401E  8EA1               	bsf	161,7,c	;volatile
  1549  004020                     
  1550                           ; BSR set to: 14
  1551  004020  0012               	return		;funcret
  1552  004022                     __end_of_initDCmotorsPWM:
  1553                           	callstack 0
  1554                           
  1555 ;; *************** function _detect_color *****************
  1556 ;; Defined at:
  1557 ;;		line 226 in file "color.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  m               2   16[BANK0 ] PTR struct color_rgb
  1560 ;;		 -> main@rgb(8), 
  1561 ;;  w               2   18[BANK0 ] PTR struct white_card
  1562 ;;		 -> main@white(18), 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  BG              2   46[BANK0 ] unsigned int 
  1565 ;;  BR              2   44[BANK0 ] unsigned int 
  1566 ;;  GC_REAL         2   42[BANK0 ] unsigned int 
  1567 ;;  GR_REAL         2   40[BANK0 ] unsigned int 
  1568 ;;  BB              2   38[BANK0 ] unsigned int 
  1569 ;;  RR              2   36[BANK0 ] unsigned int 
  1570 ;;  GG              2   34[BANK0 ] unsigned int 
  1571 ;;  GR              2   32[BANK0 ] unsigned int 
  1572 ;;  GB              2   30[BANK0 ] unsigned int 
  1573 ;;  RB              2   28[BANK0 ] unsigned int 
  1574 ;;  RG              2   26[BANK0 ] unsigned int 
  1575 ;;  BC              2   24[BANK0 ] unsigned int 
  1576 ;;  color           1   48[BANK0 ] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      unsigned char 
  1579 ;; Registers used:
  1580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1586 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1587 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1588 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1589 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1590 ;;Total ram usage:       37 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; Hardware stack levels required when called: 4
  1593 ;; This function calls:
  1594 ;;		_LED_B
  1595 ;;		_LED_G
  1596 ;;		_LED_R
  1597 ;;		___fldiv
  1598 ;;		___flmul
  1599 ;;		___xxtofl
  1600 ;;		_compare
  1601 ;;		_lroundf
  1602 ;;		_read_color
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text5
  1609  000E54                     __ptext5:
  1610                           	callstack 0
  1611  000E54                     _detect_color:
  1612                           	callstack 26
  1613  000E54  0E00               	movlw	0
  1614  000E56  0100               	movlb	0	; () banked
  1615  000E58  6F7B               	movwf	(detect_color@RG+1)& (0+255),b
  1616  000E5A  0E00               	movlw	0
  1617  000E5C  6F7A               	movwf	detect_color@RG& (0+255),b
  1618  000E5E  0E00               	movlw	0
  1619  000E60  6F7D               	movwf	(detect_color@RB+1)& (0+255),b
  1620  000E62  0E00               	movlw	0
  1621  000E64  6F7C               	movwf	detect_color@RB& (0+255),b
  1622  000E66  0E00               	movlw	0
  1623  000E68  6F81               	movwf	(detect_color@GR+1)& (0+255),b
  1624  000E6A  0E00               	movlw	0
  1625  000E6C  6F80               	movwf	detect_color@GR& (0+255),b
  1626  000E6E  0E00               	movlw	0
  1627  000E70  6F83               	movwf	(detect_color@GG+1)& (0+255),b
  1628  000E72  0E00               	movlw	0
  1629  000E74  6F82               	movwf	detect_color@GG& (0+255),b
  1630  000E76  0E00               	movlw	0
  1631  000E78  6F7F               	movwf	(detect_color@GB+1)& (0+255),b
  1632  000E7A  0E00               	movlw	0
  1633  000E7C  6F7E               	movwf	detect_color@GB& (0+255),b
  1634  000E7E  0E00               	movlw	0
  1635  000E80  6F8D               	movwf	(detect_color@BR+1)& (0+255),b
  1636  000E82  0E00               	movlw	0
  1637  000E84  6F8C               	movwf	detect_color@BR& (0+255),b
  1638  000E86  0E00               	movlw	0
  1639  000E88  6F8F               	movwf	(detect_color@BG+1)& (0+255),b
  1640  000E8A  0E00               	movlw	0
  1641  000E8C  6F8E               	movwf	detect_color@BG& (0+255),b
  1642  000E8E  0E00               	movlw	0
  1643  000E90  6F87               	movwf	(detect_color@BB+1)& (0+255),b
  1644  000E92  0E00               	movlw	0
  1645  000E94  6F86               	movwf	detect_color@BB& (0+255),b
  1646  000E96  0E00               	movlw	0
  1647  000E98  6F89               	movwf	(detect_color@GR_REAL+1)& (0+255),b
  1648  000E9A  0E00               	movlw	0
  1649  000E9C  6F88               	movwf	detect_color@GR_REAL& (0+255),b
  1650  000E9E  0E00               	movlw	0
  1651  000EA0  6F8B               	movwf	(detect_color@GC_REAL+1)& (0+255),b
  1652  000EA2  0E00               	movlw	0
  1653  000EA4  6F8A               	movwf	detect_color@GC_REAL& (0+255),b
  1654  000EA6  0E00               	movlw	0
  1655  000EA8  6F79               	movwf	(detect_color@BC+1)& (0+255),b
  1656  000EAA  0E00               	movlw	0
  1657  000EAC  6F78               	movwf	detect_color@BC& (0+255),b
  1658                           
  1659                           ;color.c: 231:     unsigned char color = 0;
  1660  000EAE  0E00               	movlw	0
  1661  000EB0  6F90               	movwf	detect_color@color& (0+255),b
  1662  000EB2                     
  1663                           ; BSR set to: 0
  1664                           ;color.c: 233:     LED_R();
  1665  000EB2  EC5D  F021         	call	_LED_R	;wreg free
  1666  000EB6                     
  1667                           ;color.c: 234:     read_color(m);
  1668  000EB6  C070  F00C         	movff	detect_color@m,read_color@m
  1669  000EBA  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  1670  000EBE  ECB3  F01E         	call	_read_color	;wreg free
  1671  000EC2                     
  1672                           ;color.c: 235:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1673  000EC2  C072  FFD9         	movff	detect_color@w,fsr2l
  1674  000EC6  C073  FFDA         	movff	detect_color@w+1,fsr2h
  1675  000ECA  CFDE F074          	movff	postinc2,??_detect_color
  1676  000ECE  CFDD F075          	movff	postdec2,??_detect_color+1
  1677  000ED2  C074  F001         	movff	??_detect_color,___xxtofl@val
  1678  000ED6  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1679  000EDA  6A03               	clrf	(___xxtofl@val+2)^0,c
  1680  000EDC  6A04               	clrf	(___xxtofl@val+3)^0,c
  1681  000EDE  0E00               	movlw	0
  1682  000EE0  ECE8  F016         	call	___xxtofl
  1683  000EE4  C001  F013         	movff	?___xxtofl,___fldiv@a
  1684  000EE8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1685  000EEC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1686  000EF0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1687  000EF4  C070  FFD9         	movff	detect_color@m,fsr2l
  1688  000EF8  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1689  000EFC  CFDE F076          	movff	postinc2,??_detect_color+2
  1690  000F00  CFDD F077          	movff	postdec2,??_detect_color+3
  1691  000F04  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1692  000F08  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1693  000F0C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1694  000F0E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1695  000F10  0E00               	movlw	0
  1696  000F12  ECE8  F016         	call	___xxtofl
  1697  000F16  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1698  000F1A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1699  000F1E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1700  000F22  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1701  000F26  ECA9  F013         	call	___fldiv	;wreg free
  1702  000F2A  C00F  F028         	movff	?___fldiv,___flmul@b
  1703  000F2E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1704  000F32  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1705  000F36  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1706  000F3A  0E00               	movlw	0
  1707  000F3C  6E2C               	movwf	___flmul@a^0,c
  1708  000F3E  0E00               	movlw	0
  1709  000F40  6E2D               	movwf	(___flmul@a+1)^0,c
  1710  000F42  0EC8               	movlw	200
  1711  000F44  6E2E               	movwf	(___flmul@a+2)^0,c
  1712  000F46  0E42               	movlw	66
  1713  000F48  6E2F               	movwf	(___flmul@a+3)^0,c
  1714  000F4A  ECBD  F00F         	call	___flmul	;wreg free
  1715  000F4E  C028  F091         	movff	?___flmul,_detect_color$2736
  1716  000F52  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  1717  000F56  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  1718  000F5A  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  1719  000F5E                     
  1720                           ;color.c: 235:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1721  000F5E  C091  F066         	movff	_detect_color$2736,lroundf@x
  1722  000F62  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  1723  000F66  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  1724  000F6A  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  1725  000F6E  EC71  F020         	call	_lroundf	;wreg free
  1726  000F72  C066  F084         	movff	?_lroundf,detect_color@RR
  1727  000F76  C067  F085         	movff	?_lroundf+1,detect_color@RR+1
  1728  000F7A  0100               	movlb	0	; () banked
  1729  000F7C  EE20 F002          	lfsr	2,2
  1730  000F80  5172               	movf	detect_color@w& (0+255),w,b
  1731  000F82  26D9               	addwf	fsr2l,f,c
  1732  000F84  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1733  000F86  22DA               	addwfc	fsr2h,f,c
  1734  000F88  CFDE F074          	movff	postinc2,??_detect_color
  1735  000F8C  CFDD F075          	movff	postdec2,??_detect_color+1
  1736  000F90  C074  F001         	movff	??_detect_color,___xxtofl@val
  1737  000F94  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1738  000F98  6A03               	clrf	(___xxtofl@val+2)^0,c
  1739  000F9A  6A04               	clrf	(___xxtofl@val+3)^0,c
  1740  000F9C  0E00               	movlw	0
  1741  000F9E  ECE8  F016         	call	___xxtofl
  1742  000FA2  C001  F013         	movff	?___xxtofl,___fldiv@a
  1743  000FA6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1744  000FAA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1745  000FAE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1746  000FB2  0100               	movlb	0	; () banked
  1747  000FB4  EE20 F002          	lfsr	2,2
  1748  000FB8  5170               	movf	detect_color@m& (0+255),w,b
  1749  000FBA  26D9               	addwf	fsr2l,f,c
  1750  000FBC  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1751  000FBE  22DA               	addwfc	fsr2h,f,c
  1752  000FC0  CFDE F076          	movff	postinc2,??_detect_color+2
  1753  000FC4  CFDD F077          	movff	postdec2,??_detect_color+3
  1754  000FC8  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1755  000FCC  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1756  000FD0  6A03               	clrf	(___xxtofl@val+2)^0,c
  1757  000FD2  6A04               	clrf	(___xxtofl@val+3)^0,c
  1758  000FD4  0E00               	movlw	0
  1759  000FD6  ECE8  F016         	call	___xxtofl
  1760  000FDA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1761  000FDE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1762  000FE2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1763  000FE6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1764  000FEA  ECA9  F013         	call	___fldiv	;wreg free
  1765  000FEE  C00F  F028         	movff	?___fldiv,___flmul@b
  1766  000FF2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1767  000FF6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1768  000FFA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1769  000FFE  0E00               	movlw	0
  1770  001000  6E2C               	movwf	___flmul@a^0,c
  1771  001002  0E00               	movlw	0
  1772  001004  6E2D               	movwf	(___flmul@a+1)^0,c
  1773  001006  0EC8               	movlw	200
  1774  001008  6E2E               	movwf	(___flmul@a+2)^0,c
  1775  00100A  0E42               	movlw	66
  1776  00100C  6E2F               	movwf	(___flmul@a+3)^0,c
  1777  00100E  ECBD  F00F         	call	___flmul	;wreg free
  1778  001012  C028  F091         	movff	?___flmul,_detect_color$2736
  1779  001016  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  1780  00101A  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  1781  00101E  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  1782  001022  C091  F066         	movff	_detect_color$2736,lroundf@x
  1783  001026  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  1784  00102A  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  1785  00102E  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  1786  001032  EC71  F020         	call	_lroundf	;wreg free
  1787  001036  0100               	movlb	0	; () banked
  1788  001038  EE20 F004          	lfsr	2,4
  1789  00103C  5172               	movf	detect_color@w& (0+255),w,b
  1790  00103E  26D9               	addwf	fsr2l,f,c
  1791  001040  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1792  001042  22DA               	addwfc	fsr2h,f,c
  1793  001044  CFDE F074          	movff	postinc2,??_detect_color
  1794  001048  CFDD F075          	movff	postdec2,??_detect_color+1
  1795  00104C  C074  F001         	movff	??_detect_color,___xxtofl@val
  1796  001050  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1797  001054  6A03               	clrf	(___xxtofl@val+2)^0,c
  1798  001056  6A04               	clrf	(___xxtofl@val+3)^0,c
  1799  001058  0E00               	movlw	0
  1800  00105A  ECE8  F016         	call	___xxtofl
  1801  00105E  C001  F013         	movff	?___xxtofl,___fldiv@a
  1802  001062  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1803  001066  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1804  00106A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1805  00106E  0100               	movlb	0	; () banked
  1806  001070  EE20 F004          	lfsr	2,4
  1807  001074  5170               	movf	detect_color@m& (0+255),w,b
  1808  001076  26D9               	addwf	fsr2l,f,c
  1809  001078  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1810  00107A  22DA               	addwfc	fsr2h,f,c
  1811  00107C  CFDE F076          	movff	postinc2,??_detect_color+2
  1812  001080  CFDD F077          	movff	postdec2,??_detect_color+3
  1813  001084  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1814  001088  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1815  00108C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1816  00108E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1817  001090  0E00               	movlw	0
  1818  001092  ECE8  F016         	call	___xxtofl
  1819  001096  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1820  00109A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1821  00109E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1822  0010A2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1823  0010A6  ECA9  F013         	call	___fldiv	;wreg free
  1824  0010AA  C00F  F028         	movff	?___fldiv,___flmul@b
  1825  0010AE  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1826  0010B2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1827  0010B6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1828  0010BA  0E00               	movlw	0
  1829  0010BC  6E2C               	movwf	___flmul@a^0,c
  1830  0010BE  0E00               	movlw	0
  1831  0010C0  6E2D               	movwf	(___flmul@a+1)^0,c
  1832  0010C2  0EC8               	movlw	200
  1833  0010C4  6E2E               	movwf	(___flmul@a+2)^0,c
  1834  0010C6  0E42               	movlw	66
  1835  0010C8  6E2F               	movwf	(___flmul@a+3)^0,c
  1836  0010CA  ECBD  F00F         	call	___flmul	;wreg free
  1837  0010CE  C028  F091         	movff	?___flmul,_detect_color$2736
  1838  0010D2  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  1839  0010D6  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  1840  0010DA  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  1841  0010DE  C091  F066         	movff	_detect_color$2736,lroundf@x
  1842  0010E2  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  1843  0010E6  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  1844  0010EA  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  1845  0010EE  EC71  F020         	call	_lroundf	;wreg free
  1846  0010F2                     
  1847                           ;color.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1848  0010F2  0E05               	movlw	5
  1849  0010F4  0100               	movlb	0	; () banked
  1850  0010F6  6F75               	movwf	(??_detect_color+1)& (0+255),b
  1851  0010F8  0E0F               	movlw	15
  1852  0010FA  6F74               	movwf	??_detect_color& (0+255),b
  1853  0010FC  0EF1               	movlw	241
  1854  0010FE                     u4957:
  1855  0010FE  2EE8               	decfsz	wreg,f,c
  1856  001100  D7FE               	bra	u4957
  1857  001102  2F74               	decfsz	??_detect_color& (0+255),f,b
  1858  001104  D7FC               	bra	u4957
  1859  001106  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  1860  001108  D7FA               	bra	u4957
  1861  00110A                     
  1862                           ;color.c: 238:     LED_G();
  1863  00110A  EC6D  F021         	call	_LED_G	;wreg free
  1864  00110E                     
  1865                           ;color.c: 239:     read_color(m);
  1866  00110E  C070  F00C         	movff	detect_color@m,read_color@m
  1867  001112  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  1868  001116  ECB3  F01E         	call	_read_color	;wreg free
  1869  00111A                     
  1870                           ;color.c: 240:     GR_REAL = m->R ; GC_REAL = m->C;
  1871  00111A  C070  FFD9         	movff	detect_color@m,fsr2l
  1872  00111E  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1873  001122  CFDE F088          	movff	postinc2,detect_color@GR_REAL
  1874  001126  CFDD F089          	movff	postdec2,detect_color@GR_REAL+1
  1875  00112A  0100               	movlb	0	; () banked
  1876  00112C  EE20 F006          	lfsr	2,6
  1877  001130  5170               	movf	detect_color@m& (0+255),w,b
  1878  001132  26D9               	addwf	fsr2l,f,c
  1879  001134  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1880  001136  22DA               	addwfc	fsr2h,f,c
  1881  001138  CFDE F08A          	movff	postinc2,detect_color@GC_REAL
  1882  00113C  CFDD F08B          	movff	postdec2,detect_color@GC_REAL+1
  1883  001140                     
  1884                           ; BSR set to: 0
  1885                           ;color.c: 241:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1886  001140  EE20 F006          	lfsr	2,6
  1887  001144  5172               	movf	detect_color@w& (0+255),w,b
  1888  001146  26D9               	addwf	fsr2l,f,c
  1889  001148  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1890  00114A  22DA               	addwfc	fsr2h,f,c
  1891  00114C  CFDE F074          	movff	postinc2,??_detect_color
  1892  001150  CFDD F075          	movff	postdec2,??_detect_color+1
  1893  001154  C074  F001         	movff	??_detect_color,___xxtofl@val
  1894  001158  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1895  00115C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1896  00115E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1897  001160  0E00               	movlw	0
  1898  001162  ECE8  F016         	call	___xxtofl
  1899  001166  C001  F013         	movff	?___xxtofl,___fldiv@a
  1900  00116A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1901  00116E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1902  001172  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1903  001176  C070  FFD9         	movff	detect_color@m,fsr2l
  1904  00117A  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1905  00117E  CFDE F076          	movff	postinc2,??_detect_color+2
  1906  001182  CFDD F077          	movff	postdec2,??_detect_color+3
  1907  001186  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1908  00118A  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1909  00118E  6A03               	clrf	(___xxtofl@val+2)^0,c
  1910  001190  6A04               	clrf	(___xxtofl@val+3)^0,c
  1911  001192  0E00               	movlw	0
  1912  001194  ECE8  F016         	call	___xxtofl
  1913  001198  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1914  00119C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1915  0011A0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1916  0011A4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1917  0011A8  ECA9  F013         	call	___fldiv	;wreg free
  1918  0011AC  C00F  F028         	movff	?___fldiv,___flmul@b
  1919  0011B0  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1920  0011B4  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1921  0011B8  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1922  0011BC  0E00               	movlw	0
  1923  0011BE  6E2C               	movwf	___flmul@a^0,c
  1924  0011C0  0E00               	movlw	0
  1925  0011C2  6E2D               	movwf	(___flmul@a+1)^0,c
  1926  0011C4  0EC8               	movlw	200
  1927  0011C6  6E2E               	movwf	(___flmul@a+2)^0,c
  1928  0011C8  0E42               	movlw	66
  1929  0011CA  6E2F               	movwf	(___flmul@a+3)^0,c
  1930  0011CC  ECBD  F00F         	call	___flmul	;wreg free
  1931  0011D0  C028  F091         	movff	?___flmul,_detect_color$2736
  1932  0011D4  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  1933  0011D8  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  1934  0011DC  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  1935  0011E0                     
  1936                           ;color.c: 241:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1937  0011E0  C091  F066         	movff	_detect_color$2736,lroundf@x
  1938  0011E4  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  1939  0011E8  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  1940  0011EC  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  1941  0011F0  EC71  F020         	call	_lroundf	;wreg free
  1942  0011F4  C066  F080         	movff	?_lroundf,detect_color@GR
  1943  0011F8  C067  F081         	movff	?_lroundf+1,detect_color@GR+1
  1944  0011FC  0100               	movlb	0	; () banked
  1945  0011FE  EE20 F008          	lfsr	2,8
  1946  001202  5172               	movf	detect_color@w& (0+255),w,b
  1947  001204  26D9               	addwf	fsr2l,f,c
  1948  001206  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1949  001208  22DA               	addwfc	fsr2h,f,c
  1950  00120A  CFDE F074          	movff	postinc2,??_detect_color
  1951  00120E  CFDD F075          	movff	postdec2,??_detect_color+1
  1952  001212  C074  F001         	movff	??_detect_color,___xxtofl@val
  1953  001216  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1954  00121A  6A03               	clrf	(___xxtofl@val+2)^0,c
  1955  00121C  6A04               	clrf	(___xxtofl@val+3)^0,c
  1956  00121E  0E00               	movlw	0
  1957  001220  ECE8  F016         	call	___xxtofl
  1958  001224  C001  F013         	movff	?___xxtofl,___fldiv@a
  1959  001228  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1960  00122C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1961  001230  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1962  001234  0100               	movlb	0	; () banked
  1963  001236  EE20 F002          	lfsr	2,2
  1964  00123A  5170               	movf	detect_color@m& (0+255),w,b
  1965  00123C  26D9               	addwf	fsr2l,f,c
  1966  00123E  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1967  001240  22DA               	addwfc	fsr2h,f,c
  1968  001242  CFDE F076          	movff	postinc2,??_detect_color+2
  1969  001246  CFDD F077          	movff	postdec2,??_detect_color+3
  1970  00124A  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1971  00124E  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1972  001252  6A03               	clrf	(___xxtofl@val+2)^0,c
  1973  001254  6A04               	clrf	(___xxtofl@val+3)^0,c
  1974  001256  0E00               	movlw	0
  1975  001258  ECE8  F016         	call	___xxtofl
  1976  00125C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1977  001260  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1978  001264  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1979  001268  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1980  00126C  ECA9  F013         	call	___fldiv	;wreg free
  1981  001270  C00F  F028         	movff	?___fldiv,___flmul@b
  1982  001274  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1983  001278  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1984  00127C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1985  001280  0E00               	movlw	0
  1986  001282  6E2C               	movwf	___flmul@a^0,c
  1987  001284  0E00               	movlw	0
  1988  001286  6E2D               	movwf	(___flmul@a+1)^0,c
  1989  001288  0EC8               	movlw	200
  1990  00128A  6E2E               	movwf	(___flmul@a+2)^0,c
  1991  00128C  0E42               	movlw	66
  1992  00128E  6E2F               	movwf	(___flmul@a+3)^0,c
  1993  001290  ECBD  F00F         	call	___flmul	;wreg free
  1994  001294  C028  F091         	movff	?___flmul,_detect_color$2736
  1995  001298  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  1996  00129C  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  1997  0012A0  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  1998  0012A4  C091  F066         	movff	_detect_color$2736,lroundf@x
  1999  0012A8  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  2000  0012AC  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  2001  0012B0  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  2002  0012B4  EC71  F020         	call	_lroundf	;wreg free
  2003  0012B8  C066  F082         	movff	?_lroundf,detect_color@GG
  2004  0012BC  C067  F083         	movff	?_lroundf+1,detect_color@GG+1
  2005  0012C0  0100               	movlb	0	; () banked
  2006  0012C2  EE20 F00A          	lfsr	2,10
  2007  0012C6  5172               	movf	detect_color@w& (0+255),w,b
  2008  0012C8  26D9               	addwf	fsr2l,f,c
  2009  0012CA  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2010  0012CC  22DA               	addwfc	fsr2h,f,c
  2011  0012CE  CFDE F074          	movff	postinc2,??_detect_color
  2012  0012D2  CFDD F075          	movff	postdec2,??_detect_color+1
  2013  0012D6  C074  F001         	movff	??_detect_color,___xxtofl@val
  2014  0012DA  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2015  0012DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2016  0012E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2017  0012E2  0E00               	movlw	0
  2018  0012E4  ECE8  F016         	call	___xxtofl
  2019  0012E8  C001  F013         	movff	?___xxtofl,___fldiv@a
  2020  0012EC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2021  0012F0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2022  0012F4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2023  0012F8  0100               	movlb	0	; () banked
  2024  0012FA  EE20 F004          	lfsr	2,4
  2025  0012FE  5170               	movf	detect_color@m& (0+255),w,b
  2026  001300  26D9               	addwf	fsr2l,f,c
  2027  001302  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2028  001304  22DA               	addwfc	fsr2h,f,c
  2029  001306  CFDE F076          	movff	postinc2,??_detect_color+2
  2030  00130A  CFDD F077          	movff	postdec2,??_detect_color+3
  2031  00130E  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2032  001312  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2033  001316  6A03               	clrf	(___xxtofl@val+2)^0,c
  2034  001318  6A04               	clrf	(___xxtofl@val+3)^0,c
  2035  00131A  0E00               	movlw	0
  2036  00131C  ECE8  F016         	call	___xxtofl
  2037  001320  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2038  001324  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2039  001328  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2040  00132C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2041  001330  ECA9  F013         	call	___fldiv	;wreg free
  2042  001334  C00F  F028         	movff	?___fldiv,___flmul@b
  2043  001338  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2044  00133C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2045  001340  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2046  001344  0E00               	movlw	0
  2047  001346  6E2C               	movwf	___flmul@a^0,c
  2048  001348  0E00               	movlw	0
  2049  00134A  6E2D               	movwf	(___flmul@a+1)^0,c
  2050  00134C  0EC8               	movlw	200
  2051  00134E  6E2E               	movwf	(___flmul@a+2)^0,c
  2052  001350  0E42               	movlw	66
  2053  001352  6E2F               	movwf	(___flmul@a+3)^0,c
  2054  001354  ECBD  F00F         	call	___flmul	;wreg free
  2055  001358  C028  F091         	movff	?___flmul,_detect_color$2736
  2056  00135C  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  2057  001360  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  2058  001364  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  2059  001368  C091  F066         	movff	_detect_color$2736,lroundf@x
  2060  00136C  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  2061  001370  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  2062  001374  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  2063  001378  EC71  F020         	call	_lroundf	;wreg free
  2064  00137C                     
  2065                           ;color.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2066  00137C  0E05               	movlw	5
  2067  00137E  0100               	movlb	0	; () banked
  2068  001380  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2069  001382  0E0F               	movlw	15
  2070  001384  6F74               	movwf	??_detect_color& (0+255),b
  2071  001386  0EF1               	movlw	241
  2072  001388                     u4967:
  2073  001388  2EE8               	decfsz	wreg,f,c
  2074  00138A  D7FE               	bra	u4967
  2075  00138C  2F74               	decfsz	??_detect_color& (0+255),f,b
  2076  00138E  D7FC               	bra	u4967
  2077  001390  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  2078  001392  D7FA               	bra	u4967
  2079  001394                     
  2080                           ;color.c: 244:     LED_B();
  2081  001394  EC7D  F021         	call	_LED_B	;wreg free
  2082  001398                     
  2083                           ;color.c: 245:     read_color(m);
  2084  001398  C070  F00C         	movff	detect_color@m,read_color@m
  2085  00139C  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  2086  0013A0  ECB3  F01E         	call	_read_color	;wreg free
  2087  0013A4                     
  2088                           ;color.c: 246:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2089  0013A4  0100               	movlb	0	; () banked
  2090  0013A6  EE20 F00C          	lfsr	2,12
  2091  0013AA  5172               	movf	detect_color@w& (0+255),w,b
  2092  0013AC  26D9               	addwf	fsr2l,f,c
  2093  0013AE  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2094  0013B0  22DA               	addwfc	fsr2h,f,c
  2095  0013B2  CFDE F074          	movff	postinc2,??_detect_color
  2096  0013B6  CFDD F075          	movff	postdec2,??_detect_color+1
  2097  0013BA  C074  F001         	movff	??_detect_color,___xxtofl@val
  2098  0013BE  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2099  0013C2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2100  0013C4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2101  0013C6  0E00               	movlw	0
  2102  0013C8  ECE8  F016         	call	___xxtofl
  2103  0013CC  C001  F013         	movff	?___xxtofl,___fldiv@a
  2104  0013D0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2105  0013D4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2106  0013D8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2107  0013DC  C070  FFD9         	movff	detect_color@m,fsr2l
  2108  0013E0  C071  FFDA         	movff	detect_color@m+1,fsr2h
  2109  0013E4  CFDE F076          	movff	postinc2,??_detect_color+2
  2110  0013E8  CFDD F077          	movff	postdec2,??_detect_color+3
  2111  0013EC  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2112  0013F0  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2113  0013F4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2114  0013F6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2115  0013F8  0E00               	movlw	0
  2116  0013FA  ECE8  F016         	call	___xxtofl
  2117  0013FE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2118  001402  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2119  001406  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2120  00140A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2121  00140E  ECA9  F013         	call	___fldiv	;wreg free
  2122  001412  C00F  F028         	movff	?___fldiv,___flmul@b
  2123  001416  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2124  00141A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2125  00141E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2126  001422  0E00               	movlw	0
  2127  001424  6E2C               	movwf	___flmul@a^0,c
  2128  001426  0E00               	movlw	0
  2129  001428  6E2D               	movwf	(___flmul@a+1)^0,c
  2130  00142A  0EC8               	movlw	200
  2131  00142C  6E2E               	movwf	(___flmul@a+2)^0,c
  2132  00142E  0E42               	movlw	66
  2133  001430  6E2F               	movwf	(___flmul@a+3)^0,c
  2134  001432  ECBD  F00F         	call	___flmul	;wreg free
  2135  001436  C028  F091         	movff	?___flmul,_detect_color$2736
  2136  00143A  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  2137  00143E  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  2138  001442  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  2139  001446                     
  2140                           ;color.c: 246:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2141  001446  C091  F066         	movff	_detect_color$2736,lroundf@x
  2142  00144A  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  2143  00144E  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  2144  001452  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  2145  001456  EC71  F020         	call	_lroundf	;wreg free
  2146  00145A  C066  F08C         	movff	?_lroundf,detect_color@BR
  2147  00145E  C067  F08D         	movff	?_lroundf+1,detect_color@BR+1
  2148  001462  0100               	movlb	0	; () banked
  2149  001464  EE20 F00E          	lfsr	2,14
  2150  001468  5172               	movf	detect_color@w& (0+255),w,b
  2151  00146A  26D9               	addwf	fsr2l,f,c
  2152  00146C  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2153  00146E  22DA               	addwfc	fsr2h,f,c
  2154  001470  CFDE F074          	movff	postinc2,??_detect_color
  2155  001474  CFDD F075          	movff	postdec2,??_detect_color+1
  2156  001478  C074  F001         	movff	??_detect_color,___xxtofl@val
  2157  00147C  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2158  001480  6A03               	clrf	(___xxtofl@val+2)^0,c
  2159  001482  6A04               	clrf	(___xxtofl@val+3)^0,c
  2160  001484  0E00               	movlw	0
  2161  001486  ECE8  F016         	call	___xxtofl
  2162  00148A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2163  00148E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2164  001492  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2165  001496  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2166  00149A  0100               	movlb	0	; () banked
  2167  00149C  EE20 F002          	lfsr	2,2
  2168  0014A0  5170               	movf	detect_color@m& (0+255),w,b
  2169  0014A2  26D9               	addwf	fsr2l,f,c
  2170  0014A4  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2171  0014A6  22DA               	addwfc	fsr2h,f,c
  2172  0014A8  CFDE F076          	movff	postinc2,??_detect_color+2
  2173  0014AC  CFDD F077          	movff	postdec2,??_detect_color+3
  2174  0014B0  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2175  0014B4  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2176  0014B8  6A03               	clrf	(___xxtofl@val+2)^0,c
  2177  0014BA  6A04               	clrf	(___xxtofl@val+3)^0,c
  2178  0014BC  0E00               	movlw	0
  2179  0014BE  ECE8  F016         	call	___xxtofl
  2180  0014C2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2181  0014C6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2182  0014CA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2183  0014CE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2184  0014D2  ECA9  F013         	call	___fldiv	;wreg free
  2185  0014D6  C00F  F028         	movff	?___fldiv,___flmul@b
  2186  0014DA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2187  0014DE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2188  0014E2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2189  0014E6  0E00               	movlw	0
  2190  0014E8  6E2C               	movwf	___flmul@a^0,c
  2191  0014EA  0E00               	movlw	0
  2192  0014EC  6E2D               	movwf	(___flmul@a+1)^0,c
  2193  0014EE  0EC8               	movlw	200
  2194  0014F0  6E2E               	movwf	(___flmul@a+2)^0,c
  2195  0014F2  0E42               	movlw	66
  2196  0014F4  6E2F               	movwf	(___flmul@a+3)^0,c
  2197  0014F6  ECBD  F00F         	call	___flmul	;wreg free
  2198  0014FA  C028  F091         	movff	?___flmul,_detect_color$2736
  2199  0014FE  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  2200  001502  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  2201  001506  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  2202  00150A  C091  F066         	movff	_detect_color$2736,lroundf@x
  2203  00150E  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  2204  001512  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  2205  001516  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  2206  00151A  EC71  F020         	call	_lroundf	;wreg free
  2207  00151E  C066  F08E         	movff	?_lroundf,detect_color@BG
  2208  001522  C067  F08F         	movff	?_lroundf+1,detect_color@BG+1
  2209  001526  0100               	movlb	0	; () banked
  2210  001528  EE20 F010          	lfsr	2,16
  2211  00152C  5172               	movf	detect_color@w& (0+255),w,b
  2212  00152E  26D9               	addwf	fsr2l,f,c
  2213  001530  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2214  001532  22DA               	addwfc	fsr2h,f,c
  2215  001534  CFDE F074          	movff	postinc2,??_detect_color
  2216  001538  CFDD F075          	movff	postdec2,??_detect_color+1
  2217  00153C  C074  F001         	movff	??_detect_color,___xxtofl@val
  2218  001540  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2219  001544  6A03               	clrf	(___xxtofl@val+2)^0,c
  2220  001546  6A04               	clrf	(___xxtofl@val+3)^0,c
  2221  001548  0E00               	movlw	0
  2222  00154A  ECE8  F016         	call	___xxtofl
  2223  00154E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2224  001552  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2225  001556  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2226  00155A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2227  00155E  0100               	movlb	0	; () banked
  2228  001560  EE20 F004          	lfsr	2,4
  2229  001564  5170               	movf	detect_color@m& (0+255),w,b
  2230  001566  26D9               	addwf	fsr2l,f,c
  2231  001568  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2232  00156A  22DA               	addwfc	fsr2h,f,c
  2233  00156C  CFDE F076          	movff	postinc2,??_detect_color+2
  2234  001570  CFDD F077          	movff	postdec2,??_detect_color+3
  2235  001574  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2236  001578  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2237  00157C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2238  00157E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2239  001580  0E00               	movlw	0
  2240  001582  ECE8  F016         	call	___xxtofl
  2241  001586  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2242  00158A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2243  00158E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2244  001592  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2245  001596  ECA9  F013         	call	___fldiv	;wreg free
  2246  00159A  C00F  F028         	movff	?___fldiv,___flmul@b
  2247  00159E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2248  0015A2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2249  0015A6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2250  0015AA  0E00               	movlw	0
  2251  0015AC  6E2C               	movwf	___flmul@a^0,c
  2252  0015AE  0E00               	movlw	0
  2253  0015B0  6E2D               	movwf	(___flmul@a+1)^0,c
  2254  0015B2  0EC8               	movlw	200
  2255  0015B4  6E2E               	movwf	(___flmul@a+2)^0,c
  2256  0015B6  0E42               	movlw	66
  2257  0015B8  6E2F               	movwf	(___flmul@a+3)^0,c
  2258  0015BA  ECBD  F00F         	call	___flmul	;wreg free
  2259  0015BE  C028  F091         	movff	?___flmul,_detect_color$2736
  2260  0015C2  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  2261  0015C6  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  2262  0015CA  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  2263  0015CE  C091  F066         	movff	_detect_color$2736,lroundf@x
  2264  0015D2  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  2265  0015D6  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  2266  0015DA  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  2267  0015DE  EC71  F020         	call	_lroundf	;wreg free
  2268  0015E2  C066  F086         	movff	?_lroundf,detect_color@BB
  2269  0015E6  C067  F087         	movff	?_lroundf+1,detect_color@BB+1
  2270  0015EA                     
  2271                           ;color.c: 247:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2272  0015EA  0E05               	movlw	5
  2273  0015EC  0100               	movlb	0	; () banked
  2274  0015EE  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2275  0015F0  0E0F               	movlw	15
  2276  0015F2  6F74               	movwf	??_detect_color& (0+255),b
  2277  0015F4  0EF1               	movlw	241
  2278  0015F6                     u4977:
  2279  0015F6  2EE8               	decfsz	wreg,f,c
  2280  0015F8  D7FE               	bra	u4977
  2281  0015FA  2F74               	decfsz	??_detect_color& (0+255),f,b
  2282  0015FC  D7FC               	bra	u4977
  2283  0015FE  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  2284  001600  D7FA               	bra	u4977
  2285  001602                     
  2286                           ;color.c: 250:     if (compare(0, BR, 55)){
  2287  001602  0E00               	movlw	0
  2288  001604  0100               	movlb	0	; () banked
  2289  001606  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2290  001608  0E00               	movlw	0
  2291  00160A  6F6A               	movwf	compare@lower& (0+255),b
  2292  00160C  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  2293  001610  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2294  001614  0E00               	movlw	0
  2295  001616  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2296  001618  0E37               	movlw	55
  2297  00161A  6F6E               	movwf	compare@upper& (0+255),b
  2298  00161C  EC8E  F020         	call	_compare	;wreg free
  2299  001620  0900               	iorlw	0
  2300  001622  B4D8               	btfsc	status,2,c
  2301  001624  EF16  F00B         	goto	u4321
  2302  001628  EF18  F00B         	goto	u4320
  2303  00162C                     u4321:
  2304  00162C  EF89  F00B         	goto	l4350
  2305  001630                     u4320:
  2306  001630                     
  2307                           ;color.c: 251:         if (compare(0, lroundf((float)(GG + BG)/BB * 200), 391)){color = 
      +                          3;}
  2308  001630  C086  F001         	movff	detect_color@BB,___xxtofl@val
  2309  001634  C087  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2310  001638  6A03               	clrf	(___xxtofl@val+2)^0,c
  2311  00163A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2312  00163C  0E00               	movlw	0
  2313  00163E  ECE8  F016         	call	___xxtofl
  2314  001642  C001  F013         	movff	?___xxtofl,___fldiv@a
  2315  001646  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2316  00164A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2317  00164E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2318  001652  0100               	movlb	0	; () banked
  2319  001654  518E               	movf	detect_color@BG& (0+255),w,b
  2320  001656  2582               	addwf	detect_color@GG& (0+255),w,b
  2321  001658  6F74               	movwf	??_detect_color& (0+255),b
  2322  00165A  518F               	movf	(detect_color@BG+1)& (0+255),w,b
  2323  00165C  2183               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2324  00165E  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2325  001660  C074  F001         	movff	??_detect_color,___xxtofl@val
  2326  001664  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2327  001668  6A03               	clrf	(___xxtofl@val+2)^0,c
  2328  00166A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2329  00166C  0E00               	movlw	0
  2330  00166E  ECE8  F016         	call	___xxtofl
  2331  001672  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2332  001676  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2333  00167A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2334  00167E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2335  001682  ECA9  F013         	call	___fldiv	;wreg free
  2336  001686  C00F  F028         	movff	?___fldiv,___flmul@b
  2337  00168A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2338  00168E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2339  001692  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2340  001696  0E00               	movlw	0
  2341  001698  6E2C               	movwf	___flmul@a^0,c
  2342  00169A  0E00               	movlw	0
  2343  00169C  6E2D               	movwf	(___flmul@a+1)^0,c
  2344  00169E  0E48               	movlw	72
  2345  0016A0  6E2E               	movwf	(___flmul@a+2)^0,c
  2346  0016A2  0E43               	movlw	67
  2347  0016A4  6E2F               	movwf	(___flmul@a+3)^0,c
  2348  0016A6  ECBD  F00F         	call	___flmul	;wreg free
  2349  0016AA  C028  F091         	movff	?___flmul,_detect_color$2736
  2350  0016AE  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  2351  0016B2  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  2352  0016B6  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  2353                           
  2354                           ;color.c: 251:         if (compare(0, lroundf((float)(GG + BG)/BB * 200), 391)){color = 
      +                          3;}
  2355  0016BA  0E00               	movlw	0
  2356  0016BC  0100               	movlb	0	; () banked
  2357  0016BE  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2358  0016C0  0E00               	movlw	0
  2359  0016C2  6F6A               	movwf	compare@lower& (0+255),b
  2360  0016C4  C091  F066         	movff	_detect_color$2736,lroundf@x
  2361  0016C8  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  2362  0016CC  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  2363  0016D0  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  2364  0016D4  EC71  F020         	call	_lroundf	;wreg free
  2365  0016D8  C066  F06C         	movff	?_lroundf,compare@value2compare
  2366  0016DC  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2367  0016E0  0E01               	movlw	1
  2368  0016E2  0100               	movlb	0	; () banked
  2369  0016E4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2370  0016E6  0E87               	movlw	135
  2371  0016E8  6F6E               	movwf	compare@upper& (0+255),b
  2372  0016EA  EC8E  F020         	call	_compare	;wreg free
  2373  0016EE  0900               	iorlw	0
  2374  0016F0  B4D8               	btfsc	status,2,c
  2375  0016F2  EF7D  F00B         	goto	u4331
  2376  0016F6  EF7F  F00B         	goto	u4330
  2377  0016FA                     u4331:
  2378  0016FA  EF84  F00B         	goto	l4348
  2379  0016FE                     u4330:
  2380  0016FE  0E03               	movlw	3
  2381  001700  0100               	movlb	0	; () banked
  2382  001702  6F90               	movwf	detect_color@color& (0+255),b
  2383  001704  EF6A  F00C         	goto	l4380
  2384  001708                     l4348:
  2385  001708  0E02               	movlw	2
  2386  00170A  0100               	movlb	0	; () banked
  2387  00170C  6F90               	movwf	detect_color@color& (0+255),b
  2388  00170E  EF6A  F00C         	goto	l4380
  2389  001712                     l4350:
  2390                           
  2391                           ;color.c: 255:         if (compare(0, BG, 75)){
  2392  001712  0E00               	movlw	0
  2393  001714  0100               	movlb	0	; () banked
  2394  001716  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2395  001718  0E00               	movlw	0
  2396  00171A  6F6A               	movwf	compare@lower& (0+255),b
  2397  00171C  C08E  F06C         	movff	detect_color@BG,compare@value2compare
  2398  001720  C08F  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2399  001724  0E00               	movlw	0
  2400  001726  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2401  001728  0E4B               	movlw	75
  2402  00172A  6F6E               	movwf	compare@upper& (0+255),b
  2403  00172C  EC8E  F020         	call	_compare	;wreg free
  2404  001730  0900               	iorlw	0
  2405  001732  B4D8               	btfsc	status,2,c
  2406  001734  EF9E  F00B         	goto	u4341
  2407  001738  EFA0  F00B         	goto	u4340
  2408  00173C                     u4341:
  2409  00173C  EF1A  F00C         	goto	l4362
  2410  001740                     u4340:
  2411  001740                     
  2412                           ;color.c: 256:             if (compare(0, lroundf((float)RR/BG * 200), 313)){
  2413  001740  C08E  F001         	movff	detect_color@BG,___xxtofl@val
  2414  001744  C08F  F002         	movff	detect_color@BG+1,___xxtofl@val+1
  2415  001748  6A03               	clrf	(___xxtofl@val+2)^0,c
  2416  00174A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2417  00174C  0E00               	movlw	0
  2418  00174E  ECE8  F016         	call	___xxtofl
  2419  001752  C001  F013         	movff	?___xxtofl,___fldiv@a
  2420  001756  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2421  00175A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2422  00175E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2423  001762  C084  F001         	movff	detect_color@RR,___xxtofl@val
  2424  001766  C085  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  2425  00176A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2426  00176C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2427  00176E  0E00               	movlw	0
  2428  001770  ECE8  F016         	call	___xxtofl
  2429  001774  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2430  001778  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2431  00177C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2432  001780  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2433  001784  ECA9  F013         	call	___fldiv	;wreg free
  2434  001788  C00F  F028         	movff	?___fldiv,___flmul@b
  2435  00178C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2436  001790  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2437  001794  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2438  001798  0E00               	movlw	0
  2439  00179A  6E2C               	movwf	___flmul@a^0,c
  2440  00179C  0E00               	movlw	0
  2441  00179E  6E2D               	movwf	(___flmul@a+1)^0,c
  2442  0017A0  0E48               	movlw	72
  2443  0017A2  6E2E               	movwf	(___flmul@a+2)^0,c
  2444  0017A4  0E43               	movlw	67
  2445  0017A6  6E2F               	movwf	(___flmul@a+3)^0,c
  2446  0017A8  ECBD  F00F         	call	___flmul	;wreg free
  2447  0017AC  C028  F091         	movff	?___flmul,_detect_color$2736
  2448  0017B0  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  2449  0017B4  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  2450  0017B8  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  2451                           
  2452                           ;color.c: 256:             if (compare(0, lroundf((float)RR/BG * 200), 313)){
  2453  0017BC  0E00               	movlw	0
  2454  0017BE  0100               	movlb	0	; () banked
  2455  0017C0  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2456  0017C2  0E00               	movlw	0
  2457  0017C4  6F6A               	movwf	compare@lower& (0+255),b
  2458  0017C6  C091  F066         	movff	_detect_color$2736,lroundf@x
  2459  0017CA  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  2460  0017CE  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  2461  0017D2  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  2462  0017D6  EC71  F020         	call	_lroundf	;wreg free
  2463  0017DA  C066  F06C         	movff	?_lroundf,compare@value2compare
  2464  0017DE  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2465  0017E2  0E01               	movlw	1
  2466  0017E4  0100               	movlb	0	; () banked
  2467  0017E6  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2468  0017E8  0E39               	movlw	57
  2469  0017EA  6F6E               	movwf	compare@upper& (0+255),b
  2470  0017EC  EC8E  F020         	call	_compare	;wreg free
  2471  0017F0  0900               	iorlw	0
  2472  0017F2  B4D8               	btfsc	status,2,c
  2473  0017F4  EFFE  F00B         	goto	u4351
  2474  0017F8  EF00  F00C         	goto	u4350
  2475  0017FC                     u4351:
  2476  0017FC  EF15  F00C         	goto	l4360
  2477  001800                     u4350:
  2478  001800                     
  2479                           ;color.c: 257:                 if (GR > 90){color = 6;}
  2480  001800  0100               	movlb	0	; () banked
  2481  001802  5181               	movf	(detect_color@GR+1)& (0+255),w,b
  2482  001804  E109               	bnz	u4360
  2483  001806  0E5B               	movlw	91
  2484  001808  5D80               	subwf	detect_color@GR& (0+255),w,b
  2485  00180A  A0D8               	btfss	status,0,c
  2486  00180C  EF0A  F00C         	goto	u4361
  2487  001810  EF0C  F00C         	goto	u4360
  2488  001814                     u4361:
  2489  001814  EF10  F00C         	goto	l4358
  2490  001818                     u4360:
  2491  001818                     
  2492                           ; BSR set to: 0
  2493  001818  0E06               	movlw	6
  2494  00181A  6F90               	movwf	detect_color@color& (0+255),b
  2495  00181C  EF6A  F00C         	goto	l4380
  2496  001820                     l4358:
  2497  001820  0E00               	movlw	0
  2498  001822  0100               	movlb	0	; () banked
  2499  001824  6F90               	movwf	detect_color@color& (0+255),b
  2500  001826  EF6A  F00C         	goto	l4380
  2501  00182A                     l4360:
  2502  00182A  0E01               	movlw	1
  2503  00182C  0100               	movlb	0	; () banked
  2504  00182E  6F90               	movwf	detect_color@color& (0+255),b
  2505  001830  EF6A  F00C         	goto	l4380
  2506  001834                     l4362:
  2507                           
  2508                           ;color.c: 263:             if (compare(0, BR, 85)){
  2509  001834  0E00               	movlw	0
  2510  001836  0100               	movlb	0	; () banked
  2511  001838  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2512  00183A  0E00               	movlw	0
  2513  00183C  6F6A               	movwf	compare@lower& (0+255),b
  2514  00183E  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  2515  001842  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2516  001846  0E00               	movlw	0
  2517  001848  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2518  00184A  0E55               	movlw	85
  2519  00184C  6F6E               	movwf	compare@upper& (0+255),b
  2520  00184E  EC8E  F020         	call	_compare	;wreg free
  2521  001852  0900               	iorlw	0
  2522  001854  B4D8               	btfsc	status,2,c
  2523  001856  EF2F  F00C         	goto	u4371
  2524  00185A  EF31  F00C         	goto	u4370
  2525  00185E                     u4371:
  2526  00185E  EF41  F00C         	goto	l4370
  2527  001862                     u4370:
  2528  001862                     
  2529                           ;color.c: 264:                 if (BG > 90){color = 7;}
  2530  001862  0100               	movlb	0	; () banked
  2531  001864  518F               	movf	(detect_color@BG+1)& (0+255),w,b
  2532  001866  E109               	bnz	u4380
  2533  001868  0E5B               	movlw	91
  2534  00186A  5D8E               	subwf	detect_color@BG& (0+255),w,b
  2535  00186C  A0D8               	btfss	status,0,c
  2536  00186E  EF3B  F00C         	goto	u4381
  2537  001872  EF3D  F00C         	goto	u4380
  2538  001876                     u4381:
  2539  001876  EF10  F00C         	goto	l4358
  2540  00187A                     u4380:
  2541  00187A                     
  2542                           ; BSR set to: 0
  2543  00187A  0E07               	movlw	7
  2544  00187C  6F90               	movwf	detect_color@color& (0+255),b
  2545  00187E  EF6A  F00C         	goto	l4380
  2546  001882                     l4370:
  2547                           
  2548                           ;color.c: 268:                 if (BG < BB){color = 5;}
  2549  001882  0100               	movlb	0	; () banked
  2550  001884  5186               	movf	detect_color@BB& (0+255),w,b
  2551  001886  5D8E               	subwf	detect_color@BG& (0+255),w,b
  2552  001888  5187               	movf	(detect_color@BB+1)& (0+255),w,b
  2553  00188A  598F               	subwfb	(detect_color@BG+1)& (0+255),w,b
  2554  00188C  B0D8               	btfsc	status,0,c
  2555  00188E  EF4B  F00C         	goto	u4391
  2556  001892  EF4D  F00C         	goto	u4390
  2557  001896                     u4391:
  2558  001896  EF51  F00C         	goto	l4374
  2559  00189A                     u4390:
  2560  00189A                     
  2561                           ; BSR set to: 0
  2562  00189A  0E05               	movlw	5
  2563  00189C  6F90               	movwf	detect_color@color& (0+255),b
  2564  00189E  EF6A  F00C         	goto	l4380
  2565  0018A2                     l4374:
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;color.c: 270:                     if (compare(0, BB, 90)){color = 4;}
  2569  0018A2  0E00               	movlw	0
  2570  0018A4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2571  0018A6  0E00               	movlw	0
  2572  0018A8  6F6A               	movwf	compare@lower& (0+255),b
  2573  0018AA  C086  F06C         	movff	detect_color@BB,compare@value2compare
  2574  0018AE  C087  F06D         	movff	detect_color@BB+1,compare@value2compare+1
  2575  0018B2  0E00               	movlw	0
  2576  0018B4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2577  0018B6  0E5A               	movlw	90
  2578  0018B8  6F6E               	movwf	compare@upper& (0+255),b
  2579  0018BA  EC8E  F020         	call	_compare	;wreg free
  2580  0018BE  0900               	iorlw	0
  2581  0018C0  B4D8               	btfsc	status,2,c
  2582  0018C2  EF65  F00C         	goto	u4401
  2583  0018C6  EF67  F00C         	goto	u4400
  2584  0018CA                     u4401:
  2585  0018CA  EF10  F00C         	goto	l4358
  2586  0018CE                     u4400:
  2587  0018CE  0E04               	movlw	4
  2588  0018D0  0100               	movlb	0	; () banked
  2589  0018D2  6F90               	movwf	detect_color@color& (0+255),b
  2590  0018D4                     l4380:
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;color.c: 277:     if (compare(95, BR, 105) && compare(95,BG,105)){color = 8;}
  2594  0018D4  0E00               	movlw	0
  2595  0018D6  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2596  0018D8  0E5F               	movlw	95
  2597  0018DA  6F6A               	movwf	compare@lower& (0+255),b
  2598  0018DC  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  2599  0018E0  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2600  0018E4  0E00               	movlw	0
  2601  0018E6  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2602  0018E8  0E69               	movlw	105
  2603  0018EA  6F6E               	movwf	compare@upper& (0+255),b
  2604  0018EC  EC8E  F020         	call	_compare	;wreg free
  2605  0018F0  0900               	iorlw	0
  2606  0018F2  B4D8               	btfsc	status,2,c
  2607  0018F4  EF7E  F00C         	goto	u4411
  2608  0018F8  EF80  F00C         	goto	u4410
  2609  0018FC                     u4411:
  2610  0018FC  EF9A  F00C         	goto	l4386
  2611  001900                     u4410:
  2612  001900  0E00               	movlw	0
  2613  001902  0100               	movlb	0	; () banked
  2614  001904  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2615  001906  0E5F               	movlw	95
  2616  001908  6F6A               	movwf	compare@lower& (0+255),b
  2617  00190A  C08E  F06C         	movff	detect_color@BG,compare@value2compare
  2618  00190E  C08F  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2619  001912  0E00               	movlw	0
  2620  001914  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2621  001916  0E69               	movlw	105
  2622  001918  6F6E               	movwf	compare@upper& (0+255),b
  2623  00191A  EC8E  F020         	call	_compare	;wreg free
  2624  00191E  0900               	iorlw	0
  2625  001920  B4D8               	btfsc	status,2,c
  2626  001922  EF95  F00C         	goto	u4421
  2627  001926  EF97  F00C         	goto	u4420
  2628  00192A                     u4421:
  2629  00192A  EF9A  F00C         	goto	l4386
  2630  00192E                     u4420:
  2631  00192E  0E08               	movlw	8
  2632  001930  0100               	movlb	0	; () banked
  2633  001932  6F90               	movwf	detect_color@color& (0+255),b
  2634  001934                     l4386:
  2635                           
  2636                           ;color.c: 278:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  2637  001934  0E00               	movlw	0
  2638  001936  0100               	movlb	0	; () banked
  2639  001938  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2640  00193A  0E00               	movlw	0
  2641  00193C  6F6A               	movwf	compare@lower& (0+255),b
  2642  00193E  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  2643  001942  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2644  001946  0E00               	movlw	0
  2645  001948  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2646  00194A  0E19               	movlw	25
  2647  00194C  6F6E               	movwf	compare@upper& (0+255),b
  2648  00194E  EC8E  F020         	call	_compare	;wreg free
  2649  001952  0900               	iorlw	0
  2650  001954  B4D8               	btfsc	status,2,c
  2651  001956  EFAF  F00C         	goto	u4431
  2652  00195A  EFB1  F00C         	goto	u4430
  2653  00195E                     u4431:
  2654  00195E  EFCB  F00C         	goto	l4392
  2655  001962                     u4430:
  2656  001962  0E00               	movlw	0
  2657  001964  0100               	movlb	0	; () banked
  2658  001966  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2659  001968  0E00               	movlw	0
  2660  00196A  6F6A               	movwf	compare@lower& (0+255),b
  2661  00196C  C084  F06C         	movff	detect_color@RR,compare@value2compare
  2662  001970  C085  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  2663  001974  0E00               	movlw	0
  2664  001976  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2665  001978  0E5A               	movlw	90
  2666  00197A  6F6E               	movwf	compare@upper& (0+255),b
  2667  00197C  EC8E  F020         	call	_compare	;wreg free
  2668  001980  0900               	iorlw	0
  2669  001982  B4D8               	btfsc	status,2,c
  2670  001984  EFC6  F00C         	goto	u4441
  2671  001988  EFC8  F00C         	goto	u4440
  2672  00198C                     u4441:
  2673  00198C  EFCB  F00C         	goto	l4392
  2674  001990                     u4440:
  2675  001990  0E00               	movlw	0
  2676  001992  0100               	movlb	0	; () banked
  2677  001994  6F90               	movwf	detect_color@color& (0+255),b
  2678  001996                     l4392:
  2679                           
  2680                           ;color.c: 281:     if (color == 2 || color == 3){
  2681  001996  0E02               	movlw	2
  2682  001998  0100               	movlb	0	; () banked
  2683  00199A  1990               	xorwf	detect_color@color& (0+255),w,b
  2684  00199C  B4D8               	btfsc	status,2,c
  2685  00199E  EFD3  F00C         	goto	u4451
  2686  0019A2  EFD5  F00C         	goto	u4450
  2687  0019A6                     u4451:
  2688  0019A6  EFDE  F00C         	goto	l4396
  2689  0019AA                     u4450:
  2690  0019AA                     
  2691                           ; BSR set to: 0
  2692  0019AA  0E03               	movlw	3
  2693  0019AC  1990               	xorwf	detect_color@color& (0+255),w,b
  2694  0019AE  A4D8               	btfss	status,2,c
  2695  0019B0  EFDC  F00C         	goto	u4461
  2696  0019B4  EFDE  F00C         	goto	u4460
  2697  0019B8                     u4461:
  2698  0019B8  EFF6  F00C         	goto	l4402
  2699  0019BC                     u4460:
  2700  0019BC                     l4396:
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;color.c: 282:         if (GR_REAL < 50 || GC_REAL <520){color = 0;}
  2704  0019BC  5189               	movf	(detect_color@GR_REAL+1)& (0+255),w,b
  2705  0019BE  E109               	bnz	u4470
  2706  0019C0  0E32               	movlw	50
  2707  0019C2  5D88               	subwf	detect_color@GR_REAL& (0+255),w,b
  2708  0019C4  A0D8               	btfss	status,0,c
  2709  0019C6  EFE7  F00C         	goto	u4471
  2710  0019CA  EFE9  F00C         	goto	u4470
  2711  0019CE                     u4471:
  2712  0019CE  EFF4  F00C         	goto	l4400
  2713  0019D2                     u4470:
  2714  0019D2                     
  2715                           ; BSR set to: 0
  2716  0019D2  0E08               	movlw	8
  2717  0019D4  5D8A               	subwf	detect_color@GC_REAL& (0+255),w,b
  2718  0019D6  0E02               	movlw	2
  2719  0019D8  598B               	subwfb	(detect_color@GC_REAL+1)& (0+255),w,b
  2720  0019DA  B0D8               	btfsc	status,0,c
  2721  0019DC  EFF2  F00C         	goto	u4481
  2722  0019E0  EFF4  F00C         	goto	u4480
  2723  0019E4                     u4481:
  2724  0019E4  EFF6  F00C         	goto	l4402
  2725  0019E8                     u4480:
  2726  0019E8                     l4400:
  2727                           
  2728                           ; BSR set to: 0
  2729  0019E8  0E00               	movlw	0
  2730  0019EA  6F90               	movwf	detect_color@color& (0+255),b
  2731  0019EC                     l4402:
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;color.c: 284:     if (color == 1 || color == 6){
  2735  0019EC  0590               	decf	detect_color@color& (0+255),w,b
  2736  0019EE  B4D8               	btfsc	status,2,c
  2737  0019F0  EFFC  F00C         	goto	u4491
  2738  0019F4  EFFE  F00C         	goto	u4490
  2739  0019F8                     u4491:
  2740  0019F8  EF07  F00D         	goto	l4406
  2741  0019FC                     u4490:
  2742  0019FC                     
  2743                           ; BSR set to: 0
  2744  0019FC  0E06               	movlw	6
  2745  0019FE  1990               	xorwf	detect_color@color& (0+255),w,b
  2746  001A00  A4D8               	btfss	status,2,c
  2747  001A02  EF05  F00D         	goto	u4501
  2748  001A06  EF07  F00D         	goto	u4500
  2749  001A0A                     u4501:
  2750  001A0A  EF1F  F00D         	goto	l4412
  2751  001A0E                     u4500:
  2752  001A0E                     l4406:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;color.c: 285:         if (GR_REAL < 60 || GC_REAL <500){color = 0;}
  2756  001A0E  5189               	movf	(detect_color@GR_REAL+1)& (0+255),w,b
  2757  001A10  E109               	bnz	u4510
  2758  001A12  0E3C               	movlw	60
  2759  001A14  5D88               	subwf	detect_color@GR_REAL& (0+255),w,b
  2760  001A16  A0D8               	btfss	status,0,c
  2761  001A18  EF10  F00D         	goto	u4511
  2762  001A1C  EF12  F00D         	goto	u4510
  2763  001A20                     u4511:
  2764  001A20  EF1D  F00D         	goto	l4410
  2765  001A24                     u4510:
  2766  001A24                     
  2767                           ; BSR set to: 0
  2768  001A24  0EF4               	movlw	244
  2769  001A26  5D8A               	subwf	detect_color@GC_REAL& (0+255),w,b
  2770  001A28  0E01               	movlw	1
  2771  001A2A  598B               	subwfb	(detect_color@GC_REAL+1)& (0+255),w,b
  2772  001A2C  B0D8               	btfsc	status,0,c
  2773  001A2E  EF1B  F00D         	goto	u4521
  2774  001A32  EF1D  F00D         	goto	u4520
  2775  001A36                     u4521:
  2776  001A36  EF1F  F00D         	goto	l4412
  2777  001A3A                     u4520:
  2778  001A3A                     l4410:
  2779                           
  2780                           ; BSR set to: 0
  2781  001A3A  0E00               	movlw	0
  2782  001A3C  6F90               	movwf	detect_color@color& (0+255),b
  2783  001A3E                     l4412:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;color.c: 287:     if (color == 7 || color == 4 || color == 5 || color == 8){
  2787  001A3E  0E07               	movlw	7
  2788  001A40  1990               	xorwf	detect_color@color& (0+255),w,b
  2789  001A42  B4D8               	btfsc	status,2,c
  2790  001A44  EF26  F00D         	goto	u4531
  2791  001A48  EF28  F00D         	goto	u4530
  2792  001A4C                     u4531:
  2793  001A4C  EF43  F00D         	goto	l4420
  2794  001A50                     u4530:
  2795  001A50                     
  2796                           ; BSR set to: 0
  2797  001A50  0E04               	movlw	4
  2798  001A52  1990               	xorwf	detect_color@color& (0+255),w,b
  2799  001A54  B4D8               	btfsc	status,2,c
  2800  001A56  EF2F  F00D         	goto	u4541
  2801  001A5A  EF31  F00D         	goto	u4540
  2802  001A5E                     u4541:
  2803  001A5E  EF43  F00D         	goto	l4420
  2804  001A62                     u4540:
  2805  001A62                     
  2806                           ; BSR set to: 0
  2807  001A62  0E05               	movlw	5
  2808  001A64  1990               	xorwf	detect_color@color& (0+255),w,b
  2809  001A66  B4D8               	btfsc	status,2,c
  2810  001A68  EF38  F00D         	goto	u4551
  2811  001A6C  EF3A  F00D         	goto	u4550
  2812  001A70                     u4551:
  2813  001A70  EF43  F00D         	goto	l4420
  2814  001A74                     u4550:
  2815  001A74                     
  2816                           ; BSR set to: 0
  2817  001A74  0E08               	movlw	8
  2818  001A76  1990               	xorwf	detect_color@color& (0+255),w,b
  2819  001A78  A4D8               	btfss	status,2,c
  2820  001A7A  EF41  F00D         	goto	u4561
  2821  001A7E  EF43  F00D         	goto	u4560
  2822  001A82                     u4561:
  2823  001A82  EF5B  F00D         	goto	l149
  2824  001A86                     u4560:
  2825  001A86                     l4420:
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;color.c: 288:         if (GR_REAL < 70 || GC_REAL <560){color = 0;}
  2829  001A86  5189               	movf	(detect_color@GR_REAL+1)& (0+255),w,b
  2830  001A88  E109               	bnz	u4570
  2831  001A8A  0E46               	movlw	70
  2832  001A8C  5D88               	subwf	detect_color@GR_REAL& (0+255),w,b
  2833  001A8E  A0D8               	btfss	status,0,c
  2834  001A90  EF4C  F00D         	goto	u4571
  2835  001A94  EF4E  F00D         	goto	u4570
  2836  001A98                     u4571:
  2837  001A98  EF59  F00D         	goto	l4424
  2838  001A9C                     u4570:
  2839  001A9C                     
  2840                           ; BSR set to: 0
  2841  001A9C  0E30               	movlw	48
  2842  001A9E  5D8A               	subwf	detect_color@GC_REAL& (0+255),w,b
  2843  001AA0  0E02               	movlw	2
  2844  001AA2  598B               	subwfb	(detect_color@GC_REAL+1)& (0+255),w,b
  2845  001AA4  B0D8               	btfsc	status,0,c
  2846  001AA6  EF57  F00D         	goto	u4581
  2847  001AAA  EF59  F00D         	goto	u4580
  2848  001AAE                     u4581:
  2849  001AAE  EF5B  F00D         	goto	l149
  2850  001AB2                     u4580:
  2851  001AB2                     l4424:
  2852                           
  2853                           ; BSR set to: 0
  2854  001AB2  0E00               	movlw	0
  2855  001AB4  6F90               	movwf	detect_color@color& (0+255),b
  2856  001AB6                     l149:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;color.c: 291:     return color;
  2860  001AB6  5190               	movf	detect_color@color& (0+255),w,b
  2861  001AB8                     
  2862                           ; BSR set to: 0
  2863  001AB8  0012               	return		;funcret
  2864  001ABA                     __end_of_detect_color:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function _lroundf *****************
  2868 ;; Defined at:
  2869 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  x               4    6[BANK0 ] float 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  4    6[BANK0 ] long 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2883 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2887 ;;Total ram usage:        4 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 3
  2890 ;; This function calls:
  2891 ;;		___fltol
  2892 ;;		_roundf
  2893 ;; This function is called by:
  2894 ;;		_detect_color
  2895 ;;		_check_color_reading
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text6
  2900  0040E2                     __ptext6:
  2901                           	callstack 0
  2902  0040E2                     _lroundf:
  2903                           	callstack 26
  2904  0040E2  C066  F041         	movff	lroundf@x,roundf@x
  2905  0040E6  C067  F042         	movff	lroundf@x+1,roundf@x+1
  2906  0040EA  C068  F043         	movff	lroundf@x+2,roundf@x+2
  2907  0040EE  C069  F044         	movff	lroundf@x+3,roundf@x+3
  2908  0040F2  ECD2  F011         	call	_roundf	;wreg free
  2909  0040F6  C041  F05B         	movff	?_roundf,___fltol@f1
  2910  0040FA  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  2911  0040FE  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  2912  004102  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  2913  004106  EC72  F01B         	call	___fltol	;wreg free
  2914  00410A  C05B  F066         	movff	?___fltol,?_lroundf
  2915  00410E  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  2916  004112  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  2917  004116  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  2918  00411A  0012               	return		;funcret
  2919  00411C                     __end_of_lroundf:
  2920                           	callstack 0
  2921                           
  2922 ;; *************** function _roundf *****************
  2923 ;; Defined at:
  2924 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  x               4   64[COMRAM] float 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  y               4   86[COMRAM] float 
  2929 ;;  u               4   82[COMRAM] struct .
  2930 ;;  e               2   76[COMRAM] int 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  4   64[COMRAM] float 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2943 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2944 ;;Total ram usage:       26 bytes
  2945 ;; Hardware stack levels used: 1
  2946 ;; Hardware stack levels required when called: 2
  2947 ;; This function calls:
  2948 ;;		___fladd
  2949 ;;		___flge
  2950 ;;		___flmul
  2951 ;;		___flneg
  2952 ;;		___flsub
  2953 ;; This function is called by:
  2954 ;;		_lroundf
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text7
  2959  0023A4                     __ptext7:
  2960                           	callstack 0
  2961  0023A4                     _roundf:
  2962                           	callstack 26
  2963  0023A4  C0E6  F053         	movff	roundf@F527,roundf@u
  2964  0023A8  C0E7  F054         	movff	roundf@F527+1,roundf@u+1
  2965  0023AC  C0E8  F055         	movff	roundf@F527+2,roundf@u+2
  2966  0023B0  C0E9  F056         	movff	roundf@F527+3,roundf@u+3
  2967  0023B4  C041  F053         	movff	roundf@x,roundf@u
  2968  0023B8  C042  F054         	movff	roundf@x+1,roundf@u+1
  2969  0023BC  C043  F055         	movff	roundf@x+2,roundf@u+2
  2970  0023C0  C044  F056         	movff	roundf@x+3,roundf@u+3
  2971  0023C4  C053  F045         	movff	roundf@u,??_roundf
  2972  0023C8  C054  F046         	movff	roundf@u+1,??_roundf+1
  2973  0023CC  C055  F047         	movff	roundf@u+2,??_roundf+2
  2974  0023D0  C056  F048         	movff	roundf@u+3,??_roundf+3
  2975  0023D4  0E18               	movlw	24
  2976  0023D6  EFF2  F011         	goto	u3680
  2977  0023DA                     u3685:
  2978  0023DA  90D8               	bcf	status,0,c
  2979  0023DC  3248               	rrcf	(??_roundf+3)^0,f,c
  2980  0023DE  3247               	rrcf	(??_roundf+2)^0,f,c
  2981  0023E0  3246               	rrcf	(??_roundf+1)^0,f,c
  2982  0023E2  3245               	rrcf	??_roundf^0,f,c
  2983  0023E4                     u3680:
  2984  0023E4  2EE8               	decfsz	wreg,f,c
  2985  0023E6  EFED  F011         	goto	u3685
  2986  0023EA  5045               	movf	??_roundf^0,w,c
  2987  0023EC  6E4D               	movwf	roundf@e^0,c
  2988  0023EE  6A4E               	clrf	(roundf@e+1)^0,c
  2989  0023F0  BE4E               	btfsc	(roundf@e+1)^0,7,c
  2990  0023F2  EF04  F012         	goto	u3691
  2991  0023F6  504E               	movf	(roundf@e+1)^0,w,c
  2992  0023F8  E109               	bnz	u3690
  2993  0023FA  0E96               	movlw	150
  2994  0023FC  5C4D               	subwf	roundf@e^0,w,c
  2995  0023FE  A0D8               	btfss	status,0,c
  2996  002400  EF04  F012         	goto	u3691
  2997  002404  EF06  F012         	goto	u3690
  2998  002408                     u3691:
  2999  002408  EF10  F012         	goto	l3822
  3000  00240C                     u3690:
  3001  00240C  C041  F041         	movff	roundf@x,?_roundf
  3002  002410  C042  F042         	movff	roundf@x+1,?_roundf+1
  3003  002414  C043  F043         	movff	roundf@x+2,?_roundf+2
  3004  002418  C044  F044         	movff	roundf@x+3,?_roundf+3
  3005  00241C  EFA8  F013         	goto	l1385
  3006  002420                     l3822:
  3007  002420  C053  F045         	movff	roundf@u,??_roundf
  3008  002424  C054  F046         	movff	roundf@u+1,??_roundf+1
  3009  002428  C055  F047         	movff	roundf@u+2,??_roundf+2
  3010  00242C  C056  F048         	movff	roundf@u+3,??_roundf+3
  3011  002430  0E20               	movlw	32
  3012  002432  EF20  F012         	goto	u3700
  3013  002436                     u3705:
  3014  002436  90D8               	bcf	status,0,c
  3015  002438  3248               	rrcf	(??_roundf+3)^0,f,c
  3016  00243A  3247               	rrcf	(??_roundf+2)^0,f,c
  3017  00243C  3246               	rrcf	(??_roundf+1)^0,f,c
  3018  00243E  3245               	rrcf	??_roundf^0,f,c
  3019  002440                     u3700:
  3020  002440  2EE8               	decfsz	wreg,f,c
  3021  002442  EF1B  F012         	goto	u3705
  3022  002446  5045               	movf	??_roundf^0,w,c
  3023  002448  1046               	iorwf	(??_roundf+1)^0,w,c
  3024  00244A  1047               	iorwf	(??_roundf+2)^0,w,c
  3025  00244C  1048               	iorwf	(??_roundf+3)^0,w,c
  3026  00244E  B4D8               	btfsc	status,2,c
  3027  002450  EF2C  F012         	goto	u3711
  3028  002454  EF2E  F012         	goto	u3710
  3029  002458                     u3711:
  3030  002458  EF40  F012         	goto	l3826
  3031  00245C                     u3710:
  3032  00245C  C041  F001         	movff	roundf@x,___flneg@f1
  3033  002460  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  3034  002464  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  3035  002468  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  3036  00246C  ECAB  F020         	call	___flneg	;wreg free
  3037  002470  C001  F041         	movff	?___flneg,roundf@x
  3038  002474  C002  F042         	movff	?___flneg+1,roundf@x+1
  3039  002478  C003  F043         	movff	?___flneg+2,roundf@x+2
  3040  00247C  C004  F044         	movff	?___flneg+3,roundf@x+3
  3041  002480                     l3826:
  3042  002480  BE4E               	btfsc	(roundf@e+1)^0,7,c
  3043  002482  EF4E  F012         	goto	u3720
  3044  002486  504E               	movf	(roundf@e+1)^0,w,c
  3045  002488  E107               	bnz	u3721
  3046  00248A  0E7E               	movlw	126
  3047  00248C  5C4D               	subwf	roundf@e^0,w,c
  3048  00248E  B0D8               	btfsc	status,0,c
  3049  002490  EF4C  F012         	goto	u3721
  3050  002494  EF4E  F012         	goto	u3720
  3051  002498                     u3721:
  3052  002498  EF6A  F012         	goto	l3832
  3053  00249C                     u3720:
  3054  00249C  C053  F028         	movff	roundf@u,___flmul@b
  3055  0024A0  C054  F029         	movff	roundf@u+1,___flmul@b+1
  3056  0024A4  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  3057  0024A8  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  3058  0024AC  0E00               	movlw	0
  3059  0024AE  6E2C               	movwf	___flmul@a^0,c
  3060  0024B0  0E00               	movlw	0
  3061  0024B2  6E2D               	movwf	(___flmul@a+1)^0,c
  3062  0024B4  0E00               	movlw	0
  3063  0024B6  6E2E               	movwf	(___flmul@a+2)^0,c
  3064  0024B8  0E00               	movlw	0
  3065  0024BA  6E2F               	movwf	(___flmul@a+3)^0,c
  3066  0024BC  ECBD  F00F         	call	___flmul	;wreg free
  3067  0024C0  C028  F041         	movff	?___flmul,?_roundf
  3068  0024C4  C029  F042         	movff	?___flmul+1,?_roundf+1
  3069  0024C8  C02A  F043         	movff	?___flmul+2,?_roundf+2
  3070  0024CC  C02B  F044         	movff	?___flmul+3,?_roundf+3
  3071  0024D0  EFA8  F013         	goto	l1385
  3072  0024D4                     l3832:
  3073  0024D4  0E00               	movlw	0
  3074  0024D6  6E05               	movwf	___fladd@a^0,c
  3075  0024D8  0E00               	movlw	0
  3076  0024DA  6E06               	movwf	(___fladd@a+1)^0,c
  3077  0024DC  0E00               	movlw	0
  3078  0024DE  6E07               	movwf	(___fladd@a+2)^0,c
  3079  0024E0  0E4B               	movlw	75
  3080  0024E2  6E08               	movwf	(___fladd@a+3)^0,c
  3081  0024E4  C041  F001         	movff	roundf@x,___fladd@b
  3082  0024E8  C042  F002         	movff	roundf@x+1,___fladd@b+1
  3083  0024EC  C043  F003         	movff	roundf@x+2,___fladd@b+2
  3084  0024F0  C044  F004         	movff	roundf@x+3,___fladd@b+3
  3085  0024F4  EC5D  F00D         	call	___fladd	;wreg free
  3086  0024F8  C001  F04F         	movff	?___fladd,_roundf$2737
  3087  0024FC  C002  F050         	movff	?___fladd+1,_roundf$2737+1
  3088  002500  C003  F051         	movff	?___fladd+2,_roundf$2737+2
  3089  002504  C004  F052         	movff	?___fladd+3,_roundf$2737+3
  3090  002508  0E00               	movlw	0
  3091  00250A  6E05               	movwf	___fladd@a^0,c
  3092  00250C  0E00               	movlw	0
  3093  00250E  6E06               	movwf	(___fladd@a+1)^0,c
  3094  002510  0E00               	movlw	0
  3095  002512  6E07               	movwf	(___fladd@a+2)^0,c
  3096  002514  0ECB               	movlw	203
  3097  002516  6E08               	movwf	(___fladd@a+3)^0,c
  3098  002518  C04F  F001         	movff	_roundf$2737,___fladd@b
  3099  00251C  C050  F002         	movff	_roundf$2737+1,___fladd@b+1
  3100  002520  C051  F003         	movff	_roundf$2737+2,___fladd@b+2
  3101  002524  C052  F004         	movff	_roundf$2737+3,___fladd@b+3
  3102  002528  EC5D  F00D         	call	___fladd	;wreg free
  3103  00252C  C001  F049         	movff	?___fladd,_roundf$2738
  3104  002530  C002  F04A         	movff	?___fladd+1,_roundf$2738+1
  3105  002534  C003  F04B         	movff	?___fladd+2,_roundf$2738+2
  3106  002538  C004  F04C         	movff	?___fladd+3,_roundf$2738+3
  3107  00253C  C049  F011         	movff	_roundf$2738,___flsub@b
  3108  002540  C04A  F012         	movff	_roundf$2738+1,___flsub@b+1
  3109  002544  C04B  F013         	movff	_roundf$2738+2,___flsub@b+2
  3110  002548  C04C  F014         	movff	_roundf$2738+3,___flsub@b+3
  3111  00254C  C041  F015         	movff	roundf@x,___flsub@a
  3112  002550  C042  F016         	movff	roundf@x+1,___flsub@a+1
  3113  002554  C043  F017         	movff	roundf@x+2,___flsub@a+2
  3114  002558  C044  F018         	movff	roundf@x+3,___flsub@a+3
  3115  00255C  ECAB  F01F         	call	___flsub	;wreg free
  3116  002560  C011  F057         	movff	?___flsub,roundf@y
  3117  002564  C012  F058         	movff	?___flsub+1,roundf@y+1
  3118  002568  C013  F059         	movff	?___flsub+2,roundf@y+2
  3119  00256C  C014  F05A         	movff	?___flsub+3,roundf@y+3
  3120  002570  0E00               	movlw	0
  3121  002572  6E01               	movwf	___flge@ff1^0,c
  3122  002574  0E00               	movlw	0
  3123  002576  6E02               	movwf	(___flge@ff1+1)^0,c
  3124  002578  0E00               	movlw	0
  3125  00257A  6E03               	movwf	(___flge@ff1+2)^0,c
  3126  00257C  0E3F               	movlw	63
  3127  00257E  6E04               	movwf	(___flge@ff1+3)^0,c
  3128  002580  C057  F005         	movff	roundf@y,___flge@ff2
  3129  002584  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  3130  002588  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  3131  00258C  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  3132  002590  ECF6  F01B         	call	___flge	;wreg free
  3133  002594  B0D8               	btfsc	status,0,c
  3134  002596  EFCF  F012         	goto	u3731
  3135  00259A  EFD1  F012         	goto	u3730
  3136  00259E                     u3731:
  3137  00259E  EF07  F013         	goto	l3836
  3138  0025A2                     u3730:
  3139  0025A2  C041  F005         	movff	roundf@x,___fladd@a
  3140  0025A6  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3141  0025AA  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3142  0025AE  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3143  0025B2  C057  F001         	movff	roundf@y,___fladd@b
  3144  0025B6  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3145  0025BA  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3146  0025BE  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3147  0025C2  EC5D  F00D         	call	___fladd	;wreg free
  3148  0025C6  C001  F04F         	movff	?___fladd,_roundf$2737
  3149  0025CA  C002  F050         	movff	?___fladd+1,_roundf$2737+1
  3150  0025CE  C003  F051         	movff	?___fladd+2,_roundf$2737+2
  3151  0025D2  C004  F052         	movff	?___fladd+3,_roundf$2737+3
  3152  0025D6  C04F  F001         	movff	_roundf$2737,___fladd@b
  3153  0025DA  C050  F002         	movff	_roundf$2737+1,___fladd@b+1
  3154  0025DE  C051  F003         	movff	_roundf$2737+2,___fladd@b+2
  3155  0025E2  C052  F004         	movff	_roundf$2737+3,___fladd@b+3
  3156  0025E6  0E00               	movlw	0
  3157  0025E8  6E05               	movwf	___fladd@a^0,c
  3158  0025EA  0E00               	movlw	0
  3159  0025EC  6E06               	movwf	(___fladd@a+1)^0,c
  3160  0025EE  0E80               	movlw	128
  3161  0025F0  6E07               	movwf	(___fladd@a+2)^0,c
  3162  0025F2  0EBF               	movlw	191
  3163  0025F4  6E08               	movwf	(___fladd@a+3)^0,c
  3164  0025F6  EC5D  F00D         	call	___fladd	;wreg free
  3165  0025FA  C001  F057         	movff	?___fladd,roundf@y
  3166  0025FE  C002  F058         	movff	?___fladd+1,roundf@y+1
  3167  002602  C003  F059         	movff	?___fladd+2,roundf@y+2
  3168  002606  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3169  00260A  EF70  F013         	goto	l3842
  3170  00260E                     l3836:
  3171  00260E  0E00               	movlw	0
  3172  002610  6E01               	movwf	___flge@ff1^0,c
  3173  002612  0E00               	movlw	0
  3174  002614  6E02               	movwf	(___flge@ff1+1)^0,c
  3175  002616  0E00               	movlw	0
  3176  002618  6E03               	movwf	(___flge@ff1+2)^0,c
  3177  00261A  0EBF               	movlw	191
  3178  00261C  6E04               	movwf	(___flge@ff1+3)^0,c
  3179  00261E  C057  F005         	movff	roundf@y,___flge@ff2
  3180  002622  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  3181  002626  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  3182  00262A  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  3183  00262E  ECF6  F01B         	call	___flge	;wreg free
  3184  002632  A0D8               	btfss	status,0,c
  3185  002634  EF1E  F013         	goto	u3741
  3186  002638  EF20  F013         	goto	u3740
  3187  00263C                     u3741:
  3188  00263C  EF56  F013         	goto	l3840
  3189  002640                     u3740:
  3190  002640  C041  F005         	movff	roundf@x,___fladd@a
  3191  002644  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3192  002648  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3193  00264C  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3194  002650  C057  F001         	movff	roundf@y,___fladd@b
  3195  002654  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3196  002658  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3197  00265C  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3198  002660  EC5D  F00D         	call	___fladd	;wreg free
  3199  002664  C001  F04F         	movff	?___fladd,_roundf$2737
  3200  002668  C002  F050         	movff	?___fladd+1,_roundf$2737+1
  3201  00266C  C003  F051         	movff	?___fladd+2,_roundf$2737+2
  3202  002670  C004  F052         	movff	?___fladd+3,_roundf$2737+3
  3203  002674  C04F  F001         	movff	_roundf$2737,___fladd@b
  3204  002678  C050  F002         	movff	_roundf$2737+1,___fladd@b+1
  3205  00267C  C051  F003         	movff	_roundf$2737+2,___fladd@b+2
  3206  002680  C052  F004         	movff	_roundf$2737+3,___fladd@b+3
  3207  002684  0E00               	movlw	0
  3208  002686  6E05               	movwf	___fladd@a^0,c
  3209  002688  0E00               	movlw	0
  3210  00268A  6E06               	movwf	(___fladd@a+1)^0,c
  3211  00268C  0E80               	movlw	128
  3212  00268E  6E07               	movwf	(___fladd@a+2)^0,c
  3213  002690  0E3F               	movlw	63
  3214  002692  6E08               	movwf	(___fladd@a+3)^0,c
  3215  002694  EC5D  F00D         	call	___fladd	;wreg free
  3216  002698  C001  F057         	movff	?___fladd,roundf@y
  3217  00269C  C002  F058         	movff	?___fladd+1,roundf@y+1
  3218  0026A0  C003  F059         	movff	?___fladd+2,roundf@y+2
  3219  0026A4  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3220  0026A8  EF70  F013         	goto	l3842
  3221  0026AC                     l3840:
  3222  0026AC  C057  F001         	movff	roundf@y,___fladd@b
  3223  0026B0  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3224  0026B4  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3225  0026B8  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3226  0026BC  C041  F005         	movff	roundf@x,___fladd@a
  3227  0026C0  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3228  0026C4  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3229  0026C8  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3230  0026CC  EC5D  F00D         	call	___fladd	;wreg free
  3231  0026D0  C001  F057         	movff	?___fladd,roundf@y
  3232  0026D4  C002  F058         	movff	?___fladd+1,roundf@y+1
  3233  0026D8  C003  F059         	movff	?___fladd+2,roundf@y+2
  3234  0026DC  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3235  0026E0                     l3842:
  3236  0026E0  C053  F045         	movff	roundf@u,??_roundf
  3237  0026E4  C054  F046         	movff	roundf@u+1,??_roundf+1
  3238  0026E8  C055  F047         	movff	roundf@u+2,??_roundf+2
  3239  0026EC  C056  F048         	movff	roundf@u+3,??_roundf+3
  3240  0026F0  0E20               	movlw	32
  3241  0026F2  EF80  F013         	goto	u3750
  3242  0026F6                     u3755:
  3243  0026F6  90D8               	bcf	status,0,c
  3244  0026F8  3248               	rrcf	(??_roundf+3)^0,f,c
  3245  0026FA  3247               	rrcf	(??_roundf+2)^0,f,c
  3246  0026FC  3246               	rrcf	(??_roundf+1)^0,f,c
  3247  0026FE  3245               	rrcf	??_roundf^0,f,c
  3248  002700                     u3750:
  3249  002700  2EE8               	decfsz	wreg,f,c
  3250  002702  EF7B  F013         	goto	u3755
  3251  002706  5045               	movf	??_roundf^0,w,c
  3252  002708  1046               	iorwf	(??_roundf+1)^0,w,c
  3253  00270A  1047               	iorwf	(??_roundf+2)^0,w,c
  3254  00270C  1048               	iorwf	(??_roundf+3)^0,w,c
  3255  00270E  B4D8               	btfsc	status,2,c
  3256  002710  EF8C  F013         	goto	u3761
  3257  002714  EF8E  F013         	goto	u3760
  3258  002718                     u3761:
  3259  002718  EFA0  F013         	goto	l3846
  3260  00271C                     u3760:
  3261  00271C  C057  F001         	movff	roundf@y,___flneg@f1
  3262  002720  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  3263  002724  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  3264  002728  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  3265  00272C  ECAB  F020         	call	___flneg	;wreg free
  3266  002730  C001  F057         	movff	?___flneg,roundf@y
  3267  002734  C002  F058         	movff	?___flneg+1,roundf@y+1
  3268  002738  C003  F059         	movff	?___flneg+2,roundf@y+2
  3269  00273C  C004  F05A         	movff	?___flneg+3,roundf@y+3
  3270  002740                     l3846:
  3271  002740  C057  F041         	movff	roundf@y,?_roundf
  3272  002744  C058  F042         	movff	roundf@y+1,?_roundf+1
  3273  002748  C059  F043         	movff	roundf@y+2,?_roundf+2
  3274  00274C  C05A  F044         	movff	roundf@y+3,?_roundf+3
  3275  002750                     l1385:
  3276  002750  0012               	return		;funcret
  3277  002752                     __end_of_roundf:
  3278                           	callstack 0
  3279                           
  3280 ;; *************** function ___flsub *****************
  3281 ;; Defined at:
  3282 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  b               4   16[COMRAM] float 
  3285 ;;  a               4   20[COMRAM] float 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  4   16[COMRAM] float 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3297 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3300 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3301 ;;Total ram usage:        8 bytes
  3302 ;; Hardware stack levels used: 1
  3303 ;; Hardware stack levels required when called: 1
  3304 ;; This function calls:
  3305 ;;		___fladd
  3306 ;; This function is called by:
  3307 ;;		_roundf
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text8
  3312  003F56                     __ptext8:
  3313                           	callstack 0
  3314  003F56                     ___flsub:
  3315                           	callstack 26
  3316  003F56  0E00               	movlw	0
  3317  003F58  1A15               	xorwf	___flsub@a^0,f,c
  3318  003F5A  0E00               	movlw	0
  3319  003F5C  1A16               	xorwf	(___flsub@a+1)^0,f,c
  3320  003F5E  0E00               	movlw	0
  3321  003F60  1A17               	xorwf	(___flsub@a+2)^0,f,c
  3322  003F62  0E80               	movlw	128
  3323  003F64  1A18               	xorwf	(___flsub@a+3)^0,f,c
  3324  003F66  C011  F001         	movff	___flsub@b,___fladd@b
  3325  003F6A  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  3326  003F6E  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  3327  003F72  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  3328  003F76  C015  F005         	movff	___flsub@a,___fladd@a
  3329  003F7A  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  3330  003F7E  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  3331  003F82  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  3332  003F86  EC5D  F00D         	call	___fladd	;wreg free
  3333  003F8A  C001  F011         	movff	?___fladd,?___flsub
  3334  003F8E  C002  F012         	movff	?___fladd+1,?___flsub+1
  3335  003F92  C003  F013         	movff	?___fladd+2,?___flsub+2
  3336  003F96  C004  F014         	movff	?___fladd+3,?___flsub+3
  3337  003F9A  0012               	return		;funcret
  3338  003F9C                     __end_of___flsub:
  3339                           	callstack 0
  3340                           
  3341 ;; *************** function ___fladd *****************
  3342 ;; Defined at:
  3343 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  b               4    0[COMRAM] float 
  3346 ;;  a               4    4[COMRAM] float 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  grs             1   15[COMRAM] unsigned char 
  3349 ;;  bexp            1   14[COMRAM] unsigned char 
  3350 ;;  aexp            1   13[COMRAM] unsigned char 
  3351 ;;  signs           1   12[COMRAM] unsigned char 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  4    0[COMRAM] unsigned char 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3361 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3362 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3363 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3364 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3365 ;;Total ram usage:       16 bytes
  3366 ;; Hardware stack levels used: 1
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		___flsub
  3371 ;;		_roundf
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text9
  3376  001ABA                     __ptext9:
  3377                           	callstack 0
  3378  001ABA                     ___fladd:
  3379                           	callstack 26
  3380  001ABA  5004               	movf	(___fladd@b+3)^0,w,c
  3381  001ABC  0B80               	andlw	128
  3382  001ABE  6E0D               	movwf	___fladd@signs^0,c
  3383  001AC0  5004               	movf	(___fladd@b+3)^0,w,c
  3384  001AC2  2404               	addwf	(___fladd@b+3)^0,w,c
  3385  001AC4  6E0F               	movwf	___fladd@bexp^0,c
  3386  001AC6  AE03               	btfss	(___fladd@b+2)^0,7,c
  3387  001AC8  EF68  F00D         	goto	u2871
  3388  001ACC  EF6A  F00D         	goto	u2870
  3389  001AD0                     u2871:
  3390  001AD0  EF6B  F00D         	goto	l3272
  3391  001AD4                     u2870:
  3392  001AD4  800F               	bsf	___fladd@bexp^0,0,c
  3393  001AD6                     l3272:
  3394  001AD6  500F               	movf	___fladd@bexp^0,w,c
  3395  001AD8  B4D8               	btfsc	status,2,c
  3396  001ADA  EF71  F00D         	goto	u2881
  3397  001ADE  EF73  F00D         	goto	u2880
  3398  001AE2                     u2881:
  3399  001AE2  EF88  F00D         	goto	l3282
  3400  001AE6                     u2880:
  3401  001AE6  280F               	incf	___fladd@bexp^0,w,c
  3402  001AE8  A4D8               	btfss	status,2,c
  3403  001AEA  EF79  F00D         	goto	u2891
  3404  001AEE  EF7B  F00D         	goto	u2890
  3405  001AF2                     u2891:
  3406  001AF2  EF83  F00D         	goto	l3278
  3407  001AF6                     u2890:
  3408  001AF6  0E00               	movlw	0
  3409  001AF8  6E01               	movwf	___fladd@b^0,c
  3410  001AFA  0E00               	movlw	0
  3411  001AFC  6E02               	movwf	(___fladd@b+1)^0,c
  3412  001AFE  0E00               	movlw	0
  3413  001B00  6E03               	movwf	(___fladd@b+2)^0,c
  3414  001B02  0E00               	movlw	0
  3415  001B04  6E04               	movwf	(___fladd@b+3)^0,c
  3416  001B06                     l3278:
  3417  001B06  8E03               	bsf	(___fladd@b+2)^0,7,c
  3418  001B08  0E00               	movlw	0
  3419  001B0A  6E04               	movwf	(___fladd@b+3)^0,c
  3420  001B0C  EF90  F00D         	goto	l3284
  3421  001B10                     l3282:
  3422  001B10  0E00               	movlw	0
  3423  001B12  6E01               	movwf	___fladd@b^0,c
  3424  001B14  0E00               	movlw	0
  3425  001B16  6E02               	movwf	(___fladd@b+1)^0,c
  3426  001B18  0E00               	movlw	0
  3427  001B1A  6E03               	movwf	(___fladd@b+2)^0,c
  3428  001B1C  0E00               	movlw	0
  3429  001B1E  6E04               	movwf	(___fladd@b+3)^0,c
  3430  001B20                     l3284:
  3431  001B20  5008               	movf	(___fladd@a+3)^0,w,c
  3432  001B22  0B80               	andlw	128
  3433  001B24  6E0E               	movwf	___fladd@aexp^0,c
  3434  001B26  500D               	movf	___fladd@signs^0,w,c
  3435  001B28  180E               	xorwf	___fladd@aexp^0,w,c
  3436  001B2A  B4D8               	btfsc	status,2,c
  3437  001B2C  EF9A  F00D         	goto	u2901
  3438  001B30  EF9C  F00D         	goto	u2900
  3439  001B34                     u2901:
  3440  001B34  EF9D  F00D         	goto	l3290
  3441  001B38                     u2900:
  3442  001B38  8C0D               	bsf	___fladd@signs^0,6,c
  3443  001B3A                     l3290:
  3444  001B3A  5008               	movf	(___fladd@a+3)^0,w,c
  3445  001B3C  2408               	addwf	(___fladd@a+3)^0,w,c
  3446  001B3E  6E0E               	movwf	___fladd@aexp^0,c
  3447  001B40  AE07               	btfss	(___fladd@a+2)^0,7,c
  3448  001B42  EFA5  F00D         	goto	u2911
  3449  001B46  EFA7  F00D         	goto	u2910
  3450  001B4A                     u2911:
  3451  001B4A  EFA8  F00D         	goto	l3296
  3452  001B4E                     u2910:
  3453  001B4E  800E               	bsf	___fladd@aexp^0,0,c
  3454  001B50                     l3296:
  3455  001B50  500E               	movf	___fladd@aexp^0,w,c
  3456  001B52  B4D8               	btfsc	status,2,c
  3457  001B54  EFAE  F00D         	goto	u2921
  3458  001B58  EFB0  F00D         	goto	u2920
  3459  001B5C                     u2921:
  3460  001B5C  EFC5  F00D         	goto	l3306
  3461  001B60                     u2920:
  3462  001B60  280E               	incf	___fladd@aexp^0,w,c
  3463  001B62  A4D8               	btfss	status,2,c
  3464  001B64  EFB6  F00D         	goto	u2931
  3465  001B68  EFB8  F00D         	goto	u2930
  3466  001B6C                     u2931:
  3467  001B6C  EFC0  F00D         	goto	l3302
  3468  001B70                     u2930:
  3469  001B70  0E00               	movlw	0
  3470  001B72  6E05               	movwf	___fladd@a^0,c
  3471  001B74  0E00               	movlw	0
  3472  001B76  6E06               	movwf	(___fladd@a+1)^0,c
  3473  001B78  0E00               	movlw	0
  3474  001B7A  6E07               	movwf	(___fladd@a+2)^0,c
  3475  001B7C  0E00               	movlw	0
  3476  001B7E  6E08               	movwf	(___fladd@a+3)^0,c
  3477  001B80                     l3302:
  3478  001B80  8E07               	bsf	(___fladd@a+2)^0,7,c
  3479  001B82  0E00               	movlw	0
  3480  001B84  6E08               	movwf	(___fladd@a+3)^0,c
  3481  001B86  EFCD  F00D         	goto	l3308
  3482  001B8A                     l3306:
  3483  001B8A  0E00               	movlw	0
  3484  001B8C  6E05               	movwf	___fladd@a^0,c
  3485  001B8E  0E00               	movlw	0
  3486  001B90  6E06               	movwf	(___fladd@a+1)^0,c
  3487  001B92  0E00               	movlw	0
  3488  001B94  6E07               	movwf	(___fladd@a+2)^0,c
  3489  001B96  0E00               	movlw	0
  3490  001B98  6E08               	movwf	(___fladd@a+3)^0,c
  3491  001B9A                     l3308:
  3492  001B9A  500F               	movf	___fladd@bexp^0,w,c
  3493  001B9C  5C0E               	subwf	___fladd@aexp^0,w,c
  3494  001B9E  B0D8               	btfsc	status,0,c
  3495  001BA0  EFD4  F00D         	goto	u2941
  3496  001BA4  EFD6  F00D         	goto	u2940
  3497  001BA8                     u2941:
  3498  001BA8  EFFD  F00D         	goto	l3344
  3499  001BAC                     u2940:
  3500  001BAC  AC0D               	btfss	___fladd@signs^0,6,c
  3501  001BAE  EFDB  F00D         	goto	u2951
  3502  001BB2  EFDD  F00D         	goto	u2950
  3503  001BB6                     u2951:
  3504  001BB6  EFDF  F00D         	goto	l3314
  3505  001BBA                     u2950:
  3506  001BBA  0E80               	movlw	128
  3507  001BBC  1A0D               	xorwf	___fladd@signs^0,f,c
  3508  001BBE                     l3314:
  3509  001BBE  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  3510  001BC2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3511  001BC6  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  3512  001BCA  C001  F010         	movff	___fladd@b,___fladd@grs
  3513  001BCE  C005  F001         	movff	___fladd@a,___fladd@b
  3514  001BD2  C010  F005         	movff	___fladd@grs,___fladd@a
  3515  001BD6  C002  F010         	movff	___fladd@b+1,___fladd@grs
  3516  001BDA  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  3517  001BDE  C010  F006         	movff	___fladd@grs,___fladd@a+1
  3518  001BE2  C003  F010         	movff	___fladd@b+2,___fladd@grs
  3519  001BE6  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  3520  001BEA  C010  F007         	movff	___fladd@grs,___fladd@a+2
  3521  001BEE  C004  F010         	movff	___fladd@b+3,___fladd@grs
  3522  001BF2  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  3523  001BF6  C010  F008         	movff	___fladd@grs,___fladd@a+3
  3524  001BFA                     l3344:
  3525  001BFA  0E00               	movlw	0
  3526  001BFC  6E10               	movwf	___fladd@grs^0,c
  3527  001BFE  500F               	movf	___fladd@bexp^0,w,c
  3528  001C00  C00E  F009         	movff	___fladd@aexp,??___fladd
  3529  001C04  6A0A               	clrf	(??___fladd+1)^0,c
  3530  001C06  5E09               	subwf	??___fladd^0,f,c
  3531  001C08  0E00               	movlw	0
  3532  001C0A  5A0A               	subwfb	(??___fladd+1)^0,f,c
  3533  001C0C  BE0A               	btfsc	(??___fladd+1)^0,7,c
  3534  001C0E  EF12  F00E         	goto	u2961
  3535  001C12  500A               	movf	(??___fladd+1)^0,w,c
  3536  001C14  E109               	bnz	u2960
  3537  001C16  0E1A               	movlw	26
  3538  001C18  5C09               	subwf	??___fladd^0,w,c
  3539  001C1A  A0D8               	btfss	status,0,c
  3540  001C1C  EF12  F00E         	goto	u2961
  3541  001C20  EF14  F00E         	goto	u2960
  3542  001C24                     u2961:
  3543  001C24  EF4B  F00E         	goto	l1121
  3544  001C28                     u2960:
  3545  001C28  5001               	movf	___fladd@b^0,w,c
  3546  001C2A  1002               	iorwf	(___fladd@b+1)^0,w,c
  3547  001C2C  1003               	iorwf	(___fladd@b+2)^0,w,c
  3548  001C2E  1004               	iorwf	(___fladd@b+3)^0,w,c
  3549  001C30  A4D8               	btfss	status,2,c
  3550  001C32  EF1D  F00E         	goto	u2971
  3551  001C36  EF20  F00E         	goto	u2970
  3552  001C3A                     u2971:
  3553  001C3A  0E01               	movlw	1
  3554  001C3C  EF21  F00E         	goto	u2980
  3555  001C40                     u2970:
  3556  001C40  0E00               	movlw	0
  3557  001C42                     u2980:
  3558  001C42  6E10               	movwf	___fladd@grs^0,c
  3559  001C44  0E00               	movlw	0
  3560  001C46  6E01               	movwf	___fladd@b^0,c
  3561  001C48  0E00               	movlw	0
  3562  001C4A  6E02               	movwf	(___fladd@b+1)^0,c
  3563  001C4C  0E00               	movlw	0
  3564  001C4E  6E03               	movwf	(___fladd@b+2)^0,c
  3565  001C50  0E00               	movlw	0
  3566  001C52  6E04               	movwf	(___fladd@b+3)^0,c
  3567  001C54  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3568  001C58  EF54  F00E         	goto	l1120
  3569  001C5C                     l1122:
  3570  001C5C  A010               	btfss	___fladd@grs^0,0,c
  3571  001C5E  EF33  F00E         	goto	u2991
  3572  001C62  EF35  F00E         	goto	u2990
  3573  001C66                     u2991:
  3574  001C66  EF3B  F00E         	goto	l3356
  3575  001C6A                     u2990:
  3576  001C6A  90D8               	bcf	status,0,c
  3577  001C6C  3010               	rrcf	___fladd@grs^0,w,c
  3578  001C6E  0901               	iorlw	1
  3579  001C70  6E10               	movwf	___fladd@grs^0,c
  3580  001C72  EF3D  F00E         	goto	l3358
  3581  001C76                     l3356:
  3582  001C76  90D8               	bcf	status,0,c
  3583  001C78  3210               	rrcf	___fladd@grs^0,f,c
  3584  001C7A                     l3358:
  3585  001C7A  A001               	btfss	___fladd@b^0,0,c
  3586  001C7C  EF42  F00E         	goto	u3001
  3587  001C80  EF44  F00E         	goto	u3000
  3588  001C84                     u3001:
  3589  001C84  EF45  F00E         	goto	l3362
  3590  001C88                     u3000:
  3591  001C88  8E10               	bsf	___fladd@grs^0,7,c
  3592  001C8A                     l3362:
  3593  001C8A  3404               	rlcf	(___fladd@b+3)^0,w,c
  3594  001C8C  3204               	rrcf	(___fladd@b+3)^0,f,c
  3595  001C8E  3203               	rrcf	(___fladd@b+2)^0,f,c
  3596  001C90  3202               	rrcf	(___fladd@b+1)^0,f,c
  3597  001C92  3201               	rrcf	___fladd@b^0,f,c
  3598  001C94  2A0F               	incf	___fladd@bexp^0,f,c
  3599  001C96                     l1121:
  3600  001C96  500E               	movf	___fladd@aexp^0,w,c
  3601  001C98  5C0F               	subwf	___fladd@bexp^0,w,c
  3602  001C9A  A0D8               	btfss	status,0,c
  3603  001C9C  EF52  F00E         	goto	u3011
  3604  001CA0  EF54  F00E         	goto	u3010
  3605  001CA4                     u3011:
  3606  001CA4  EF2E  F00E         	goto	l1122
  3607  001CA8                     u3010:
  3608  001CA8                     l1120:
  3609  001CA8  BC0D               	btfsc	___fladd@signs^0,6,c
  3610  001CAA  EF59  F00E         	goto	u3021
  3611  001CAE  EF5B  F00E         	goto	u3020
  3612  001CB2                     u3021:
  3613  001CB2  EF9B  F00E         	goto	l3390
  3614  001CB6                     u3020:
  3615  001CB6  500F               	movf	___fladd@bexp^0,w,c
  3616  001CB8  A4D8               	btfss	status,2,c
  3617  001CBA  EF61  F00E         	goto	u3031
  3618  001CBE  EF63  F00E         	goto	u3030
  3619  001CC2                     u3031:
  3620  001CC2  EF6D  F00E         	goto	l3372
  3621  001CC6                     u3030:
  3622  001CC6  0E00               	movlw	0
  3623  001CC8  6E01               	movwf	?___fladd^0,c
  3624  001CCA  0E00               	movlw	0
  3625  001CCC  6E02               	movwf	(?___fladd+1)^0,c
  3626  001CCE  0E00               	movlw	0
  3627  001CD0  6E03               	movwf	(?___fladd+2)^0,c
  3628  001CD2  0E00               	movlw	0
  3629  001CD4  6E04               	movwf	(?___fladd+3)^0,c
  3630  001CD6  EFBC  F00F         	goto	l1129
  3631  001CDA                     l3372:
  3632  001CDA  5005               	movf	___fladd@a^0,w,c
  3633  001CDC  2601               	addwf	___fladd@b^0,f,c
  3634  001CDE  5006               	movf	(___fladd@a+1)^0,w,c
  3635  001CE0  2202               	addwfc	(___fladd@b+1)^0,f,c
  3636  001CE2  5007               	movf	(___fladd@a+2)^0,w,c
  3637  001CE4  2203               	addwfc	(___fladd@b+2)^0,f,c
  3638  001CE6  5008               	movf	(___fladd@a+3)^0,w,c
  3639  001CE8  2204               	addwfc	(___fladd@b+3)^0,f,c
  3640  001CEA  A004               	btfss	(___fladd@b+3)^0,0,c
  3641  001CEC  EF7A  F00E         	goto	u3041
  3642  001CF0  EF7C  F00E         	goto	u3040
  3643  001CF4                     u3041:
  3644  001CF4  EF28  F00F         	goto	l3426
  3645  001CF8                     u3040:
  3646  001CF8  A010               	btfss	___fladd@grs^0,0,c
  3647  001CFA  EF81  F00E         	goto	u3051
  3648  001CFE  EF83  F00E         	goto	u3050
  3649  001D02                     u3051:
  3650  001D02  EF89  F00E         	goto	l3380
  3651  001D06                     u3050:
  3652  001D06  90D8               	bcf	status,0,c
  3653  001D08  3010               	rrcf	___fladd@grs^0,w,c
  3654  001D0A  0901               	iorlw	1
  3655  001D0C  6E10               	movwf	___fladd@grs^0,c
  3656  001D0E  EF8B  F00E         	goto	l3382
  3657  001D12                     l3380:
  3658  001D12  90D8               	bcf	status,0,c
  3659  001D14  3210               	rrcf	___fladd@grs^0,f,c
  3660  001D16                     l3382:
  3661  001D16  A001               	btfss	___fladd@b^0,0,c
  3662  001D18  EF90  F00E         	goto	u3061
  3663  001D1C  EF92  F00E         	goto	u3060
  3664  001D20                     u3061:
  3665  001D20  EF93  F00E         	goto	l3386
  3666  001D24                     u3060:
  3667  001D24  8E10               	bsf	___fladd@grs^0,7,c
  3668  001D26                     l3386:
  3669  001D26  3404               	rlcf	(___fladd@b+3)^0,w,c
  3670  001D28  3204               	rrcf	(___fladd@b+3)^0,f,c
  3671  001D2A  3203               	rrcf	(___fladd@b+2)^0,f,c
  3672  001D2C  3202               	rrcf	(___fladd@b+1)^0,f,c
  3673  001D2E  3201               	rrcf	___fladd@b^0,f,c
  3674  001D30  2A0F               	incf	___fladd@bexp^0,f,c
  3675  001D32  EF28  F00F         	goto	l3426
  3676  001D36                     l3390:
  3677  001D36  5005               	movf	___fladd@a^0,w,c
  3678  001D38  5C01               	subwf	___fladd@b^0,w,c
  3679  001D3A  5006               	movf	(___fladd@a+1)^0,w,c
  3680  001D3C  5802               	subwfb	(___fladd@b+1)^0,w,c
  3681  001D3E  5007               	movf	(___fladd@a+2)^0,w,c
  3682  001D40  5803               	subwfb	(___fladd@b+2)^0,w,c
  3683  001D42  5004               	movf	(___fladd@b+3)^0,w,c
  3684  001D44  0A80               	xorlw	128
  3685  001D46  6E09               	movwf	??___fladd^0,c
  3686  001D48  5008               	movf	(___fladd@a+3)^0,w,c
  3687  001D4A  0A80               	xorlw	128
  3688  001D4C  5809               	subwfb	??___fladd^0,w,c
  3689  001D4E  B0D8               	btfsc	status,0,c
  3690  001D50  EFAC  F00E         	goto	u3071
  3691  001D54  EFAE  F00E         	goto	u3070
  3692  001D58                     u3071:
  3693  001D58  EFD9  F00E         	goto	l3400
  3694  001D5C                     u3070:
  3695  001D5C  5001               	movf	___fladd@b^0,w,c
  3696  001D5E  5C05               	subwf	___fladd@a^0,w,c
  3697  001D60  6E09               	movwf	??___fladd^0,c
  3698  001D62  5002               	movf	(___fladd@b+1)^0,w,c
  3699  001D64  5806               	subwfb	(___fladd@a+1)^0,w,c
  3700  001D66  6E0A               	movwf	(??___fladd+1)^0,c
  3701  001D68  5003               	movf	(___fladd@b+2)^0,w,c
  3702  001D6A  5807               	subwfb	(___fladd@a+2)^0,w,c
  3703  001D6C  6E0B               	movwf	(??___fladd+2)^0,c
  3704  001D6E  5004               	movf	(___fladd@b+3)^0,w,c
  3705  001D70  5808               	subwfb	(___fladd@a+3)^0,w,c
  3706  001D72  6E0C               	movwf	(??___fladd+3)^0,c
  3707  001D74  0EFF               	movlw	255
  3708  001D76  2409               	addwf	??___fladd^0,w,c
  3709  001D78  6E01               	movwf	___fladd@b^0,c
  3710  001D7A  0EFF               	movlw	255
  3711  001D7C  200A               	addwfc	(??___fladd+1)^0,w,c
  3712  001D7E  6E02               	movwf	(___fladd@b+1)^0,c
  3713  001D80  0EFF               	movlw	255
  3714  001D82  200B               	addwfc	(??___fladd+2)^0,w,c
  3715  001D84  6E03               	movwf	(___fladd@b+2)^0,c
  3716  001D86  0EFF               	movlw	255
  3717  001D88  200C               	addwfc	(??___fladd+3)^0,w,c
  3718  001D8A  6E04               	movwf	(___fladd@b+3)^0,c
  3719  001D8C  0E80               	movlw	128
  3720  001D8E  1A0D               	xorwf	___fladd@signs^0,f,c
  3721  001D90  6C10               	negf	___fladd@grs^0,c
  3722  001D92  5010               	movf	___fladd@grs^0,w,c
  3723  001D94  A4D8               	btfss	status,2,c
  3724  001D96  EFCF  F00E         	goto	u3081
  3725  001D9A  EFD1  F00E         	goto	u3080
  3726  001D9E                     u3081:
  3727  001D9E  EFE1  F00E         	goto	l1137
  3728  001DA2                     u3080:
  3729  001DA2  0E01               	movlw	1
  3730  001DA4  2601               	addwf	___fladd@b^0,f,c
  3731  001DA6  0E00               	movlw	0
  3732  001DA8  2202               	addwfc	(___fladd@b+1)^0,f,c
  3733  001DAA  2203               	addwfc	(___fladd@b+2)^0,f,c
  3734  001DAC  2204               	addwfc	(___fladd@b+3)^0,f,c
  3735  001DAE  EFE1  F00E         	goto	l1137
  3736  001DB2                     l3400:
  3737  001DB2  5005               	movf	___fladd@a^0,w,c
  3738  001DB4  5E01               	subwf	___fladd@b^0,f,c
  3739  001DB6  5006               	movf	(___fladd@a+1)^0,w,c
  3740  001DB8  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3741  001DBA  5007               	movf	(___fladd@a+2)^0,w,c
  3742  001DBC  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3743  001DBE  5008               	movf	(___fladd@a+3)^0,w,c
  3744  001DC0  5A04               	subwfb	(___fladd@b+3)^0,f,c
  3745  001DC2                     l1137:
  3746  001DC2  5001               	movf	___fladd@b^0,w,c
  3747  001DC4  1002               	iorwf	(___fladd@b+1)^0,w,c
  3748  001DC6  1003               	iorwf	(___fladd@b+2)^0,w,c
  3749  001DC8  1004               	iorwf	(___fladd@b+3)^0,w,c
  3750  001DCA  A4D8               	btfss	status,2,c
  3751  001DCC  EFEA  F00E         	goto	u3091
  3752  001DD0  EFEC  F00E         	goto	u3090
  3753  001DD4                     u3091:
  3754  001DD4  EF21  F00F         	goto	l3424
  3755  001DD8                     u3090:
  3756  001DD8  5010               	movf	___fladd@grs^0,w,c
  3757  001DDA  A4D8               	btfss	status,2,c
  3758  001DDC  EFF2  F00E         	goto	u3101
  3759  001DE0  EFF4  F00E         	goto	u3100
  3760  001DE4                     u3101:
  3761  001DE4  EF21  F00F         	goto	l3424
  3762  001DE8                     u3100:
  3763  001DE8  0E00               	movlw	0
  3764  001DEA  6E01               	movwf	?___fladd^0,c
  3765  001DEC  0E00               	movlw	0
  3766  001DEE  6E02               	movwf	(?___fladd+1)^0,c
  3767  001DF0  0E00               	movlw	0
  3768  001DF2  6E03               	movwf	(?___fladd+2)^0,c
  3769  001DF4  0E00               	movlw	0
  3770  001DF6  6E04               	movwf	(?___fladd+3)^0,c
  3771  001DF8  EFBC  F00F         	goto	l1129
  3772  001DFC                     l3408:
  3773  001DFC  90D8               	bcf	status,0,c
  3774  001DFE  3601               	rlcf	___fladd@b^0,f,c
  3775  001E00  3602               	rlcf	(___fladd@b+1)^0,f,c
  3776  001E02  3603               	rlcf	(___fladd@b+2)^0,f,c
  3777  001E04  3604               	rlcf	(___fladd@b+3)^0,f,c
  3778  001E06  AE10               	btfss	___fladd@grs^0,7,c
  3779  001E08  EF08  F00F         	goto	u3111
  3780  001E0C  EF0A  F00F         	goto	u3110
  3781  001E10                     u3111:
  3782  001E10  EF0B  F00F         	goto	l3414
  3783  001E14                     u3110:
  3784  001E14  8001               	bsf	___fladd@b^0,0,c
  3785  001E16                     l3414:
  3786  001E16  A010               	btfss	___fladd@grs^0,0,c
  3787  001E18  EF10  F00F         	goto	u3121
  3788  001E1C  EF12  F00F         	goto	u3120
  3789  001E20                     u3121:
  3790  001E20  EF16  F00F         	goto	l3418
  3791  001E24                     u3120:
  3792  001E24  80D8               	bsf	status,0,c
  3793  001E26  3610               	rlcf	___fladd@grs^0,f,c
  3794  001E28  EF18  F00F         	goto	l3420
  3795  001E2C                     l3418:
  3796  001E2C  90D8               	bcf	status,0,c
  3797  001E2E  3610               	rlcf	___fladd@grs^0,f,c
  3798  001E30                     l3420:
  3799  001E30  500F               	movf	___fladd@bexp^0,w,c
  3800  001E32  B4D8               	btfsc	status,2,c
  3801  001E34  EF1E  F00F         	goto	u3131
  3802  001E38  EF20  F00F         	goto	u3130
  3803  001E3C                     u3131:
  3804  001E3C  EF21  F00F         	goto	l3424
  3805  001E40                     u3130:
  3806  001E40  060F               	decf	___fladd@bexp^0,f,c
  3807  001E42                     l3424:
  3808  001E42  AE03               	btfss	(___fladd@b+2)^0,7,c
  3809  001E44  EF26  F00F         	goto	u3141
  3810  001E48  EF28  F00F         	goto	u3140
  3811  001E4C                     u3141:
  3812  001E4C  EFFE  F00E         	goto	l3408
  3813  001E50                     u3140:
  3814  001E50                     l3426:
  3815  001E50  0E00               	movlw	0
  3816  001E52  6E0E               	movwf	___fladd@aexp^0,c
  3817  001E54  AE10               	btfss	___fladd@grs^0,7,c
  3818  001E56  EF2F  F00F         	goto	u3151
  3819  001E5A  EF31  F00F         	goto	u3150
  3820  001E5E                     u3151:
  3821  001E5E  EF49  F00F         	goto	l1146
  3822  001E62                     u3150:
  3823  001E62  C010  F009         	movff	___fladd@grs,??___fladd
  3824  001E66  0E7F               	movlw	127
  3825  001E68  1609               	andwf	??___fladd^0,f,c
  3826  001E6A  B4D8               	btfsc	status,2,c
  3827  001E6C  EF3A  F00F         	goto	u3161
  3828  001E70  EF3C  F00F         	goto	u3160
  3829  001E74                     u3161:
  3830  001E74  EF40  F00F         	goto	l1147
  3831  001E78                     u3160:
  3832  001E78                     l3432:
  3833  001E78  0E01               	movlw	1
  3834  001E7A  6E0E               	movwf	___fladd@aexp^0,c
  3835  001E7C  EF49  F00F         	goto	l1146
  3836  001E80                     l1147:
  3837  001E80  A001               	btfss	___fladd@b^0,0,c
  3838  001E82  EF45  F00F         	goto	u3171
  3839  001E86  EF47  F00F         	goto	u3170
  3840  001E8A                     u3171:
  3841  001E8A  EF49  F00F         	goto	l1146
  3842  001E8E                     u3170:
  3843  001E8E  EF3C  F00F         	goto	l3432
  3844  001E92                     l1146:
  3845  001E92  500E               	movf	___fladd@aexp^0,w,c
  3846  001E94  B4D8               	btfsc	status,2,c
  3847  001E96  EF4F  F00F         	goto	u3181
  3848  001E9A  EF51  F00F         	goto	u3180
  3849  001E9E                     u3181:
  3850  001E9E  EF7C  F00F         	goto	l3444
  3851  001EA2                     u3180:
  3852  001EA2  0E01               	movlw	1
  3853  001EA4  2601               	addwf	___fladd@b^0,f,c
  3854  001EA6  0E00               	movlw	0
  3855  001EA8  2202               	addwfc	(___fladd@b+1)^0,f,c
  3856  001EAA  2203               	addwfc	(___fladd@b+2)^0,f,c
  3857  001EAC  2204               	addwfc	(___fladd@b+3)^0,f,c
  3858  001EAE  A004               	btfss	(___fladd@b+3)^0,0,c
  3859  001EB0  EF5C  F00F         	goto	u3191
  3860  001EB4  EF5E  F00F         	goto	u3190
  3861  001EB8                     u3191:
  3862  001EB8  EF7C  F00F         	goto	l3444
  3863  001EBC                     u3190:
  3864  001EBC  C001  F009         	movff	___fladd@b,??___fladd
  3865  001EC0  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3866  001EC4  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3867  001EC8  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3868  001ECC  340C               	rlcf	(??___fladd+3)^0,w,c
  3869  001ECE  320C               	rrcf	(??___fladd+3)^0,f,c
  3870  001ED0  320B               	rrcf	(??___fladd+2)^0,f,c
  3871  001ED2  320A               	rrcf	(??___fladd+1)^0,f,c
  3872  001ED4  3209               	rrcf	??___fladd^0,f,c
  3873  001ED6  C009  F001         	movff	??___fladd,___fladd@b
  3874  001EDA  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3875  001EDE  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3876  001EE2  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3877  001EE6  280F               	incf	___fladd@bexp^0,w,c
  3878  001EE8  B4D8               	btfsc	status,2,c
  3879  001EEA  EF79  F00F         	goto	u3201
  3880  001EEE  EF7B  F00F         	goto	u3200
  3881  001EF2                     u3201:
  3882  001EF2  EF7C  F00F         	goto	l3444
  3883  001EF6                     u3200:
  3884  001EF6  2A0F               	incf	___fladd@bexp^0,f,c
  3885  001EF8                     l3444:
  3886  001EF8  280F               	incf	___fladd@bexp^0,w,c
  3887  001EFA  B4D8               	btfsc	status,2,c
  3888  001EFC  EF82  F00F         	goto	u3211
  3889  001F00  EF84  F00F         	goto	u3210
  3890  001F04                     u3211:
  3891  001F04  EF8C  F00F         	goto	l3448
  3892  001F08                     u3210:
  3893  001F08  500F               	movf	___fladd@bexp^0,w,c
  3894  001F0A  A4D8               	btfss	status,2,c
  3895  001F0C  EF8A  F00F         	goto	u3221
  3896  001F10  EF8C  F00F         	goto	u3220
  3897  001F14                     u3221:
  3898  001F14  EF9E  F00F         	goto	l3452
  3899  001F18                     u3220:
  3900  001F18                     l3448:
  3901  001F18  0E00               	movlw	0
  3902  001F1A  6E01               	movwf	___fladd@b^0,c
  3903  001F1C  0E00               	movlw	0
  3904  001F1E  6E02               	movwf	(___fladd@b+1)^0,c
  3905  001F20  0E00               	movlw	0
  3906  001F22  6E03               	movwf	(___fladd@b+2)^0,c
  3907  001F24  0E00               	movlw	0
  3908  001F26  6E04               	movwf	(___fladd@b+3)^0,c
  3909  001F28  500F               	movf	___fladd@bexp^0,w,c
  3910  001F2A  A4D8               	btfss	status,2,c
  3911  001F2C  EF9A  F00F         	goto	u3231
  3912  001F30  EF9C  F00F         	goto	u3230
  3913  001F34                     u3231:
  3914  001F34  EF9E  F00F         	goto	l3452
  3915  001F38                     u3230:
  3916  001F38  0E00               	movlw	0
  3917  001F3A  6E0D               	movwf	___fladd@signs^0,c
  3918  001F3C                     l3452:
  3919  001F3C  A00F               	btfss	___fladd@bexp^0,0,c
  3920  001F3E  EFA3  F00F         	goto	u3241
  3921  001F42  EFA5  F00F         	goto	u3240
  3922  001F46                     u3241:
  3923  001F46  EFA8  F00F         	goto	l3456
  3924  001F4A                     u3240:
  3925  001F4A  8E03               	bsf	(___fladd@b+2)^0,7,c
  3926  001F4C  EFA9  F00F         	goto	l3458
  3927  001F50                     l3456:
  3928  001F50  9E03               	bcf	(___fladd@b+2)^0,7,c
  3929  001F52                     l3458:
  3930  001F52  90D8               	bcf	status,0,c
  3931  001F54  300F               	rrcf	___fladd@bexp^0,w,c
  3932  001F56  6E04               	movwf	(___fladd@b+3)^0,c
  3933  001F58  AE0D               	btfss	___fladd@signs^0,7,c
  3934  001F5A  EFB1  F00F         	goto	u3251
  3935  001F5E  EFB3  F00F         	goto	u3250
  3936  001F62                     u3251:
  3937  001F62  EFB4  F00F         	goto	l3464
  3938  001F66                     u3250:
  3939  001F66  8E04               	bsf	(___fladd@b+3)^0,7,c
  3940  001F68                     l3464:
  3941  001F68  C001  F001         	movff	___fladd@b,?___fladd
  3942  001F6C  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3943  001F70  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3944  001F74  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3945  001F78                     l1129:
  3946  001F78  0012               	return		;funcret
  3947  001F7A                     __end_of___fladd:
  3948                           	callstack 0
  3949                           
  3950 ;; *************** function ___flneg *****************
  3951 ;; Defined at:
  3952 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;  f1              4    0[COMRAM] unsigned char 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  4    0[COMRAM] unsigned char 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3969 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3970 ;;Total ram usage:        4 bytes
  3971 ;; Hardware stack levels used: 1
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_roundf
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text10
  3980  004156                     __ptext10:
  3981                           	callstack 0
  3982  004156                     ___flneg:
  3983                           	callstack 27
  3984  004156  5001               	movf	___flneg@f1^0,w,c
  3985  004158  1002               	iorwf	(___flneg@f1+1)^0,w,c
  3986  00415A  1003               	iorwf	(___flneg@f1+2)^0,w,c
  3987  00415C  1004               	iorwf	(___flneg@f1+3)^0,w,c
  3988  00415E  B4D8               	btfsc	status,2,c
  3989  004160  EFB4  F020         	goto	u3571
  3990  004164  EFB6  F020         	goto	u3570
  3991  004168                     u3571:
  3992  004168  EFBE  F020         	goto	l3706
  3993  00416C                     u3570:
  3994  00416C  0E00               	movlw	0
  3995  00416E  1A01               	xorwf	___flneg@f1^0,f,c
  3996  004170  0E00               	movlw	0
  3997  004172  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  3998  004174  0E00               	movlw	0
  3999  004176  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4000  004178  0E80               	movlw	128
  4001  00417A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4002  00417C                     l3706:
  4003  00417C  C001  F001         	movff	___flneg@f1,?___flneg
  4004  004180  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4005  004184  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4006  004188  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4007  00418C  0012               	return		;funcret
  4008  00418E                     __end_of___flneg:
  4009                           	callstack 0
  4010                           
  4011 ;; *************** function ___flmul *****************
  4012 ;; Defined at:
  4013 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  b               4   39[COMRAM] unsigned char 
  4016 ;;  a               4   43[COMRAM] unsigned char 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  prod            4   58[COMRAM] struct .
  4019 ;;  grs             4   52[COMRAM] unsigned long 
  4020 ;;  temp            2   62[COMRAM] struct .
  4021 ;;  bexp            1   57[COMRAM] unsigned char 
  4022 ;;  aexp            1   56[COMRAM] unsigned char 
  4023 ;;  sign            1   51[COMRAM] unsigned char 
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  4   39[COMRAM] unsigned char 
  4026 ;; Registers used:
  4027 ;;		wreg, status,2, status,0, prodl, prodh
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4033 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4037 ;;Total ram usage:       25 bytes
  4038 ;; Hardware stack levels used: 1
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_detect_color
  4043 ;;		_roundf
  4044 ;;		_check_color_reading
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text11
  4049  001F7A                     __ptext11:
  4050                           	callstack 0
  4051  001F7A                     ___flmul:
  4052                           	callstack 27
  4053  001F7A  502B               	movf	(___flmul@b+3)^0,w,c
  4054  001F7C  0B80               	andlw	128
  4055  001F7E  6E34               	movwf	___flmul@sign^0,c
  4056  001F80  502B               	movf	(___flmul@b+3)^0,w,c
  4057  001F82  242B               	addwf	(___flmul@b+3)^0,w,c
  4058  001F84  6E3A               	movwf	___flmul@bexp^0,c
  4059  001F86  AE2A               	btfss	(___flmul@b+2)^0,7,c
  4060  001F88  EFC8  F00F         	goto	u3331
  4061  001F8C  EFCA  F00F         	goto	u3330
  4062  001F90                     u3331:
  4063  001F90  EFCB  F00F         	goto	l3550
  4064  001F94                     u3330:
  4065  001F94  803A               	bsf	___flmul@bexp^0,0,c
  4066  001F96                     l3550:
  4067  001F96  503A               	movf	___flmul@bexp^0,w,c
  4068  001F98  B4D8               	btfsc	status,2,c
  4069  001F9A  EFD1  F00F         	goto	u3341
  4070  001F9E  EFD3  F00F         	goto	u3340
  4071  001FA2                     u3341:
  4072  001FA2  EFE6  F00F         	goto	l3558
  4073  001FA6                     u3340:
  4074  001FA6  283A               	incf	___flmul@bexp^0,w,c
  4075  001FA8  A4D8               	btfss	status,2,c
  4076  001FAA  EFD9  F00F         	goto	u3351
  4077  001FAE  EFDB  F00F         	goto	u3350
  4078  001FB2                     u3351:
  4079  001FB2  EFE3  F00F         	goto	l3556
  4080  001FB6                     u3350:
  4081  001FB6  0E00               	movlw	0
  4082  001FB8  6E28               	movwf	___flmul@b^0,c
  4083  001FBA  0E00               	movlw	0
  4084  001FBC  6E29               	movwf	(___flmul@b+1)^0,c
  4085  001FBE  0E00               	movlw	0
  4086  001FC0  6E2A               	movwf	(___flmul@b+2)^0,c
  4087  001FC2  0E00               	movlw	0
  4088  001FC4  6E2B               	movwf	(___flmul@b+3)^0,c
  4089  001FC6                     l3556:
  4090  001FC6  8E2A               	bsf	(___flmul@b+2)^0,7,c
  4091  001FC8  EFEE  F00F         	goto	l3560
  4092  001FCC                     l3558:
  4093  001FCC  0E00               	movlw	0
  4094  001FCE  6E28               	movwf	___flmul@b^0,c
  4095  001FD0  0E00               	movlw	0
  4096  001FD2  6E29               	movwf	(___flmul@b+1)^0,c
  4097  001FD4  0E00               	movlw	0
  4098  001FD6  6E2A               	movwf	(___flmul@b+2)^0,c
  4099  001FD8  0E00               	movlw	0
  4100  001FDA  6E2B               	movwf	(___flmul@b+3)^0,c
  4101  001FDC                     l3560:
  4102  001FDC  502F               	movf	(___flmul@a+3)^0,w,c
  4103  001FDE  0B80               	andlw	128
  4104  001FE0  1A34               	xorwf	___flmul@sign^0,f,c
  4105  001FE2  502F               	movf	(___flmul@a+3)^0,w,c
  4106  001FE4  242F               	addwf	(___flmul@a+3)^0,w,c
  4107  001FE6  6E39               	movwf	___flmul@aexp^0,c
  4108  001FE8  AE2E               	btfss	(___flmul@a+2)^0,7,c
  4109  001FEA  EFF9  F00F         	goto	u3361
  4110  001FEE  EFFB  F00F         	goto	u3360
  4111  001FF2                     u3361:
  4112  001FF2  EFFC  F00F         	goto	l3568
  4113  001FF6                     u3360:
  4114  001FF6  8039               	bsf	___flmul@aexp^0,0,c
  4115  001FF8                     l3568:
  4116  001FF8  5039               	movf	___flmul@aexp^0,w,c
  4117  001FFA  B4D8               	btfsc	status,2,c
  4118  001FFC  EF02  F010         	goto	u3371
  4119  002000  EF04  F010         	goto	u3370
  4120  002004                     u3371:
  4121  002004  EF17  F010         	goto	l3576
  4122  002008                     u3370:
  4123  002008  2839               	incf	___flmul@aexp^0,w,c
  4124  00200A  A4D8               	btfss	status,2,c
  4125  00200C  EF0A  F010         	goto	u3381
  4126  002010  EF0C  F010         	goto	u3380
  4127  002014                     u3381:
  4128  002014  EF14  F010         	goto	l3574
  4129  002018                     u3380:
  4130  002018  0E00               	movlw	0
  4131  00201A  6E2C               	movwf	___flmul@a^0,c
  4132  00201C  0E00               	movlw	0
  4133  00201E  6E2D               	movwf	(___flmul@a+1)^0,c
  4134  002020  0E00               	movlw	0
  4135  002022  6E2E               	movwf	(___flmul@a+2)^0,c
  4136  002024  0E00               	movlw	0
  4137  002026  6E2F               	movwf	(___flmul@a+3)^0,c
  4138  002028                     l3574:
  4139  002028  8E2E               	bsf	(___flmul@a+2)^0,7,c
  4140  00202A  EF1F  F010         	goto	l1206
  4141  00202E                     l3576:
  4142  00202E  0E00               	movlw	0
  4143  002030  6E2C               	movwf	___flmul@a^0,c
  4144  002032  0E00               	movlw	0
  4145  002034  6E2D               	movwf	(___flmul@a+1)^0,c
  4146  002036  0E00               	movlw	0
  4147  002038  6E2E               	movwf	(___flmul@a+2)^0,c
  4148  00203A  0E00               	movlw	0
  4149  00203C  6E2F               	movwf	(___flmul@a+3)^0,c
  4150  00203E                     l1206:
  4151  00203E  5039               	movf	___flmul@aexp^0,w,c
  4152  002040  B4D8               	btfsc	status,2,c
  4153  002042  EF25  F010         	goto	u3391
  4154  002046  EF27  F010         	goto	u3390
  4155  00204A                     u3391:
  4156  00204A  EF2F  F010         	goto	l3580
  4157  00204E                     u3390:
  4158  00204E  503A               	movf	___flmul@bexp^0,w,c
  4159  002050  A4D8               	btfss	status,2,c
  4160  002052  EF2D  F010         	goto	u3401
  4161  002056  EF2F  F010         	goto	u3400
  4162  00205A                     u3401:
  4163  00205A  EF39  F010         	goto	l3584
  4164  00205E                     u3400:
  4165  00205E                     l3580:
  4166  00205E  0E00               	movlw	0
  4167  002060  6E28               	movwf	?___flmul^0,c
  4168  002062  0E00               	movlw	0
  4169  002064  6E29               	movwf	(?___flmul+1)^0,c
  4170  002066  0E00               	movlw	0
  4171  002068  6E2A               	movwf	(?___flmul+2)^0,c
  4172  00206A  0E00               	movlw	0
  4173  00206C  6E2B               	movwf	(?___flmul+3)^0,c
  4174  00206E  EFD1  F011         	goto	l1210
  4175  002072                     l3584:
  4176  002072  502E               	movf	(___flmul@a+2)^0,w,c
  4177  002074  0228               	mulwf	___flmul@b^0,c
  4178  002076  CFF3 F03F          	movff	prodl,___flmul@temp
  4179  00207A  CFF4 F040          	movff	prodh,___flmul@temp+1
  4180  00207E  503F               	movf	___flmul@temp^0,w,c
  4181  002080  6E35               	movwf	___flmul@grs^0,c
  4182  002082  6A36               	clrf	(___flmul@grs+1)^0,c
  4183  002084  6A37               	clrf	(___flmul@grs+2)^0,c
  4184  002086  6A38               	clrf	(___flmul@grs+3)^0,c
  4185  002088  5040               	movf	(___flmul@temp+1)^0,w,c
  4186  00208A  6E3B               	movwf	___flmul@prod^0,c
  4187  00208C  6A3C               	clrf	(___flmul@prod+1)^0,c
  4188  00208E  6A3D               	clrf	(___flmul@prod+2)^0,c
  4189  002090  6A3E               	clrf	(___flmul@prod+3)^0,c
  4190  002092  502D               	movf	(___flmul@a+1)^0,w,c
  4191  002094  0229               	mulwf	(___flmul@b+1)^0,c
  4192  002096  CFF3 F03F          	movff	prodl,___flmul@temp
  4193  00209A  CFF4 F040          	movff	prodh,___flmul@temp+1
  4194  00209E  503F               	movf	___flmul@temp^0,w,c
  4195  0020A0  2635               	addwf	___flmul@grs^0,f,c
  4196  0020A2  0E00               	movlw	0
  4197  0020A4  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4198  0020A6  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4199  0020A8  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4200  0020AA  5040               	movf	(___flmul@temp+1)^0,w,c
  4201  0020AC  263B               	addwf	___flmul@prod^0,f,c
  4202  0020AE  0E00               	movlw	0
  4203  0020B0  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4204  0020B2  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4205  0020B4  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4206  0020B6  502C               	movf	___flmul@a^0,w,c
  4207  0020B8  022A               	mulwf	(___flmul@b+2)^0,c
  4208  0020BA  CFF3 F03F          	movff	prodl,___flmul@temp
  4209  0020BE  CFF4 F040          	movff	prodh,___flmul@temp+1
  4210  0020C2  503F               	movf	___flmul@temp^0,w,c
  4211  0020C4  2635               	addwf	___flmul@grs^0,f,c
  4212  0020C6  0E00               	movlw	0
  4213  0020C8  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4214  0020CA  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4215  0020CC  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4216  0020CE  5040               	movf	(___flmul@temp+1)^0,w,c
  4217  0020D0  263B               	addwf	___flmul@prod^0,f,c
  4218  0020D2  0E00               	movlw	0
  4219  0020D4  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4220  0020D6  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4221  0020D8  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4222  0020DA  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4223  0020DE  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4224  0020E2  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4225  0020E6  6A35               	clrf	___flmul@grs^0,c
  4226  0020E8  502C               	movf	___flmul@a^0,w,c
  4227  0020EA  0229               	mulwf	(___flmul@b+1)^0,c
  4228  0020EC  CFF3 F03F          	movff	prodl,___flmul@temp
  4229  0020F0  CFF4 F040          	movff	prodh,___flmul@temp+1
  4230  0020F4  503F               	movf	___flmul@temp^0,w,c
  4231  0020F6  2635               	addwf	___flmul@grs^0,f,c
  4232  0020F8  5040               	movf	(___flmul@temp+1)^0,w,c
  4233  0020FA  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4234  0020FC  0E00               	movlw	0
  4235  0020FE  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4236  002100  0E00               	movlw	0
  4237  002102  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4238  002104  502D               	movf	(___flmul@a+1)^0,w,c
  4239  002106  0228               	mulwf	___flmul@b^0,c
  4240  002108  CFF3 F03F          	movff	prodl,___flmul@temp
  4241  00210C  CFF4 F040          	movff	prodh,___flmul@temp+1
  4242  002110  503F               	movf	___flmul@temp^0,w,c
  4243  002112  2635               	addwf	___flmul@grs^0,f,c
  4244  002114  5040               	movf	(___flmul@temp+1)^0,w,c
  4245  002116  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4246  002118  0E00               	movlw	0
  4247  00211A  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4248  00211C  0E00               	movlw	0
  4249  00211E  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4250  002120  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4251  002124  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4252  002128  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4253  00212C  6A35               	clrf	___flmul@grs^0,c
  4254  00212E  502C               	movf	___flmul@a^0,w,c
  4255  002130  0228               	mulwf	___flmul@b^0,c
  4256  002132  CFF3 F03F          	movff	prodl,___flmul@temp
  4257  002136  CFF4 F040          	movff	prodh,___flmul@temp+1
  4258  00213A  503F               	movf	___flmul@temp^0,w,c
  4259  00213C  2635               	addwf	___flmul@grs^0,f,c
  4260  00213E  5040               	movf	(___flmul@temp+1)^0,w,c
  4261  002140  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4262  002142  0E00               	movlw	0
  4263  002144  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4264  002146  0E00               	movlw	0
  4265  002148  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4266  00214A  502E               	movf	(___flmul@a+2)^0,w,c
  4267  00214C  0229               	mulwf	(___flmul@b+1)^0,c
  4268  00214E  CFF3 F03F          	movff	prodl,___flmul@temp
  4269  002152  CFF4 F040          	movff	prodh,___flmul@temp+1
  4270  002156  503F               	movf	___flmul@temp^0,w,c
  4271  002158  263B               	addwf	___flmul@prod^0,f,c
  4272  00215A  5040               	movf	(___flmul@temp+1)^0,w,c
  4273  00215C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4274  00215E  0E00               	movlw	0
  4275  002160  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4276  002162  0E00               	movlw	0
  4277  002164  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4278  002166  502D               	movf	(___flmul@a+1)^0,w,c
  4279  002168  022A               	mulwf	(___flmul@b+2)^0,c
  4280  00216A  CFF3 F03F          	movff	prodl,___flmul@temp
  4281  00216E  CFF4 F040          	movff	prodh,___flmul@temp+1
  4282  002172  503F               	movf	___flmul@temp^0,w,c
  4283  002174  263B               	addwf	___flmul@prod^0,f,c
  4284  002176  5040               	movf	(___flmul@temp+1)^0,w,c
  4285  002178  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4286  00217A  0E00               	movlw	0
  4287  00217C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4288  00217E  0E00               	movlw	0
  4289  002180  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4290  002182  502E               	movf	(___flmul@a+2)^0,w,c
  4291  002184  022A               	mulwf	(___flmul@b+2)^0,c
  4292  002186  CFF3 F03F          	movff	prodl,___flmul@temp
  4293  00218A  CFF4 F040          	movff	prodh,___flmul@temp+1
  4294  00218E  503F               	movf	___flmul@temp^0,w,c
  4295  002190  6E30               	movwf	??___flmul^0,c
  4296  002192  5040               	movf	(___flmul@temp+1)^0,w,c
  4297  002194  6E31               	movwf	(??___flmul+1)^0,c
  4298  002196  6A32               	clrf	(??___flmul+2)^0,c
  4299  002198  6A33               	clrf	(??___flmul+3)^0,c
  4300  00219A  C032  F033         	movff	??___flmul+2,??___flmul+3
  4301  00219E  C031  F032         	movff	??___flmul+1,??___flmul+2
  4302  0021A2  C030  F031         	movff	??___flmul,??___flmul+1
  4303  0021A6  6A30               	clrf	??___flmul^0,c
  4304  0021A8  5030               	movf	??___flmul^0,w,c
  4305  0021AA  263B               	addwf	___flmul@prod^0,f,c
  4306  0021AC  5031               	movf	(??___flmul+1)^0,w,c
  4307  0021AE  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4308  0021B0  5032               	movf	(??___flmul+2)^0,w,c
  4309  0021B2  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4310  0021B4  5033               	movf	(??___flmul+3)^0,w,c
  4311  0021B6  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4312  0021B8  C035  F030         	movff	___flmul@grs,??___flmul
  4313  0021BC  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  4314  0021C0  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  4315  0021C4  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  4316  0021C8  0E19               	movlw	25
  4317  0021CA  EFEC  F010         	goto	u3410
  4318  0021CE                     u3415:
  4319  0021CE  90D8               	bcf	status,0,c
  4320  0021D0  3233               	rrcf	(??___flmul+3)^0,f,c
  4321  0021D2  3232               	rrcf	(??___flmul+2)^0,f,c
  4322  0021D4  3231               	rrcf	(??___flmul+1)^0,f,c
  4323  0021D6  3230               	rrcf	??___flmul^0,f,c
  4324  0021D8                     u3410:
  4325  0021D8  2EE8               	decfsz	wreg,f,c
  4326  0021DA  EFE7  F010         	goto	u3415
  4327  0021DE  5030               	movf	??___flmul^0,w,c
  4328  0021E0  263B               	addwf	___flmul@prod^0,f,c
  4329  0021E2  5031               	movf	(??___flmul+1)^0,w,c
  4330  0021E4  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4331  0021E6  5032               	movf	(??___flmul+2)^0,w,c
  4332  0021E8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4333  0021EA  5033               	movf	(??___flmul+3)^0,w,c
  4334  0021EC  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4335  0021EE  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4336  0021F2  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4337  0021F6  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4338  0021FA  6A35               	clrf	___flmul@grs^0,c
  4339  0021FC  5039               	movf	___flmul@aexp^0,w,c
  4340  0021FE  C03A  F030         	movff	___flmul@bexp,??___flmul
  4341  002202  6A31               	clrf	(??___flmul+1)^0,c
  4342  002204  2630               	addwf	??___flmul^0,f,c
  4343  002206  0E00               	movlw	0
  4344  002208  2231               	addwfc	(??___flmul+1)^0,f,c
  4345  00220A  0E82               	movlw	130
  4346  00220C  2430               	addwf	??___flmul^0,w,c
  4347  00220E  6E3F               	movwf	___flmul@temp^0,c
  4348  002210  0EFF               	movlw	255
  4349  002212  2031               	addwfc	(??___flmul+1)^0,w,c
  4350  002214  6E40               	movwf	(___flmul@temp+1)^0,c
  4351  002216  EF22  F011         	goto	l3632
  4352  00221A                     l3626:
  4353  00221A  90D8               	bcf	status,0,c
  4354  00221C  363B               	rlcf	___flmul@prod^0,f,c
  4355  00221E  363C               	rlcf	(___flmul@prod+1)^0,f,c
  4356  002220  363D               	rlcf	(___flmul@prod+2)^0,f,c
  4357  002222  363E               	rlcf	(___flmul@prod+3)^0,f,c
  4358  002224  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4359  002226  EF17  F011         	goto	u3421
  4360  00222A  EF19  F011         	goto	u3420
  4361  00222E                     u3421:
  4362  00222E  EF1A  F011         	goto	l1213
  4363  002232                     u3420:
  4364  002232  803B               	bsf	___flmul@prod^0,0,c
  4365  002234                     l1213:
  4366  002234  90D8               	bcf	status,0,c
  4367  002236  3635               	rlcf	___flmul@grs^0,f,c
  4368  002238  3636               	rlcf	(___flmul@grs+1)^0,f,c
  4369  00223A  3637               	rlcf	(___flmul@grs+2)^0,f,c
  4370  00223C  3638               	rlcf	(___flmul@grs+3)^0,f,c
  4371  00223E  063F               	decf	___flmul@temp^0,f,c
  4372  002240  A0D8               	btfss	status,0,c
  4373  002242  0640               	decf	(___flmul@temp+1)^0,f,c
  4374  002244                     l3632:
  4375  002244  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  4376  002246  EF27  F011         	goto	u3431
  4377  00224A  EF29  F011         	goto	u3430
  4378  00224E                     u3431:
  4379  00224E  EF0D  F011         	goto	l3626
  4380  002252                     u3430:
  4381  002252  0E00               	movlw	0
  4382  002254  6E39               	movwf	___flmul@aexp^0,c
  4383  002256  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4384  002258  EF30  F011         	goto	u3441
  4385  00225C  EF32  F011         	goto	u3440
  4386  002260                     u3441:
  4387  002260  EF56  F011         	goto	l1215
  4388  002264                     u3440:
  4389  002264  0EFF               	movlw	255
  4390  002266  1435               	andwf	___flmul@grs^0,w,c
  4391  002268  6E30               	movwf	??___flmul^0,c
  4392  00226A  0EFF               	movlw	255
  4393  00226C  1436               	andwf	(___flmul@grs+1)^0,w,c
  4394  00226E  6E31               	movwf	(??___flmul+1)^0,c
  4395  002270  0EFF               	movlw	255
  4396  002272  1437               	andwf	(___flmul@grs+2)^0,w,c
  4397  002274  6E32               	movwf	(??___flmul+2)^0,c
  4398  002276  0E7F               	movlw	127
  4399  002278  1438               	andwf	(___flmul@grs+3)^0,w,c
  4400  00227A  6E33               	movwf	(??___flmul+3)^0,c
  4401  00227C  5030               	movf	??___flmul^0,w,c
  4402  00227E  1031               	iorwf	(??___flmul+1)^0,w,c
  4403  002280  1032               	iorwf	(??___flmul+2)^0,w,c
  4404  002282  1033               	iorwf	(??___flmul+3)^0,w,c
  4405  002284  B4D8               	btfsc	status,2,c
  4406  002286  EF47  F011         	goto	u3451
  4407  00228A  EF49  F011         	goto	u3450
  4408  00228E                     u3451:
  4409  00228E  EF4D  F011         	goto	l1216
  4410  002292                     u3450:
  4411  002292                     l3640:
  4412  002292  0E01               	movlw	1
  4413  002294  6E39               	movwf	___flmul@aexp^0,c
  4414  002296  EF56  F011         	goto	l1215
  4415  00229A                     l1216:
  4416  00229A  A03B               	btfss	___flmul@prod^0,0,c
  4417  00229C  EF52  F011         	goto	u3461
  4418  0022A0  EF54  F011         	goto	u3460
  4419  0022A4                     u3461:
  4420  0022A4  EF56  F011         	goto	l1215
  4421  0022A8                     u3460:
  4422  0022A8  EF49  F011         	goto	l3640
  4423  0022AC                     l1215:
  4424  0022AC  5039               	movf	___flmul@aexp^0,w,c
  4425  0022AE  B4D8               	btfsc	status,2,c
  4426  0022B0  EF5C  F011         	goto	u3471
  4427  0022B4  EF5E  F011         	goto	u3470
  4428  0022B8                     u3471:
  4429  0022B8  EF82  F011         	goto	l3652
  4430  0022BC                     u3470:
  4431  0022BC  0E01               	movlw	1
  4432  0022BE  263B               	addwf	___flmul@prod^0,f,c
  4433  0022C0  0E00               	movlw	0
  4434  0022C2  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4435  0022C4  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4436  0022C6  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4437  0022C8  A03E               	btfss	(___flmul@prod+3)^0,0,c
  4438  0022CA  EF69  F011         	goto	u3481
  4439  0022CE  EF6B  F011         	goto	u3480
  4440  0022D2                     u3481:
  4441  0022D2  EF82  F011         	goto	l3652
  4442  0022D6                     u3480:
  4443  0022D6  C03B  F030         	movff	___flmul@prod,??___flmul
  4444  0022DA  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  4445  0022DE  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  4446  0022E2  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  4447  0022E6  3433               	rlcf	(??___flmul+3)^0,w,c
  4448  0022E8  3233               	rrcf	(??___flmul+3)^0,f,c
  4449  0022EA  3232               	rrcf	(??___flmul+2)^0,f,c
  4450  0022EC  3231               	rrcf	(??___flmul+1)^0,f,c
  4451  0022EE  3230               	rrcf	??___flmul^0,f,c
  4452  0022F0  C030  F03B         	movff	??___flmul,___flmul@prod
  4453  0022F4  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  4454  0022F8  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  4455  0022FC  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  4456  002300  4A3F               	infsnz	___flmul@temp^0,f,c
  4457  002302  2A40               	incf	(___flmul@temp+1)^0,f,c
  4458  002304                     l3652:
  4459  002304  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4460  002306  EF8D  F011         	goto	u3491
  4461  00230A  5040               	movf	(___flmul@temp+1)^0,w,c
  4462  00230C  E108               	bnz	u3490
  4463  00230E  283F               	incf	___flmul@temp^0,w,c
  4464  002310  A0D8               	btfss	status,0,c
  4465  002312  EF8D  F011         	goto	u3491
  4466  002316  EF8F  F011         	goto	u3490
  4467  00231A                     u3491:
  4468  00231A  EF99  F011         	goto	l3656
  4469  00231E                     u3490:
  4470  00231E  0E00               	movlw	0
  4471  002320  6E3B               	movwf	___flmul@prod^0,c
  4472  002322  0E00               	movlw	0
  4473  002324  6E3C               	movwf	(___flmul@prod+1)^0,c
  4474  002326  0E80               	movlw	128
  4475  002328  6E3D               	movwf	(___flmul@prod+2)^0,c
  4476  00232A  0E7F               	movlw	127
  4477  00232C  6E3E               	movwf	(___flmul@prod+3)^0,c
  4478  00232E  EFC7  F011         	goto	l3668
  4479  002332                     l3656:
  4480  002332  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4481  002334  EFA6  F011         	goto	u3500
  4482  002338  5040               	movf	(___flmul@temp+1)^0,w,c
  4483  00233A  E106               	bnz	u3501
  4484  00233C  043F               	decf	___flmul@temp^0,w,c
  4485  00233E  B0D8               	btfsc	status,0,c
  4486  002340  EFA4  F011         	goto	u3501
  4487  002344  EFA6  F011         	goto	u3500
  4488  002348                     u3501:
  4489  002348  EFB2  F011         	goto	l1223
  4490  00234C                     u3500:
  4491  00234C  0E00               	movlw	0
  4492  00234E  6E3B               	movwf	___flmul@prod^0,c
  4493  002350  0E00               	movlw	0
  4494  002352  6E3C               	movwf	(___flmul@prod+1)^0,c
  4495  002354  0E00               	movlw	0
  4496  002356  6E3D               	movwf	(___flmul@prod+2)^0,c
  4497  002358  0E00               	movlw	0
  4498  00235A  6E3E               	movwf	(___flmul@prod+3)^0,c
  4499  00235C  0E00               	movlw	0
  4500  00235E  6E34               	movwf	___flmul@sign^0,c
  4501  002360  EFC7  F011         	goto	l3668
  4502  002364                     l1223:
  4503  002364  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  4504  002368  0EFF               	movlw	255
  4505  00236A  163B               	andwf	___flmul@prod^0,f,c
  4506  00236C  0EFF               	movlw	255
  4507  00236E  163C               	andwf	(___flmul@prod+1)^0,f,c
  4508  002370  0E7F               	movlw	127
  4509  002372  163D               	andwf	(___flmul@prod+2)^0,f,c
  4510  002374  0E00               	movlw	0
  4511  002376  163E               	andwf	(___flmul@prod+3)^0,f,c
  4512  002378  A03A               	btfss	___flmul@bexp^0,0,c
  4513  00237A  EFC1  F011         	goto	u3511
  4514  00237E  EFC3  F011         	goto	u3510
  4515  002382                     u3511:
  4516  002382  EFC4  F011         	goto	l3666
  4517  002386                     u3510:
  4518  002386  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  4519  002388                     l3666:
  4520  002388  90D8               	bcf	status,0,c
  4521  00238A  303A               	rrcf	___flmul@bexp^0,w,c
  4522  00238C  6E3E               	movwf	(___flmul@prod+3)^0,c
  4523  00238E                     l3668:
  4524  00238E  5034               	movf	___flmul@sign^0,w,c
  4525  002390  123E               	iorwf	(___flmul@prod+3)^0,f,c
  4526  002392  C03B  F028         	movff	___flmul@prod,?___flmul
  4527  002396  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  4528  00239A  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  4529  00239E  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  4530  0023A2                     l1210:
  4531  0023A2  0012               	return		;funcret
  4532  0023A4                     __end_of___flmul:
  4533                           	callstack 0
  4534                           
  4535 ;; *************** function ___flge *****************
  4536 ;; Defined at:
  4537 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  ff1             4    0[COMRAM] unsigned char 
  4540 ;;  ff2             4    4[COMRAM] unsigned char 
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;		None
  4543 ;; Return value:  Size  Location     Type
  4544 ;;		None               void
  4545 ;; Registers used:
  4546 ;;		wreg, status,2, status,0
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4552 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4554 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4555 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4556 ;;Total ram usage:       12 bytes
  4557 ;; Hardware stack levels used: 1
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_roundf
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text12
  4566  0037EC                     __ptext12:
  4567                           	callstack 0
  4568  0037EC                     ___flge:
  4569                           	callstack 27
  4570  0037EC  0E00               	movlw	0
  4571  0037EE  1401               	andwf	___flge@ff1^0,w,c
  4572  0037F0  6E09               	movwf	??___flge^0,c
  4573  0037F2  0E00               	movlw	0
  4574  0037F4  1402               	andwf	(___flge@ff1+1)^0,w,c
  4575  0037F6  6E0A               	movwf	(??___flge+1)^0,c
  4576  0037F8  0E80               	movlw	128
  4577  0037FA  1403               	andwf	(___flge@ff1+2)^0,w,c
  4578  0037FC  6E0B               	movwf	(??___flge+2)^0,c
  4579  0037FE  0E7F               	movlw	127
  4580  003800  1404               	andwf	(___flge@ff1+3)^0,w,c
  4581  003802  6E0C               	movwf	(??___flge+3)^0,c
  4582  003804  5009               	movf	??___flge^0,w,c
  4583  003806  100A               	iorwf	(??___flge+1)^0,w,c
  4584  003808  100B               	iorwf	(??___flge+2)^0,w,c
  4585  00380A  100C               	iorwf	(??___flge+3)^0,w,c
  4586  00380C  A4D8               	btfss	status,2,c
  4587  00380E  EF0B  F01C         	goto	u3521
  4588  003812  EF0D  F01C         	goto	u3520
  4589  003816                     u3521:
  4590  003816  EF15  F01C         	goto	l3684
  4591  00381A                     u3520:
  4592  00381A  0E00               	movlw	0
  4593  00381C  6E01               	movwf	___flge@ff1^0,c
  4594  00381E  0E00               	movlw	0
  4595  003820  6E02               	movwf	(___flge@ff1+1)^0,c
  4596  003822  0E00               	movlw	0
  4597  003824  6E03               	movwf	(___flge@ff1+2)^0,c
  4598  003826  0E00               	movlw	0
  4599  003828  6E04               	movwf	(___flge@ff1+3)^0,c
  4600  00382A                     l3684:
  4601  00382A  0E00               	movlw	0
  4602  00382C  1405               	andwf	___flge@ff2^0,w,c
  4603  00382E  6E09               	movwf	??___flge^0,c
  4604  003830  0E00               	movlw	0
  4605  003832  1406               	andwf	(___flge@ff2+1)^0,w,c
  4606  003834  6E0A               	movwf	(??___flge+1)^0,c
  4607  003836  0E80               	movlw	128
  4608  003838  1407               	andwf	(___flge@ff2+2)^0,w,c
  4609  00383A  6E0B               	movwf	(??___flge+2)^0,c
  4610  00383C  0E7F               	movlw	127
  4611  00383E  1408               	andwf	(___flge@ff2+3)^0,w,c
  4612  003840  6E0C               	movwf	(??___flge+3)^0,c
  4613  003842  5009               	movf	??___flge^0,w,c
  4614  003844  100A               	iorwf	(??___flge+1)^0,w,c
  4615  003846  100B               	iorwf	(??___flge+2)^0,w,c
  4616  003848  100C               	iorwf	(??___flge+3)^0,w,c
  4617  00384A  A4D8               	btfss	status,2,c
  4618  00384C  EF2A  F01C         	goto	u3531
  4619  003850  EF2C  F01C         	goto	u3530
  4620  003854                     u3531:
  4621  003854  EF34  F01C         	goto	l3688
  4622  003858                     u3530:
  4623  003858  0E00               	movlw	0
  4624  00385A  6E05               	movwf	___flge@ff2^0,c
  4625  00385C  0E00               	movlw	0
  4626  00385E  6E06               	movwf	(___flge@ff2+1)^0,c
  4627  003860  0E00               	movlw	0
  4628  003862  6E07               	movwf	(___flge@ff2+2)^0,c
  4629  003864  0E00               	movlw	0
  4630  003866  6E08               	movwf	(___flge@ff2+3)^0,c
  4631  003868                     l3688:
  4632  003868  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4633  00386A  EF39  F01C         	goto	u3541
  4634  00386E  EF3B  F01C         	goto	u3540
  4635  003872                     u3541:
  4636  003872  EF44  F01C         	goto	l3692
  4637  003876                     u3540:
  4638  003876  6C01               	negf	___flge@ff1^0,c
  4639  003878  1E02               	comf	(___flge@ff1+1)^0,f,c
  4640  00387A  B0D8               	btfsc	status,0,c
  4641  00387C  2A02               	incf	(___flge@ff1+1)^0,f,c
  4642  00387E  1E03               	comf	(___flge@ff1+2)^0,f,c
  4643  003880  B0D8               	btfsc	status,0,c
  4644  003882  2A03               	incf	(___flge@ff1+2)^0,f,c
  4645  003884  0E80               	movlw	128
  4646  003886  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4647  003888                     l3692:
  4648  003888  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4649  00388A  EF49  F01C         	goto	u3551
  4650  00388E  EF4B  F01C         	goto	u3550
  4651  003892                     u3551:
  4652  003892  EF54  F01C         	goto	l857
  4653  003896                     u3550:
  4654  003896  6C05               	negf	___flge@ff2^0,c
  4655  003898  1E06               	comf	(___flge@ff2+1)^0,f,c
  4656  00389A  B0D8               	btfsc	status,0,c
  4657  00389C  2A06               	incf	(___flge@ff2+1)^0,f,c
  4658  00389E  1E07               	comf	(___flge@ff2+2)^0,f,c
  4659  0038A0  B0D8               	btfsc	status,0,c
  4660  0038A2  2A07               	incf	(___flge@ff2+2)^0,f,c
  4661  0038A4  0E80               	movlw	128
  4662  0038A6  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4663  0038A8                     l857:
  4664  0038A8  0E00               	movlw	0
  4665  0038AA  1A01               	xorwf	___flge@ff1^0,f,c
  4666  0038AC  0E00               	movlw	0
  4667  0038AE  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4668  0038B0  0E00               	movlw	0
  4669  0038B2  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4670  0038B4  0E80               	movlw	128
  4671  0038B6  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4672  0038B8  0E00               	movlw	0
  4673  0038BA  1A05               	xorwf	___flge@ff2^0,f,c
  4674  0038BC  0E00               	movlw	0
  4675  0038BE  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4676  0038C0  0E00               	movlw	0
  4677  0038C2  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4678  0038C4  0E80               	movlw	128
  4679  0038C6  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4680  0038C8  5005               	movf	___flge@ff2^0,w,c
  4681  0038CA  5C01               	subwf	___flge@ff1^0,w,c
  4682  0038CC  5006               	movf	(___flge@ff2+1)^0,w,c
  4683  0038CE  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4684  0038D0  5007               	movf	(___flge@ff2+2)^0,w,c
  4685  0038D2  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4686  0038D4  5008               	movf	(___flge@ff2+3)^0,w,c
  4687  0038D6  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4688  0038D8  B0D8               	btfsc	status,0,c
  4689  0038DA  EF71  F01C         	goto	u3561
  4690  0038DE  EF73  F01C         	goto	u3560
  4691  0038E2                     u3561:
  4692  0038E2  EF76  F01C         	goto	l3698
  4693  0038E6                     u3560:
  4694  0038E6  90D8               	bcf	status,0,c
  4695  0038E8  EF77  F01C         	goto	l862
  4696  0038EC                     l3698:
  4697  0038EC  80D8               	bsf	status,0,c
  4698  0038EE                     l862:
  4699  0038EE  0012               	return		;funcret
  4700  0038F0                     __end_of___flge:
  4701                           	callstack 0
  4702                           
  4703 ;; *************** function ___fltol *****************
  4704 ;; Defined at:
  4705 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  f1              4   90[COMRAM] unsigned char 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  exp1            1    5[BANK0 ] unsigned char 
  4710 ;;  sign1           1    4[BANK0 ] unsigned char 
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  4   90[COMRAM] long 
  4713 ;; Registers used:
  4714 ;;		wreg, status,2, status,0
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4720 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4721 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;Total ram usage:       10 bytes
  4725 ;; Hardware stack levels used: 1
  4726 ;; This function calls:
  4727 ;;		Nothing
  4728 ;; This function is called by:
  4729 ;;		_lroundf
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text13
  4734  0036E4                     __ptext13:
  4735                           	callstack 0
  4736  0036E4                     ___fltol:
  4737                           	callstack 28
  4738  0036E4  345D               	rlcf	(___fltol@f1+2)^0,w,c
  4739  0036E6  345E               	rlcf	(___fltol@f1+3)^0,w,c
  4740  0036E8  0100               	movlb	0	; () banked
  4741  0036EA  6F65               	movwf	___fltol@exp1& (0+255),b
  4742  0036EC  5165               	movf	___fltol@exp1& (0+255),w,b
  4743  0036EE  A4D8               	btfss	status,2,c
  4744  0036F0  EF7C  F01B         	goto	u3611
  4745  0036F4  EF7E  F01B         	goto	u3610
  4746  0036F8                     u3611:
  4747  0036F8  EF88  F01B         	goto	l3778
  4748  0036FC                     u3610:
  4749  0036FC                     l3774:
  4750                           
  4751                           ; BSR set to: 0
  4752  0036FC  0E00               	movlw	0
  4753  0036FE  6E5B               	movwf	?___fltol^0,c
  4754  003700  0E00               	movlw	0
  4755  003702  6E5C               	movwf	(?___fltol+1)^0,c
  4756  003704  0E00               	movlw	0
  4757  003706  6E5D               	movwf	(?___fltol+2)^0,c
  4758  003708  0E00               	movlw	0
  4759  00370A  6E5E               	movwf	(?___fltol+3)^0,c
  4760  00370C  EFF5  F01B         	goto	l889
  4761  003710                     l3778:
  4762                           
  4763                           ; BSR set to: 0
  4764  003710  C05B  F060         	movff	___fltol@f1,??___fltol
  4765  003714  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  4766  003718  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  4767  00371C  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  4768  003720  0E20               	movlw	32
  4769  003722  EF98  F01B         	goto	u3620
  4770  003726                     u3625:
  4771  003726  90D8               	bcf	status,0,c
  4772  003728  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  4773  00372A  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  4774  00372C  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  4775  00372E  3360               	rrcf	??___fltol& (0+255),f,b
  4776  003730                     u3620:
  4777  003730  2EE8               	decfsz	wreg,f,c
  4778  003732  EF93  F01B         	goto	u3625
  4779  003736  5160               	movf	??___fltol& (0+255),w,b
  4780  003738  6F64               	movwf	___fltol@sign1& (0+255),b
  4781  00373A                     
  4782                           ; BSR set to: 0
  4783  00373A  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  4784  00373C                     
  4785                           ; BSR set to: 0
  4786  00373C  0EFF               	movlw	255
  4787  00373E  165B               	andwf	___fltol@f1^0,f,c
  4788  003740  0EFF               	movlw	255
  4789  003742  165C               	andwf	(___fltol@f1+1)^0,f,c
  4790  003744  0EFF               	movlw	255
  4791  003746  165D               	andwf	(___fltol@f1+2)^0,f,c
  4792  003748  0E00               	movlw	0
  4793  00374A  165E               	andwf	(___fltol@f1+3)^0,f,c
  4794  00374C                     
  4795                           ; BSR set to: 0
  4796  00374C  0E96               	movlw	150
  4797  00374E  5F65               	subwf	___fltol@exp1& (0+255),f,b
  4798  003750                     
  4799                           ; BSR set to: 0
  4800  003750  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  4801  003752  EFAF  F01B         	goto	u3630
  4802  003756  EFAD  F01B         	goto	u3631
  4803  00375A                     u3631:
  4804  00375A  EFC5  F01B         	goto	l3798
  4805  00375E                     u3630:
  4806  00375E                     
  4807                           ; BSR set to: 0
  4808  00375E  5165               	movf	___fltol@exp1& (0+255),w,b
  4809  003760  0A80               	xorlw	128
  4810  003762  0F97               	addlw	151
  4811  003764  B0D8               	btfsc	status,0,c
  4812  003766  EFB7  F01B         	goto	u3641
  4813  00376A  EFB9  F01B         	goto	u3640
  4814  00376E                     u3641:
  4815  00376E  EFBB  F01B         	goto	l3794
  4816  003772                     u3640:
  4817  003772  EF7E  F01B         	goto	l3774
  4818  003776                     l3794:
  4819                           
  4820                           ; BSR set to: 0
  4821  003776  90D8               	bcf	status,0,c
  4822  003778  325E               	rrcf	(___fltol@f1+3)^0,f,c
  4823  00377A  325D               	rrcf	(___fltol@f1+2)^0,f,c
  4824  00377C  325C               	rrcf	(___fltol@f1+1)^0,f,c
  4825  00377E  325B               	rrcf	___fltol@f1^0,f,c
  4826  003780                     
  4827                           ; BSR set to: 0
  4828  003780  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  4829  003782  EFBB  F01B         	goto	l3794
  4830  003786  EFDD  F01B         	goto	l3808
  4831  00378A                     l3798:
  4832                           
  4833                           ; BSR set to: 0
  4834  00378A  0E1F               	movlw	31
  4835  00378C  6565               	cpfsgt	___fltol@exp1& (0+255),b
  4836  00378E  EFCB  F01B         	goto	u3651
  4837  003792  EFCD  F01B         	goto	u3650
  4838  003796                     u3651:
  4839  003796  EFD5  F01B         	goto	l3806
  4840  00379A                     u3650:
  4841  00379A  EF7E  F01B         	goto	l3774
  4842  00379E                     l3804:
  4843                           
  4844                           ; BSR set to: 0
  4845  00379E  90D8               	bcf	status,0,c
  4846  0037A0  365B               	rlcf	___fltol@f1^0,f,c
  4847  0037A2  365C               	rlcf	(___fltol@f1+1)^0,f,c
  4848  0037A4  365D               	rlcf	(___fltol@f1+2)^0,f,c
  4849  0037A6  365E               	rlcf	(___fltol@f1+3)^0,f,c
  4850  0037A8  0765               	decf	___fltol@exp1& (0+255),f,b
  4851  0037AA                     l3806:
  4852                           
  4853                           ; BSR set to: 0
  4854  0037AA  5165               	movf	___fltol@exp1& (0+255),w,b
  4855  0037AC  A4D8               	btfss	status,2,c
  4856  0037AE  EFDB  F01B         	goto	u3661
  4857  0037B2  EFDD  F01B         	goto	u3660
  4858  0037B6                     u3661:
  4859  0037B6  EFCF  F01B         	goto	l3804
  4860  0037BA                     u3660:
  4861  0037BA                     l3808:
  4862                           
  4863                           ; BSR set to: 0
  4864  0037BA  5164               	movf	___fltol@sign1& (0+255),w,b
  4865  0037BC  B4D8               	btfsc	status,2,c
  4866  0037BE  EFE3  F01B         	goto	u3671
  4867  0037C2  EFE5  F01B         	goto	u3670
  4868  0037C6                     u3671:
  4869  0037C6  EFED  F01B         	goto	l3812
  4870  0037CA                     u3670:
  4871  0037CA                     
  4872                           ; BSR set to: 0
  4873  0037CA  1E5E               	comf	(___fltol@f1+3)^0,f,c
  4874  0037CC  1E5D               	comf	(___fltol@f1+2)^0,f,c
  4875  0037CE  1E5C               	comf	(___fltol@f1+1)^0,f,c
  4876  0037D0  6C5B               	negf	___fltol@f1^0,c
  4877  0037D2  0E00               	movlw	0
  4878  0037D4  225C               	addwfc	(___fltol@f1+1)^0,f,c
  4879  0037D6  225D               	addwfc	(___fltol@f1+2)^0,f,c
  4880  0037D8  225E               	addwfc	(___fltol@f1+3)^0,f,c
  4881  0037DA                     l3812:
  4882                           
  4883                           ; BSR set to: 0
  4884  0037DA  C05B  F05B         	movff	___fltol@f1,?___fltol
  4885  0037DE  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  4886  0037E2  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  4887  0037E6  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  4888  0037EA                     l889:
  4889                           
  4890                           ; BSR set to: 0
  4891  0037EA  0012               	return		;funcret
  4892  0037EC                     __end_of___fltol:
  4893                           	callstack 0
  4894                           
  4895 ;; *************** function _compare *****************
  4896 ;; Defined at:
  4897 ;;		line 294 in file "color.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  lower           2   10[BANK0 ] unsigned int 
  4900 ;;  value2compar    2   12[BANK0 ] unsigned int 
  4901 ;;  upper           2   14[BANK0 ] unsigned int 
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;  result          1   94[COMRAM] unsigned char 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      unsigned char 
  4906 ;; Registers used:
  4907 ;;		wreg, status,2, status,0
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4913 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4916 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4917 ;;Total ram usage:        7 bytes
  4918 ;; Hardware stack levels used: 1
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_detect_color
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text14
  4927  00411C                     __ptext14:
  4928                           	callstack 0
  4929  00411C                     _compare:
  4930                           	callstack 29
  4931  00411C                     
  4932                           ;color.c: 294: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 295: {;color.c: 296:     unsigned char result = 0;
  4933  00411C  0E00               	movlw	0
  4934  00411E  6E5F               	movwf	compare@result^0,c
  4935  004120                     
  4936                           ;color.c: 297:     if (lower < value2compare && value2compare <= upper){result = 1;}
  4937  004120  0100               	movlb	0	; () banked
  4938  004122  516C               	movf	compare@value2compare& (0+255),w,b
  4939  004124  5D6A               	subwf	compare@lower& (0+255),w,b
  4940  004126  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4941  004128  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  4942  00412A  B0D8               	btfsc	status,0,c
  4943  00412C  EF9A  F020         	goto	u3871
  4944  004130  EF9C  F020         	goto	u3870
  4945  004134                     u3871:
  4946  004134  EFA9  F020         	goto	l158
  4947  004138                     u3870:
  4948  004138                     
  4949                           ; BSR set to: 0
  4950  004138  516C               	movf	compare@value2compare& (0+255),w,b
  4951  00413A  5D6E               	subwf	compare@upper& (0+255),w,b
  4952  00413C  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4953  00413E  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  4954  004140  A0D8               	btfss	status,0,c
  4955  004142  EFA5  F020         	goto	u3881
  4956  004146  EFA7  F020         	goto	u3880
  4957  00414A                     u3881:
  4958  00414A  EFA9  F020         	goto	l158
  4959  00414E                     u3880:
  4960  00414E                     
  4961                           ; BSR set to: 0
  4962  00414E  0E01               	movlw	1
  4963  004150  6E5F               	movwf	compare@result^0,c
  4964  004152                     l158:
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;color.c: 298:     return result;
  4968  004152  505F               	movf	compare@result^0,w,c
  4969  004154                     
  4970                           ; BSR set to: 0
  4971  004154  0012               	return		;funcret
  4972  004156                     __end_of_compare:
  4973                           	callstack 0
  4974                           
  4975 ;; *************** function ___xxtofl *****************
  4976 ;; Defined at:
  4977 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;  sign            1    wreg     unsigned char 
  4980 ;;  val             4    0[COMRAM] long 
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;  sign            1    8[COMRAM] unsigned char 
  4983 ;;  arg             4   10[COMRAM] unsigned long 
  4984 ;;  exp             1    9[COMRAM] unsigned char 
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  4    0[COMRAM] unsigned char 
  4987 ;; Registers used:
  4988 ;;		wreg, status,2, status,0
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4995 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4996 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4997 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;Total ram usage:       14 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		_detect_color
  5004 ;;		_check_color_reading
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text15
  5009  002DD0                     __ptext15:
  5010                           	callstack 0
  5011  002DD0                     ___xxtofl:
  5012                           	callstack 29
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;incstack = 0
  5016                           ;___xxtofl@sign stored from wreg
  5017  002DD0  6E09               	movwf	___xxtofl@sign^0,c
  5018  002DD2  5009               	movf	___xxtofl@sign^0,w,c
  5019  002DD4  B4D8               	btfsc	status,2,c
  5020  002DD6  EFEF  F016         	goto	u4181
  5021  002DDA  EFF1  F016         	goto	u4180
  5022  002DDE                     u4181:
  5023  002DDE  EF13  F017         	goto	l1247
  5024  002DE2                     u4180:
  5025  002DE2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5026  002DE4  EFF8  F016         	goto	u4190
  5027  002DE8  EFF6  F016         	goto	u4191
  5028  002DEC                     u4191:
  5029  002DEC  EF13  F017         	goto	l1247
  5030  002DF0                     u4190:
  5031  002DF0  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5032  002DF4  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5033  002DF8  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5034  002DFC  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5035  002E00  1E05               	comf	??___xxtofl^0,f,c
  5036  002E02  1E06               	comf	(??___xxtofl+1)^0,f,c
  5037  002E04  1E07               	comf	(??___xxtofl+2)^0,f,c
  5038  002E06  1E08               	comf	(??___xxtofl+3)^0,f,c
  5039  002E08  2A05               	incf	??___xxtofl^0,f,c
  5040  002E0A  0E00               	movlw	0
  5041  002E0C  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5042  002E0E  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5043  002E10  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5044  002E12  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5045  002E16  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5046  002E1A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5047  002E1E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5048  002E22  EF1B  F017         	goto	l4128
  5049  002E26                     l1247:
  5050  002E26  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5051  002E2A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5052  002E2E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5053  002E32  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5054  002E36                     l4128:
  5055  002E36  5001               	movf	___xxtofl@val^0,w,c
  5056  002E38  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5057  002E3A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5058  002E3C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5059  002E3E  A4D8               	btfss	status,2,c
  5060  002E40  EF24  F017         	goto	u4201
  5061  002E44  EF26  F017         	goto	u4200
  5062  002E48                     u4201:
  5063  002E48  EF30  F017         	goto	l4134
  5064  002E4C                     u4200:
  5065  002E4C  0E00               	movlw	0
  5066  002E4E  6E01               	movwf	?___xxtofl^0,c
  5067  002E50  0E00               	movlw	0
  5068  002E52  6E02               	movwf	(?___xxtofl+1)^0,c
  5069  002E54  0E00               	movlw	0
  5070  002E56  6E03               	movwf	(?___xxtofl+2)^0,c
  5071  002E58  0E00               	movlw	0
  5072  002E5A  6E04               	movwf	(?___xxtofl+3)^0,c
  5073  002E5C  EFC1  F017         	goto	l1250
  5074  002E60                     l4134:
  5075  002E60  0E96               	movlw	150
  5076  002E62  6E0A               	movwf	___xxtofl@exp^0,c
  5077  002E64  EF3A  F017         	goto	l4138
  5078  002E68                     l4136:
  5079  002E68  2A0A               	incf	___xxtofl@exp^0,f,c
  5080  002E6A  90D8               	bcf	status,0,c
  5081  002E6C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5082  002E6E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5083  002E70  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5084  002E72  320B               	rrcf	___xxtofl@arg^0,f,c
  5085  002E74                     l4138:
  5086  002E74  0E00               	movlw	0
  5087  002E76  140B               	andwf	___xxtofl@arg^0,w,c
  5088  002E78  6E05               	movwf	??___xxtofl^0,c
  5089  002E7A  0E00               	movlw	0
  5090  002E7C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5091  002E7E  6E06               	movwf	(??___xxtofl+1)^0,c
  5092  002E80  0E00               	movlw	0
  5093  002E82  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5094  002E84  6E07               	movwf	(??___xxtofl+2)^0,c
  5095  002E86  0EFE               	movlw	254
  5096  002E88  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5097  002E8A  6E08               	movwf	(??___xxtofl+3)^0,c
  5098  002E8C  5005               	movf	??___xxtofl^0,w,c
  5099  002E8E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5100  002E90  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5101  002E92  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5102  002E94  A4D8               	btfss	status,2,c
  5103  002E96  EF4F  F017         	goto	u4211
  5104  002E9A  EF51  F017         	goto	u4210
  5105  002E9E                     u4211:
  5106  002E9E  EF34  F017         	goto	l4136
  5107  002EA2                     u4210:
  5108  002EA2  EF5F  F017         	goto	l1254
  5109  002EA6                     l4140:
  5110  002EA6  2A0A               	incf	___xxtofl@exp^0,f,c
  5111  002EA8  0E01               	movlw	1
  5112  002EAA  260B               	addwf	___xxtofl@arg^0,f,c
  5113  002EAC  0E00               	movlw	0
  5114  002EAE  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5115  002EB0  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5116  002EB2  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5117  002EB4  90D8               	bcf	status,0,c
  5118  002EB6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5119  002EB8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5120  002EBA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5121  002EBC  320B               	rrcf	___xxtofl@arg^0,f,c
  5122  002EBE                     l1254:
  5123  002EBE  0E00               	movlw	0
  5124  002EC0  140B               	andwf	___xxtofl@arg^0,w,c
  5125  002EC2  6E05               	movwf	??___xxtofl^0,c
  5126  002EC4  0E00               	movlw	0
  5127  002EC6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5128  002EC8  6E06               	movwf	(??___xxtofl+1)^0,c
  5129  002ECA  0E00               	movlw	0
  5130  002ECC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5131  002ECE  6E07               	movwf	(??___xxtofl+2)^0,c
  5132  002ED0  0EFF               	movlw	255
  5133  002ED2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5134  002ED4  6E08               	movwf	(??___xxtofl+3)^0,c
  5135  002ED6  5005               	movf	??___xxtofl^0,w,c
  5136  002ED8  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5137  002EDA  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5138  002EDC  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5139  002EDE  A4D8               	btfss	status,2,c
  5140  002EE0  EF74  F017         	goto	u4221
  5141  002EE4  EF76  F017         	goto	u4220
  5142  002EE8                     u4221:
  5143  002EE8  EF53  F017         	goto	l4140
  5144  002EEC                     u4220:
  5145  002EEC  EF7E  F017         	goto	l4148
  5146  002EF0                     l4146:
  5147  002EF0  060A               	decf	___xxtofl@exp^0,f,c
  5148  002EF2  90D8               	bcf	status,0,c
  5149  002EF4  360B               	rlcf	___xxtofl@arg^0,f,c
  5150  002EF6  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5151  002EF8  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5152  002EFA  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5153  002EFC                     l4148:
  5154  002EFC  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5155  002EFE  EF83  F017         	goto	u4231
  5156  002F02  EF85  F017         	goto	u4230
  5157  002F06                     u4231:
  5158  002F06  EF8D  F017         	goto	l1261
  5159  002F0A                     u4230:
  5160  002F0A  0E02               	movlw	2
  5161  002F0C  600A               	cpfslt	___xxtofl@exp^0,c
  5162  002F0E  EF8B  F017         	goto	u4241
  5163  002F12  EF8D  F017         	goto	u4240
  5164  002F16                     u4241:
  5165  002F16  EF78  F017         	goto	l4146
  5166  002F1A                     u4240:
  5167  002F1A                     l1261:
  5168  002F1A  B00A               	btfsc	___xxtofl@exp^0,0,c
  5169  002F1C  EF92  F017         	goto	u4251
  5170  002F20  EF94  F017         	goto	u4250
  5171  002F24                     u4251:
  5172  002F24  EF95  F017         	goto	l4154
  5173  002F28                     u4250:
  5174  002F28  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5175  002F2A                     l4154:
  5176  002F2A  90D8               	bcf	status,0,c
  5177  002F2C  320A               	rrcf	___xxtofl@exp^0,f,c
  5178  002F2E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5179  002F32  6A06               	clrf	(??___xxtofl+1)^0,c
  5180  002F34  6A07               	clrf	(??___xxtofl+2)^0,c
  5181  002F36  6A08               	clrf	(??___xxtofl+3)^0,c
  5182  002F38  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5183  002F3C  6A07               	clrf	(??___xxtofl+2)^0,c
  5184  002F3E  6A06               	clrf	(??___xxtofl+1)^0,c
  5185  002F40  6A05               	clrf	??___xxtofl^0,c
  5186  002F42  5005               	movf	??___xxtofl^0,w,c
  5187  002F44  120B               	iorwf	___xxtofl@arg^0,f,c
  5188  002F46  5006               	movf	(??___xxtofl+1)^0,w,c
  5189  002F48  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5190  002F4A  5007               	movf	(??___xxtofl+2)^0,w,c
  5191  002F4C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5192  002F4E  5008               	movf	(??___xxtofl+3)^0,w,c
  5193  002F50  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5194  002F52  5009               	movf	___xxtofl@sign^0,w,c
  5195  002F54  B4D8               	btfsc	status,2,c
  5196  002F56  EFAF  F017         	goto	u4261
  5197  002F5A  EFB1  F017         	goto	u4260
  5198  002F5E                     u4261:
  5199  002F5E  EFB9  F017         	goto	l4164
  5200  002F62                     u4260:
  5201  002F62  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5202  002F64  EFB8  F017         	goto	u4270
  5203  002F68  EFB6  F017         	goto	u4271
  5204  002F6C                     u4271:
  5205  002F6C  EFB9  F017         	goto	l4164
  5206  002F70                     u4270:
  5207  002F70  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5208  002F72                     l4164:
  5209  002F72  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5210  002F76  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5211  002F7A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5212  002F7E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5213  002F82                     l1250:
  5214  002F82  0012               	return		;funcret
  5215  002F84                     __end_of___xxtofl:
  5216                           	callstack 0
  5217                           
  5218 ;; *************** function ___fldiv *****************
  5219 ;; Defined at:
  5220 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  b               4   14[COMRAM] unsigned char 
  5223 ;;  a               4   18[COMRAM] unsigned char 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  grs             4   33[COMRAM] unsigned long 
  5226 ;;  rem             4   26[COMRAM] unsigned long 
  5227 ;;  new_exp         2   31[COMRAM] short 
  5228 ;;  aexp            1   38[COMRAM] unsigned char 
  5229 ;;  bexp            1   37[COMRAM] unsigned char 
  5230 ;;  sign            1   30[COMRAM] unsigned char 
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  4   14[COMRAM] unsigned char 
  5233 ;; Registers used:
  5234 ;;		wreg, status,2, status,0
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5240 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5241 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5242 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5243 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5244 ;;Total ram usage:       25 bytes
  5245 ;; Hardware stack levels used: 1
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_detect_color
  5250 ;;		_check_color_reading
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text16
  5255  002752                     __ptext16:
  5256                           	callstack 0
  5257  002752                     ___fldiv:
  5258                           	callstack 29
  5259  002752  5012               	movf	(___fldiv@b+3)^0,w,c
  5260  002754  0B80               	andlw	128
  5261  002756  6E1F               	movwf	___fldiv@sign^0,c
  5262  002758  5012               	movf	(___fldiv@b+3)^0,w,c
  5263  00275A  2412               	addwf	(___fldiv@b+3)^0,w,c
  5264  00275C  6E26               	movwf	___fldiv@bexp^0,c
  5265  00275E  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5266  002760  EFB4  F013         	goto	u3951
  5267  002764  EFB6  F013         	goto	u3950
  5268  002768                     u3951:
  5269  002768  EFB7  F013         	goto	l3990
  5270  00276C                     u3950:
  5271  00276C  8026               	bsf	___fldiv@bexp^0,0,c
  5272  00276E                     l3990:
  5273  00276E  5026               	movf	___fldiv@bexp^0,w,c
  5274  002770  B4D8               	btfsc	status,2,c
  5275  002772  EFBD  F013         	goto	u3961
  5276  002776  EFBF  F013         	goto	u3960
  5277  00277A                     u3961:
  5278  00277A  EFD4  F013         	goto	l4000
  5279  00277E                     u3960:
  5280  00277E  2826               	incf	___fldiv@bexp^0,w,c
  5281  002780  A4D8               	btfss	status,2,c
  5282  002782  EFC5  F013         	goto	u3971
  5283  002786  EFC7  F013         	goto	u3970
  5284  00278A                     u3971:
  5285  00278A  EFCF  F013         	goto	l3996
  5286  00278E                     u3970:
  5287  00278E  0E00               	movlw	0
  5288  002790  6E0F               	movwf	___fldiv@b^0,c
  5289  002792  0E00               	movlw	0
  5290  002794  6E10               	movwf	(___fldiv@b+1)^0,c
  5291  002796  0E00               	movlw	0
  5292  002798  6E11               	movwf	(___fldiv@b+2)^0,c
  5293  00279A  0E00               	movlw	0
  5294  00279C  6E12               	movwf	(___fldiv@b+3)^0,c
  5295  00279E                     l3996:
  5296  00279E  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5297  0027A0  0E00               	movlw	0
  5298  0027A2  6E12               	movwf	(___fldiv@b+3)^0,c
  5299  0027A4  EFDC  F013         	goto	l4002
  5300  0027A8                     l4000:
  5301  0027A8  0E00               	movlw	0
  5302  0027AA  6E0F               	movwf	___fldiv@b^0,c
  5303  0027AC  0E00               	movlw	0
  5304  0027AE  6E10               	movwf	(___fldiv@b+1)^0,c
  5305  0027B0  0E00               	movlw	0
  5306  0027B2  6E11               	movwf	(___fldiv@b+2)^0,c
  5307  0027B4  0E00               	movlw	0
  5308  0027B6  6E12               	movwf	(___fldiv@b+3)^0,c
  5309  0027B8                     l4002:
  5310  0027B8  5016               	movf	(___fldiv@a+3)^0,w,c
  5311  0027BA  0B80               	andlw	128
  5312  0027BC  1A1F               	xorwf	___fldiv@sign^0,f,c
  5313  0027BE  5016               	movf	(___fldiv@a+3)^0,w,c
  5314  0027C0  2416               	addwf	(___fldiv@a+3)^0,w,c
  5315  0027C2  6E27               	movwf	___fldiv@aexp^0,c
  5316  0027C4  AE15               	btfss	(___fldiv@a+2)^0,7,c
  5317  0027C6  EFE7  F013         	goto	u3981
  5318  0027CA  EFE9  F013         	goto	u3980
  5319  0027CE                     u3981:
  5320  0027CE  EFEA  F013         	goto	l4010
  5321  0027D2                     u3980:
  5322  0027D2  8027               	bsf	___fldiv@aexp^0,0,c
  5323  0027D4                     l4010:
  5324  0027D4  5027               	movf	___fldiv@aexp^0,w,c
  5325  0027D6  B4D8               	btfsc	status,2,c
  5326  0027D8  EFF0  F013         	goto	u3991
  5327  0027DC  EFF2  F013         	goto	u3990
  5328  0027E0                     u3991:
  5329  0027E0  EF07  F014         	goto	l4020
  5330  0027E4                     u3990:
  5331  0027E4  2827               	incf	___fldiv@aexp^0,w,c
  5332  0027E6  A4D8               	btfss	status,2,c
  5333  0027E8  EFF8  F013         	goto	u4001
  5334  0027EC  EFFA  F013         	goto	u4000
  5335  0027F0                     u4001:
  5336  0027F0  EF02  F014         	goto	l4016
  5337  0027F4                     u4000:
  5338  0027F4  0E00               	movlw	0
  5339  0027F6  6E13               	movwf	___fldiv@a^0,c
  5340  0027F8  0E00               	movlw	0
  5341  0027FA  6E14               	movwf	(___fldiv@a+1)^0,c
  5342  0027FC  0E00               	movlw	0
  5343  0027FE  6E15               	movwf	(___fldiv@a+2)^0,c
  5344  002800  0E00               	movlw	0
  5345  002802  6E16               	movwf	(___fldiv@a+3)^0,c
  5346  002804                     l4016:
  5347  002804  8E15               	bsf	(___fldiv@a+2)^0,7,c
  5348  002806  0E00               	movlw	0
  5349  002808  6E16               	movwf	(___fldiv@a+3)^0,c
  5350  00280A  EF0F  F014         	goto	l4022
  5351  00280E                     l4020:
  5352  00280E  0E00               	movlw	0
  5353  002810  6E13               	movwf	___fldiv@a^0,c
  5354  002812  0E00               	movlw	0
  5355  002814  6E14               	movwf	(___fldiv@a+1)^0,c
  5356  002816  0E00               	movlw	0
  5357  002818  6E15               	movwf	(___fldiv@a+2)^0,c
  5358  00281A  0E00               	movlw	0
  5359  00281C  6E16               	movwf	(___fldiv@a+3)^0,c
  5360  00281E                     l4022:
  5361  00281E  5013               	movf	___fldiv@a^0,w,c
  5362  002820  1014               	iorwf	(___fldiv@a+1)^0,w,c
  5363  002822  1015               	iorwf	(___fldiv@a+2)^0,w,c
  5364  002824  1016               	iorwf	(___fldiv@a+3)^0,w,c
  5365  002826  A4D8               	btfss	status,2,c
  5366  002828  EF18  F014         	goto	u4011
  5367  00282C  EF1A  F014         	goto	u4010
  5368  002830                     u4011:
  5369  002830  EF32  F014         	goto	l4034
  5370  002834                     u4010:
  5371  002834  0E00               	movlw	0
  5372  002836  6E0F               	movwf	___fldiv@b^0,c
  5373  002838  0E00               	movlw	0
  5374  00283A  6E10               	movwf	(___fldiv@b+1)^0,c
  5375  00283C  0E00               	movlw	0
  5376  00283E  6E11               	movwf	(___fldiv@b+2)^0,c
  5377  002840  0E00               	movlw	0
  5378  002842  6E12               	movwf	(___fldiv@b+3)^0,c
  5379  002844  0E80               	movlw	128
  5380  002846  1211               	iorwf	(___fldiv@b+2)^0,f,c
  5381  002848  0E7F               	movlw	127
  5382  00284A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5383  00284C                     l4028:
  5384  00284C  501F               	movf	___fldiv@sign^0,w,c
  5385  00284E  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5386  002850  C00F  F00F         	movff	___fldiv@b,?___fldiv
  5387  002854  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  5388  002858  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  5389  00285C  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  5390  002860  EF75  F015         	goto	l1174
  5391  002864                     l4034:
  5392  002864  5026               	movf	___fldiv@bexp^0,w,c
  5393  002866  A4D8               	btfss	status,2,c
  5394  002868  EF38  F014         	goto	u4021
  5395  00286C  EF3A  F014         	goto	u4020
  5396  002870                     u4021:
  5397  002870  EF44  F014         	goto	l4042
  5398  002874                     u4020:
  5399  002874  0E00               	movlw	0
  5400  002876  6E0F               	movwf	?___fldiv^0,c
  5401  002878  0E00               	movlw	0
  5402  00287A  6E10               	movwf	(?___fldiv+1)^0,c
  5403  00287C  0E00               	movlw	0
  5404  00287E  6E11               	movwf	(?___fldiv+2)^0,c
  5405  002880  0E00               	movlw	0
  5406  002882  6E12               	movwf	(?___fldiv+3)^0,c
  5407  002884  EF75  F015         	goto	l1174
  5408  002888                     l4042:
  5409  002888  5027               	movf	___fldiv@aexp^0,w,c
  5410  00288A  C026  F017         	movff	___fldiv@bexp,??___fldiv
  5411  00288E  6A18               	clrf	(??___fldiv+1)^0,c
  5412  002890  5E17               	subwf	??___fldiv^0,f,c
  5413  002892  0E00               	movlw	0
  5414  002894  5A18               	subwfb	(??___fldiv+1)^0,f,c
  5415  002896  0E7F               	movlw	127
  5416  002898  2417               	addwf	??___fldiv^0,w,c
  5417  00289A  6E20               	movwf	___fldiv@new_exp^0,c
  5418  00289C  0E00               	movlw	0
  5419  00289E  2018               	addwfc	(??___fldiv+1)^0,w,c
  5420  0028A0  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5421  0028A2  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  5422  0028A6  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  5423  0028AA  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  5424  0028AE  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  5425  0028B2  0E00               	movlw	0
  5426  0028B4  6E0F               	movwf	___fldiv@b^0,c
  5427  0028B6  0E00               	movlw	0
  5428  0028B8  6E10               	movwf	(___fldiv@b+1)^0,c
  5429  0028BA  0E00               	movlw	0
  5430  0028BC  6E11               	movwf	(___fldiv@b+2)^0,c
  5431  0028BE  0E00               	movlw	0
  5432  0028C0  6E12               	movwf	(___fldiv@b+3)^0,c
  5433  0028C2  0E00               	movlw	0
  5434  0028C4  6E22               	movwf	___fldiv@grs^0,c
  5435  0028C6  0E00               	movlw	0
  5436  0028C8  6E23               	movwf	(___fldiv@grs+1)^0,c
  5437  0028CA  0E00               	movlw	0
  5438  0028CC  6E24               	movwf	(___fldiv@grs+2)^0,c
  5439  0028CE  0E00               	movlw	0
  5440  0028D0  6E25               	movwf	(___fldiv@grs+3)^0,c
  5441  0028D2  0E00               	movlw	0
  5442  0028D4  6E27               	movwf	___fldiv@aexp^0,c
  5443  0028D6  EFA5  F014         	goto	l1176
  5444  0028DA                     l4052:
  5445  0028DA  5027               	movf	___fldiv@aexp^0,w,c
  5446  0028DC  B4D8               	btfsc	status,2,c
  5447  0028DE  EF73  F014         	goto	u4031
  5448  0028E2  EF75  F014         	goto	u4030
  5449  0028E6                     u4031:
  5450  0028E6  EF8C  F014         	goto	l4060
  5451  0028EA                     u4030:
  5452  0028EA  90D8               	bcf	status,0,c
  5453  0028EC  361B               	rlcf	___fldiv@rem^0,f,c
  5454  0028EE  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  5455  0028F0  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  5456  0028F2  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  5457  0028F4  90D8               	bcf	status,0,c
  5458  0028F6  360F               	rlcf	___fldiv@b^0,f,c
  5459  0028F8  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5460  0028FA  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5461  0028FC  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5462  0028FE  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5463  002900  EF84  F014         	goto	u4041
  5464  002904  EF86  F014         	goto	u4040
  5465  002908                     u4041:
  5466  002908  EF87  F014         	goto	l1179
  5467  00290C                     u4040:
  5468  00290C  800F               	bsf	___fldiv@b^0,0,c
  5469  00290E                     l1179:
  5470  00290E  90D8               	bcf	status,0,c
  5471  002910  3622               	rlcf	___fldiv@grs^0,f,c
  5472  002912  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5473  002914  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5474  002916  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5475  002918                     l4060:
  5476  002918  5013               	movf	___fldiv@a^0,w,c
  5477  00291A  5C1B               	subwf	___fldiv@rem^0,w,c
  5478  00291C  5014               	movf	(___fldiv@a+1)^0,w,c
  5479  00291E  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  5480  002920  5015               	movf	(___fldiv@a+2)^0,w,c
  5481  002922  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  5482  002924  5016               	movf	(___fldiv@a+3)^0,w,c
  5483  002926  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  5484  002928  A0D8               	btfss	status,0,c
  5485  00292A  EF99  F014         	goto	u4051
  5486  00292E  EF9B  F014         	goto	u4050
  5487  002932                     u4051:
  5488  002932  EFA4  F014         	goto	l4066
  5489  002936                     u4050:
  5490  002936  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  5491  002938  5013               	movf	___fldiv@a^0,w,c
  5492  00293A  5E1B               	subwf	___fldiv@rem^0,f,c
  5493  00293C  5014               	movf	(___fldiv@a+1)^0,w,c
  5494  00293E  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  5495  002940  5015               	movf	(___fldiv@a+2)^0,w,c
  5496  002942  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  5497  002944  5016               	movf	(___fldiv@a+3)^0,w,c
  5498  002946  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  5499  002948                     l4066:
  5500  002948  2A27               	incf	___fldiv@aexp^0,f,c
  5501  00294A                     l1176:
  5502  00294A  0E19               	movlw	25
  5503  00294C  6427               	cpfsgt	___fldiv@aexp^0,c
  5504  00294E  EFAB  F014         	goto	u4061
  5505  002952  EFAD  F014         	goto	u4060
  5506  002956                     u4061:
  5507  002956  EF6D  F014         	goto	l4052
  5508  00295A                     u4060:
  5509  00295A  501B               	movf	___fldiv@rem^0,w,c
  5510  00295C  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  5511  00295E  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  5512  002960  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  5513  002962  B4D8               	btfsc	status,2,c
  5514  002964  EFB6  F014         	goto	u4071
  5515  002968  EFB8  F014         	goto	u4070
  5516  00296C                     u4071:
  5517  00296C  EFD0  F014         	goto	l4078
  5518  002970                     u4070:
  5519  002970  8022               	bsf	___fldiv@grs^0,0,c
  5520  002972  EFD0  F014         	goto	l4078
  5521  002976                     l4072:
  5522  002976  90D8               	bcf	status,0,c
  5523  002978  360F               	rlcf	___fldiv@b^0,f,c
  5524  00297A  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5525  00297C  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5526  00297E  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5527  002980  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5528  002982  EFC5  F014         	goto	u4081
  5529  002986  EFC7  F014         	goto	u4080
  5530  00298A                     u4081:
  5531  00298A  EFC8  F014         	goto	l1185
  5532  00298E                     u4080:
  5533  00298E  800F               	bsf	___fldiv@b^0,0,c
  5534  002990                     l1185:
  5535  002990  90D8               	bcf	status,0,c
  5536  002992  3622               	rlcf	___fldiv@grs^0,f,c
  5537  002994  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5538  002996  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5539  002998  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5540  00299A  0620               	decf	___fldiv@new_exp^0,f,c
  5541  00299C  A0D8               	btfss	status,0,c
  5542  00299E  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  5543  0029A0                     l4078:
  5544  0029A0  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5545  0029A2  EFD5  F014         	goto	u4091
  5546  0029A6  EFD7  F014         	goto	u4090
  5547  0029AA                     u4091:
  5548  0029AA  EFBB  F014         	goto	l4072
  5549  0029AE                     u4090:
  5550  0029AE  0E00               	movlw	0
  5551  0029B0  6E27               	movwf	___fldiv@aexp^0,c
  5552  0029B2  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5553  0029B4  EFDE  F014         	goto	u4101
  5554  0029B8  EFE0  F014         	goto	u4100
  5555  0029BC                     u4101:
  5556  0029BC  EF04  F015         	goto	l1187
  5557  0029C0                     u4100:
  5558  0029C0  0EFF               	movlw	255
  5559  0029C2  1422               	andwf	___fldiv@grs^0,w,c
  5560  0029C4  6E17               	movwf	??___fldiv^0,c
  5561  0029C6  0EFF               	movlw	255
  5562  0029C8  1423               	andwf	(___fldiv@grs+1)^0,w,c
  5563  0029CA  6E18               	movwf	(??___fldiv+1)^0,c
  5564  0029CC  0EFF               	movlw	255
  5565  0029CE  1424               	andwf	(___fldiv@grs+2)^0,w,c
  5566  0029D0  6E19               	movwf	(??___fldiv+2)^0,c
  5567  0029D2  0E7F               	movlw	127
  5568  0029D4  1425               	andwf	(___fldiv@grs+3)^0,w,c
  5569  0029D6  6E1A               	movwf	(??___fldiv+3)^0,c
  5570  0029D8  5017               	movf	??___fldiv^0,w,c
  5571  0029DA  1018               	iorwf	(??___fldiv+1)^0,w,c
  5572  0029DC  1019               	iorwf	(??___fldiv+2)^0,w,c
  5573  0029DE  101A               	iorwf	(??___fldiv+3)^0,w,c
  5574  0029E0  B4D8               	btfsc	status,2,c
  5575  0029E2  EFF5  F014         	goto	u4111
  5576  0029E6  EFF7  F014         	goto	u4110
  5577  0029EA                     u4111:
  5578  0029EA  EFFB  F014         	goto	l1188
  5579  0029EE                     u4110:
  5580  0029EE                     l4086:
  5581  0029EE  0E01               	movlw	1
  5582  0029F0  6E27               	movwf	___fldiv@aexp^0,c
  5583  0029F2  EF04  F015         	goto	l1187
  5584  0029F6                     l1188:
  5585  0029F6  A00F               	btfss	___fldiv@b^0,0,c
  5586  0029F8  EF00  F015         	goto	u4121
  5587  0029FC  EF02  F015         	goto	u4120
  5588  002A00                     u4121:
  5589  002A00  EF04  F015         	goto	l1187
  5590  002A04                     u4120:
  5591  002A04  EFF7  F014         	goto	l4086
  5592  002A08                     l1187:
  5593  002A08  5027               	movf	___fldiv@aexp^0,w,c
  5594  002A0A  B4D8               	btfsc	status,2,c
  5595  002A0C  EF0A  F015         	goto	u4131
  5596  002A10  EF0C  F015         	goto	u4130
  5597  002A14                     u4131:
  5598  002A14  EF30  F015         	goto	l4098
  5599  002A18                     u4130:
  5600  002A18  0E01               	movlw	1
  5601  002A1A  260F               	addwf	___fldiv@b^0,f,c
  5602  002A1C  0E00               	movlw	0
  5603  002A1E  2210               	addwfc	(___fldiv@b+1)^0,f,c
  5604  002A20  2211               	addwfc	(___fldiv@b+2)^0,f,c
  5605  002A22  2212               	addwfc	(___fldiv@b+3)^0,f,c
  5606  002A24  A012               	btfss	(___fldiv@b+3)^0,0,c
  5607  002A26  EF17  F015         	goto	u4141
  5608  002A2A  EF19  F015         	goto	u4140
  5609  002A2E                     u4141:
  5610  002A2E  EF30  F015         	goto	l4098
  5611  002A32                     u4140:
  5612  002A32  C00F  F017         	movff	___fldiv@b,??___fldiv
  5613  002A36  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  5614  002A3A  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  5615  002A3E  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  5616  002A42  341A               	rlcf	(??___fldiv+3)^0,w,c
  5617  002A44  321A               	rrcf	(??___fldiv+3)^0,f,c
  5618  002A46  3219               	rrcf	(??___fldiv+2)^0,f,c
  5619  002A48  3218               	rrcf	(??___fldiv+1)^0,f,c
  5620  002A4A  3217               	rrcf	??___fldiv^0,f,c
  5621  002A4C  C017  F00F         	movff	??___fldiv,___fldiv@b
  5622  002A50  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  5623  002A54  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  5624  002A58  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  5625  002A5C  4A20               	infsnz	___fldiv@new_exp^0,f,c
  5626  002A5E  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  5627  002A60                     l4098:
  5628  002A60  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5629  002A62  EF3B  F015         	goto	u4151
  5630  002A66  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5631  002A68  E108               	bnz	u4150
  5632  002A6A  2820               	incf	___fldiv@new_exp^0,w,c
  5633  002A6C  A0D8               	btfss	status,0,c
  5634  002A6E  EF3B  F015         	goto	u4151
  5635  002A72  EF3D  F015         	goto	u4150
  5636  002A76                     u4151:
  5637  002A76  EF48  F015         	goto	l4102
  5638  002A7A                     u4150:
  5639  002A7A  0E00               	movlw	0
  5640  002A7C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5641  002A7E  6820               	setf	___fldiv@new_exp^0,c
  5642  002A80  0E00               	movlw	0
  5643  002A82  6E0F               	movwf	___fldiv@b^0,c
  5644  002A84  0E00               	movlw	0
  5645  002A86  6E10               	movwf	(___fldiv@b+1)^0,c
  5646  002A88  0E00               	movlw	0
  5647  002A8A  6E11               	movwf	(___fldiv@b+2)^0,c
  5648  002A8C  0E00               	movlw	0
  5649  002A8E  6E12               	movwf	(___fldiv@b+3)^0,c
  5650  002A90                     l4102:
  5651  002A90  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5652  002A92  EF55  F015         	goto	u4160
  5653  002A96  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5654  002A98  E106               	bnz	u4161
  5655  002A9A  0420               	decf	___fldiv@new_exp^0,w,c
  5656  002A9C  B0D8               	btfsc	status,0,c
  5657  002A9E  EF53  F015         	goto	u4161
  5658  002AA2  EF55  F015         	goto	u4160
  5659  002AA6                     u4161:
  5660  002AA6  EF63  F015         	goto	l4106
  5661  002AAA                     u4160:
  5662  002AAA  0E00               	movlw	0
  5663  002AAC  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5664  002AAE  0E00               	movlw	0
  5665  002AB0  6E20               	movwf	___fldiv@new_exp^0,c
  5666  002AB2  0E00               	movlw	0
  5667  002AB4  6E0F               	movwf	___fldiv@b^0,c
  5668  002AB6  0E00               	movlw	0
  5669  002AB8  6E10               	movwf	(___fldiv@b+1)^0,c
  5670  002ABA  0E00               	movlw	0
  5671  002ABC  6E11               	movwf	(___fldiv@b+2)^0,c
  5672  002ABE  0E00               	movlw	0
  5673  002AC0  6E12               	movwf	(___fldiv@b+3)^0,c
  5674  002AC2  0E00               	movlw	0
  5675  002AC4  6E1F               	movwf	___fldiv@sign^0,c
  5676  002AC6                     l4106:
  5677  002AC6  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  5678  002ACA  A026               	btfss	___fldiv@bexp^0,0,c
  5679  002ACC  EF6A  F015         	goto	u4171
  5680  002AD0  EF6C  F015         	goto	u4170
  5681  002AD4                     u4171:
  5682  002AD4  EF6F  F015         	goto	l4112
  5683  002AD8                     u4170:
  5684  002AD8  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5685  002ADA  EF70  F015         	goto	l4114
  5686  002ADE                     l4112:
  5687  002ADE  9E11               	bcf	(___fldiv@b+2)^0,7,c
  5688  002AE0                     l4114:
  5689  002AE0  90D8               	bcf	status,0,c
  5690  002AE2  3026               	rrcf	___fldiv@bexp^0,w,c
  5691  002AE4  6E12               	movwf	(___fldiv@b+3)^0,c
  5692  002AE6  EF26  F014         	goto	l4028
  5693  002AEA                     l1174:
  5694  002AEA  0012               	return		;funcret
  5695  002AEC                     __end_of___fldiv:
  5696                           	callstack 0
  5697                           
  5698 ;; *************** function _color_data_collection *****************
  5699 ;; Defined at:
  5700 ;;		line 137 in file "color.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;  m               2   89[COMRAM] PTR struct color_rgb
  5703 ;;		 -> main@rgb(8), 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  x               2  132[BANK0 ] int 
  5706 ;;  k               2  130[BANK0 ] int 
  5707 ;;  j               2  128[BANK0 ] int 
  5708 ;;  i               2  126[BANK0 ] int 
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  1    wreg      void 
  5711 ;; Registers used:
  5712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5719 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5720 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5721 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5722 ;;Total ram usage:       12 bytes
  5723 ;; Hardware stack levels used: 1
  5724 ;; Hardware stack levels required when called: 9
  5725 ;; This function calls:
  5726 ;;		_LED_B
  5727 ;;		_LED_C
  5728 ;;		_LED_G
  5729 ;;		_LED_R
  5730 ;;		_color_display
  5731 ;;		_color_predict
  5732 ;;		_read_color
  5733 ;; This function is called by:
  5734 ;;		_main
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text17
  5739  003138                     __ptext17:
  5740                           	callstack 0
  5741  003138                     _color_data_collection:
  5742                           	callstack 21
  5743  003138                     
  5744                           ;color.c: 139:     int i = 0; int j = 0; int k = 0; int x = 0;
  5745  003138  0E00               	movlw	0
  5746  00313A  0100               	movlb	0	; () banked
  5747  00313C  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  5748  00313E  0E00               	movlw	0
  5749  003140  6FDE               	movwf	color_data_collection@i& (0+255),b
  5750  003142  0E00               	movlw	0
  5751  003144  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  5752  003146  0E00               	movlw	0
  5753  003148  6FE2               	movwf	color_data_collection@k& (0+255),b
  5754  00314A  0E00               	movlw	0
  5755  00314C  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  5756  00314E  0E00               	movlw	0
  5757  003150  6FE4               	movwf	color_data_collection@x& (0+255),b
  5758                           
  5759                           ;color.c: 140:     for (i = 0; i < 1; ++i){
  5760  003152  0E00               	movlw	0
  5761  003154  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  5762  003156  0E00               	movlw	0
  5763  003158  6FDE               	movwf	color_data_collection@i& (0+255),b
  5764  00315A                     l4184:
  5765                           
  5766                           ; BSR set to: 0
  5767                           ;color.c: 141:         LED_C();
  5768  00315A  EC3D  F021         	call	_LED_C	;wreg free
  5769  00315E                     
  5770                           ;color.c: 142:         read_color(m);
  5771  00315E  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5772  003162  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5773  003166  ECB3  F01E         	call	_read_color	;wreg free
  5774  00316A                     
  5775                           ;color.c: 143:         color_display(m);
  5776  00316A  C05A  F058         	movff	color_data_collection@m,color_display@m
  5777  00316E  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5778  003172  EC18  F01E         	call	_color_display	;wreg free
  5779  003176                     
  5780                           ;color.c: 144:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5781  003176  0E29               	movlw	41
  5782  003178  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5783  00317A  0E96               	movlw	150
  5784  00317C  6E5C               	movwf	??_color_data_collection^0,c
  5785  00317E  0E7F               	movlw	127
  5786  003180                     u4987:
  5787  003180  2EE8               	decfsz	wreg,f,c
  5788  003182  D7FE               	bra	u4987
  5789  003184  2E5C               	decfsz	??_color_data_collection^0,f,c
  5790  003186  D7FC               	bra	u4987
  5791  003188  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5792  00318A  D7FA               	bra	u4987
  5793  00318C  F000               	nop	
  5794  00318E                     
  5795                           ;color.c: 145:     }
  5796  00318E  0100               	movlb	0	; () banked
  5797  003190  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  5798  003192  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  5799  003194                     
  5800                           ; BSR set to: 0
  5801  003194  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  5802  003196  EFD5  F018         	goto	u4281
  5803  00319A  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  5804  00319C  E108               	bnz	u4280
  5805  00319E  05DE               	decf	color_data_collection@i& (0+255),w,b
  5806  0031A0  A0D8               	btfss	status,0,c
  5807  0031A2  EFD5  F018         	goto	u4281
  5808  0031A6  EFD7  F018         	goto	u4280
  5809  0031AA                     u4281:
  5810  0031AA  EFAD  F018         	goto	l4184
  5811  0031AE                     u4280:
  5812  0031AE                     
  5813                           ; BSR set to: 0
  5814                           ;color.c: 147:     for (j = 0; j < 1; ++j){
  5815  0031AE  0E00               	movlw	0
  5816  0031B0  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  5817  0031B2  0E00               	movlw	0
  5818  0031B4  6FE0               	movwf	color_data_collection@j& (0+255),b
  5819  0031B6                     l4202:
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;color.c: 148:         LED_R();
  5823  0031B6  EC5D  F021         	call	_LED_R	;wreg free
  5824  0031BA                     
  5825                           ;color.c: 149:         read_color(m);
  5826  0031BA  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5827  0031BE  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5828  0031C2  ECB3  F01E         	call	_read_color	;wreg free
  5829  0031C6                     
  5830                           ;color.c: 150:         color_display(m);
  5831  0031C6  C05A  F058         	movff	color_data_collection@m,color_display@m
  5832  0031CA  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5833  0031CE  EC18  F01E         	call	_color_display	;wreg free
  5834  0031D2                     
  5835                           ;color.c: 151:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5836  0031D2  0E29               	movlw	41
  5837  0031D4  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5838  0031D6  0E96               	movlw	150
  5839  0031D8  6E5C               	movwf	??_color_data_collection^0,c
  5840  0031DA  0E7F               	movlw	127
  5841  0031DC                     u4997:
  5842  0031DC  2EE8               	decfsz	wreg,f,c
  5843  0031DE  D7FE               	bra	u4997
  5844  0031E0  2E5C               	decfsz	??_color_data_collection^0,f,c
  5845  0031E2  D7FC               	bra	u4997
  5846  0031E4  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5847  0031E6  D7FA               	bra	u4997
  5848  0031E8  F000               	nop	
  5849  0031EA                     
  5850                           ;color.c: 152:     }
  5851  0031EA  0100               	movlb	0	; () banked
  5852  0031EC  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  5853  0031EE  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  5854  0031F0                     
  5855                           ; BSR set to: 0
  5856  0031F0  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  5857  0031F2  EF03  F019         	goto	u4291
  5858  0031F6  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  5859  0031F8  E108               	bnz	u4290
  5860  0031FA  05E0               	decf	color_data_collection@j& (0+255),w,b
  5861  0031FC  A0D8               	btfss	status,0,c
  5862  0031FE  EF03  F019         	goto	u4291
  5863  003202  EF05  F019         	goto	u4290
  5864  003206                     u4291:
  5865  003206  EFDB  F018         	goto	l4202
  5866  00320A                     u4290:
  5867  00320A                     
  5868                           ; BSR set to: 0
  5869                           ;color.c: 154:     for (k = 0; k < 1; ++k){
  5870  00320A  0E00               	movlw	0
  5871  00320C  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  5872  00320E  0E00               	movlw	0
  5873  003210  6FE2               	movwf	color_data_collection@k& (0+255),b
  5874  003212                     l4220:
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;color.c: 155:         LED_G();
  5878  003212  EC6D  F021         	call	_LED_G	;wreg free
  5879  003216                     
  5880                           ;color.c: 156:         read_color(m);
  5881  003216  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5882  00321A  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5883  00321E  ECB3  F01E         	call	_read_color	;wreg free
  5884  003222                     
  5885                           ;color.c: 157:         color_display(m);
  5886  003222  C05A  F058         	movff	color_data_collection@m,color_display@m
  5887  003226  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5888  00322A  EC18  F01E         	call	_color_display	;wreg free
  5889  00322E                     
  5890                           ;color.c: 158:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5891  00322E  0E29               	movlw	41
  5892  003230  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5893  003232  0E96               	movlw	150
  5894  003234  6E5C               	movwf	??_color_data_collection^0,c
  5895  003236  0E7F               	movlw	127
  5896  003238                     u5007:
  5897  003238  2EE8               	decfsz	wreg,f,c
  5898  00323A  D7FE               	bra	u5007
  5899  00323C  2E5C               	decfsz	??_color_data_collection^0,f,c
  5900  00323E  D7FC               	bra	u5007
  5901  003240  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5902  003242  D7FA               	bra	u5007
  5903  003244  F000               	nop	
  5904  003246                     
  5905                           ;color.c: 159:     }
  5906  003246  0100               	movlb	0	; () banked
  5907  003248  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  5908  00324A  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  5909  00324C                     
  5910                           ; BSR set to: 0
  5911  00324C  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  5912  00324E  EF31  F019         	goto	u4301
  5913  003252  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  5914  003254  E108               	bnz	u4300
  5915  003256  05E2               	decf	color_data_collection@k& (0+255),w,b
  5916  003258  A0D8               	btfss	status,0,c
  5917  00325A  EF31  F019         	goto	u4301
  5918  00325E  EF33  F019         	goto	u4300
  5919  003262                     u4301:
  5920  003262  EF09  F019         	goto	l4220
  5921  003266                     u4300:
  5922  003266                     
  5923                           ; BSR set to: 0
  5924                           ;color.c: 161:     for (x = 0; x < 1; ++x){
  5925  003266  0E00               	movlw	0
  5926  003268  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  5927  00326A  0E00               	movlw	0
  5928  00326C  6FE4               	movwf	color_data_collection@x& (0+255),b
  5929  00326E                     l4238:
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;color.c: 162:         LED_B();
  5933  00326E  EC7D  F021         	call	_LED_B	;wreg free
  5934  003272                     
  5935                           ;color.c: 163:         read_color(m);
  5936  003272  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5937  003276  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5938  00327A  ECB3  F01E         	call	_read_color	;wreg free
  5939  00327E                     
  5940                           ;color.c: 164:         color_display(m);
  5941  00327E  C05A  F058         	movff	color_data_collection@m,color_display@m
  5942  003282  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5943  003286  EC18  F01E         	call	_color_display	;wreg free
  5944  00328A                     
  5945                           ;color.c: 165:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5946  00328A  0E29               	movlw	41
  5947  00328C  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5948  00328E  0E96               	movlw	150
  5949  003290  6E5C               	movwf	??_color_data_collection^0,c
  5950  003292  0E7F               	movlw	127
  5951  003294                     u5017:
  5952  003294  2EE8               	decfsz	wreg,f,c
  5953  003296  D7FE               	bra	u5017
  5954  003298  2E5C               	decfsz	??_color_data_collection^0,f,c
  5955  00329A  D7FC               	bra	u5017
  5956  00329C  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5957  00329E  D7FA               	bra	u5017
  5958  0032A0  F000               	nop	
  5959  0032A2                     
  5960                           ;color.c: 166:     }
  5961  0032A2  0100               	movlb	0	; () banked
  5962  0032A4  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  5963  0032A6  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  5964  0032A8                     
  5965                           ; BSR set to: 0
  5966  0032A8  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  5967  0032AA  EF5F  F019         	goto	u4311
  5968  0032AE  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  5969  0032B0  E108               	bnz	u4310
  5970  0032B2  05E4               	decf	color_data_collection@x& (0+255),w,b
  5971  0032B4  A0D8               	btfss	status,0,c
  5972  0032B6  EF5F  F019         	goto	u4311
  5973  0032BA  EF61  F019         	goto	u4310
  5974  0032BE                     u4311:
  5975  0032BE  EF37  F019         	goto	l4238
  5976  0032C2                     u4310:
  5977  0032C2                     
  5978                           ; BSR set to: 0
  5979                           ;color.c: 167:     color_predict(00000);
  5980  0032C2  0E00               	movlw	0
  5981  0032C4  EC78  F01C         	call	_color_predict
  5982  0032C8                     
  5983                           ;color.c: 168:     LED_C();
  5984  0032C8  EC3D  F021         	call	_LED_C	;wreg free
  5985  0032CC  0012               	return		;funcret
  5986  0032CE                     __end_of_color_data_collection:
  5987                           	callstack 0
  5988                           
  5989 ;; *************** function _read_color *****************
  5990 ;; Defined at:
  5991 ;;		line 92 in file "color.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  m               2   11[COMRAM] PTR struct color_rgb
  5994 ;;		 -> main@rgb(8), 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;		None
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  1    wreg      void 
  5999 ;; Registers used:
  6000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6009 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6010 ;;Total ram usage:        2 bytes
  6011 ;; Hardware stack levels used: 1
  6012 ;; Hardware stack levels required when called: 3
  6013 ;; This function calls:
  6014 ;;		_color_read_Blue
  6015 ;;		_color_read_Clear
  6016 ;;		_color_read_Green
  6017 ;;		_color_read_Red
  6018 ;; This function is called by:
  6019 ;;		_color_data_collection
  6020 ;;		_detect_color
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           	psect	text18
  6025  003D66                     __ptext18:
  6026                           	callstack 0
  6027  003D66                     _read_color:
  6028                           	callstack 26
  6029  003D66                     
  6030                           ;color.c: 92: void read_color (struct color_rgb *m);color.c: 93: {;color.c: 94:     m->R
      +                           = color_read_Red();
  6031  003D66  EC33  F01F         	call	_color_read_Red	;wreg free
  6032  003D6A  C00C  FFD9         	movff	read_color@m,fsr2l
  6033  003D6E  C00D  FFDA         	movff	read_color@m+1,fsr2h
  6034  003D72  C005  FFDE         	movff	?_color_read_Red,postinc2
  6035  003D76  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6036                           
  6037                           ;color.c: 95:     m->B = color_read_Blue();
  6038  003D7A  EC83  F01F         	call	_color_read_Blue	;wreg free
  6039  003D7E  EE20 F004          	lfsr	2,4
  6040  003D82  500C               	movf	read_color@m^0,w,c
  6041  003D84  26D9               	addwf	fsr2l,f,c
  6042  003D86  500D               	movf	(read_color@m+1)^0,w,c
  6043  003D88  22DA               	addwfc	fsr2h,f,c
  6044  003D8A  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6045  003D8E  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6046                           
  6047                           ;color.c: 96:     m->G = color_read_Green();
  6048  003D92  EC5B  F01F         	call	_color_read_Green	;wreg free
  6049  003D96  EE20 F002          	lfsr	2,2
  6050  003D9A  500C               	movf	read_color@m^0,w,c
  6051  003D9C  26D9               	addwf	fsr2l,f,c
  6052  003D9E  500D               	movf	(read_color@m+1)^0,w,c
  6053  003DA0  22DA               	addwfc	fsr2h,f,c
  6054  003DA2  C005  FFDE         	movff	?_color_read_Green,postinc2
  6055  003DA6  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6056                           
  6057                           ;color.c: 97:     m->C = color_read_Clear();
  6058  003DAA  EC0B  F01F         	call	_color_read_Clear	;wreg free
  6059  003DAE  EE20 F006          	lfsr	2,6
  6060  003DB2  500C               	movf	read_color@m^0,w,c
  6061  003DB4  26D9               	addwf	fsr2l,f,c
  6062  003DB6  500D               	movf	(read_color@m+1)^0,w,c
  6063  003DB8  22DA               	addwfc	fsr2h,f,c
  6064  003DBA  C005  FFDE         	movff	?_color_read_Clear,postinc2
  6065  003DBE  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  6066  003DC2  0012               	return		;funcret
  6067  003DC4                     __end_of_read_color:
  6068                           	callstack 0
  6069                           
  6070 ;; *************** function _color_read_Clear *****************
  6071 ;; Defined at:
  6072 ;;		line 78 in file "color.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;		None
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;  tmp             2    9[COMRAM] unsigned int 
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  2    4[COMRAM] unsigned int 
  6079 ;; Registers used:
  6080 ;;		wreg, status,2, status,0, cstack
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6087 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6088 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6089 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6090 ;;Total ram usage:        7 bytes
  6091 ;; Hardware stack levels used: 1
  6092 ;; Hardware stack levels required when called: 2
  6093 ;; This function calls:
  6094 ;;		_I2C_2_Master_Read
  6095 ;;		_I2C_2_Master_RepStart
  6096 ;;		_I2C_2_Master_Start
  6097 ;;		_I2C_2_Master_Stop
  6098 ;;		_I2C_2_Master_Write
  6099 ;; This function is called by:
  6100 ;;		_read_color
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text19
  6105  003E16                     __ptext19:
  6106                           	callstack 0
  6107  003E16                     _color_read_Clear:
  6108                           	callstack 26
  6109  003E16                     
  6110                           ;color.c: 80:  unsigned int tmp;;color.c: 81:  I2C_2_Master_Start();
  6111  003E16  ECC1  F021         	call	_I2C_2_Master_Start	;wreg free
  6112                           
  6113                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  6114  003E1A  0E52               	movlw	82
  6115  003E1C  ECB6  F021         	call	_I2C_2_Master_Write
  6116                           
  6117                           ;color.c: 83:  I2C_2_Master_Write(0xA0 | 0x14);
  6118  003E20  0EB4               	movlw	180
  6119  003E22  ECB6  F021         	call	_I2C_2_Master_Write
  6120                           
  6121                           ;color.c: 84:  I2C_2_Master_RepStart();
  6122  003E26  ECC6  F021         	call	_I2C_2_Master_RepStart	;wreg free
  6123                           
  6124                           ;color.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  6125  003E2A  0E53               	movlw	83
  6126  003E2C  ECB6  F021         	call	_I2C_2_Master_Write
  6127                           
  6128                           ;color.c: 86:  tmp=I2C_2_Master_Read(1);
  6129  003E30  0E01               	movlw	1
  6130  003E32  EC11  F020         	call	_I2C_2_Master_Read
  6131  003E36  6E07               	movwf	??_color_read_Clear^0,c
  6132  003E38  5007               	movf	??_color_read_Clear^0,w,c
  6133  003E3A  6E0A               	movwf	color_read_Clear@tmp^0,c
  6134  003E3C  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  6135                           
  6136                           ;color.c: 87:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6137  003E3E  0E00               	movlw	0
  6138  003E40  EC11  F020         	call	_I2C_2_Master_Read
  6139  003E44  6E07               	movwf	??_color_read_Clear^0,c
  6140  003E46  5007               	movf	??_color_read_Clear^0,w,c
  6141  003E48  6E09               	movwf	(??_color_read_Clear+2)^0,c
  6142  003E4A  6A08               	clrf	(??_color_read_Clear+1)^0,c
  6143  003E4C  500A               	movf	color_read_Clear@tmp^0,w,c
  6144  003E4E  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  6145  003E50  6E0A               	movwf	color_read_Clear@tmp^0,c
  6146  003E52  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  6147  003E54  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  6148  003E56  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  6149                           
  6150                           ;color.c: 88:  I2C_2_Master_Stop();
  6151  003E58  ECBC  F021         	call	_I2C_2_Master_Stop	;wreg free
  6152  003E5C                     
  6153                           ;color.c: 89:  return tmp;
  6154  003E5C  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  6155  003E60  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  6156  003E64  0012               	return		;funcret
  6157  003E66                     __end_of_color_read_Clear:
  6158                           	callstack 0
  6159                           
  6160 ;; *************** function _color_predict *****************
  6161 ;; Defined at:
  6162 ;;		line 187 in file "color.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  color           1    wreg     unsigned char 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  color           1  125[BANK0 ] unsigned char 
  6167 ;;  buf           100   25[BANK0 ] unsigned char [100]
  6168 ;;  color_name      1    0        unsigned char 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      void 
  6171 ;; Registers used:
  6172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6179 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6181 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6182 ;;Total ram usage:      101 bytes
  6183 ;; Hardware stack levels used: 1
  6184 ;; Hardware stack levels required when called: 8
  6185 ;; This function calls:
  6186 ;;		_sendStringSerial4
  6187 ;;		_sprintf
  6188 ;; This function is called by:
  6189 ;;		_color_data_collection
  6190 ;;		_main
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           	psect	text20
  6195  0038F0                     __ptext20:
  6196                           	callstack 0
  6197  0038F0                     _color_predict:
  6198                           	callstack 22
  6199                           
  6200                           ;incstack = 0
  6201                           ;color_predict@color stored from wreg
  6202  0038F0  0100               	movlb	0	; () banked
  6203  0038F2  6FDD               	movwf	color_predict@color& (0+255),b
  6204  0038F4                     
  6205                           ;color.c: 187: void color_predict(unsigned char color);color.c: 188: {;color.c: 189:    
      +                           char buf[100];;color.c: 190:     char color_name;;color.c: 191:     if (color == 0){col
      +                          or_name = "Error";}
  6206  0038F4  0100               	movlb	0	; () banked
  6207  0038F6  51DD               	movf	color_predict@color& (0+255),w,b
  6208  0038F8  A4D8               	btfss	status,2,c
  6209  0038FA  EF81  F01C         	goto	u3771
  6210  0038FE  EF83  F01C         	goto	u3770
  6211  003902                     u3771:
  6212  003902  EF83  F01C         	goto	l3890
  6213  003906                     u3770:
  6214  003906                     l3890:
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;color.c: 192:     if (color == 1){color_name = "Red";}
  6218  003906  05DD               	decf	color_predict@color& (0+255),w,b
  6219  003908  A4D8               	btfss	status,2,c
  6220  00390A  EF89  F01C         	goto	u3781
  6221  00390E  EF8B  F01C         	goto	u3780
  6222  003912                     u3781:
  6223  003912  EF8B  F01C         	goto	l3894
  6224  003916                     u3780:
  6225  003916                     l3894:
  6226                           
  6227                           ; BSR set to: 0
  6228                           ;color.c: 193:     if (color == 2){color_name = "Green";}
  6229  003916  0E02               	movlw	2
  6230  003918  19DD               	xorwf	color_predict@color& (0+255),w,b
  6231  00391A  A4D8               	btfss	status,2,c
  6232  00391C  EF92  F01C         	goto	u3791
  6233  003920  EF94  F01C         	goto	u3790
  6234  003924                     u3791:
  6235  003924  EF94  F01C         	goto	l3898
  6236  003928                     u3790:
  6237  003928                     l3898:
  6238                           
  6239                           ; BSR set to: 0
  6240                           ;color.c: 194:     if (color == 3){color_name = "Blue";}
  6241  003928  0E03               	movlw	3
  6242  00392A  19DD               	xorwf	color_predict@color& (0+255),w,b
  6243  00392C  A4D8               	btfss	status,2,c
  6244  00392E  EF9B  F01C         	goto	u3801
  6245  003932  EF9D  F01C         	goto	u3800
  6246  003936                     u3801:
  6247  003936  EF9D  F01C         	goto	l3902
  6248  00393A                     u3800:
  6249  00393A                     l3902:
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;color.c: 195:     if (color == 4){color_name = "Yellow";}
  6253  00393A  0E04               	movlw	4
  6254  00393C  19DD               	xorwf	color_predict@color& (0+255),w,b
  6255  00393E  A4D8               	btfss	status,2,c
  6256  003940  EFA4  F01C         	goto	u3811
  6257  003944  EFA6  F01C         	goto	u3810
  6258  003948                     u3811:
  6259  003948  EFA6  F01C         	goto	l3906
  6260  00394C                     u3810:
  6261  00394C                     l3906:
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;color.c: 196:     if (color == 5){color_name = "Pink";}
  6265  00394C  0E05               	movlw	5
  6266  00394E  19DD               	xorwf	color_predict@color& (0+255),w,b
  6267  003950  A4D8               	btfss	status,2,c
  6268  003952  EFAD  F01C         	goto	u3821
  6269  003956  EFAF  F01C         	goto	u3820
  6270  00395A                     u3821:
  6271  00395A  EFAF  F01C         	goto	l3910
  6272  00395E                     u3820:
  6273  00395E                     l3910:
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;color.c: 197:     if (color == 6){color_name = "Orange";}
  6277  00395E  0E06               	movlw	6
  6278  003960  19DD               	xorwf	color_predict@color& (0+255),w,b
  6279  003962  A4D8               	btfss	status,2,c
  6280  003964  EFB6  F01C         	goto	u3831
  6281  003968  EFB8  F01C         	goto	u3830
  6282  00396C                     u3831:
  6283  00396C  EFB8  F01C         	goto	l3914
  6284  003970                     u3830:
  6285  003970                     l3914:
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;color.c: 198:     if (color == 7){color_name = "Light blue";}
  6289  003970  0E07               	movlw	7
  6290  003972  19DD               	xorwf	color_predict@color& (0+255),w,b
  6291  003974  A4D8               	btfss	status,2,c
  6292  003976  EFBF  F01C         	goto	u3841
  6293  00397A  EFC1  F01C         	goto	u3840
  6294  00397E                     u3841:
  6295  00397E  EFC1  F01C         	goto	l3918
  6296  003982                     u3840:
  6297  003982                     l3918:
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;color.c: 199:     if (color == 8){color_name = "White";}
  6301  003982  0E08               	movlw	8
  6302  003984  19DD               	xorwf	color_predict@color& (0+255),w,b
  6303  003986  A4D8               	btfss	status,2,c
  6304  003988  EFC8  F01C         	goto	u3851
  6305  00398C  EFCA  F01C         	goto	u3850
  6306  003990                     u3851:
  6307  003990  EFCA  F01C         	goto	l3922
  6308  003994                     u3850:
  6309  003994                     l3922:
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;color.c: 200:     if (color == 9){color_name = "Black";}
  6313  003994  0E09               	movlw	9
  6314  003996  19DD               	xorwf	color_predict@color& (0+255),w,b
  6315  003998  A4D8               	btfss	status,2,c
  6316  00399A  EFD1  F01C         	goto	u3861
  6317  00399E  EFD3  F01C         	goto	u3860
  6318  0039A2                     u3861:
  6319  0039A2  EFD3  F01C         	goto	l3926
  6320  0039A6                     u3860:
  6321  0039A6                     l3926:
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;color.c: 202:     sprintf(buf,"\t%d\r\n", color);
  6325  0039A6  0E79               	movlw	low color_predict@buf
  6326  0039A8  6F60               	movwf	sprintf@s& (0+255),b
  6327  0039AA  0E00               	movlw	high color_predict@buf
  6328  0039AC  6F61               	movwf	(sprintf@s+1)& (0+255),b
  6329  0039AE  0E0D               	movlw	low (STR_1+8)
  6330  0039B0  6F62               	movwf	sprintf@fmt& (0+255),b
  6331  0039B2  0E0E               	movlw	high (STR_1+8)
  6332  0039B4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  6333  0039B6  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  6334  0039BA  6B65               	clrf	(?_sprintf+5)& (0+255),b
  6335  0039BC  ECE2  F01E         	call	_sprintf	;wreg free
  6336  0039C0                     
  6337                           ;color.c: 203:     sendStringSerial4(buf);
  6338  0039C0  0E79               	movlw	low color_predict@buf
  6339  0039C2  6E02               	movwf	sendStringSerial4@string^0,c
  6340  0039C4  0E00               	movlw	high color_predict@buf
  6341  0039C6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  6342  0039C8  ECFC  F020         	call	_sendStringSerial4	;wreg free
  6343  0039CC  0012               	return		;funcret
  6344  0039CE                     __end_of_color_predict:
  6345                           	callstack 0
  6346                           
  6347 ;; *************** function _color_display *****************
  6348 ;; Defined at:
  6349 ;;		line 171 in file "color.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  m               2   87[COMRAM] PTR struct color_rgb
  6352 ;;		 -> main@rgb(8), 
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;  buf           100   25[BANK0 ] unsigned char [100]
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  1    wreg      void 
  6357 ;; Registers used:
  6358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6365 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6367 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6368 ;;Total ram usage:      102 bytes
  6369 ;; Hardware stack levels used: 1
  6370 ;; Hardware stack levels required when called: 8
  6371 ;; This function calls:
  6372 ;;		_sendStringSerial4
  6373 ;;		_sprintf
  6374 ;; This function is called by:
  6375 ;;		_color_data_collection
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text21
  6380  003C30                     __ptext21:
  6381                           	callstack 0
  6382  003C30                     _color_display:
  6383                           	callstack 21
  6384  003C30                     
  6385                           ;color.c: 171: void color_display(struct color_rgb *m);color.c: 172: {;color.c: 173:    
      +                           char buf[100];;color.c: 174:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  6386  003C30  0E79               	movlw	low color_display@buf
  6387  003C32  0100               	movlb	0	; () banked
  6388  003C34  6F60               	movwf	sprintf@s& (0+255),b
  6389  003C36  0E00               	movlw	high color_display@buf
  6390  003C38  6F61               	movwf	(sprintf@s+1)& (0+255),b
  6391  003C3A  0E05               	movlw	low STR_1
  6392  003C3C  6F62               	movwf	sprintf@fmt& (0+255),b
  6393  003C3E  0E0E               	movlw	high STR_1
  6394  003C40  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  6395  003C42  C058  FFD9         	movff	color_display@m,fsr2l
  6396  003C46  C059  FFDA         	movff	color_display@m+1,fsr2h
  6397  003C4A  CFDE F064          	movff	postinc2,?_sprintf+4
  6398  003C4E  CFDD F065          	movff	postdec2,?_sprintf+5
  6399  003C52  EE20 F002          	lfsr	2,2
  6400  003C56  5058               	movf	color_display@m^0,w,c
  6401  003C58  26D9               	addwf	fsr2l,f,c
  6402  003C5A  5059               	movf	(color_display@m+1)^0,w,c
  6403  003C5C  22DA               	addwfc	fsr2h,f,c
  6404  003C5E  CFDE F066          	movff	postinc2,?_sprintf+6
  6405  003C62  CFDD F067          	movff	postdec2,?_sprintf+7
  6406  003C66  EE20 F004          	lfsr	2,4
  6407  003C6A  5058               	movf	color_display@m^0,w,c
  6408  003C6C  26D9               	addwf	fsr2l,f,c
  6409  003C6E  5059               	movf	(color_display@m+1)^0,w,c
  6410  003C70  22DA               	addwfc	fsr2h,f,c
  6411  003C72  CFDE F068          	movff	postinc2,?_sprintf+8
  6412  003C76  CFDD F069          	movff	postdec2,?_sprintf+9
  6413  003C7A  EE20 F006          	lfsr	2,6
  6414  003C7E  5058               	movf	color_display@m^0,w,c
  6415  003C80  26D9               	addwf	fsr2l,f,c
  6416  003C82  5059               	movf	(color_display@m+1)^0,w,c
  6417  003C84  22DA               	addwfc	fsr2h,f,c
  6418  003C86  CFDE F06A          	movff	postinc2,?_sprintf+10
  6419  003C8A  CFDD F06B          	movff	postdec2,?_sprintf+11
  6420  003C8E  ECE2  F01E         	call	_sprintf	;wreg free
  6421  003C92                     
  6422                           ;color.c: 175:     sendStringSerial4(buf);
  6423  003C92  0E79               	movlw	low color_display@buf
  6424  003C94  6E02               	movwf	sendStringSerial4@string^0,c
  6425  003C96  0E00               	movlw	high color_display@buf
  6426  003C98  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  6427  003C9A  ECFC  F020         	call	_sendStringSerial4	;wreg free
  6428  003C9E  0012               	return		;funcret
  6429  003CA0                     __end_of_color_display:
  6430                           	callstack 0
  6431                           
  6432 ;; *************** function _sprintf *****************
  6433 ;; Defined at:
  6434 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;  s               2    0[BANK0 ] PTR unsigned char 
  6437 ;;		 -> voltage_display@buf(80), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  6438 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  6439 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;  f              11   14[BANK0 ] struct _IO_FILE
  6442 ;;  ap              2   12[BANK0 ] PTR void [1]
  6443 ;;		 -> ?_sprintf(2), 
  6444 ;;  ret             2    0        int 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  2    0[BANK0 ] int 
  6447 ;; Registers used:
  6448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6454 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6455 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6457 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6458 ;;Total ram usage:       25 bytes
  6459 ;; Hardware stack levels used: 1
  6460 ;; Hardware stack levels required when called: 7
  6461 ;; This function calls:
  6462 ;;		_vfprintf
  6463 ;; This function is called by:
  6464 ;;		_color_display
  6465 ;;		_color_predict
  6466 ;;		_check_color_reading
  6467 ;;		_voltage_display
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           	psect	text22
  6472  003DC4                     __ptext22:
  6473                           	callstack 0
  6474  003DC4                     _sprintf:
  6475                           	callstack 22
  6476  003DC4  0E64               	movlw	low (?_sprintf+4)
  6477  003DC6  0100               	movlb	0	; () banked
  6478  003DC8  6F6C               	movwf	sprintf@ap& (0+255),b
  6479  003DCA  0E00               	movlw	high (?_sprintf+4)
  6480  003DCC  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  6481  003DCE  C060  F06E         	movff	sprintf@s,sprintf@f
  6482  003DD2  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  6483  003DD6                     
  6484                           ; BSR set to: 0
  6485  003DD6  0E00               	movlw	0
  6486  003DD8  6F72               	movwf	(sprintf@f+4)& (0+255),b
  6487  003DDA  0E00               	movlw	0
  6488  003DDC  6F71               	movwf	(sprintf@f+3)& (0+255),b
  6489  003DDE                     
  6490                           ; BSR set to: 0
  6491  003DDE  0E00               	movlw	0
  6492  003DE0  6F78               	movwf	(sprintf@f+10)& (0+255),b
  6493  003DE2  0E00               	movlw	0
  6494  003DE4  6F77               	movwf	(sprintf@f+9)& (0+255),b
  6495  003DE6                     
  6496                           ; BSR set to: 0
  6497  003DE6  0E6E               	movlw	low sprintf@f
  6498  003DE8  6E50               	movwf	vfprintf@fp^0,c
  6499  003DEA  0E00               	movlw	high sprintf@f
  6500  003DEC  6E51               	movwf	(vfprintf@fp+1)^0,c
  6501  003DEE  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  6502  003DF2  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6503  003DF6  0E6C               	movlw	low sprintf@ap
  6504  003DF8  6E54               	movwf	vfprintf@ap^0,c
  6505  003DFA  0E00               	movlw	high sprintf@ap
  6506  003DFC  6E55               	movwf	(vfprintf@ap+1)^0,c
  6507  003DFE  EC82  F01E         	call	_vfprintf	;wreg free
  6508  003E02  0100               	movlb	0	; () banked
  6509  003E04  5171               	movf	(sprintf@f+3)& (0+255),w,b
  6510  003E06  2560               	addwf	sprintf@s& (0+255),w,b
  6511  003E08  6ED9               	movwf	fsr2l,c
  6512  003E0A  5172               	movf	(sprintf@f+4)& (0+255),w,b
  6513  003E0C  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  6514  003E0E  6EDA               	movwf	fsr2h,c
  6515  003E10  0E00               	movlw	0
  6516  003E12  6EDF               	movwf	indf2,c
  6517  003E14                     
  6518                           ; BSR set to: 0
  6519  003E14  0012               	return		;funcret
  6520  003E16                     __end_of_sprintf:
  6521                           	callstack 0
  6522                           
  6523 ;; *************** function _vfprintf *****************
  6524 ;; Defined at:
  6525 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  6528 ;;		 -> sprintf@f(11), 
  6529 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  6530 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  6531 ;;  ap              2   83[COMRAM] PTR PTR void 
  6532 ;;		 -> sprintf@ap(2), 
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  6535 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  2   79[COMRAM] int 
  6538 ;; Registers used:
  6539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6545 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6546 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6548 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6549 ;;Total ram usage:        8 bytes
  6550 ;; Hardware stack levels used: 1
  6551 ;; Hardware stack levels required when called: 6
  6552 ;; This function calls:
  6553 ;;		_vfpfcnvrt
  6554 ;; This function is called by:
  6555 ;;		_sprintf
  6556 ;; This function uses a non-reentrant model
  6557 ;;
  6558                           
  6559                           	psect	text23
  6560  003D04                     __ptext23:
  6561                           	callstack 0
  6562  003D04                     _vfprintf:
  6563                           	callstack 22
  6564  003D04                     
  6565                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6566  003D04  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  6567  003D08  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6568  003D0C                     
  6569                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6570  003D0C  0E00               	movlw	0
  6571  003D0E  0100               	movlb	0	; () banked
  6572  003D10  6FEB               	movwf	(_nout+1)& (0+255),b
  6573  003D12  0E00               	movlw	0
  6574  003D14  6FEA               	movwf	_nout& (0+255),b
  6575                           
  6576                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6577  003D16  EFA0  F01E         	goto	l3716
  6578  003D1A                     l3714:
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6582  003D1A  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  6583  003D1E  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6584  003D22  0E56               	movlw	low vfprintf@cfmt
  6585  003D24  6E42               	movwf	vfpfcnvrt@fmt^0,c
  6586  003D26  0E00               	movlw	high vfprintf@cfmt
  6587  003D28  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6588  003D2A  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  6589  003D2E  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6590  003D32  ECC2  F017         	call	_vfpfcnvrt	;wreg free
  6591  003D36  5040               	movf	?_vfpfcnvrt^0,w,c
  6592  003D38  0100               	movlb	0	; () banked
  6593  003D3A  27EA               	addwf	_nout& (0+255),f,b
  6594  003D3C  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  6595  003D3E  23EB               	addwfc	(_nout+1)& (0+255),f,b
  6596  003D40                     l3716:
  6597                           
  6598                           ; BSR set to: 0
  6599                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6600  003D40  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  6601  003D44  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6602  003D48                     	if	0	;tblptru may be non-zero
  6603  003D48                     	endif
  6604  003D48                     	if	0	;tblptru may be non-zero
  6605  003D48                     	endif
  6606  003D48  0008               	tblrd		*
  6607  003D4A  50F5               	movf	tablat,w,c
  6608  003D4C  0900               	iorlw	0
  6609  003D4E  A4D8               	btfss	status,2,c
  6610  003D50  EFAC  F01E         	goto	u3581
  6611  003D54  EFAE  F01E         	goto	u3580
  6612  003D58                     u3581:
  6613  003D58  EF8D  F01E         	goto	l3714
  6614  003D5C                     u3580:
  6615  003D5C                     
  6616                           ; BSR set to: 0
  6617                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6618  003D5C  C0EA  F050         	movff	_nout,?_vfprintf
  6619  003D60  C0EB  F051         	movff	_nout+1,?_vfprintf+1
  6620  003D64                     
  6621                           ; BSR set to: 0
  6622  003D64  0012               	return		;funcret
  6623  003D66                     __end_of_vfprintf:
  6624                           	callstack 0
  6625                           
  6626 ;; *************** function _vfpfcnvrt *****************
  6627 ;; Defined at:
  6628 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6631 ;;		 -> sprintf@f(11), 
  6632 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6633 ;;		 -> vfprintf@cfmt(2), 
  6634 ;;  ap              2   67[COMRAM] PTR PTR void 
  6635 ;;		 -> sprintf@ap(2), 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  ll              8   71[COMRAM] long long 
  6638 ;;  llu             8    0        unsigned long long 
  6639 ;;  f               4    0        unsigned long long 
  6640 ;;  vp              3    0        PTR void 
  6641 ;;  ct              3    0        unsigned char [3]
  6642 ;;  cp              3    0        PTR unsigned char 
  6643 ;;  i               2    0        int 
  6644 ;;  done            2    0        int 
  6645 ;;  c               1    0        unsigned char 
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  2   63[COMRAM] int 
  6648 ;; Registers used:
  6649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6655 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6656 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6657 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6658 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6659 ;;Total ram usage:       16 bytes
  6660 ;; Hardware stack levels used: 1
  6661 ;; Hardware stack levels required when called: 5
  6662 ;; This function calls:
  6663 ;;		_dtoa
  6664 ;;		_fputc
  6665 ;; This function is called by:
  6666 ;;		_vfprintf
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text24
  6671  002F84                     __ptext24:
  6672                           	callstack 0
  6673  002F84                     _vfpfcnvrt:
  6674                           	callstack 22
  6675  002F84                     
  6676                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6677  002F84  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6678  002F88  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6679  002F8C  CFDE FFF6          	movff	postinc2,tblptrl
  6680  002F90  CFDD FFF7          	movff	postdec2,tblptrh
  6681  002F94                     	if	0	;tblptru may be non-zero
  6682  002F94                     	endif
  6683  002F94                     	if	0	;tblptru may be non-zero
  6684  002F94                     	endif
  6685  002F94  0008               	tblrd		*
  6686  002F96  50F5               	movf	tablat,w,c
  6687  002F98  0A25               	xorlw	37
  6688  002F9A  A4D8               	btfss	status,2,c
  6689  002F9C  EFD2  F017         	goto	u3261
  6690  002FA0  EFD4  F017         	goto	u3260
  6691  002FA4                     u3261:
  6692  002FA4  EF80  F018         	goto	l3502
  6693  002FA8                     u3260:
  6694  002FA8                     
  6695                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6696  002FA8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6697  002FAC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6698  002FB0  2ADE               	incf	postinc2,f,c
  6699  002FB2  0E00               	movlw	0
  6700  002FB4  22DD               	addwfc	postdec2,f,c
  6701  002FB6                     
  6702                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6703  002FB6  0E00               	movlw	0
  6704  002FB8  0100               	movlb	0	; () banked
  6705  002FBA  6FED               	movwf	(_width+1)& (0+255),b
  6706  002FBC  0E00               	movlw	0
  6707  002FBE  6FEC               	movwf	_width& (0+255),b
  6708  002FC0  C0EC  F0F0         	movff	_width,_flags
  6709  002FC4  C0ED  F0F1         	movff	_width+1,_flags+1
  6710  002FC8                     
  6711                           ; BSR set to: 0
  6712                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6713  002FC8  69EE               	setf	_prec& (0+255),b
  6714  002FCA  69EF               	setf	(_prec+1)& (0+255),b
  6715  002FCC                     
  6716                           ; BSR set to: 0
  6717                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6718  002FCC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6719  002FD0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6720  002FD4  CFDE FFF6          	movff	postinc2,tblptrl
  6721  002FD8  CFDD FFF7          	movff	postdec2,tblptrh
  6722  002FDC                     	if	0	;tblptru may be non-zero
  6723  002FDC                     	endif
  6724  002FDC                     	if	0	;tblptru may be non-zero
  6725  002FDC                     	endif
  6726  002FDC  0008               	tblrd		*
  6727  002FDE  50F5               	movf	tablat,w,c
  6728  002FE0  0A64               	xorlw	100
  6729  002FE2  B4D8               	btfsc	status,2,c
  6730  002FE4  EFF6  F017         	goto	u3271
  6731  002FE8  EFF8  F017         	goto	u3270
  6732  002FEC                     u3271:
  6733  002FEC  EF0A  F018         	goto	l3480
  6734  002FF0                     u3270:
  6735  002FF0                     
  6736                           ; BSR set to: 0
  6737  002FF0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6738  002FF4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6739  002FF8  CFDE FFF6          	movff	postinc2,tblptrl
  6740  002FFC  CFDD FFF7          	movff	postdec2,tblptrh
  6741  003000                     	if	0	;tblptru may be non-zero
  6742  003000                     	endif
  6743  003000                     	if	0	;tblptru may be non-zero
  6744  003000                     	endif
  6745  003000  0008               	tblrd		*
  6746  003002  50F5               	movf	tablat,w,c
  6747  003004  0A69               	xorlw	105
  6748  003006  A4D8               	btfss	status,2,c
  6749  003008  EF08  F018         	goto	u3281
  6750  00300C  EF0A  F018         	goto	u3280
  6751  003010                     u3281:
  6752  003010  EF4A  F018         	goto	l3486
  6753  003014                     u3280:
  6754  003014                     l3480:
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6758  003014  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6759  003018  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6760  00301C  2ADE               	incf	postinc2,f,c
  6761  00301E  0E00               	movlw	0
  6762  003020  22DD               	addwfc	postdec2,f,c
  6763                           
  6764                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6765  003022  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6766  003026  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6767  00302A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  6768  00302E  0E02               	movlw	2
  6769  003030  26DE               	addwf	postinc2,f,c
  6770  003032  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  6771  003036  0E00               	movlw	0
  6772  003038  22DD               	addwfc	postdec2,f,c
  6773  00303A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6774  00303E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6775  003042  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  6776  003046  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  6777  00304A  0E00               	movlw	0
  6778  00304C  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  6779  00304E  0EFF               	movlw	-1
  6780  003050  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  6781  003052  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  6782  003054  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  6783  003056  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  6784  003058  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  6785  00305A  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  6786  00305C                     
  6787                           ; BSR set to: 0
  6788                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6789  00305C  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6790  003060  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6791  003064  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6792  003068  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6793  00306C  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6794  003070  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6795  003074  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6796  003078  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6797  00307C  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6798  003080  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6799  003084  EC76  F015         	call	_dtoa	;wreg free
  6800  003088  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  6801  00308C  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6802  003090  EF9B  F018         	goto	l1340
  6803  003094                     l3486:
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6807  003094  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6808  003098  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6809  00309C  CFDE FFF6          	movff	postinc2,tblptrl
  6810  0030A0  CFDD FFF7          	movff	postdec2,tblptrh
  6811  0030A4                     	if	0	;tblptru may be non-zero
  6812  0030A4                     	endif
  6813  0030A4                     	if	0	;tblptru may be non-zero
  6814  0030A4                     	endif
  6815  0030A4  0008               	tblrd		*
  6816  0030A6  50F5               	movf	tablat,w,c
  6817  0030A8  0A25               	xorlw	37
  6818  0030AA  A4D8               	btfss	status,2,c
  6819  0030AC  EF5A  F018         	goto	u3291
  6820  0030B0  EF5C  F018         	goto	u3290
  6821  0030B4                     u3291:
  6822  0030B4  EF73  F018         	goto	l3496
  6823  0030B8                     u3290:
  6824  0030B8                     
  6825                           ; BSR set to: 0
  6826                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6827  0030B8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6828  0030BC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6829  0030C0  2ADE               	incf	postinc2,f,c
  6830  0030C2  0E00               	movlw	0
  6831  0030C4  22DD               	addwfc	postdec2,f,c
  6832  0030C6                     
  6833                           ; BSR set to: 0
  6834                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6835  0030C6  0E00               	movlw	0
  6836  0030C8  6E02               	movwf	(fputc@c+1)^0,c
  6837  0030CA  0E25               	movlw	37
  6838  0030CC  6E01               	movwf	fputc@c^0,c
  6839  0030CE  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6840  0030D2  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6841  0030D6  EC50  F01D         	call	_fputc	;wreg free
  6842  0030DA                     l3492:
  6843                           
  6844                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6845  0030DA  0E00               	movlw	0
  6846  0030DC  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6847  0030DE  0E01               	movlw	1
  6848  0030E0  6E40               	movwf	?_vfpfcnvrt^0,c
  6849  0030E2  EF9B  F018         	goto	l1340
  6850  0030E6                     l3496:
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6854  0030E6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6855  0030EA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6856  0030EE  2ADE               	incf	postinc2,f,c
  6857  0030F0  0E00               	movlw	0
  6858  0030F2  22DD               	addwfc	postdec2,f,c
  6859  0030F4                     
  6860                           ; BSR set to: 0
  6861                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6862  0030F4  0E00               	movlw	0
  6863  0030F6  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6864  0030F8  0E00               	movlw	0
  6865  0030FA  6E40               	movwf	?_vfpfcnvrt^0,c
  6866  0030FC  EF9B  F018         	goto	l1340
  6867  003100                     l3502:
  6868                           
  6869                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6870  003100  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6871  003104  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6872  003108  CFDE FFF6          	movff	postinc2,tblptrl
  6873  00310C  CFDD FFF7          	movff	postdec2,tblptrh
  6874  003110                     	if	0	;tblptru may be non-zero
  6875  003110                     	endif
  6876  003110                     	if	0	;tblptru may be non-zero
  6877  003110                     	endif
  6878  003110  0008               	tblrd		*
  6879  003112  50F5               	movf	tablat,w,c
  6880  003114  6E01               	movwf	fputc@c^0,c
  6881  003116  6A02               	clrf	(fputc@c+1)^0,c
  6882  003118  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6883  00311C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6884  003120  EC50  F01D         	call	_fputc	;wreg free
  6885  003124                     
  6886                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6887  003124  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6888  003128  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6889  00312C  2ADE               	incf	postinc2,f,c
  6890  00312E  0E00               	movlw	0
  6891  003130  22DD               	addwfc	postdec2,f,c
  6892  003132  EF6D  F018         	goto	l3492
  6893  003136                     l1340:
  6894  003136  0012               	return		;funcret
  6895  003138                     __end_of_vfpfcnvrt:
  6896                           	callstack 0
  6897                           
  6898 ;; *************** function _dtoa *****************
  6899 ;; Defined at:
  6900 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6903 ;;		 -> sprintf@f(11), 
  6904 ;;  d               8   29[COMRAM] long long 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  n               8   53[COMRAM] long long 
  6907 ;;  i               2   61[COMRAM] int 
  6908 ;;  s               2   51[COMRAM] int 
  6909 ;;  w               2   49[COMRAM] int 
  6910 ;;  p               2   47[COMRAM] int 
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  2   27[COMRAM] int 
  6913 ;; Registers used:
  6914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6920 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6921 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6922 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6923 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6924 ;;Total ram usage:       36 bytes
  6925 ;; Hardware stack levels used: 1
  6926 ;; Hardware stack levels required when called: 4
  6927 ;; This function calls:
  6928 ;;		___aodiv
  6929 ;;		___aomod
  6930 ;;		_abs
  6931 ;;		_pad
  6932 ;; This function is called by:
  6933 ;;		_vfpfcnvrt
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	text25
  6938  002AEC                     __ptext25:
  6939                           	callstack 0
  6940  002AEC                     _dtoa:
  6941                           	callstack 22
  6942  002AEC                     
  6943                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6944  002AEC  C01E  F036         	movff	dtoa@d,dtoa@n
  6945  002AF0  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6946  002AF4  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6947  002AF8  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6948  002AFC  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6949  002B00  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6950  002B04  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6951  002B08  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6952  002B0C                     
  6953                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6954  002B0C  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6955  002B0E  EF8B  F015         	goto	u2701
  6956  002B12  EF8E  F015         	goto	u2700
  6957  002B16                     u2701:
  6958  002B16  0E01               	movlw	1
  6959  002B18  EF8F  F015         	goto	u2710
  6960  002B1C                     u2700:
  6961  002B1C  0E00               	movlw	0
  6962  002B1E                     u2710:
  6963  002B1E  6E34               	movwf	dtoa@s^0,c
  6964  002B20  6A35               	clrf	(dtoa@s+1)^0,c
  6965                           
  6966                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6967  002B22  5034               	movf	dtoa@s^0,w,c
  6968  002B24  1035               	iorwf	(dtoa@s+1)^0,w,c
  6969  002B26  B4D8               	btfsc	status,2,c
  6970  002B28  EF98  F015         	goto	u2721
  6971  002B2C  EF9A  F015         	goto	u2720
  6972  002B30                     u2721:
  6973  002B30  EFAA  F015         	goto	l3206
  6974  002B34                     u2720:
  6975  002B34                     
  6976                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6977  002B34  1E3D               	comf	(dtoa@n+7)^0,f,c
  6978  002B36  1E3C               	comf	(dtoa@n+6)^0,f,c
  6979  002B38  1E3B               	comf	(dtoa@n+5)^0,f,c
  6980  002B3A  1E3A               	comf	(dtoa@n+4)^0,f,c
  6981  002B3C  1E39               	comf	(dtoa@n+3)^0,f,c
  6982  002B3E  1E38               	comf	(dtoa@n+2)^0,f,c
  6983  002B40  1E37               	comf	(dtoa@n+1)^0,f,c
  6984  002B42  6C36               	negf	dtoa@n^0,c
  6985  002B44  0E00               	movlw	0
  6986  002B46  2237               	addwfc	(dtoa@n+1)^0,f,c
  6987  002B48  2238               	addwfc	(dtoa@n+2)^0,f,c
  6988  002B4A  2239               	addwfc	(dtoa@n+3)^0,f,c
  6989  002B4C  223A               	addwfc	(dtoa@n+4)^0,f,c
  6990  002B4E  223B               	addwfc	(dtoa@n+5)^0,f,c
  6991  002B50  223C               	addwfc	(dtoa@n+6)^0,f,c
  6992  002B52  223D               	addwfc	(dtoa@n+7)^0,f,c
  6993  002B54                     l3206:
  6994                           
  6995                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6996  002B54  0100               	movlb	0	; () banked
  6997  002B56  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  6998  002B58  EFB0  F015         	goto	u2731
  6999  002B5C  EFB2  F015         	goto	u2730
  7000  002B60                     u2731:
  7001  002B60  EFB3  F015         	goto	l3210
  7002  002B64                     u2730:
  7003  002B64                     
  7004                           ; BSR set to: 0
  7005                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7006  002B64  93F0               	bcf	_flags& (0+255),1,b
  7007  002B66                     l3210:
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7011  002B66  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  7012  002B68  EFC0  F015         	goto	u2740
  7013  002B6C  51EF               	movf	(_prec+1)& (0+255),w,b
  7014  002B6E  E106               	bnz	u2741
  7015  002B70  05EE               	decf	_prec& (0+255),w,b
  7016  002B72  B0D8               	btfsc	status,0,c
  7017  002B74  EFBE  F015         	goto	u2741
  7018  002B78  EFC0  F015         	goto	u2740
  7019  002B7C                     u2741:
  7020  002B7C  EFC6  F015         	goto	l1313
  7021  002B80                     u2740:
  7022  002B80                     
  7023                           ; BSR set to: 0
  7024  002B80  0E00               	movlw	0
  7025  002B82  6E31               	movwf	(dtoa@p+1)^0,c
  7026  002B84  0E01               	movlw	1
  7027  002B86  6E30               	movwf	dtoa@p^0,c
  7028  002B88  EFCA  F015         	goto	l1315
  7029  002B8C                     l1313:
  7030                           
  7031                           ; BSR set to: 0
  7032  002B8C  C0EE  F030         	movff	_prec,dtoa@p
  7033  002B90  C0EF  F031         	movff	_prec+1,dtoa@p+1
  7034  002B94                     l1315:
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7038  002B94  C0EC  F032         	movff	_width,dtoa@w
  7039  002B98  C0ED  F033         	movff	_width+1,dtoa@w+1
  7040  002B9C                     
  7041                           ; BSR set to: 0
  7042                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7043  002B9C  5034               	movf	dtoa@s^0,w,c
  7044  002B9E  1035               	iorwf	(dtoa@s+1)^0,w,c
  7045  002BA0  A4D8               	btfss	status,2,c
  7046  002BA2  EFD5  F015         	goto	u2751
  7047  002BA6  EFD7  F015         	goto	u2750
  7048  002BAA                     u2751:
  7049  002BAA  EFDE  F015         	goto	l3218
  7050  002BAE                     u2750:
  7051  002BAE                     
  7052                           ; BSR set to: 0
  7053  002BAE  A5F0               	btfss	_flags& (0+255),2,b
  7054  002BB0  EFDC  F015         	goto	u2761
  7055  002BB4  EFDE  F015         	goto	u2760
  7056  002BB8                     u2761:
  7057  002BB8  EFE1  F015         	goto	l3220
  7058  002BBC                     u2760:
  7059  002BBC                     l3218:
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  7063  002BBC  0632               	decf	dtoa@w^0,f,c
  7064  002BBE  A0D8               	btfss	status,0,c
  7065  002BC0  0633               	decf	(dtoa@w+1)^0,f,c
  7066  002BC2                     l3220:
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7070  002BC2  0E00               	movlw	0
  7071  002BC4  6E3F               	movwf	(dtoa@i+1)^0,c
  7072  002BC6  0E1F               	movlw	31
  7073  002BC8  6E3E               	movwf	dtoa@i^0,c
  7074  002BCA                     
  7075                           ; BSR set to: 0
  7076                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7077  002BCA  0E00               	movlw	0
  7078  002BCC  0101               	movlb	1	; () banked
  7079  002BCE  6F84               	movwf	(_dbuf+31)& (0+255),b
  7080                           
  7081                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7082  002BD0  EF66  F016         	goto	l3234
  7083  002BD4                     l3224:
  7084                           
  7085                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  7086  002BD4  063E               	decf	dtoa@i^0,f,c
  7087  002BD6  A0D8               	btfss	status,0,c
  7088  002BD8  063F               	decf	(dtoa@i+1)^0,f,c
  7089  002BDA                     
  7090                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7091  002BDA  0E65               	movlw	low _dbuf
  7092  002BDC  243E               	addwf	dtoa@i^0,w,c
  7093  002BDE  6ED9               	movwf	fsr2l,c
  7094  002BE0  0E01               	movlw	high _dbuf
  7095  002BE2  203F               	addwfc	(dtoa@i+1)^0,w,c
  7096  002BE4  6EDA               	movwf	fsr2h,c
  7097  002BE6  C036  F001         	movff	dtoa@n,___aomod@dividend
  7098  002BEA  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7099  002BEE  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7100  002BF2  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7101  002BF6  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7102  002BFA  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7103  002BFE  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7104  002C02  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7105  002C06  0E0A               	movlw	10
  7106  002C08  6E09               	movwf	___aomod@divisor^0,c
  7107  002C0A  0E00               	movlw	0
  7108  002C0C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7109  002C0E  0E00               	movlw	0
  7110  002C10  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7111  002C12  0E00               	movlw	0
  7112  002C14  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7113  002C16  0E00               	movlw	0
  7114  002C18  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7115  002C1A  0E00               	movlw	0
  7116  002C1C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7117  002C1E  0E00               	movlw	0
  7118  002C20  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7119  002C22  0E00               	movlw	0
  7120  002C24  6E10               	movwf	(___aomod@divisor+7)^0,c
  7121  002C26  EC2B  F01A         	call	___aomod	;wreg free
  7122  002C2A  C001  F026         	movff	?___aomod,??_dtoa
  7123  002C2E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7124  002C32  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7125  002C36  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7126  002C3A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7127  002C3E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7128  002C42  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7129  002C46  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7130  002C4A  C026  F013         	movff	??_dtoa,abs@a
  7131  002C4E  C028  F014         	movff	??_dtoa+2,abs@a+1
  7132  002C52  EC32  F020         	call	_abs	;wreg free
  7133  002C56  5013               	movf	?_abs^0,w,c
  7134  002C58  0F30               	addlw	48
  7135  002C5A  6EDF               	movwf	indf2,c
  7136  002C5C                     
  7137                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  7138  002C5C  0630               	decf	dtoa@p^0,f,c
  7139  002C5E  A0D8               	btfss	status,0,c
  7140  002C60  0631               	decf	(dtoa@p+1)^0,f,c
  7141  002C62                     
  7142                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  7143  002C62  0632               	decf	dtoa@w^0,f,c
  7144  002C64  A0D8               	btfss	status,0,c
  7145  002C66  0633               	decf	(dtoa@w+1)^0,f,c
  7146  002C68                     
  7147                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7148  002C68  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7149  002C6C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7150  002C70  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7151  002C74  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7152  002C78  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7153  002C7C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7154  002C80  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7155  002C84  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7156  002C88  0E0A               	movlw	10
  7157  002C8A  6E09               	movwf	___aodiv@divisor^0,c
  7158  002C8C  0E00               	movlw	0
  7159  002C8E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7160  002C90  0E00               	movlw	0
  7161  002C92  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7162  002C94  0E00               	movlw	0
  7163  002C96  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7164  002C98  0E00               	movlw	0
  7165  002C9A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7166  002C9C  0E00               	movlw	0
  7167  002C9E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7168  002CA0  0E00               	movlw	0
  7169  002CA2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7170  002CA4  0E00               	movlw	0
  7171  002CA6  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7172  002CA8  EC67  F019         	call	___aodiv	;wreg free
  7173  002CAC  C001  F036         	movff	?___aodiv,dtoa@n
  7174  002CB0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7175  002CB4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7176  002CB8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7177  002CBC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7178  002CC0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7179  002CC4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7180  002CC8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7181  002CCC                     l3234:
  7182                           
  7183                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7184  002CCC  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7185  002CCE  EF71  F016         	goto	u2771
  7186  002CD2  503F               	movf	(dtoa@i+1)^0,w,c
  7187  002CD4  E108               	bnz	u2770
  7188  002CD6  043E               	decf	dtoa@i^0,w,c
  7189  002CD8  A0D8               	btfss	status,0,c
  7190  002CDA  EF71  F016         	goto	u2771
  7191  002CDE  EF73  F016         	goto	u2770
  7192  002CE2                     u2771:
  7193  002CE2  EFA4  F016         	goto	l3244
  7194  002CE6                     u2770:
  7195  002CE6  5036               	movf	dtoa@n^0,w,c
  7196  002CE8  1037               	iorwf	(dtoa@n+1)^0,w,c
  7197  002CEA  1038               	iorwf	(dtoa@n+2)^0,w,c
  7198  002CEC  1039               	iorwf	(dtoa@n+3)^0,w,c
  7199  002CEE  103A               	iorwf	(dtoa@n+4)^0,w,c
  7200  002CF0  103B               	iorwf	(dtoa@n+5)^0,w,c
  7201  002CF2  103C               	iorwf	(dtoa@n+6)^0,w,c
  7202  002CF4  103D               	iorwf	(dtoa@n+7)^0,w,c
  7203  002CF6  A4D8               	btfss	status,2,c
  7204  002CF8  EF80  F016         	goto	u2781
  7205  002CFC  EF82  F016         	goto	u2780
  7206  002D00                     u2781:
  7207  002D00  EFEA  F015         	goto	l3224
  7208  002D04                     u2780:
  7209  002D04  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7210  002D06  EF8F  F016         	goto	u2790
  7211  002D0A  5031               	movf	(dtoa@p+1)^0,w,c
  7212  002D0C  E106               	bnz	u2791
  7213  002D0E  0430               	decf	dtoa@p^0,w,c
  7214  002D10  B0D8               	btfsc	status,0,c
  7215  002D12  EF8D  F016         	goto	u2791
  7216  002D16  EF8F  F016         	goto	u2790
  7217  002D1A                     u2791:
  7218  002D1A  EFEA  F015         	goto	l3224
  7219  002D1E                     u2790:
  7220  002D1E  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7221  002D20  EF9A  F016         	goto	u2801
  7222  002D24  5033               	movf	(dtoa@w+1)^0,w,c
  7223  002D26  E108               	bnz	u2800
  7224  002D28  0432               	decf	dtoa@w^0,w,c
  7225  002D2A  A0D8               	btfss	status,0,c
  7226  002D2C  EF9A  F016         	goto	u2801
  7227  002D30  EF9C  F016         	goto	u2800
  7228  002D34                     u2801:
  7229  002D34  EFA4  F016         	goto	l3244
  7230  002D38                     u2800:
  7231  002D38  0100               	movlb	0	; () banked
  7232  002D3A  B3F0               	btfsc	_flags& (0+255),1,b
  7233  002D3C  EFA2  F016         	goto	u2811
  7234  002D40  EFA4  F016         	goto	u2810
  7235  002D44                     u2811:
  7236  002D44  EFEA  F015         	goto	l3224
  7237  002D48                     u2810:
  7238  002D48                     l3244:
  7239                           
  7240                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7241  002D48  5034               	movf	dtoa@s^0,w,c
  7242  002D4A  1035               	iorwf	(dtoa@s+1)^0,w,c
  7243  002D4C  A4D8               	btfss	status,2,c
  7244  002D4E  EFAB  F016         	goto	u2821
  7245  002D52  EFAD  F016         	goto	u2820
  7246  002D56                     u2821:
  7247  002D56  EFB5  F016         	goto	l3248
  7248  002D5A                     u2820:
  7249  002D5A  0100               	movlb	0	; () banked
  7250  002D5C  A5F0               	btfss	_flags& (0+255),2,b
  7251  002D5E  EFB3  F016         	goto	u2831
  7252  002D62  EFB5  F016         	goto	u2830
  7253  002D66                     u2831:
  7254  002D66  EFD3  F016         	goto	l3258
  7255  002D6A                     u2830:
  7256  002D6A                     l3248:
  7257                           
  7258                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  7259  002D6A  063E               	decf	dtoa@i^0,f,c
  7260  002D6C  A0D8               	btfss	status,0,c
  7261  002D6E  063F               	decf	(dtoa@i+1)^0,f,c
  7262  002D70                     
  7263                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7264  002D70  5034               	movf	dtoa@s^0,w,c
  7265  002D72  1035               	iorwf	(dtoa@s+1)^0,w,c
  7266  002D74  A4D8               	btfss	status,2,c
  7267  002D76  EFBF  F016         	goto	u2841
  7268  002D7A  EFC1  F016         	goto	u2840
  7269  002D7E                     u2841:
  7270  002D7E  EFC7  F016         	goto	l3254
  7271  002D82                     u2840:
  7272  002D82  0E00               	movlw	0
  7273  002D84  6E2F               	movwf	(_dtoa$2375+1)^0,c
  7274  002D86  0E2B               	movlw	43
  7275  002D88  6E2E               	movwf	_dtoa$2375^0,c
  7276  002D8A  EFCB  F016         	goto	l3256
  7277  002D8E                     l3254:
  7278  002D8E  0E00               	movlw	0
  7279  002D90  6E2F               	movwf	(_dtoa$2375+1)^0,c
  7280  002D92  0E2D               	movlw	45
  7281  002D94  6E2E               	movwf	_dtoa$2375^0,c
  7282  002D96                     l3256:
  7283  002D96  0E65               	movlw	low _dbuf
  7284  002D98  243E               	addwf	dtoa@i^0,w,c
  7285  002D9A  6ED9               	movwf	fsr2l,c
  7286  002D9C  0E01               	movlw	high _dbuf
  7287  002D9E  203F               	addwfc	(dtoa@i+1)^0,w,c
  7288  002DA0  6EDA               	movwf	fsr2h,c
  7289  002DA2  C02E  FFDF         	movff	_dtoa$2375,indf2
  7290  002DA6                     l3258:
  7291                           
  7292                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7293  002DA6  C01C  F011         	movff	dtoa@fp,pad@fp
  7294  002DAA  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7295  002DAE  0E65               	movlw	low _dbuf
  7296  002DB0  243E               	addwf	dtoa@i^0,w,c
  7297  002DB2  6E13               	movwf	pad@buf^0,c
  7298  002DB4  0E01               	movlw	high _dbuf
  7299  002DB6  203F               	addwfc	(dtoa@i+1)^0,w,c
  7300  002DB8  6E14               	movwf	(pad@buf+1)^0,c
  7301  002DBA  C032  F015         	movff	dtoa@w,pad@p
  7302  002DBE  C033  F016         	movff	dtoa@w+1,pad@p+1
  7303  002DC2  ECB5  F01D         	call	_pad	;wreg free
  7304  002DC6  C011  F01C         	movff	?_pad,?_dtoa
  7305  002DCA  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7306  002DCE  0012               	return		;funcret
  7307  002DD0                     __end_of_dtoa:
  7308                           	callstack 0
  7309                           
  7310 ;; *************** function _pad *****************
  7311 ;; Defined at:
  7312 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7315 ;;		 -> sprintf@f(11), 
  7316 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7317 ;;		 -> dbuf(32), 
  7318 ;;  p               2   20[COMRAM] int 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;  w               2   25[COMRAM] int 
  7321 ;;  i               2   23[COMRAM] int 
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  2   16[COMRAM] int 
  7324 ;; Registers used:
  7325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7331 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7332 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7333 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7335 ;;Total ram usage:       11 bytes
  7336 ;; Hardware stack levels used: 1
  7337 ;; Hardware stack levels required when called: 3
  7338 ;; This function calls:
  7339 ;;		_fputc
  7340 ;;		_fputs
  7341 ;;		_strlen
  7342 ;; This function is called by:
  7343 ;;		_dtoa
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           
  7347                           	psect	text26
  7348  003B6A                     __ptext26:
  7349                           	callstack 0
  7350  003B6A                     _pad:
  7351                           	callstack 22
  7352  003B6A                     
  7353                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7354  003B6A  0100               	movlb	0	; () banked
  7355  003B6C  A1F0               	btfss	_flags& (0+255),0,b
  7356  003B6E  EFBB  F01D         	goto	u2651
  7357  003B72  EFBD  F01D         	goto	u2650
  7358  003B76                     u2651:
  7359  003B76  EFC7  F01D         	goto	l3178
  7360  003B7A                     u2650:
  7361  003B7A                     
  7362                           ; BSR set to: 0
  7363                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7364  003B7A  C013  F00A         	movff	pad@buf,fputs@s
  7365  003B7E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7366  003B82  C011  F00C         	movff	pad@fp,fputs@fp
  7367  003B86  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7368  003B8A  ECCE  F01F         	call	_fputs	;wreg free
  7369  003B8E                     l3178:
  7370                           
  7371                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7372  003B8E  BE16               	btfsc	(pad@p+1)^0,7,c
  7373  003B90  EFCC  F01D         	goto	u2661
  7374  003B94  EFCE  F01D         	goto	u2660
  7375  003B98                     u2661:
  7376  003B98  EFD4  F01D         	goto	l3182
  7377  003B9C                     u2660:
  7378  003B9C  C015  F01A         	movff	pad@p,pad@w
  7379  003BA0  C016  F01B         	movff	pad@p+1,pad@w+1
  7380  003BA4  EFD8  F01D         	goto	l1302
  7381  003BA8                     l3182:
  7382  003BA8  0E00               	movlw	0
  7383  003BAA  6E1B               	movwf	(pad@w+1)^0,c
  7384  003BAC  0E00               	movlw	0
  7385  003BAE  6E1A               	movwf	pad@w^0,c
  7386  003BB0                     l1302:
  7387                           
  7388                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7389  003BB0  0E00               	movlw	0
  7390  003BB2  6E19               	movwf	(pad@i+1)^0,c
  7391  003BB4  0E00               	movlw	0
  7392  003BB6  6E18               	movwf	pad@i^0,c
  7393                           
  7394                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7395  003BB8  EFEA  F01D         	goto	l3188
  7396  003BBC                     l3184:
  7397                           
  7398                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7399  003BBC  0E00               	movlw	0
  7400  003BBE  6E02               	movwf	(fputc@c+1)^0,c
  7401  003BC0  0E20               	movlw	32
  7402  003BC2  6E01               	movwf	fputc@c^0,c
  7403  003BC4  C011  F003         	movff	pad@fp,fputc@fp
  7404  003BC8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7405  003BCC  EC50  F01D         	call	_fputc	;wreg free
  7406  003BD0                     
  7407                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7408  003BD0  4A18               	infsnz	pad@i^0,f,c
  7409  003BD2  2A19               	incf	(pad@i+1)^0,f,c
  7410  003BD4                     l3188:
  7411                           
  7412                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7413  003BD4  501A               	movf	pad@w^0,w,c
  7414  003BD6  5C18               	subwf	pad@i^0,w,c
  7415  003BD8  5019               	movf	(pad@i+1)^0,w,c
  7416  003BDA  0A80               	xorlw	128
  7417  003BDC  6E17               	movwf	??_pad^0,c
  7418  003BDE  501B               	movf	(pad@w+1)^0,w,c
  7419  003BE0  0A80               	xorlw	128
  7420  003BE2  5817               	subwfb	??_pad^0,w,c
  7421  003BE4  A0D8               	btfss	status,0,c
  7422  003BE6  EFF7  F01D         	goto	u2671
  7423  003BEA  EFF9  F01D         	goto	u2670
  7424  003BEE                     u2671:
  7425  003BEE  EFDE  F01D         	goto	l3184
  7426  003BF2                     u2670:
  7427  003BF2                     
  7428                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7429  003BF2  0100               	movlb	0	; () banked
  7430  003BF4  B1F0               	btfsc	_flags& (0+255),0,b
  7431  003BF6  EFFF  F01D         	goto	u2681
  7432  003BFA  EF01  F01E         	goto	u2680
  7433  003BFE                     u2681:
  7434  003BFE  EF0B  F01E         	goto	l3192
  7435  003C02                     u2680:
  7436  003C02                     
  7437                           ; BSR set to: 0
  7438                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7439  003C02  C013  F00A         	movff	pad@buf,fputs@s
  7440  003C06  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7441  003C0A  C011  F00C         	movff	pad@fp,fputs@fp
  7442  003C0E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7443  003C12  ECCE  F01F         	call	_fputs	;wreg free
  7444  003C16                     l3192:
  7445                           
  7446                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7447  003C16  C013  F001         	movff	pad@buf,strlen@s
  7448  003C1A  C014  F002         	movff	pad@buf+1,strlen@s+1
  7449  003C1E  ECC7  F020         	call	_strlen	;wreg free
  7450  003C22  501A               	movf	pad@w^0,w,c
  7451  003C24  2401               	addwf	?_strlen^0,w,c
  7452  003C26  6E11               	movwf	?_pad^0,c
  7453  003C28  501B               	movf	(pad@w+1)^0,w,c
  7454  003C2A  2002               	addwfc	(?_strlen+1)^0,w,c
  7455  003C2C  6E12               	movwf	(?_pad+1)^0,c
  7456  003C2E  0012               	return		;funcret
  7457  003C30                     __end_of_pad:
  7458                           	callstack 0
  7459                           
  7460 ;; *************** function _strlen *****************
  7461 ;; Defined at:
  7462 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7465 ;;		 -> dbuf(32), 
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7468 ;;		 -> dbuf(32), 
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  2    0[COMRAM] unsigned int 
  7471 ;; Registers used:
  7472 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7479 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7481 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7482 ;;Total ram usage:        4 bytes
  7483 ;; Hardware stack levels used: 1
  7484 ;; This function calls:
  7485 ;;		Nothing
  7486 ;; This function is called by:
  7487 ;;		_pad
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text27
  7492  00418E                     __ptext27:
  7493                           	callstack 0
  7494  00418E                     _strlen:
  7495                           	callstack 24
  7496  00418E  C001  F003         	movff	strlen@s,strlen@a
  7497  004192  C002  F004         	movff	strlen@s+1,strlen@a+1
  7498  004196  EFCF  F020         	goto	l3088
  7499  00419A                     l3086:
  7500  00419A  4A01               	infsnz	strlen@s^0,f,c
  7501  00419C  2A02               	incf	(strlen@s+1)^0,f,c
  7502  00419E                     l3088:
  7503  00419E  C001  FFD9         	movff	strlen@s,fsr2l
  7504  0041A2  C002  FFDA         	movff	strlen@s+1,fsr2h
  7505  0041A6  50DF               	movf	indf2,w,c
  7506  0041A8  A4D8               	btfss	status,2,c
  7507  0041AA  EFD9  F020         	goto	u2511
  7508  0041AE  EFDB  F020         	goto	u2510
  7509  0041B2                     u2511:
  7510  0041B2  EFCD  F020         	goto	l3086
  7511  0041B6                     u2510:
  7512  0041B6  5003               	movf	strlen@a^0,w,c
  7513  0041B8  5C01               	subwf	strlen@s^0,w,c
  7514  0041BA  6E01               	movwf	?_strlen^0,c
  7515  0041BC  5004               	movf	(strlen@a+1)^0,w,c
  7516  0041BE  5802               	subwfb	(strlen@s+1)^0,w,c
  7517  0041C0  6E02               	movwf	(?_strlen+1)^0,c
  7518  0041C2  0012               	return		;funcret
  7519  0041C4                     __end_of_strlen:
  7520                           	callstack 0
  7521                           
  7522 ;; *************** function _fputs *****************
  7523 ;; Defined at:
  7524 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  7525 ;; Parameters:    Size  Location     Type
  7526 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7527 ;;		 -> dbuf(32), 
  7528 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7529 ;;		 -> sprintf@f(11), 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;  i               2   14[COMRAM] int 
  7532 ;;  c               1   13[COMRAM] unsigned char 
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  2    9[COMRAM] int 
  7535 ;; Registers used:
  7536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7543 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7545 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7546 ;;Total ram usage:        7 bytes
  7547 ;; Hardware stack levels used: 1
  7548 ;; Hardware stack levels required when called: 2
  7549 ;; This function calls:
  7550 ;;		_fputc
  7551 ;; This function is called by:
  7552 ;;		_pad
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           	psect	text28
  7557  003F9C                     __ptext28:
  7558                           	callstack 0
  7559  003F9C                     _fputs:
  7560                           	callstack 22
  7561  003F9C  0E00               	movlw	0
  7562  003F9E  6E10               	movwf	(fputs@i+1)^0,c
  7563  003FA0  0E00               	movlw	0
  7564  003FA2  6E0F               	movwf	fputs@i^0,c
  7565  003FA4  EFDF  F01F         	goto	l3082
  7566  003FA8                     l3078:
  7567  003FA8  C00E  F001         	movff	fputs@c,fputc@c
  7568  003FAC  6A02               	clrf	(fputc@c+1)^0,c
  7569  003FAE  C00C  F003         	movff	fputs@fp,fputc@fp
  7570  003FB2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7571  003FB6  EC50  F01D         	call	_fputc	;wreg free
  7572  003FBA  4A0F               	infsnz	fputs@i^0,f,c
  7573  003FBC  2A10               	incf	(fputs@i+1)^0,f,c
  7574  003FBE                     l3082:
  7575  003FBE  500F               	movf	fputs@i^0,w,c
  7576  003FC0  240A               	addwf	fputs@s^0,w,c
  7577  003FC2  6ED9               	movwf	fsr2l,c
  7578  003FC4  5010               	movf	(fputs@i+1)^0,w,c
  7579  003FC6  200B               	addwfc	(fputs@s+1)^0,w,c
  7580  003FC8  6EDA               	movwf	fsr2h,c
  7581  003FCA  50DF               	movf	indf2,w,c
  7582  003FCC  6E0E               	movwf	fputs@c^0,c
  7583  003FCE  500E               	movf	fputs@c^0,w,c
  7584  003FD0  A4D8               	btfss	status,2,c
  7585  003FD2  EFED  F01F         	goto	u2501
  7586  003FD6  EFEF  F01F         	goto	u2500
  7587  003FDA                     u2501:
  7588  003FDA  EFD4  F01F         	goto	l3078
  7589  003FDE                     u2500:
  7590  003FDE  0012               	return		;funcret
  7591  003FE0                     __end_of_fputs:
  7592                           	callstack 0
  7593                           
  7594 ;; *************** function _fputc *****************
  7595 ;; Defined at:
  7596 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;  c               2    0[COMRAM] int 
  7599 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7600 ;;		 -> sprintf@f(11), 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;		None
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  2    0[COMRAM] int 
  7605 ;; Registers used:
  7606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7614 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7615 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7616 ;;Total ram usage:        9 bytes
  7617 ;; Hardware stack levels used: 1
  7618 ;; Hardware stack levels required when called: 1
  7619 ;; This function calls:
  7620 ;;		_putch
  7621 ;; This function is called by:
  7622 ;;		_pad
  7623 ;;		_vfpfcnvrt
  7624 ;;		_fputs
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           	psect	text29
  7629  003AA0                     __ptext29:
  7630                           	callstack 0
  7631  003AA0                     _fputc:
  7632                           	callstack 25
  7633  003AA0  5003               	movf	fputc@fp^0,w,c
  7634  003AA2  1004               	iorwf	(fputc@fp+1)^0,w,c
  7635  003AA4  B4D8               	btfsc	status,2,c
  7636  003AA6  EF57  F01D         	goto	u2461
  7637  003AAA  EF59  F01D         	goto	u2460
  7638  003AAE                     u2461:
  7639  003AAE  EF62  F01D         	goto	l3066
  7640  003AB2                     u2460:
  7641  003AB2  5003               	movf	fputc@fp^0,w,c
  7642  003AB4  1004               	iorwf	(fputc@fp+1)^0,w,c
  7643  003AB6  A4D8               	btfss	status,2,c
  7644  003AB8  EF60  F01D         	goto	u2471
  7645  003ABC  EF62  F01D         	goto	u2470
  7646  003AC0                     u2471:
  7647  003AC0  EF67  F01D         	goto	l3068
  7648  003AC4                     u2470:
  7649  003AC4                     l3066:
  7650  003AC4  5001               	movf	fputc@c^0,w,c
  7651  003AC6  ECCC  F021         	call	_putch
  7652  003ACA  EFB4  F01D         	goto	l1366
  7653  003ACE                     l3068:
  7654  003ACE  EE20 F009          	lfsr	2,9
  7655  003AD2  5003               	movf	fputc@fp^0,w,c
  7656  003AD4  26D9               	addwf	fsr2l,f,c
  7657  003AD6  5004               	movf	(fputc@fp+1)^0,w,c
  7658  003AD8  22DA               	addwfc	fsr2h,f,c
  7659  003ADA  50DE               	movf	postinc2,w,c
  7660  003ADC  10DE               	iorwf	postinc2,w,c
  7661  003ADE  B4D8               	btfsc	status,2,c
  7662  003AE0  EF74  F01D         	goto	u2481
  7663  003AE4  EF76  F01D         	goto	u2480
  7664  003AE8                     u2481:
  7665  003AE8  EF91  F01D         	goto	l3072
  7666  003AEC                     u2480:
  7667  003AEC  EE20 F009          	lfsr	2,9
  7668  003AF0  5003               	movf	fputc@fp^0,w,c
  7669  003AF2  26D9               	addwf	fsr2l,f,c
  7670  003AF4  5004               	movf	(fputc@fp+1)^0,w,c
  7671  003AF6  22DA               	addwfc	fsr2h,f,c
  7672  003AF8  EE10 F003          	lfsr	1,3
  7673  003AFC  5003               	movf	fputc@fp^0,w,c
  7674  003AFE  26E1               	addwf	fsr1l,f,c
  7675  003B00  5004               	movf	(fputc@fp+1)^0,w,c
  7676  003B02  22E2               	addwfc	fsr1h,f,c
  7677  003B04  50DE               	movf	postinc2,w,c
  7678  003B06  5CE6               	subwf	postinc1,w,c
  7679  003B08  50E6               	movf	postinc1,w,c
  7680  003B0A  0A80               	xorlw	128
  7681  003B0C  6E09               	movwf	(??_fputc+4)^0,c
  7682  003B0E  50DE               	movf	postinc2,w,c
  7683  003B10  0A80               	xorlw	128
  7684  003B12  5809               	subwfb	(??_fputc+4)^0,w,c
  7685  003B14  B0D8               	btfsc	status,0,c
  7686  003B16  EF8F  F01D         	goto	u2491
  7687  003B1A  EF91  F01D         	goto	u2490
  7688  003B1E                     u2491:
  7689  003B1E  EFB4  F01D         	goto	l1366
  7690  003B22                     u2490:
  7691  003B22                     l3072:
  7692  003B22  EE20 F003          	lfsr	2,3
  7693  003B26  5003               	movf	fputc@fp^0,w,c
  7694  003B28  26D9               	addwf	fsr2l,f,c
  7695  003B2A  5004               	movf	(fputc@fp+1)^0,w,c
  7696  003B2C  22DA               	addwfc	fsr2h,f,c
  7697  003B2E  CFDE F005          	movff	postinc2,??_fputc
  7698  003B32  CFDD F006          	movff	postdec2,??_fputc+1
  7699  003B36  C003  FFD9         	movff	fputc@fp,fsr2l
  7700  003B3A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7701  003B3E  CFDE F007          	movff	postinc2,??_fputc+2
  7702  003B42  CFDD F008          	movff	postdec2,??_fputc+3
  7703  003B46  5005               	movf	??_fputc^0,w,c
  7704  003B48  2407               	addwf	(??_fputc+2)^0,w,c
  7705  003B4A  6ED9               	movwf	fsr2l,c
  7706  003B4C  5006               	movf	(??_fputc+1)^0,w,c
  7707  003B4E  2008               	addwfc	(??_fputc+3)^0,w,c
  7708  003B50  6EDA               	movwf	fsr2h,c
  7709  003B52  C001  FFDF         	movff	fputc@c,indf2
  7710  003B56  EE20 F003          	lfsr	2,3
  7711  003B5A  5003               	movf	fputc@fp^0,w,c
  7712  003B5C  26D9               	addwf	fsr2l,f,c
  7713  003B5E  5004               	movf	(fputc@fp+1)^0,w,c
  7714  003B60  22DA               	addwfc	fsr2h,f,c
  7715  003B62  2ADE               	incf	postinc2,f,c
  7716  003B64  0E00               	movlw	0
  7717  003B66  22DD               	addwfc	postdec2,f,c
  7718  003B68                     l1366:
  7719  003B68  0012               	return		;funcret
  7720  003B6A                     __end_of_fputc:
  7721                           	callstack 0
  7722                           
  7723 ;; *************** function _putch *****************
  7724 ;; Defined at:
  7725 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;  c               1    wreg     unsigned char 
  7728 ;; Auto vars:     Size  Location     Type
  7729 ;;  c               1    0[COMRAM] unsigned char 
  7730 ;; Return value:  Size  Location     Type
  7731 ;;                  1    wreg      void 
  7732 ;; Registers used:
  7733 ;;		wreg
  7734 ;; Tracked objects:
  7735 ;;		On entry : 0/0
  7736 ;;		On exit  : 0/0
  7737 ;;		Unchanged: 0/0
  7738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7743 ;;Total ram usage:        0 bytes
  7744 ;; Hardware stack levels used: 1
  7745 ;; This function calls:
  7746 ;;		Nothing
  7747 ;; This function is called by:
  7748 ;;		_fputc
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           	psect	text30
  7753  004398                     __ptext30:
  7754                           	callstack 0
  7755  004398                     _putch:
  7756                           	callstack 25
  7757  004398  0012               	return		;funcret
  7758  00439A                     __end_of_putch:
  7759                           	callstack 0
  7760                           
  7761 ;; *************** function _abs *****************
  7762 ;; Defined at:
  7763 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;  a               2   18[COMRAM] int 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;		None
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  2   18[COMRAM] int 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7780 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7781 ;;Total ram usage:        4 bytes
  7782 ;; Hardware stack levels used: 1
  7783 ;; This function calls:
  7784 ;;		Nothing
  7785 ;; This function is called by:
  7786 ;;		_dtoa
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           	psect	text31
  7791  004064                     __ptext31:
  7792                           	callstack 0
  7793  004064                     _abs:
  7794                           	callstack 25
  7795  004064  BE14               	btfsc	(abs@a+1)^0,7,c
  7796  004066  EF3F  F020         	goto	u2690
  7797  00406A  5014               	movf	(abs@a+1)^0,w,c
  7798  00406C  E106               	bnz	u2691
  7799  00406E  0413               	decf	abs@a^0,w,c
  7800  004070  B0D8               	btfsc	status,0,c
  7801  004072  EF3D  F020         	goto	u2691
  7802  004076  EF3F  F020         	goto	u2690
  7803  00407A                     u2691:
  7804  00407A  EF4D  F020         	goto	l1351
  7805  00407E                     u2690:
  7806  00407E  C013  F015         	movff	abs@a,??_abs
  7807  004082  C014  F016         	movff	abs@a+1,??_abs+1
  7808  004086  1E15               	comf	??_abs^0,f,c
  7809  004088  1E16               	comf	(??_abs+1)^0,f,c
  7810  00408A  4A15               	infsnz	??_abs^0,f,c
  7811  00408C  2A16               	incf	(??_abs+1)^0,f,c
  7812  00408E  C015  F013         	movff	??_abs,?_abs
  7813  004092  C016  F014         	movff	??_abs+1,?_abs+1
  7814  004096  EF51  F020         	goto	l1354
  7815  00409A                     l1351:
  7816  00409A  C013  F013         	movff	abs@a,?_abs
  7817  00409E  C014  F014         	movff	abs@a+1,?_abs+1
  7818  0040A2                     l1354:
  7819  0040A2  0012               	return		;funcret
  7820  0040A4                     __end_of_abs:
  7821                           	callstack 0
  7822                           
  7823 ;; *************** function ___aomod *****************
  7824 ;; Defined at:
  7825 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;  dividend        8    0[COMRAM] long long 
  7828 ;;  divisor         8    8[COMRAM] long long 
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;  sign            1   17[COMRAM] unsigned char 
  7831 ;;  counter         1   16[COMRAM] unsigned char 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  8    0[COMRAM] long long 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7841 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7842 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7844 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7845 ;;Total ram usage:       18 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; This function calls:
  7848 ;;		Nothing
  7849 ;; This function is called by:
  7850 ;;		_dtoa
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           	psect	text32
  7855  003456                     __ptext32:
  7856                           	callstack 0
  7857  003456                     ___aomod:
  7858                           	callstack 25
  7859  003456  0E00               	movlw	0
  7860  003458  6E12               	movwf	___aomod@sign^0,c
  7861  00345A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  7862  00345C  EF34  F01A         	goto	u2590
  7863  003460  EF32  F01A         	goto	u2591
  7864  003464                     u2591:
  7865  003464  EF46  F01A         	goto	l3146
  7866  003468                     u2590:
  7867  003468  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7868  00346A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7869  00346C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7870  00346E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7871  003470  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7872  003472  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7873  003474  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7874  003476  6C01               	negf	___aomod@dividend^0,c
  7875  003478  0E00               	movlw	0
  7876  00347A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7877  00347C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7878  00347E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7879  003480  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7880  003482  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7881  003484  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7882  003486  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7883  003488  0E01               	movlw	1
  7884  00348A  6E12               	movwf	___aomod@sign^0,c
  7885  00348C                     l3146:
  7886  00348C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  7887  00348E  EF4D  F01A         	goto	u2600
  7888  003492  EF4B  F01A         	goto	u2601
  7889  003496                     u2601:
  7890  003496  EF5D  F01A         	goto	l3150
  7891  00349A                     u2600:
  7892  00349A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  7893  00349C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  7894  00349E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  7895  0034A0  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  7896  0034A2  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  7897  0034A4  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  7898  0034A6  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  7899  0034A8  6C09               	negf	___aomod@divisor^0,c
  7900  0034AA  0E00               	movlw	0
  7901  0034AC  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  7902  0034AE  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  7903  0034B0  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  7904  0034B2  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  7905  0034B4  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  7906  0034B6  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  7907  0034B8  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  7908  0034BA                     l3150:
  7909  0034BA  5009               	movf	___aomod@divisor^0,w,c
  7910  0034BC  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  7911  0034BE  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  7912  0034C0  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  7913  0034C2  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  7914  0034C4  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  7915  0034C6  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  7916  0034C8  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  7917  0034CA  B4D8               	btfsc	status,2,c
  7918  0034CC  EF6A  F01A         	goto	u2611
  7919  0034D0  EF6C  F01A         	goto	u2610
  7920  0034D4                     u2611:
  7921  0034D4  EFB4  F01A         	goto	l3166
  7922  0034D8                     u2610:
  7923  0034D8  0E01               	movlw	1
  7924  0034DA  6E11               	movwf	___aomod@counter^0,c
  7925  0034DC  EF7A  F01A         	goto	l3156
  7926  0034E0                     l3154:
  7927  0034E0  90D8               	bcf	status,0,c
  7928  0034E2  3609               	rlcf	___aomod@divisor^0,f,c
  7929  0034E4  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  7930  0034E6  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  7931  0034E8  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  7932  0034EA  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  7933  0034EC  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  7934  0034EE  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  7935  0034F0  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  7936  0034F2  2A11               	incf	___aomod@counter^0,f,c
  7937  0034F4                     l3156:
  7938  0034F4  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  7939  0034F6  EF7F  F01A         	goto	u2621
  7940  0034FA  EF81  F01A         	goto	u2620
  7941  0034FE                     u2621:
  7942  0034FE  EF70  F01A         	goto	l3154
  7943  003502                     u2620:
  7944  003502                     l3158:
  7945  003502  5009               	movf	___aomod@divisor^0,w,c
  7946  003504  5C01               	subwf	___aomod@dividend^0,w,c
  7947  003506  500A               	movf	(___aomod@divisor+1)^0,w,c
  7948  003508  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  7949  00350A  500B               	movf	(___aomod@divisor+2)^0,w,c
  7950  00350C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  7951  00350E  500C               	movf	(___aomod@divisor+3)^0,w,c
  7952  003510  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  7953  003512  500D               	movf	(___aomod@divisor+4)^0,w,c
  7954  003514  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  7955  003516  500E               	movf	(___aomod@divisor+5)^0,w,c
  7956  003518  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  7957  00351A  500F               	movf	(___aomod@divisor+6)^0,w,c
  7958  00351C  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  7959  00351E  5010               	movf	(___aomod@divisor+7)^0,w,c
  7960  003520  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  7961  003522  A0D8               	btfss	status,0,c
  7962  003524  EF96  F01A         	goto	u2631
  7963  003528  EF98  F01A         	goto	u2630
  7964  00352C                     u2631:
  7965  00352C  EFA8  F01A         	goto	l3162
  7966  003530                     u2630:
  7967  003530  5009               	movf	___aomod@divisor^0,w,c
  7968  003532  5E01               	subwf	___aomod@dividend^0,f,c
  7969  003534  500A               	movf	(___aomod@divisor+1)^0,w,c
  7970  003536  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  7971  003538  500B               	movf	(___aomod@divisor+2)^0,w,c
  7972  00353A  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  7973  00353C  500C               	movf	(___aomod@divisor+3)^0,w,c
  7974  00353E  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  7975  003540  500D               	movf	(___aomod@divisor+4)^0,w,c
  7976  003542  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  7977  003544  500E               	movf	(___aomod@divisor+5)^0,w,c
  7978  003546  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  7979  003548  500F               	movf	(___aomod@divisor+6)^0,w,c
  7980  00354A  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  7981  00354C  5010               	movf	(___aomod@divisor+7)^0,w,c
  7982  00354E  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  7983  003550                     l3162:
  7984  003550  90D8               	bcf	status,0,c
  7985  003552  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  7986  003554  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  7987  003556  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  7988  003558  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  7989  00355A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  7990  00355C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  7991  00355E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  7992  003560  3209               	rrcf	___aomod@divisor^0,f,c
  7993  003562  2E11               	decfsz	___aomod@counter^0,f,c
  7994  003564  EF81  F01A         	goto	l3158
  7995  003568                     l3166:
  7996  003568  5012               	movf	___aomod@sign^0,w,c
  7997  00356A  B4D8               	btfsc	status,2,c
  7998  00356C  EFBA  F01A         	goto	u2641
  7999  003570  EFBC  F01A         	goto	u2640
  8000  003574                     u2641:
  8001  003574  EFCC  F01A         	goto	l3170
  8002  003578                     u2640:
  8003  003578  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8004  00357A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8005  00357C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8006  00357E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8007  003580  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8008  003582  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8009  003584  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8010  003586  6C01               	negf	___aomod@dividend^0,c
  8011  003588  0E00               	movlw	0
  8012  00358A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8013  00358C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8014  00358E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8015  003590  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8016  003592  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8017  003594  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8018  003596  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8019  003598                     l3170:
  8020  003598  C001  F001         	movff	___aomod@dividend,?___aomod
  8021  00359C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8022  0035A0  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8023  0035A4  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8024  0035A8  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8025  0035AC  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8026  0035B0  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8027  0035B4  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8028  0035B8  0012               	return		;funcret
  8029  0035BA                     __end_of___aomod:
  8030                           	callstack 0
  8031                           
  8032 ;; *************** function ___aodiv *****************
  8033 ;; Defined at:
  8034 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  dividend        8    0[COMRAM] long long 
  8037 ;;  divisor         8    8[COMRAM] long long 
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;  quotient        8   18[COMRAM] long long 
  8040 ;;  sign            1   17[COMRAM] unsigned char 
  8041 ;;  counter         1   16[COMRAM] unsigned char 
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  8    0[COMRAM] long long 
  8044 ;; Registers used:
  8045 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8051 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8052 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8054 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;Total ram usage:       26 bytes
  8056 ;; Hardware stack levels used: 1
  8057 ;; This function calls:
  8058 ;;		Nothing
  8059 ;; This function is called by:
  8060 ;;		_dtoa
  8061 ;; This function uses a non-reentrant model
  8062 ;;
  8063                           
  8064                           	psect	text33
  8065  0032CE                     __ptext33:
  8066                           	callstack 0
  8067  0032CE                     ___aodiv:
  8068                           	callstack 25
  8069  0032CE  0E00               	movlw	0
  8070  0032D0  6E12               	movwf	___aodiv@sign^0,c
  8071  0032D2  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8072  0032D4  EF70  F019         	goto	u2520
  8073  0032D8  EF6E  F019         	goto	u2521
  8074  0032DC                     u2521:
  8075  0032DC  EF82  F019         	goto	l3102
  8076  0032E0                     u2520:
  8077  0032E0  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8078  0032E2  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8079  0032E4  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8080  0032E6  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8081  0032E8  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8082  0032EA  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8083  0032EC  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8084  0032EE  6C09               	negf	___aodiv@divisor^0,c
  8085  0032F0  0E00               	movlw	0
  8086  0032F2  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8087  0032F4  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8088  0032F6  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8089  0032F8  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8090  0032FA  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8091  0032FC  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8092  0032FE  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8093  003300  0E01               	movlw	1
  8094  003302  6E12               	movwf	___aodiv@sign^0,c
  8095  003304                     l3102:
  8096  003304  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8097  003306  EF89  F019         	goto	u2530
  8098  00330A  EF87  F019         	goto	u2531
  8099  00330E                     u2531:
  8100  00330E  EF9B  F019         	goto	l3108
  8101  003312                     u2530:
  8102  003312  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8103  003314  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8104  003316  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8105  003318  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8106  00331A  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8107  00331C  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8108  00331E  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8109  003320  6C01               	negf	___aodiv@dividend^0,c
  8110  003322  0E00               	movlw	0
  8111  003324  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8112  003326  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8113  003328  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8114  00332A  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8115  00332C  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8116  00332E  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8117  003330  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8118  003332  0E01               	movlw	1
  8119  003334  1A12               	xorwf	___aodiv@sign^0,f,c
  8120  003336                     l3108:
  8121  003336  EE20  F013         	lfsr	2,___aodiv@quotient
  8122  00333A  0E07               	movlw	7
  8123  00333C                     u2541:
  8124  00333C  6ADE               	clrf	postinc2,c
  8125  00333E  06E8               	decf	wreg,f,c
  8126  003340  E2FD               	bc	u2541
  8127  003342  5009               	movf	___aodiv@divisor^0,w,c
  8128  003344  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8129  003346  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8130  003348  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8131  00334A  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8132  00334C  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8133  00334E  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8134  003350  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8135  003352  B4D8               	btfsc	status,2,c
  8136  003354  EFAE  F019         	goto	u2551
  8137  003358  EFB0  F019         	goto	u2550
  8138  00335C                     u2551:
  8139  00335C  EF02  F01A         	goto	l3130
  8140  003360                     u2550:
  8141  003360  0E01               	movlw	1
  8142  003362  6E11               	movwf	___aodiv@counter^0,c
  8143  003364  EFBE  F019         	goto	l3116
  8144  003368                     l3114:
  8145  003368  90D8               	bcf	status,0,c
  8146  00336A  3609               	rlcf	___aodiv@divisor^0,f,c
  8147  00336C  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8148  00336E  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8149  003370  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8150  003372  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8151  003374  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8152  003376  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8153  003378  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8154  00337A  2A11               	incf	___aodiv@counter^0,f,c
  8155  00337C                     l3116:
  8156  00337C  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8157  00337E  EFC3  F019         	goto	u2561
  8158  003382  EFC5  F019         	goto	u2560
  8159  003386                     u2561:
  8160  003386  EFB4  F019         	goto	l3114
  8161  00338A                     u2560:
  8162  00338A                     l3118:
  8163  00338A  90D8               	bcf	status,0,c
  8164  00338C  3613               	rlcf	___aodiv@quotient^0,f,c
  8165  00338E  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8166  003390  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8167  003392  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8168  003394  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8169  003396  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8170  003398  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8171  00339A  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8172  00339C  5009               	movf	___aodiv@divisor^0,w,c
  8173  00339E  5C01               	subwf	___aodiv@dividend^0,w,c
  8174  0033A0  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8175  0033A2  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8176  0033A4  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8177  0033A6  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8178  0033A8  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8179  0033AA  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8180  0033AC  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8181  0033AE  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8182  0033B0  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8183  0033B2  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8184  0033B4  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8185  0033B6  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8186  0033B8  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8187  0033BA  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8188  0033BC  A0D8               	btfss	status,0,c
  8189  0033BE  EFE3  F019         	goto	u2571
  8190  0033C2  EFE5  F019         	goto	u2570
  8191  0033C6                     u2571:
  8192  0033C6  EFF6  F019         	goto	l3126
  8193  0033CA                     u2570:
  8194  0033CA  5009               	movf	___aodiv@divisor^0,w,c
  8195  0033CC  5E01               	subwf	___aodiv@dividend^0,f,c
  8196  0033CE  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8197  0033D0  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8198  0033D2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8199  0033D4  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8200  0033D6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8201  0033D8  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8202  0033DA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8203  0033DC  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8204  0033DE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8205  0033E0  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8206  0033E2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8207  0033E4  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8208  0033E6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8209  0033E8  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8210  0033EA  8013               	bsf	___aodiv@quotient^0,0,c
  8211  0033EC                     l3126:
  8212  0033EC  90D8               	bcf	status,0,c
  8213  0033EE  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8214  0033F0  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8215  0033F2  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8216  0033F4  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8217  0033F6  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8218  0033F8  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8219  0033FA  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8220  0033FC  3209               	rrcf	___aodiv@divisor^0,f,c
  8221  0033FE  2E11               	decfsz	___aodiv@counter^0,f,c
  8222  003400  EFC5  F019         	goto	l3118
  8223  003404                     l3130:
  8224  003404  5012               	movf	___aodiv@sign^0,w,c
  8225  003406  B4D8               	btfsc	status,2,c
  8226  003408  EF08  F01A         	goto	u2581
  8227  00340C  EF0A  F01A         	goto	u2580
  8228  003410                     u2581:
  8229  003410  EF1A  F01A         	goto	l3134
  8230  003414                     u2580:
  8231  003414  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8232  003416  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8233  003418  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8234  00341A  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8235  00341C  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8236  00341E  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8237  003420  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8238  003422  6C13               	negf	___aodiv@quotient^0,c
  8239  003424  0E00               	movlw	0
  8240  003426  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8241  003428  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8242  00342A  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8243  00342C  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8244  00342E  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8245  003430  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8246  003432  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8247  003434                     l3134:
  8248  003434  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8249  003438  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8250  00343C  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8251  003440  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8252  003444  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8253  003448  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8254  00344C  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8255  003450  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8256  003454  0012               	return		;funcret
  8257  003456                     __end_of___aodiv:
  8258                           	callstack 0
  8259                           
  8260 ;; *************** function _sendStringSerial4 *****************
  8261 ;; Defined at:
  8262 ;;		line 36 in file "serial.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;  string          2    1[COMRAM] PTR unsigned char 
  8265 ;;		 -> voltage_display@buf(80), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;		None
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8281 ;;Total ram usage:        2 bytes
  8282 ;; Hardware stack levels used: 1
  8283 ;; Hardware stack levels required when called: 1
  8284 ;; This function calls:
  8285 ;;		_sendCharSerial4
  8286 ;; This function is called by:
  8287 ;;		_color_display
  8288 ;;		_color_predict
  8289 ;;		_check_color_reading
  8290 ;;		_voltage_display
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           	psect	text34
  8295  0041F8                     __ptext34:
  8296                           	callstack 0
  8297  0041F8                     _sendStringSerial4:
  8298                           	callstack 28
  8299  0041F8                     
  8300                           ;serial.c: 38:     while(*string != 0){
  8301  0041F8  EF07  F021         	goto	l3760
  8302  0041FC                     l3756:
  8303                           
  8304                           ;serial.c: 39:   sendCharSerial4(*string++);}
  8305  0041FC  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8306  004200  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8307  004204  50DF               	movf	indf2,w,c
  8308  004206  ECAA  F021         	call	_sendCharSerial4
  8309  00420A  4A02               	infsnz	sendStringSerial4@string^0,f,c
  8310  00420C  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  8311  00420E                     l3760:
  8312                           
  8313                           ;serial.c: 38:     while(*string != 0){
  8314  00420E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8315  004212  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8316  004216  50DF               	movf	indf2,w,c
  8317  004218  A4D8               	btfss	status,2,c
  8318  00421A  EF11  F021         	goto	u3591
  8319  00421E  EF13  F021         	goto	u3590
  8320  004222                     u3591:
  8321  004222  EFFE  F020         	goto	l3756
  8322  004226                     u3590:
  8323  004226  0012               	return		;funcret
  8324  004228                     __end_of_sendStringSerial4:
  8325                           	callstack 0
  8326                           
  8327 ;; *************** function _sendCharSerial4 *****************
  8328 ;; Defined at:
  8329 ;;		line 29 in file "serial.c"
  8330 ;; Parameters:    Size  Location     Type
  8331 ;;  charToSend      1    wreg     unsigned char 
  8332 ;; Auto vars:     Size  Location     Type
  8333 ;;  charToSend      1    0[COMRAM] unsigned char 
  8334 ;; Return value:  Size  Location     Type
  8335 ;;                  1    wreg      void 
  8336 ;; Registers used:
  8337 ;;		wreg
  8338 ;; Tracked objects:
  8339 ;;		On entry : 0/0
  8340 ;;		On exit  : 0/0
  8341 ;;		Unchanged: 0/0
  8342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8346 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8347 ;;Total ram usage:        1 bytes
  8348 ;; Hardware stack levels used: 1
  8349 ;; This function calls:
  8350 ;;		Nothing
  8351 ;; This function is called by:
  8352 ;;		_sendStringSerial4
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           	psect	text35
  8357  004354                     __ptext35:
  8358                           	callstack 0
  8359  004354                     _sendCharSerial4:
  8360                           	callstack 28
  8361                           
  8362                           ;incstack = 0
  8363                           ;sendCharSerial4@charToSend stored from wreg
  8364  004354  6E01               	movwf	sendCharSerial4@charToSend^0,c
  8365  004356                     l417:
  8366  004356  010E               	movlb	14	; () banked
  8367  004358  A537               	btfss	55,2,b	;volatile
  8368  00435A  EFB1  F021         	goto	u3321
  8369  00435E  EFB3  F021         	goto	u3320
  8370  004362                     u3321:
  8371  004362  EFAB  F021         	goto	l417
  8372  004366                     u3320:
  8373  004366                     
  8374                           ; BSR set to: 14
  8375                           ;serial.c: 31:     TX4REG = charToSend;
  8376  004366  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  8377  00436A                     
  8378                           ; BSR set to: 14
  8379  00436A  0012               	return		;funcret
  8380  00436C                     __end_of_sendCharSerial4:
  8381                           	callstack 0
  8382                           
  8383 ;; *************** function _LED_C *****************
  8384 ;; Defined at:
  8385 ;;		line 109 in file "color.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		wreg
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8401 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8403 ;;Total ram usage:        2 bytes
  8404 ;; Hardware stack levels used: 1
  8405 ;; This function calls:
  8406 ;;		Nothing
  8407 ;; This function is called by:
  8408 ;;		_color_data_collection
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text36
  8413  00427A                     __ptext36:
  8414                           	callstack 0
  8415  00427A                     _LED_C:
  8416                           	callstack 29
  8417  00427A                     
  8418                           ;color.c: 111:     LATGbits.LATG1 = 1;
  8419  00427A  827F               	bsf	127,1,c	;volatile
  8420                           
  8421                           ;color.c: 112:     LATFbits.LATF7 = 1;
  8422  00427C  8E7E               	bsf	126,7,c	;volatile
  8423                           
  8424                           ;color.c: 113:     LATAbits.LATA4 = 1;
  8425  00427E  8879               	bsf	121,4,c	;volatile
  8426  004280                     
  8427                           ;color.c: 114:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8428  004280  0E11               	movlw	17
  8429  004282  6E02               	movwf	(??_LED_C+1)^0,c
  8430  004284  0E3C               	movlw	60
  8431  004286  6E01               	movwf	??_LED_C^0,c
  8432  004288  0ECB               	movlw	203
  8433  00428A                     u5027:
  8434  00428A  2EE8               	decfsz	wreg,f,c
  8435  00428C  D7FE               	bra	u5027
  8436  00428E  2E01               	decfsz	??_LED_C^0,f,c
  8437  004290  D7FC               	bra	u5027
  8438  004292  2E02               	decfsz	(??_LED_C+1)^0,f,c
  8439  004294  D7FA               	bra	u5027
  8440  004296  F000               	nop	
  8441  004298  0012               	return		;funcret
  8442  00429A                     __end_of_LED_C:
  8443                           	callstack 0
  8444                           
  8445 ;; *************** function _color_click_init *****************
  8446 ;; Defined at:
  8447 ;;		line 12 in file "color.c"
  8448 ;; Parameters:    Size  Location     Type
  8449 ;;		None
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;		None
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      void 
  8454 ;; Registers used:
  8455 ;;		wreg, status,2, status,0, cstack
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8463 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8464 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8465 ;;Total ram usage:        1 bytes
  8466 ;; Hardware stack levels used: 1
  8467 ;; Hardware stack levels required when called: 3
  8468 ;; This function calls:
  8469 ;;		_I2C_2_Master_Init
  8470 ;;		_color_writetoaddr
  8471 ;; This function is called by:
  8472 ;;		_main
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           	psect	text37
  8477  0041C4                     __ptext37:
  8478                           	callstack 0
  8479  0041C4                     _color_click_init:
  8480                           	callstack 27
  8481  0041C4                     
  8482                           ;color.c: 15:     I2C_2_Master_Init();
  8483  0041C4  EC14  F021         	call	_I2C_2_Master_Init	;wreg free
  8484  0041C8                     
  8485                           ;color.c: 18:   color_writetoaddr(0x00, 0x01);
  8486  0041C8  0E01               	movlw	1
  8487  0041CA  6E03               	movwf	color_writetoaddr@value^0,c
  8488  0041CC  0E00               	movlw	0
  8489  0041CE  EC4D  F021         	call	_color_writetoaddr
  8490  0041D2                     
  8491                           ;color.c: 19:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8492  0041D2  0E3F               	movlw	63
  8493  0041D4  6E05               	movwf	??_color_click_init^0,c
  8494  0041D6  0E55               	movlw	85
  8495  0041D8                     u5037:
  8496  0041D8  2EE8               	decfsz	wreg,f,c
  8497  0041DA  D7FE               	bra	u5037
  8498  0041DC  2E05               	decfsz	??_color_click_init^0,f,c
  8499  0041DE  D7FC               	bra	u5037
  8500  0041E0  F000               	nop	
  8501  0041E2                     
  8502                           ;color.c: 22:  color_writetoaddr(0x00, 0x03);
  8503  0041E2  0E03               	movlw	3
  8504  0041E4  6E03               	movwf	color_writetoaddr@value^0,c
  8505  0041E6  0E00               	movlw	0
  8506  0041E8  EC4D  F021         	call	_color_writetoaddr
  8507  0041EC                     
  8508                           ;color.c: 25:  color_writetoaddr(0x01, 0xD5);
  8509  0041EC  0ED5               	movlw	213
  8510  0041EE  6E03               	movwf	color_writetoaddr@value^0,c
  8511  0041F0  0E01               	movlw	1
  8512  0041F2  EC4D  F021         	call	_color_writetoaddr
  8513  0041F6  0012               	return		;funcret
  8514  0041F8                     __end_of_color_click_init:
  8515                           	callstack 0
  8516                           
  8517 ;; *************** function _color_writetoaddr *****************
  8518 ;; Defined at:
  8519 ;;		line 28 in file "color.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;  address         1    wreg     unsigned char 
  8522 ;;  value           1    2[COMRAM] unsigned char 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;  address         1    3[COMRAM] unsigned char 
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  1    wreg      void 
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0, cstack
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8534 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8538 ;;Total ram usage:        2 bytes
  8539 ;; Hardware stack levels used: 1
  8540 ;; Hardware stack levels required when called: 2
  8541 ;; This function calls:
  8542 ;;		_I2C_2_Master_Start
  8543 ;;		_I2C_2_Master_Stop
  8544 ;;		_I2C_2_Master_Write
  8545 ;; This function is called by:
  8546 ;;		_color_click_init
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text38
  8551  00429A                     __ptext38:
  8552                           	callstack 0
  8553  00429A                     _color_writetoaddr:
  8554                           	callstack 27
  8555                           
  8556                           ;incstack = 0
  8557                           ;color_writetoaddr@address stored from wreg
  8558  00429A  6E04               	movwf	color_writetoaddr@address^0,c
  8559  00429C                     
  8560                           ;color.c: 29:     I2C_2_Master_Start();
  8561  00429C  ECC1  F021         	call	_I2C_2_Master_Start	;wreg free
  8562                           
  8563                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  8564  0042A0  0E52               	movlw	82
  8565  0042A2  ECB6  F021         	call	_I2C_2_Master_Write
  8566                           
  8567                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  8568  0042A6  5004               	movf	color_writetoaddr@address^0,w,c
  8569  0042A8  0980               	iorlw	128
  8570  0042AA  ECB6  F021         	call	_I2C_2_Master_Write
  8571                           
  8572                           ;color.c: 32:     I2C_2_Master_Write(value);
  8573  0042AE  5003               	movf	color_writetoaddr@value^0,w,c
  8574  0042B0  ECB6  F021         	call	_I2C_2_Master_Write
  8575                           
  8576                           ;color.c: 33:     I2C_2_Master_Stop();
  8577  0042B4  ECBC  F021         	call	_I2C_2_Master_Stop	;wreg free
  8578  0042B8  0012               	return		;funcret
  8579  0042BA                     __end_of_color_writetoaddr:
  8580                           	callstack 0
  8581                           
  8582 ;; *************** function _I2C_2_Master_Init *****************
  8583 ;; Defined at:
  8584 ;;		line 4 in file "i2c.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;		None
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;		None
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  1    wreg      void 
  8591 ;; Registers used:
  8592 ;;		wreg, status,2
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8602 ;;Total ram usage:        0 bytes
  8603 ;; Hardware stack levels used: 1
  8604 ;; This function calls:
  8605 ;;		Nothing
  8606 ;; This function is called by:
  8607 ;;		_color_click_init
  8608 ;;		_main
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           	psect	text39
  8613  004228                     __ptext39:
  8614                           	callstack 0
  8615  004228                     _I2C_2_Master_Init:
  8616                           	callstack 29
  8617  004228                     
  8618                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8619  004228  010E               	movlb	14	; () banked
  8620  00422A  51D9               	movf	217,w,b	;volatile
  8621  00422C  0BF0               	andlw	-16
  8622  00422E  0908               	iorlw	8
  8623  004230  6FD9               	movwf	217,b	;volatile
  8624  004232                     
  8625                           ; BSR set to: 14
  8626                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8627  004232  8BD9               	bsf	217,5,b	;volatile
  8628                           
  8629                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8630  004234  0E9F               	movlw	159
  8631  004236  6FD6               	movwf	214,b	;volatile
  8632  004238                     
  8633                           ; BSR set to: 14
  8634                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8635  004238  8A84               	bsf	132,5,c	;volatile
  8636  00423A                     
  8637                           ; BSR set to: 14
  8638                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8639  00423A  8C84               	bsf	132,6,c	;volatile
  8640  00423C                     
  8641                           ; BSR set to: 14
  8642                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8643  00423C  9BA7               	bcf	167,5,b	;volatile
  8644  00423E                     
  8645                           ; BSR set to: 14
  8646                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8647  00423E  9DA7               	bcf	167,6,b	;volatile
  8648                           
  8649                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8650  004240  0E1D               	movlw	29
  8651  004242  6F1D               	movwf	29,b	;volatile
  8652                           
  8653                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8654  004244  0E1E               	movlw	30
  8655  004246  6F1C               	movwf	28,b	;volatile
  8656                           
  8657                           ;i2c.c: 18:   RD5PPS=0x1C;
  8658  004248  0E1C               	movlw	28
  8659  00424A  6F6F               	movwf	111,b	;volatile
  8660                           
  8661                           ;i2c.c: 19:   RD6PPS=0x1B;
  8662  00424C  0E1B               	movlw	27
  8663  00424E  6F70               	movwf	112,b	;volatile
  8664  004250                     
  8665                           ; BSR set to: 14
  8666  004250  0012               	return		;funcret
  8667  004252                     __end_of_I2C_2_Master_Init:
  8668                           	callstack 0
  8669                           
  8670 ;; *************** function _calibrate_white *****************
  8671 ;; Defined at:
  8672 ;;		line 207 in file "color.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;  w               2   11[COMRAM] PTR struct white_card
  8675 ;;		 -> main@white(18), 
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;		None
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1    wreg      void 
  8680 ;; Registers used:
  8681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8690 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;Total ram usage:        4 bytes
  8692 ;; Hardware stack levels used: 1
  8693 ;; Hardware stack levels required when called: 3
  8694 ;; This function calls:
  8695 ;;		_LED_B
  8696 ;;		_LED_G
  8697 ;;		_LED_R
  8698 ;;		_color_read_Blue
  8699 ;;		_color_read_Green
  8700 ;;		_color_read_Red
  8701 ;; This function is called by:
  8702 ;;		_main
  8703 ;; This function uses a non-reentrant model
  8704 ;;
  8705                           
  8706                           	psect	text40
  8707  0035BA                     __ptext40:
  8708                           	callstack 0
  8709  0035BA                     _calibrate_white:
  8710                           	callstack 27
  8711  0035BA                     
  8712                           ;color.c: 207: void calibrate_white(struct white_card *w);color.c: 208: {;color.c: 209: 
      +                              LED_R();
  8713  0035BA  EC5D  F021         	call	_LED_R	;wreg free
  8714  0035BE                     
  8715                           ;color.c: 211:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  8716  0035BE  EC33  F01F         	call	_color_read_Red	;wreg free
  8717  0035C2  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  8718  0035C6  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  8719  0035CA  C005  FFDE         	movff	?_color_read_Red,postinc2
  8720  0035CE  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8721  0035D2  EC5B  F01F         	call	_color_read_Green	;wreg free
  8722  0035D6  EE20 F002          	lfsr	2,2
  8723  0035DA  500C               	movf	calibrate_white@w^0,w,c
  8724  0035DC  26D9               	addwf	fsr2l,f,c
  8725  0035DE  500D               	movf	(calibrate_white@w+1)^0,w,c
  8726  0035E0  22DA               	addwfc	fsr2h,f,c
  8727  0035E2  C005  FFDE         	movff	?_color_read_Green,postinc2
  8728  0035E6  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8729  0035EA  EC83  F01F         	call	_color_read_Blue	;wreg free
  8730  0035EE  EE20 F004          	lfsr	2,4
  8731  0035F2  500C               	movf	calibrate_white@w^0,w,c
  8732  0035F4  26D9               	addwf	fsr2l,f,c
  8733  0035F6  500D               	movf	(calibrate_white@w+1)^0,w,c
  8734  0035F8  22DA               	addwfc	fsr2h,f,c
  8735  0035FA  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8736  0035FE  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8737  003602                     
  8738                           ;color.c: 212:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8739  003602  0E09               	movlw	9
  8740  003604  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8741  003606  0E1E               	movlw	30
  8742  003608  6E0E               	movwf	??_calibrate_white^0,c
  8743  00360A  0EE4               	movlw	228
  8744  00360C                     u5047:
  8745  00360C  2EE8               	decfsz	wreg,f,c
  8746  00360E  D7FE               	bra	u5047
  8747  003610  2E0E               	decfsz	??_calibrate_white^0,f,c
  8748  003612  D7FC               	bra	u5047
  8749  003614  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8750  003616  D7FA               	bra	u5047
  8751  003618  D000               	nop2	
  8752  00361A                     
  8753                           ;color.c: 214:     LED_G();
  8754  00361A  EC6D  F021         	call	_LED_G	;wreg free
  8755  00361E                     
  8756                           ;color.c: 216:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  8757  00361E  EC33  F01F         	call	_color_read_Red	;wreg free
  8758  003622  EE20 F006          	lfsr	2,6
  8759  003626  500C               	movf	calibrate_white@w^0,w,c
  8760  003628  26D9               	addwf	fsr2l,f,c
  8761  00362A  500D               	movf	(calibrate_white@w+1)^0,w,c
  8762  00362C  22DA               	addwfc	fsr2h,f,c
  8763  00362E  C005  FFDE         	movff	?_color_read_Red,postinc2
  8764  003632  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8765  003636  EC5B  F01F         	call	_color_read_Green	;wreg free
  8766  00363A  EE20 F008          	lfsr	2,8
  8767  00363E  500C               	movf	calibrate_white@w^0,w,c
  8768  003640  26D9               	addwf	fsr2l,f,c
  8769  003642  500D               	movf	(calibrate_white@w+1)^0,w,c
  8770  003644  22DA               	addwfc	fsr2h,f,c
  8771  003646  C005  FFDE         	movff	?_color_read_Green,postinc2
  8772  00364A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8773  00364E  EC83  F01F         	call	_color_read_Blue	;wreg free
  8774  003652  EE20 F00A          	lfsr	2,10
  8775  003656  500C               	movf	calibrate_white@w^0,w,c
  8776  003658  26D9               	addwf	fsr2l,f,c
  8777  00365A  500D               	movf	(calibrate_white@w+1)^0,w,c
  8778  00365C  22DA               	addwfc	fsr2h,f,c
  8779  00365E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8780  003662  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8781                           
  8782                           ;color.c: 217:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8783  003666  0E09               	movlw	9
  8784  003668  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8785  00366A  0E1E               	movlw	30
  8786  00366C  6E0E               	movwf	??_calibrate_white^0,c
  8787  00366E  0EE4               	movlw	228
  8788  003670                     u5057:
  8789  003670  2EE8               	decfsz	wreg,f,c
  8790  003672  D7FE               	bra	u5057
  8791  003674  2E0E               	decfsz	??_calibrate_white^0,f,c
  8792  003676  D7FC               	bra	u5057
  8793  003678  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8794  00367A  D7FA               	bra	u5057
  8795  00367C  D000               	nop2	
  8796  00367E                     
  8797                           ;color.c: 219:     LED_B();
  8798  00367E  EC7D  F021         	call	_LED_B	;wreg free
  8799  003682                     
  8800                           ;color.c: 221:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue();
  8801  003682  EC33  F01F         	call	_color_read_Red	;wreg free
  8802  003686  EE20 F00C          	lfsr	2,12
  8803  00368A  500C               	movf	calibrate_white@w^0,w,c
  8804  00368C  26D9               	addwf	fsr2l,f,c
  8805  00368E  500D               	movf	(calibrate_white@w+1)^0,w,c
  8806  003690  22DA               	addwfc	fsr2h,f,c
  8807  003692  C005  FFDE         	movff	?_color_read_Red,postinc2
  8808  003696  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8809  00369A  EC5B  F01F         	call	_color_read_Green	;wreg free
  8810  00369E  EE20 F00E          	lfsr	2,14
  8811  0036A2  500C               	movf	calibrate_white@w^0,w,c
  8812  0036A4  26D9               	addwf	fsr2l,f,c
  8813  0036A6  500D               	movf	(calibrate_white@w+1)^0,w,c
  8814  0036A8  22DA               	addwfc	fsr2h,f,c
  8815  0036AA  C005  FFDE         	movff	?_color_read_Green,postinc2
  8816  0036AE  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8817  0036B2  EC83  F01F         	call	_color_read_Blue	;wreg free
  8818  0036B6  EE20 F010          	lfsr	2,16
  8819  0036BA  500C               	movf	calibrate_white@w^0,w,c
  8820  0036BC  26D9               	addwf	fsr2l,f,c
  8821  0036BE  500D               	movf	(calibrate_white@w+1)^0,w,c
  8822  0036C0  22DA               	addwfc	fsr2h,f,c
  8823  0036C2  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8824  0036C6  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8825  0036CA                     
  8826                           ;color.c: 222:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8827  0036CA  0E09               	movlw	9
  8828  0036CC  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8829  0036CE  0E1E               	movlw	30
  8830  0036D0  6E0E               	movwf	??_calibrate_white^0,c
  8831  0036D2  0EE4               	movlw	228
  8832  0036D4                     u5067:
  8833  0036D4  2EE8               	decfsz	wreg,f,c
  8834  0036D6  D7FE               	bra	u5067
  8835  0036D8  2E0E               	decfsz	??_calibrate_white^0,f,c
  8836  0036DA  D7FC               	bra	u5067
  8837  0036DC  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8838  0036DE  D7FA               	bra	u5067
  8839  0036E0  D000               	nop2	
  8840  0036E2  0012               	return		;funcret
  8841  0036E4                     __end_of_calibrate_white:
  8842                           	callstack 0
  8843                           
  8844 ;; *************** function _color_read_Red *****************
  8845 ;; Defined at:
  8846 ;;		line 36 in file "color.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;		None
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;  tmp             2    9[COMRAM] unsigned int 
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  2    4[COMRAM] unsigned int 
  8853 ;; Registers used:
  8854 ;;		wreg, status,2, status,0, cstack
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8861 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8862 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8863 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8864 ;;Total ram usage:        7 bytes
  8865 ;; Hardware stack levels used: 1
  8866 ;; Hardware stack levels required when called: 2
  8867 ;; This function calls:
  8868 ;;		_I2C_2_Master_Read
  8869 ;;		_I2C_2_Master_RepStart
  8870 ;;		_I2C_2_Master_Start
  8871 ;;		_I2C_2_Master_Stop
  8872 ;;		_I2C_2_Master_Write
  8873 ;; This function is called by:
  8874 ;;		_read_color
  8875 ;;		_calibrate_white
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879                           	psect	text41
  8880  003E66                     __ptext41:
  8881                           	callstack 0
  8882  003E66                     _color_read_Red:
  8883                           	callstack 26
  8884  003E66                     
  8885                           ;color.c: 38:  unsigned int tmp;;color.c: 39:  I2C_2_Master_Start();
  8886  003E66  ECC1  F021         	call	_I2C_2_Master_Start	;wreg free
  8887                           
  8888                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x00);
  8889  003E6A  0E52               	movlw	82
  8890  003E6C  ECB6  F021         	call	_I2C_2_Master_Write
  8891                           
  8892                           ;color.c: 41:  I2C_2_Master_Write(0xA0 | 0x16);
  8893  003E70  0EB6               	movlw	182
  8894  003E72  ECB6  F021         	call	_I2C_2_Master_Write
  8895                           
  8896                           ;color.c: 42:  I2C_2_Master_RepStart();
  8897  003E76  ECC6  F021         	call	_I2C_2_Master_RepStart	;wreg free
  8898                           
  8899                           ;color.c: 43:  I2C_2_Master_Write(0x52 | 0x01);
  8900  003E7A  0E53               	movlw	83
  8901  003E7C  ECB6  F021         	call	_I2C_2_Master_Write
  8902                           
  8903                           ;color.c: 44:  tmp=I2C_2_Master_Read(1);
  8904  003E80  0E01               	movlw	1
  8905  003E82  EC11  F020         	call	_I2C_2_Master_Read
  8906  003E86  6E07               	movwf	??_color_read_Red^0,c
  8907  003E88  5007               	movf	??_color_read_Red^0,w,c
  8908  003E8A  6E0A               	movwf	color_read_Red@tmp^0,c
  8909  003E8C  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  8910                           
  8911                           ;color.c: 45:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8912  003E8E  0E00               	movlw	0
  8913  003E90  EC11  F020         	call	_I2C_2_Master_Read
  8914  003E94  6E07               	movwf	??_color_read_Red^0,c
  8915  003E96  5007               	movf	??_color_read_Red^0,w,c
  8916  003E98  6E09               	movwf	(??_color_read_Red+2)^0,c
  8917  003E9A  6A08               	clrf	(??_color_read_Red+1)^0,c
  8918  003E9C  500A               	movf	color_read_Red@tmp^0,w,c
  8919  003E9E  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  8920  003EA0  6E0A               	movwf	color_read_Red@tmp^0,c
  8921  003EA2  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  8922  003EA4  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  8923  003EA6  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  8924                           
  8925                           ;color.c: 46:  I2C_2_Master_Stop();
  8926  003EA8  ECBC  F021         	call	_I2C_2_Master_Stop	;wreg free
  8927  003EAC                     
  8928                           ;color.c: 47:  return tmp;
  8929  003EAC  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  8930  003EB0  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  8931  003EB4  0012               	return		;funcret
  8932  003EB6                     __end_of_color_read_Red:
  8933                           	callstack 0
  8934                           
  8935 ;; *************** function _color_read_Green *****************
  8936 ;; Defined at:
  8937 ;;		line 64 in file "color.c"
  8938 ;; Parameters:    Size  Location     Type
  8939 ;;		None
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;  tmp             2    9[COMRAM] unsigned int 
  8942 ;; Return value:  Size  Location     Type
  8943 ;;                  2    4[COMRAM] unsigned int 
  8944 ;; Registers used:
  8945 ;;		wreg, status,2, status,0, cstack
  8946 ;; Tracked objects:
  8947 ;;		On entry : 0/0
  8948 ;;		On exit  : 0/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8952 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8953 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8954 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8955 ;;Total ram usage:        7 bytes
  8956 ;; Hardware stack levels used: 1
  8957 ;; Hardware stack levels required when called: 2
  8958 ;; This function calls:
  8959 ;;		_I2C_2_Master_Read
  8960 ;;		_I2C_2_Master_RepStart
  8961 ;;		_I2C_2_Master_Start
  8962 ;;		_I2C_2_Master_Stop
  8963 ;;		_I2C_2_Master_Write
  8964 ;; This function is called by:
  8965 ;;		_read_color
  8966 ;;		_calibrate_white
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text42
  8971  003EB6                     __ptext42:
  8972                           	callstack 0
  8973  003EB6                     _color_read_Green:
  8974                           	callstack 26
  8975  003EB6                     
  8976                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  8977  003EB6  ECC1  F021         	call	_I2C_2_Master_Start	;wreg free
  8978                           
  8979                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  8980  003EBA  0E52               	movlw	82
  8981  003EBC  ECB6  F021         	call	_I2C_2_Master_Write
  8982                           
  8983                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x18);
  8984  003EC0  0EB8               	movlw	184
  8985  003EC2  ECB6  F021         	call	_I2C_2_Master_Write
  8986                           
  8987                           ;color.c: 70:  I2C_2_Master_RepStart();
  8988  003EC6  ECC6  F021         	call	_I2C_2_Master_RepStart	;wreg free
  8989                           
  8990                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  8991  003ECA  0E53               	movlw	83
  8992  003ECC  ECB6  F021         	call	_I2C_2_Master_Write
  8993                           
  8994                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  8995  003ED0  0E01               	movlw	1
  8996  003ED2  EC11  F020         	call	_I2C_2_Master_Read
  8997  003ED6  6E07               	movwf	??_color_read_Green^0,c
  8998  003ED8  5007               	movf	??_color_read_Green^0,w,c
  8999  003EDA  6E0A               	movwf	color_read_Green@tmp^0,c
  9000  003EDC  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  9001                           
  9002                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9003  003EDE  0E00               	movlw	0
  9004  003EE0  EC11  F020         	call	_I2C_2_Master_Read
  9005  003EE4  6E07               	movwf	??_color_read_Green^0,c
  9006  003EE6  5007               	movf	??_color_read_Green^0,w,c
  9007  003EE8  6E09               	movwf	(??_color_read_Green+2)^0,c
  9008  003EEA  6A08               	clrf	(??_color_read_Green+1)^0,c
  9009  003EEC  500A               	movf	color_read_Green@tmp^0,w,c
  9010  003EEE  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  9011  003EF0  6E0A               	movwf	color_read_Green@tmp^0,c
  9012  003EF2  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  9013  003EF4  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  9014  003EF6  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  9015                           
  9016                           ;color.c: 74:  I2C_2_Master_Stop();
  9017  003EF8  ECBC  F021         	call	_I2C_2_Master_Stop	;wreg free
  9018  003EFC                     
  9019                           ;color.c: 75:  return tmp;
  9020  003EFC  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  9021  003F00  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  9022  003F04  0012               	return		;funcret
  9023  003F06                     __end_of_color_read_Green:
  9024                           	callstack 0
  9025                           
  9026 ;; *************** function _color_read_Blue *****************
  9027 ;; Defined at:
  9028 ;;		line 50 in file "color.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;		None
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;  tmp             2    9[COMRAM] unsigned int 
  9033 ;; Return value:  Size  Location     Type
  9034 ;;                  2    4[COMRAM] unsigned int 
  9035 ;; Registers used:
  9036 ;;		wreg, status,2, status,0, cstack
  9037 ;; Tracked objects:
  9038 ;;		On entry : 0/0
  9039 ;;		On exit  : 0/0
  9040 ;;		Unchanged: 0/0
  9041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9042 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9043 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9044 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9045 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9046 ;;Total ram usage:        7 bytes
  9047 ;; Hardware stack levels used: 1
  9048 ;; Hardware stack levels required when called: 2
  9049 ;; This function calls:
  9050 ;;		_I2C_2_Master_Read
  9051 ;;		_I2C_2_Master_RepStart
  9052 ;;		_I2C_2_Master_Start
  9053 ;;		_I2C_2_Master_Stop
  9054 ;;		_I2C_2_Master_Write
  9055 ;; This function is called by:
  9056 ;;		_read_color
  9057 ;;		_calibrate_white
  9058 ;; This function uses a non-reentrant model
  9059 ;;
  9060                           
  9061                           	psect	text43
  9062  003F06                     __ptext43:
  9063                           	callstack 0
  9064  003F06                     _color_read_Blue:
  9065                           	callstack 26
  9066  003F06                     
  9067                           ;color.c: 52:  unsigned int tmp;;color.c: 53:  I2C_2_Master_Start();
  9068  003F06  ECC1  F021         	call	_I2C_2_Master_Start	;wreg free
  9069                           
  9070                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x00);
  9071  003F0A  0E52               	movlw	82
  9072  003F0C  ECB6  F021         	call	_I2C_2_Master_Write
  9073                           
  9074                           ;color.c: 55:  I2C_2_Master_Write(0xA0 | 0x1A);
  9075  003F10  0EBA               	movlw	186
  9076  003F12  ECB6  F021         	call	_I2C_2_Master_Write
  9077                           
  9078                           ;color.c: 56:  I2C_2_Master_RepStart();
  9079  003F16  ECC6  F021         	call	_I2C_2_Master_RepStart	;wreg free
  9080                           
  9081                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x01);
  9082  003F1A  0E53               	movlw	83
  9083  003F1C  ECB6  F021         	call	_I2C_2_Master_Write
  9084                           
  9085                           ;color.c: 58:  tmp=I2C_2_Master_Read(1);
  9086  003F20  0E01               	movlw	1
  9087  003F22  EC11  F020         	call	_I2C_2_Master_Read
  9088  003F26  6E07               	movwf	??_color_read_Blue^0,c
  9089  003F28  5007               	movf	??_color_read_Blue^0,w,c
  9090  003F2A  6E0A               	movwf	color_read_Blue@tmp^0,c
  9091  003F2C  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  9092                           
  9093                           ;color.c: 59:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9094  003F2E  0E00               	movlw	0
  9095  003F30  EC11  F020         	call	_I2C_2_Master_Read
  9096  003F34  6E07               	movwf	??_color_read_Blue^0,c
  9097  003F36  5007               	movf	??_color_read_Blue^0,w,c
  9098  003F38  6E09               	movwf	(??_color_read_Blue+2)^0,c
  9099  003F3A  6A08               	clrf	(??_color_read_Blue+1)^0,c
  9100  003F3C  500A               	movf	color_read_Blue@tmp^0,w,c
  9101  003F3E  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  9102  003F40  6E0A               	movwf	color_read_Blue@tmp^0,c
  9103  003F42  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  9104  003F44  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  9105  003F46  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  9106                           
  9107                           ;color.c: 60:  I2C_2_Master_Stop();
  9108  003F48  ECBC  F021         	call	_I2C_2_Master_Stop	;wreg free
  9109  003F4C                     
  9110                           ;color.c: 61:  return tmp;
  9111  003F4C  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  9112  003F50  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  9113  003F54  0012               	return		;funcret
  9114  003F56                     __end_of_color_read_Blue:
  9115                           	callstack 0
  9116                           
  9117 ;; *************** function _I2C_2_Master_Write *****************
  9118 ;; Defined at:
  9119 ;;		line 45 in file "i2c.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;  data_byte       1    wreg     unsigned char 
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;  data_byte       1    1[COMRAM] unsigned char 
  9124 ;; Return value:  Size  Location     Type
  9125 ;;                  1    wreg      void 
  9126 ;; Registers used:
  9127 ;;		wreg, status,2, status,0, cstack
  9128 ;; Tracked objects:
  9129 ;;		On entry : 0/0
  9130 ;;		On exit  : 0/0
  9131 ;;		Unchanged: 0/0
  9132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9137 ;;Total ram usage:        1 bytes
  9138 ;; Hardware stack levels used: 1
  9139 ;; Hardware stack levels required when called: 1
  9140 ;; This function calls:
  9141 ;;		_I2C_2_Master_Idle
  9142 ;; This function is called by:
  9143 ;;		_color_writetoaddr
  9144 ;;		_color_read_Red
  9145 ;;		_color_read_Blue
  9146 ;;		_color_read_Green
  9147 ;;		_color_read_Clear
  9148 ;; This function uses a non-reentrant model
  9149 ;;
  9150                           
  9151                           	psect	text44
  9152  00436C                     __ptext44:
  9153                           	callstack 0
  9154  00436C                     _I2C_2_Master_Write:
  9155                           	callstack 26
  9156                           
  9157                           ;incstack = 0
  9158                           ;I2C_2_Master_Write@data_byte stored from wreg
  9159  00436C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9160  00436E                     
  9161                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9162  00436E  EC29  F021         	call	_I2C_2_Master_Idle	;wreg free
  9163  004372                     
  9164                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9165  004372  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9166  004376  0012               	return		;funcret
  9167  004378                     __end_of_I2C_2_Master_Write:
  9168                           	callstack 0
  9169                           
  9170 ;; *************** function _I2C_2_Master_Stop *****************
  9171 ;; Defined at:
  9172 ;;		line 39 in file "i2c.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;		None
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;		None
  9177 ;; Return value:  Size  Location     Type
  9178 ;;                  1    wreg      void 
  9179 ;; Registers used:
  9180 ;;		wreg, status,2, status,0, cstack
  9181 ;; Tracked objects:
  9182 ;;		On entry : 0/0
  9183 ;;		On exit  : 0/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9190 ;;Total ram usage:        0 bytes
  9191 ;; Hardware stack levels used: 1
  9192 ;; Hardware stack levels required when called: 1
  9193 ;; This function calls:
  9194 ;;		_I2C_2_Master_Idle
  9195 ;; This function is called by:
  9196 ;;		_color_writetoaddr
  9197 ;;		_color_read_Red
  9198 ;;		_color_read_Blue
  9199 ;;		_color_read_Green
  9200 ;;		_color_read_Clear
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           	psect	text45
  9205  004378                     __ptext45:
  9206                           	callstack 0
  9207  004378                     _I2C_2_Master_Stop:
  9208                           	callstack 26
  9209  004378                     
  9210                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9211  004378  EC29  F021         	call	_I2C_2_Master_Idle	;wreg free
  9212  00437C                     
  9213                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9214  00437C  010E               	movlb	14	; () banked
  9215  00437E  85DA               	bsf	218,2,b	;volatile
  9216  004380                     
  9217                           ; BSR set to: 14
  9218  004380  0012               	return		;funcret
  9219  004382                     __end_of_I2C_2_Master_Stop:
  9220                           	callstack 0
  9221                           
  9222 ;; *************** function _I2C_2_Master_Start *****************
  9223 ;; Defined at:
  9224 ;;		line 27 in file "i2c.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;		None
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;		None
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  1    wreg      void 
  9231 ;; Registers used:
  9232 ;;		wreg, status,2, status,0, cstack
  9233 ;; Tracked objects:
  9234 ;;		On entry : 0/0
  9235 ;;		On exit  : 0/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9242 ;;Total ram usage:        0 bytes
  9243 ;; Hardware stack levels used: 1
  9244 ;; Hardware stack levels required when called: 1
  9245 ;; This function calls:
  9246 ;;		_I2C_2_Master_Idle
  9247 ;; This function is called by:
  9248 ;;		_color_writetoaddr
  9249 ;;		_color_read_Red
  9250 ;;		_color_read_Blue
  9251 ;;		_color_read_Green
  9252 ;;		_color_read_Clear
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           	psect	text46
  9257  004382                     __ptext46:
  9258                           	callstack 0
  9259  004382                     _I2C_2_Master_Start:
  9260                           	callstack 26
  9261  004382                     
  9262                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9263  004382  EC29  F021         	call	_I2C_2_Master_Idle	;wreg free
  9264  004386                     
  9265                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9266  004386  010E               	movlb	14	; () banked
  9267  004388  81DA               	bsf	218,0,b	;volatile
  9268  00438A                     
  9269                           ; BSR set to: 14
  9270  00438A  0012               	return		;funcret
  9271  00438C                     __end_of_I2C_2_Master_Start:
  9272                           	callstack 0
  9273                           
  9274 ;; *************** function _I2C_2_Master_RepStart *****************
  9275 ;; Defined at:
  9276 ;;		line 33 in file "i2c.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;		None
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;		None
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  1    wreg      void 
  9283 ;; Registers used:
  9284 ;;		wreg, status,2, status,0, cstack
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9294 ;;Total ram usage:        0 bytes
  9295 ;; Hardware stack levels used: 1
  9296 ;; Hardware stack levels required when called: 1
  9297 ;; This function calls:
  9298 ;;		_I2C_2_Master_Idle
  9299 ;; This function is called by:
  9300 ;;		_color_read_Red
  9301 ;;		_color_read_Blue
  9302 ;;		_color_read_Green
  9303 ;;		_color_read_Clear
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307                           	psect	text47
  9308  00438C                     __ptext47:
  9309                           	callstack 0
  9310  00438C                     _I2C_2_Master_RepStart:
  9311                           	callstack 26
  9312  00438C                     
  9313                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9314  00438C  EC29  F021         	call	_I2C_2_Master_Idle	;wreg free
  9315  004390                     
  9316                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9317  004390  010E               	movlb	14	; () banked
  9318  004392  83DA               	bsf	218,1,b	;volatile
  9319  004394                     
  9320                           ; BSR set to: 14
  9321  004394  0012               	return		;funcret
  9322  004396                     __end_of_I2C_2_Master_RepStart:
  9323                           	callstack 0
  9324                           
  9325 ;; *************** function _I2C_2_Master_Read *****************
  9326 ;; Defined at:
  9327 ;;		line 51 in file "i2c.c"
  9328 ;; Parameters:    Size  Location     Type
  9329 ;;  ack             1    wreg     unsigned char 
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;  ack             1    2[COMRAM] unsigned char 
  9332 ;;  tmp             1    3[COMRAM] unsigned char 
  9333 ;; Return value:  Size  Location     Type
  9334 ;;                  1    wreg      unsigned char 
  9335 ;; Registers used:
  9336 ;;		wreg, status,2, status,0, cstack
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9343 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9345 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9346 ;;Total ram usage:        3 bytes
  9347 ;; Hardware stack levels used: 1
  9348 ;; Hardware stack levels required when called: 1
  9349 ;; This function calls:
  9350 ;;		_I2C_2_Master_Idle
  9351 ;; This function is called by:
  9352 ;;		_color_read_Red
  9353 ;;		_color_read_Blue
  9354 ;;		_color_read_Green
  9355 ;;		_color_read_Clear
  9356 ;; This function uses a non-reentrant model
  9357 ;;
  9358                           
  9359                           	psect	text48
  9360  004022                     __ptext48:
  9361                           	callstack 0
  9362  004022                     _I2C_2_Master_Read:
  9363                           	callstack 26
  9364                           
  9365                           ; BSR set to: 14
  9366                           ;incstack = 0
  9367                           ;I2C_2_Master_Read@ack stored from wreg
  9368  004022  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  9369  004024                     
  9370                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  9371  004024  EC29  F021         	call	_I2C_2_Master_Idle	;wreg free
  9372  004028                     
  9373                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  9374  004028  010E               	movlb	14	; () banked
  9375  00402A  87DA               	bsf	218,3,b	;volatile
  9376                           
  9377                           ;i2c.c: 56:   I2C_2_Master_Idle();
  9378  00402C  EC29  F021         	call	_I2C_2_Master_Idle	;wreg free
  9379  004030                     
  9380                           ;i2c.c: 57:   tmp = SSP2BUF;
  9381  004030  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  9382                           
  9383                           ;i2c.c: 58:   I2C_2_Master_Idle();
  9384  004034  EC29  F021         	call	_I2C_2_Master_Idle	;wreg free
  9385  004038                     
  9386                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  9387  004038  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  9388  00403A  B4D8               	btfsc	status,2,c
  9389  00403C  EF22  F020         	goto	u3301
  9390  004040  EF26  F020         	goto	u3300
  9391  004044                     u3301:
  9392  004044  6A02               	clrf	??_I2C_2_Master_Read^0,c
  9393  004046  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  9394  004048  EF27  F020         	goto	u3318
  9395  00404C                     u3300:
  9396  00404C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  9397  00404E                     u3318:
  9398  00404E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  9399  004050  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  9400  004052  010E               	movlb	14	; () banked
  9401  004054  51DA               	movf	218,w,b	;volatile
  9402  004056  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  9403  004058  0BDF               	andlw	-33
  9404  00405A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  9405  00405C  6FDA               	movwf	218,b	;volatile
  9406  00405E                     
  9407                           ; BSR set to: 14
  9408                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  9409  00405E  89DA               	bsf	218,4,b	;volatile
  9410  004060                     
  9411                           ; BSR set to: 14
  9412                           ;i2c.c: 61:   return tmp;
  9413  004060  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  9414  004062                     
  9415                           ; BSR set to: 14
  9416  004062  0012               	return		;funcret
  9417  004064                     __end_of_I2C_2_Master_Read:
  9418                           	callstack 0
  9419                           
  9420 ;; *************** function _I2C_2_Master_Idle *****************
  9421 ;; Defined at:
  9422 ;;		line 22 in file "i2c.c"
  9423 ;; Parameters:    Size  Location     Type
  9424 ;;		None
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;		None
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  1    wreg      void 
  9429 ;; Registers used:
  9430 ;;		wreg, status,2, status,0
  9431 ;; Tracked objects:
  9432 ;;		On entry : 0/0
  9433 ;;		On exit  : 0/0
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9438 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9439 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9440 ;;Total ram usage:        1 bytes
  9441 ;; Hardware stack levels used: 1
  9442 ;; This function calls:
  9443 ;;		Nothing
  9444 ;; This function is called by:
  9445 ;;		_I2C_2_Master_Start
  9446 ;;		_I2C_2_Master_RepStart
  9447 ;;		_I2C_2_Master_Stop
  9448 ;;		_I2C_2_Master_Write
  9449 ;;		_I2C_2_Master_Read
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           	psect	text49
  9454  004252                     __ptext49:
  9455                           	callstack 0
  9456  004252                     _I2C_2_Master_Idle:
  9457                           	callstack 26
  9458  004252                     l196:
  9459  004252  010E               	movlb	14	; () banked
  9460  004254  B5D8               	btfsc	216,2,b	;volatile
  9461  004256  EF2F  F021         	goto	u2851
  9462  00425A  EF31  F021         	goto	u2850
  9463  00425E                     u2851:
  9464  00425E  EF29  F021         	goto	l196
  9465  004262                     u2850:
  9466  004262                     
  9467                           ; BSR set to: 14
  9468  004262  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9469  004266  0E1F               	movlw	31
  9470  004268  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9471  00426A  A4D8               	btfss	status,2,c
  9472  00426C  EF3A  F021         	goto	u2861
  9473  004270  EF3C  F021         	goto	u2860
  9474  004274                     u2861:
  9475  004274  EF29  F021         	goto	l196
  9476  004278                     u2860:
  9477  004278                     
  9478                           ; BSR set to: 14
  9479  004278  0012               	return		;funcret
  9480  00427A                     __end_of_I2C_2_Master_Idle:
  9481                           	callstack 0
  9482                           
  9483 ;; *************** function _LED_R *****************
  9484 ;; Defined at:
  9485 ;;		line 100 in file "color.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;		None
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;		None
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      void 
  9492 ;; Registers used:
  9493 ;;		wreg
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9501 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9503 ;;Total ram usage:        2 bytes
  9504 ;; Hardware stack levels used: 1
  9505 ;; This function calls:
  9506 ;;		Nothing
  9507 ;; This function is called by:
  9508 ;;		_color_data_collection
  9509 ;;		_calibrate_white
  9510 ;;		_detect_color
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           	psect	text50
  9515  0042BA                     __ptext50:
  9516                           	callstack 0
  9517  0042BA                     _LED_R:
  9518                           	callstack 29
  9519  0042BA                     
  9520                           ;color.c: 102:     LATGbits.LATG1 = 1;
  9521  0042BA  827F               	bsf	127,1,c	;volatile
  9522                           
  9523                           ;color.c: 103:     LATFbits.LATF7 = 0;
  9524  0042BC  9E7E               	bcf	126,7,c	;volatile
  9525                           
  9526                           ;color.c: 104:     LATAbits.LATA4 = 0;
  9527  0042BE  9879               	bcf	121,4,c	;volatile
  9528  0042C0                     
  9529                           ;color.c: 105:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9530  0042C0  0E11               	movlw	17
  9531  0042C2  6E02               	movwf	(??_LED_R+1)^0,c
  9532  0042C4  0E3C               	movlw	60
  9533  0042C6  6E01               	movwf	??_LED_R^0,c
  9534  0042C8  0ECB               	movlw	203
  9535  0042CA                     u5077:
  9536  0042CA  2EE8               	decfsz	wreg,f,c
  9537  0042CC  D7FE               	bra	u5077
  9538  0042CE  2E01               	decfsz	??_LED_R^0,f,c
  9539  0042D0  D7FC               	bra	u5077
  9540  0042D2  2E02               	decfsz	(??_LED_R+1)^0,f,c
  9541  0042D4  D7FA               	bra	u5077
  9542  0042D6  F000               	nop	
  9543  0042D8  0012               	return		;funcret
  9544  0042DA                     __end_of_LED_R:
  9545                           	callstack 0
  9546                           
  9547 ;; *************** function _LED_G *****************
  9548 ;; Defined at:
  9549 ;;		line 127 in file "color.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;		None
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;		None
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      void 
  9556 ;; Registers used:
  9557 ;;		wreg
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9565 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9566 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9567 ;;Total ram usage:        2 bytes
  9568 ;; Hardware stack levels used: 1
  9569 ;; This function calls:
  9570 ;;		Nothing
  9571 ;; This function is called by:
  9572 ;;		_color_data_collection
  9573 ;;		_calibrate_white
  9574 ;;		_detect_color
  9575 ;; This function uses a non-reentrant model
  9576 ;;
  9577                           
  9578                           	psect	text51
  9579  0042DA                     __ptext51:
  9580                           	callstack 0
  9581  0042DA                     _LED_G:
  9582                           	callstack 29
  9583  0042DA                     
  9584                           ;color.c: 129:     LATGbits.LATG1 = 0;
  9585  0042DA  927F               	bcf	127,1,c	;volatile
  9586                           
  9587                           ;color.c: 130:     LATFbits.LATF7 = 0;
  9588  0042DC  9E7E               	bcf	126,7,c	;volatile
  9589                           
  9590                           ;color.c: 131:     LATAbits.LATA4 = 1;
  9591  0042DE  8879               	bsf	121,4,c	;volatile
  9592  0042E0                     
  9593                           ;color.c: 132:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9594  0042E0  0E11               	movlw	17
  9595  0042E2  6E02               	movwf	(??_LED_G+1)^0,c
  9596  0042E4  0E3C               	movlw	60
  9597  0042E6  6E01               	movwf	??_LED_G^0,c
  9598  0042E8  0ECB               	movlw	203
  9599  0042EA                     u5087:
  9600  0042EA  2EE8               	decfsz	wreg,f,c
  9601  0042EC  D7FE               	bra	u5087
  9602  0042EE  2E01               	decfsz	??_LED_G^0,f,c
  9603  0042F0  D7FC               	bra	u5087
  9604  0042F2  2E02               	decfsz	(??_LED_G+1)^0,f,c
  9605  0042F4  D7FA               	bra	u5087
  9606  0042F6  F000               	nop	
  9607  0042F8  0012               	return		;funcret
  9608  0042FA                     __end_of_LED_G:
  9609                           	callstack 0
  9610                           
  9611 ;; *************** function _LED_B *****************
  9612 ;; Defined at:
  9613 ;;		line 118 in file "color.c"
  9614 ;; Parameters:    Size  Location     Type
  9615 ;;		None
  9616 ;; Auto vars:     Size  Location     Type
  9617 ;;		None
  9618 ;; Return value:  Size  Location     Type
  9619 ;;                  1    wreg      void 
  9620 ;; Registers used:
  9621 ;;		wreg
  9622 ;; Tracked objects:
  9623 ;;		On entry : 0/0
  9624 ;;		On exit  : 0/0
  9625 ;;		Unchanged: 0/0
  9626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9629 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9631 ;;Total ram usage:        2 bytes
  9632 ;; Hardware stack levels used: 1
  9633 ;; This function calls:
  9634 ;;		Nothing
  9635 ;; This function is called by:
  9636 ;;		_color_data_collection
  9637 ;;		_calibrate_white
  9638 ;;		_detect_color
  9639 ;; This function uses a non-reentrant model
  9640 ;;
  9641                           
  9642                           	psect	text52
  9643  0042FA                     __ptext52:
  9644                           	callstack 0
  9645  0042FA                     _LED_B:
  9646                           	callstack 29
  9647  0042FA                     
  9648                           ;color.c: 120:     LATGbits.LATG1 = 0;
  9649  0042FA  927F               	bcf	127,1,c	;volatile
  9650                           
  9651                           ;color.c: 121:     LATFbits.LATF7 = 1;
  9652  0042FC  8E7E               	bsf	126,7,c	;volatile
  9653                           
  9654                           ;color.c: 122:     LATAbits.LATA4 = 0;
  9655  0042FE  9879               	bcf	121,4,c	;volatile
  9656  004300                     
  9657                           ;color.c: 123:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9658  004300  0E11               	movlw	17
  9659  004302  6E02               	movwf	(??_LED_B+1)^0,c
  9660  004304  0E3C               	movlw	60
  9661  004306  6E01               	movwf	??_LED_B^0,c
  9662  004308  0ECB               	movlw	203
  9663  00430A                     u5097:
  9664  00430A  2EE8               	decfsz	wreg,f,c
  9665  00430C  D7FE               	bra	u5097
  9666  00430E  2E01               	decfsz	??_LED_B^0,f,c
  9667  004310  D7FC               	bra	u5097
  9668  004312  2E02               	decfsz	(??_LED_B+1)^0,f,c
  9669  004314  D7FA               	bra	u5097
  9670  004316  F000               	nop	
  9671  004318  0012               	return		;funcret
  9672  00431A                     __end_of_LED_B:
  9673                           	callstack 0
  9674                           
  9675                           	psect	rparam
  9676  0000                     
  9677                           	psect	idloc
  9678                           
  9679                           ;Config register IDLOC0 @ 0x200000
  9680                           ;	unspecified, using default values
  9681  200000                     	org	2097152
  9682  200000  0FFF               	dw	4095
  9683                           
  9684                           ;Config register IDLOC1 @ 0x200002
  9685                           ;	unspecified, using default values
  9686  200002                     	org	2097154
  9687  200002  0FFF               	dw	4095
  9688                           
  9689                           ;Config register IDLOC2 @ 0x200004
  9690                           ;	unspecified, using default values
  9691  200004                     	org	2097156
  9692  200004  0FFF               	dw	4095
  9693                           
  9694                           ;Config register IDLOC3 @ 0x200006
  9695                           ;	unspecified, using default values
  9696  200006                     	org	2097158
  9697  200006  0FFF               	dw	4095
  9698                           
  9699                           ;Config register IDLOC4 @ 0x200008
  9700                           ;	unspecified, using default values
  9701  200008                     	org	2097160
  9702  200008  0FFF               	dw	4095
  9703                           
  9704                           ;Config register IDLOC5 @ 0x20000A
  9705                           ;	unspecified, using default values
  9706  20000A                     	org	2097162
  9707  20000A  0FFF               	dw	4095
  9708                           
  9709                           ;Config register IDLOC6 @ 0x20000C
  9710                           ;	unspecified, using default values
  9711  20000C                     	org	2097164
  9712  20000C  0FFF               	dw	4095
  9713                           
  9714                           ;Config register IDLOC7 @ 0x20000E
  9715                           ;	unspecified, using default values
  9716  20000E                     	org	2097166
  9717  20000E  0FFF               	dw	4095
  9718                           
  9719                           	psect	config
  9720                           
  9721                           ;Config register CONFIG1L @ 0x300000
  9722                           ;	External Oscillator mode Selection bits
  9723                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9724                           ;	Power-up default value for COSC bits
  9725                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9726  300000                     	org	3145728
  9727  300000  AA                 	db	170
  9728                           
  9729                           ;Config register CONFIG1H @ 0x300001
  9730                           ;	unspecified, using default values
  9731                           ;	Clock Out Enable bit
  9732                           ;	CLKOUTEN = 0x1, unprogrammed default
  9733                           ;	Clock Switch Enable bit
  9734                           ;	CSWEN = 0x1, unprogrammed default
  9735                           ;	Fail-Safe Clock Monitor Enable bit
  9736                           ;	FCMEN = 0x1, unprogrammed default
  9737  300001                     	org	3145729
  9738  300001  FF                 	db	255
  9739                           
  9740                           ;Config register CONFIG2L @ 0x300002
  9741                           ;	unspecified, using default values
  9742                           ;	Master Clear Enable bit
  9743                           ;	MCLRE = 0x1, unprogrammed default
  9744                           ;	Power-up Timer Enable bit
  9745                           ;	PWRTE = 0x1, unprogrammed default
  9746                           ;	Low-power BOR enable bit
  9747                           ;	LPBOREN = 0x1, unprogrammed default
  9748                           ;	Brown-out Reset Enable bits
  9749                           ;	BOREN = 0x3, unprogrammed default
  9750  300002                     	org	3145730
  9751  300002  FF                 	db	255
  9752                           
  9753                           ;Config register CONFIG2H @ 0x300003
  9754                           ;	unspecified, using default values
  9755                           ;	Brown Out Reset Voltage selection bits
  9756                           ;	BORV = 0x3, unprogrammed default
  9757                           ;	ZCD Disable bit
  9758                           ;	ZCD = 0x1, unprogrammed default
  9759                           ;	PPSLOCK bit One-Way Set Enable bit
  9760                           ;	PPS1WAY = 0x1, unprogrammed default
  9761                           ;	Stack Full/Underflow Reset Enable bit
  9762                           ;	STVREN = 0x1, unprogrammed default
  9763                           ;	Debugger Enable bit
  9764                           ;	DEBUG = 0x1, unprogrammed default
  9765                           ;	Extended Instruction Set Enable bit
  9766                           ;	XINST = 0x1, unprogrammed default
  9767  300003                     	org	3145731
  9768  300003  FF                 	db	255
  9769                           
  9770                           ;Config register CONFIG3L @ 0x300004
  9771                           ;	WDT Period Select bits
  9772                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9773                           ;	WDT operating mode
  9774                           ;	WDTE = OFF, WDT Disabled
  9775  300004                     	org	3145732
  9776  300004  9F                 	db	159
  9777                           
  9778                           ;Config register CONFIG3H @ 0x300005
  9779                           ;	unspecified, using default values
  9780                           ;	WDT Window Select bits
  9781                           ;	WDTCWS = 0x7, unprogrammed default
  9782                           ;	WDT input clock selector
  9783                           ;	WDTCCS = 0x7, unprogrammed default
  9784  300005                     	org	3145733
  9785  300005  FF                 	db	255
  9786                           
  9787                           ;Config register CONFIG4L @ 0x300006
  9788                           ;	unspecified, using default values
  9789                           ;	Write Protection Block 0
  9790                           ;	WRT0 = 0x1, unprogrammed default
  9791                           ;	Write Protection Block 1
  9792                           ;	WRT1 = 0x1, unprogrammed default
  9793                           ;	Write Protection Block 2
  9794                           ;	WRT2 = 0x1, unprogrammed default
  9795                           ;	Write Protection Block 3
  9796                           ;	WRT3 = 0x1, unprogrammed default
  9797                           ;	Write Protection Block 3
  9798                           ;	WRT4 = 0x1, unprogrammed default
  9799                           ;	Write Protection Block 3
  9800                           ;	WRT5 = 0x1, unprogrammed default
  9801                           ;	Write Protection Block 3
  9802                           ;	WRT6 = 0x1, unprogrammed default
  9803                           ;	Write Protection Block 3
  9804                           ;	WRT7 = 0x1, unprogrammed default
  9805  300006                     	org	3145734
  9806  300006  FF                 	db	255
  9807                           
  9808                           ;Config register CONFIG4H @ 0x300007
  9809                           ;	unspecified, using default values
  9810                           ;	Configuration Register Write Protection bit
  9811                           ;	WRTC = 0x1, unprogrammed default
  9812                           ;	Boot Block Write Protection bit
  9813                           ;	WRTB = 0x1, unprogrammed default
  9814                           ;	Data EEPROM Write Protection bit
  9815                           ;	WRTD = 0x1, unprogrammed default
  9816                           ;	Scanner Enable bit
  9817                           ;	SCANE = 0x1, unprogrammed default
  9818                           ;	Low Voltage Programming Enable bit
  9819                           ;	LVP = 0x1, unprogrammed default
  9820  300007                     	org	3145735
  9821  300007  FF                 	db	255
  9822                           
  9823                           ;Config register CONFIG5L @ 0x300008
  9824                           ;	unspecified, using default values
  9825                           ;	UserNVM Program Memory Code Protection bit
  9826                           ;	CP = 0x1, unprogrammed default
  9827                           ;	DataNVM Memory Code Protection bit
  9828                           ;	CPD = 0x1, unprogrammed default
  9829  300008                     	org	3145736
  9830  300008  FF                 	db	255
  9831                           
  9832                           ;Config register CONFIG5H @ 0x300009
  9833                           ;	unspecified, using default values
  9834  300009                     	org	3145737
  9835  300009  FF                 	db	255
  9836                           
  9837                           ;Config register CONFIG6L @ 0x30000A
  9838                           ;	unspecified, using default values
  9839                           ;	Table Read Protection Block 0
  9840                           ;	EBTR0 = 0x1, unprogrammed default
  9841                           ;	Table Read Protection Block 1
  9842                           ;	EBTR1 = 0x1, unprogrammed default
  9843                           ;	Table Read Protection Block 2
  9844                           ;	EBTR2 = 0x1, unprogrammed default
  9845                           ;	Table Read Protection Block 3
  9846                           ;	EBTR3 = 0x1, unprogrammed default
  9847                           ;	Table Read Protection Block 4
  9848                           ;	EBTR4 = 0x1, unprogrammed default
  9849                           ;	Table Read Protection Block 5
  9850                           ;	EBTR5 = 0x1, unprogrammed default
  9851                           ;	Table Read Protection Block 6
  9852                           ;	EBTR6 = 0x1, unprogrammed default
  9853                           ;	Table Read Protection Block 7
  9854                           ;	EBTR7 = 0x1, unprogrammed default
  9855  30000A                     	org	3145738
  9856  30000A  FF                 	db	255
  9857                           
  9858                           ;Config register CONFIG6H @ 0x30000B
  9859                           ;	unspecified, using default values
  9860                           ;	Boot Block Table Read Protection bit
  9861                           ;	EBTRB = 0x1, unprogrammed default
  9862  30000B                     	org	3145739
  9863  30000B  FF                 	db	255
  9864                           tosu	equ	0xFFF
  9865                           tosh	equ	0xFFE
  9866                           tosl	equ	0xFFD
  9867                           stkptr	equ	0xFFC
  9868                           pclatu	equ	0xFFB
  9869                           pclath	equ	0xFFA
  9870                           pcl	equ	0xFF9
  9871                           tblptru	equ	0xFF8
  9872                           tblptrh	equ	0xFF7
  9873                           tblptrl	equ	0xFF6
  9874                           tablat	equ	0xFF5
  9875                           prodh	equ	0xFF4
  9876                           prodl	equ	0xFF3
  9877                           indf0	equ	0xFEF
  9878                           postinc0	equ	0xFEE
  9879                           postdec0	equ	0xFED
  9880                           preinc0	equ	0xFEC
  9881                           plusw0	equ	0xFEB
  9882                           fsr0h	equ	0xFEA
  9883                           fsr0l	equ	0xFE9
  9884                           wreg	equ	0xFE8
  9885                           indf1	equ	0xFE7
  9886                           postinc1	equ	0xFE6
  9887                           postdec1	equ	0xFE5
  9888                           preinc1	equ	0xFE4
  9889                           plusw1	equ	0xFE3
  9890                           fsr1h	equ	0xFE2
  9891                           fsr1l	equ	0xFE1
  9892                           bsr	equ	0xFE0
  9893                           indf2	equ	0xFDF
  9894                           postinc2	equ	0xFDE
  9895                           postdec2	equ	0xFDD
  9896                           preinc2	equ	0xFDC
  9897                           plusw2	equ	0xFDB
  9898                           fsr2h	equ	0xFDA
  9899                           fsr2l	equ	0xFD9
  9900                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    4
    Data        2
    BSS         149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    134     152
    BANK1           256     47     180
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2293$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2293$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    voltage_display@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_display@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    voltage_read@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_read@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    S224DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S224DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 18
		 -> main@white(BANK1[18]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 18
		 -> main@white(BANK1[18]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _detect_color->_compare
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    ___fldiv->___xxtofl
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _color_read_Clear->_I2C_2_Master_Read
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_color_data_collection
    _detect_color->_compare
    _lroundf->___fltol
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                47    47      0   51099
                                              0 BANK1     47    47      0
                  _I2C_2_Master_Init
                    _calibrate_white
                   _color_click_init
              _color_data_collection
                      _color_predict
                       _detect_color
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        37    33      4   25063
                                             16 BANK0     37    33      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
 ---------------------------------------------------------------------------------
 (2) _lroundf                                              4     0      4   12618
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (3) _roundf                                              26    22      4   11379
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3082
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _compare                                              7     1      6    2392
                                             94 COMRAM     1     1      0
                                             10 BANK0      6     0      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1660
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2585
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_data_collection                               12    10      2   16822
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (2) _read_color                                           2     0      2    1072
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_predict                                      102   102      0    7585
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7725
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    6912
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     371
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate_white                                      4     2      2     613
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_G
                              _LED_R
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _calibrate_white
     _LED_B
     _LED_G
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_data_collection
     _LED_B
     _LED_C
     _LED_G
     _LED_R
     _color_display
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _color_predict
       _sendStringSerial4
       _sprintf
     _read_color
       _color_read_Blue
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
       _color_read_Red
   _color_predict
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           _roundf (ARG)
             ___fladd
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2F      B4       7       70.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      98       5       95.0%
BITBIGSFRllhhl      6E      0       0      44        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllllh     32      0       0      49        0.0%
BITBIGSFRlllllh     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      47        0.0%
BITBIGSFRhhhlh      17      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      41        0.0%
BITBIGSFRhhhlll     11      0       0      35        0.0%
BITBIGSFRlllllh      F      0       0      55        0.0%
BITBIGSFRllllhl      C      0       0      48        0.0%
BITBIGSFRlllllh      9      0       0      54        0.0%
BITBIGSFRllhlll      8      0       0      45        0.0%
BITBIGSFRllhhhl      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRlllllh      6      0       0      52        0.0%
BITBIGSFRhhhlll      6      0       0      36        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRllhhhh      3      0       0      42        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRhlh         1      0       0      37        0.0%
BITBIGSFRhhhllh      1      0       0      34        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BITBIGSFRhll         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AB      58        0.0%
DATA                 0      0     1AB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Mar 10 09:35:43 2022

                _color_read_Red 3E66                    ___fldiv@aexp 0027                    ___fldiv@bexp 0026  
                  ___fldiv@sign 001F                 _color_read_Blue 3F06                   _color_predict 38F0  
                            l51 41F6                              l60 3F54                              l54 42B8  
                            l63 3F04                              l72 42D8                              l81 42F8  
                            l57 3EB4                              l66 3E64                              l75 4298  
                            l92 32CC                              l69 3DC2                              l78 4318  
                            l95 3C9E                _color_read_Clear 3E16                _color_read_Green 3EB6  
                           l111 39CC                             l202 438A                             l114 36E2  
                           l211 4376                             l205 4394                             l214 4062  
                           l208 4380                             l155 1AB8                             l420 436A  
                           l149 1AB6                             l158 4152                             l159 4154  
                           l408 4336                             l193 4250                             l417 4356  
                           l426 4226                             l196 4252                             l285 4020  
                           l199 4278                             l288 3A9E                             l706 3454  
                           l719 35B8                             l586 4352                             l862 38EE  
                           l857 38A8                             l866 418C                             l889 37EA  
              ?_calibrate_white 000C                             _abs 4064                             _pad 3B6A  
                           wreg 000FE8                    ___flmul@aexp 0039                    ___flmul@bexp 003A  
                  ___flmul@sign 0034                    ___flmul@temp 003F                    ___flmul@prod 003B  
                  ___fltol@exp1 0065                            l1120 1CA8                            l1121 1C96  
                          l1210 23A2                            l1122 1C5C                            ?_abs 0013  
                          l1213 2234                            l1302 3BB0                            l1206 203E  
                          l1223 2364                            l1215 22AC                            l1216 229A  
                          l1305 3BF2                            l1313 2B8C                            l1137 1DC2  
                          l1129 1F78                            l1250 2F82                            l1146 1E92  
                          l1162 3F9A                            l1307 3C2E                            l1315 2B94  
                          l1147 1E80                            l3100 3300                            l1340 3136  
                          l1333 2DCE                            l1261 2F1A                            l3110 3342  
                          l3102 3304                            l1174 2AEA                            l1254 2EBE  
                          l1351 409A                            l1247 2E26                            l3120 339C  
                          l3112 3360                            l3104 3312                            l3200 2AEC  
                          l1176 294A                            l4000 27A8                            l1185 2990  
                          l3122 33CA                            l3114 3368                            l3130 3404  
                          l3106 3332                            l1354 40A2                            l3210 2B66  
                          l3202 2B0C                            l1346 3D5C                            l4010 27D4  
                          l4002 27B8                            l1347 3D64                            l1275 3E14  
                          l1187 2A08                            l1179 290E                            l3132 3414  
                          l3124 33EA                            l3116 337C                            l3108 3336  
                          l3140 345A                            l3220 2BC2                            l3212 2B80  
                          l3204 2B34                            l4100 2A7A                            l1188 29F6  
                          l4012 27E4                            l4020 280E                            l4004 27BE  
                          l3300 1B70                            l1268 411A                            l3134 3434  
                          l3126 33EC                            l3118 338A                            l3150 34BA  
                          l3142 3468                            l3070 3AEC                            l1366 3B68  
                          l3062 3AA0                            l1374 3FDE                            l3230 2C62  
                          l3222 2BCA                            l3214 2B9C                            l3206 2B54  
                          l4110 2AD8                            l4102 2A90                            l4030 2850  
                          l4022 281E                            l4014 27F4                            l4006 27C4  
                          l3310 1BAC                            l3302 1B80                            l3128 33FE  
                          l3160 3530                            l3152 34D8                            l3144 3488  
                          l3072 3B22                            l3064 3AB2                            l3080 3FBA  
                          l3240 2D1E                            l3232 2C68                            l3224 2BD4  
                          l3216 2BAE                            l3208 2B64                            l4112 2ADE  
                          l4104 2AAA                            l4024 2834                            l4016 2804  
                          l4008 27D2                            l3400 1DB2                            l3320 1BCA  
                          l3312 1BBA                            l3304 1B82                            l1377 4398  
                          l1385 2750                            l3170 3598                            l3162 3550  
                          l3154 34E0                            l3146 348C                            l3138 3456  
                          l3066 3AC4                            l3082 3FBE                            l3090 41B6  
                          l3250 2D70                            l3242 2D38                            l3226 2BDA  
                          l3234 2CCC                            l3218 2BBC                            l4210 31EA  
                          l4202 31B6                            l4114 2AE0                            l4106 2AC6  
                          l4050 28D2                            l4042 2888                            l4026 2844  
                          l4034 2864                            l4018 2806                            l4130 2E4C  
                          l4122 2DD2                            l3410 1E06                            l3402 1DD8  
                          l3330 1BDE                            l3322 1BCE                            l3314 1BBE  
                          l3306 1B8A                            l3164 3562                            l3156 34F4  
                          l3148 349A                            l3068 3ACE                            l3076 3F9C  
                          l3084 418E                            l3180 3B9C                            l3252 2D82  
                          l3236 2CE6                            l3244 2D48                            l3228 2C5C  
                          l4220 3212                            l4212 31F0                            l4204 31BA  
                          l4108 2ACA                            l4060 2918                            l4052 28DA  
                          l4044 28A2                            l4036 2874                            l4028 284C  
                          l4140 2EA6                            l4124 2DE2                            l3420 1E30  
                          l3412 1E14                            l3404 1DE8                            l3340 1BF2  
                          l3332 1BE2                            l3324 1BD2                            l3316 1BC2  
                          l3308 1B9A                            l4300 10F2                            l3262 4252  
                          l3510 4382                            l3094 32CE                            l3158 3502  
                          l3166 3568                            l3078 3FA8                            l1398 41C2  
                          l3086 419A                            l3190 3C02                            l3182 3BA8  
                          l3174 3B6A                            l3254 2D8E                            l3246 2D5A  
                          l3238 2D04                            l3502 3100                            l4230 324C  
                          l4222 3216                            l4214 320A                            l4206 31C6  
                          l4070 2970                            l4062 2936                            l4054 28EA  
                          l4046 28B2                            l4038 2874                            l4150 2F0A  
                          l4142 2EA8                            l4134 2E60                            l4126 2DF0  
                          l3430 1E62                            l3422 1E40                            l3414 1E16  
                          l3350 1C44                            l3342 1BF6                            l3334 1BE6  
                          l3326 1BD6                            l3318 1BC6                            l3270 1AD4  
                          l4310 1140                            l4302 110A                            l3264 4262  
                          l3512 4386                            l3520 437C                            l3096 32D2  
                          l3168 3578                            l3088 419E                            l3192 3C16  
                          l3184 3BBC                            l3176 3B7A                            l3256 2D96  
                          l3248 2D6A                            l3504 3124                            l4240 3272  
                          l4232 3266                            l4224 3222                            l4208 31D2  
                          l4080 29AE                            l4072 2976                            l4064 2938  
                          l4056 28FE                            l4048 28C2                            l4160 2F62  
                          l4152 2F28                            l4144 2EB4                            l4136 2E68  
                          l4128 2E36                            l3600 20E8                            l3440 1EBC  
                          l3432 1E78                            l3416 1E24                            l3408 1DFC  
                          l3424 1E42                            l3360 1C88                            l3352 1C54  
                          l3336 1BEA                            l3328 1BDA                            l3344 1BFA  
                          l3280 1B08                            l3272 1AD6                            l4400 19E8  
                          l4320 1368                            l4312 11E0                            l4304 110E  
                          l3530 4030                            l3522 438C                            l3514 436E  
                          l4170 41C8                            l3098 32E0                            l3186 3BD0  
                          l3178 3B8E                            l3258 2DA6                            l4250 32C2  
                          l4242 327E                            l4226 322E                            l4090 2A18  
                          l4082 29B2                            l4074 2980                            l4066 2948  
                          l4058 290C                            l4162 2F70                            l4154 2F2A  
                          l4146 2EF0                            l4138 2E74                            l3610 213A  
                          l3602 20F4                            l3450 1F38                            l3442 1EF6  
                          l3418 1E2C                            l3426 1E50                            l3362 1C8A  
                          l3354 1C6A                            l3346 1BFE                            l3338 1BEE  
                          l3290 1B3A                            l3274 1AE6                            l3282 1B10  
                          l3266 1ABA                            l4410 1A3A                            l4402 19EC  
                          l4330 1446                            l4322 137C                            l4314 11FC  
                          l4306 111A                            l3532 4038                            l3524 4390  
                          l3516 4372                            l4260 35EA                            l4172 41D2  
                          l3540 4356                            l3196 4064                            l3188 3BD4  
                          l4252 32C8                            l4244 328A                            l4228 3246  
                          l4092 2A24                            l4084 29C0                            l4076 298E  
                          l4068 295A                            l4164 2F72                            l4156 2F2E  
                          l4148 2EFC                            l3620 21B8                            l3612 214A  
                          l3604 2104                            l3460 1F58                            l3452 1F3C  
                          l3436 1EA2                            l3444 1EF8                            l3428 1E54  
                          l3380 1D12                            l3372 1CDA                            l3364 1C94  
                          l3356 1C76                            l3348 1C28                            l3292 1B40  
                          l3284 1B20                            l3276 1AF6                            l3268 1AC6  
                          l4420 1A86                            l4412 1A3E                            l4404 19FC  
                          l4340 15EA                            l4332 1462                            l4324 1394  
                          l4316 12A4                            l4308 112A                            l3534 405E  
                          l3526 4024                            l3518 4378                            l4270 364E  
                          l4262 3602                            l4254 35BA                            l4174 41E2  
                          l3542 4366                            l3198 407E                            l3470 2FA8  
                          l3710 3D04                            l4246 32A2                            l4238 326E  
                          l4190 3176                            l4094 2A32                            l4086 29EE  
                          l4078 29A0                            l4158 2F52                            l3630 2232  
                          l3622 21EE                            l3614 2166                            l3606 2110  
                          l3550 1F96                            l3702 4156                            l3462 1F66  
                          l3454 1F4A                            l3446 1F08                            l3438 1EAE  
                          l3382 1D16                            l3374 1CEA                            l3366 1CB6  
                          l3390 1D36                            l3358 1C7A                            l3294 1B4E  
                          l3286 1B26                            l3278 1B06                            l4422 1A9C  
                          l4414 1A50                            l4406 1A0E                            l4350 1712  
                          l4342 1602                            l4334 150A                            l4326 1398  
                          l4318 12C0                            l3536 4060                            l3528 4028  
                          l3720 3EAC                            l4280 36CA                            l4272 367E  
                          l4264 361A                            l4256 35BE                            l4176 41EC  
                          l4168 41C4                            l3480 3014                            l3472 2FB6  
                          l3712 3D0C                            l4248 32A8                            l4192 318E  
                          l4184 315A                            l4096 2A5C                            l3640 2292  
                          l3632 2244                            l3624 21FC                            l3616 2172  
                          l3608 2120                            l3560 1FDC                            l3552 1FA6  
                          l3544 1F7A                            l3704 416C                            l3464 1F68  
                          l3456 1F50                            l3448 1F18                            l3392 1D5C  
                          l3384 1D24                            l3376 1CF8                            l3368 1CC6  
                          l3296 1B50                            l3288 1B38                            l4424 1AB2  
                          l4416 1A62                            l4408 1A24                            l4360 182A  
                          l4352 1740                            l4344 1630                            l4336 1526  
                          l4328 13A4                            l3730 3EB6                            l4274 3682  
                          l4266 361E                            l4258 35D2                            l3490 30C6  
                          l3482 305C                            l3474 2FC8                            l3714 3D1A  
                          l4194 3194                            l4186 315E                            l4178 3138  
                          l4098 2A60                            l3810 37CA                            l3650 2300  
                          l3634 2252                            l3626 221A                            l3618 218E  
                          l3570 2008                            l3562 1FE2                            l3554 1FB6  
                          l3546 1F86                            l3706 417C                            l3458 1F52  
                          l3394 1D90                            l3386 1D26                            l3378 1D06  
                          l3298 1B60                            l4418 1A74                            l4370 1882  
                          l4354 1800                            l4362 1834                            l4346 16FE  
                          l4338 15CE                            l4290 0F5E                            l4282 0E54  
                          l4530 4326                            l3724 3F06                            l3732 3EFC  
                          l4276 369A                            l4268 3636                            l3492 30DA  
                          l3476 2FCC                            l3468 2F84                            l3716 3D40  
                          l3900 393A                            l4196 31AE                            l4188 316A  
                          l3812 37DA                            l3804 379E                            l3660 2368  
                          l3644 22BC                            l3652 2304                            l3636 2256  
                          l3628 2224                            l3580 205E                            l3572 2018  
                          l3564 1FE8                            l3556 1FC6                            l3548 1F94  
                          l3396 1D92                            l3388 1D30                            l3820 240C  
                          l4372 189A                            l4364 1862                            l4356 1818  
                          l4380 18D4                            l4348 1708                            l4292 0F7A  
                          l4284 0EB2                            l4460 4008                            l4532 4330  
                          l3726 3F4C                            l3718 3E66                            l4278 36B2  
                          l3486 3094                            l3478 2FF0                            l3750 3E02  
                          l3742 3DC4                            l3910 395E                            l3902 393A  
                          l3806 37AA                            l3670 2392                            l3662 2378  
                          l3654 231E                            l3646 22C8                            l3638 2264  
                          l3590 209E                            l3574 2028                            l3566 1FF6  
                          l3558 1FCC                            l3398 1DA2                            l3822 2420  
                          l4390 1990                            l4382 1900                            l4374 18A2  
                          l4366 187A                            l4358 1820                            l4294 1022  
                          l4286 0EB6                            l4462 401C                            l4470 39EA  
                          l4534 4332                            l4526 431A                            l4542 4338  
                          l4630 3CB8                            l4622 3CA0                            ?_pad 0011  
                          l3760 420E                            l3488 30B8                            l3496 30E6  
                          l3744 3DD6                            l3920 3994                            l3912 3970  
                          l3904 394C                            l3736 3E16                            l3808 37BA  
                          l3680 37EC                            l3664 2386                            l3656 2332  
                          l3648 22D6                            l3592 20AA                            l3584 2072  
                          l3576 202E                            l3568 1FF8                            l3840 26AC  
                          l3832 24D4                            l3824 245C                            l3816 23A4  
                          l4392 1996                            l4384 192E                            l4376 18CE  
                          l4296 1036                            l4288 0EC2                            l4464 401E  
                          l4456 3FE0                            l4472 39FE                            l4536 4334  
                          l4528 4324                            l4640 3CD0                            l4632 3CCC  
                          l4624 3CA4                            l3850 4228                            l3754 41F8  
                          l3498 30F4                            l3746 3DDE                            l3922 3994  
                          l3914 3970                            l3906 394C                            l3738 3E5C  
                          l3690 3876                            l3682 381A                            l3666 2388  
                          l3658 234C                            l3594 20C2                            l3586 207E  
                          l3578 204E                            l3674 3F56                            l3842 26E0  
                          l3834 25A2                            l3826 2480                            l3818 23C4  
                          l3930 40E2                            l4394 19AA                            l4386 1934  
                          l4298 10DE                            l4458 3FF0                            l4474 3A12  
                          l4466 39CE                            l4650 3CE6                            l4626 3CA8  
                          l3860 423E                            l3852 4232                            l3756 41FC  
                          l3748 3DE6                            l3924 39A6                            l3916 3982  
                          l3908 395E                            l3940 414E                            l3780 373A  
                          l3772 36E4                            l3692 3888                            l3684 382A  
                          l3668 238E                            l3596 20CE                            l3588 2088  
                          l3676 3F66                            l3844 271C                            l3836 260E  
                          l3828 249C                            l4396 19BC                            l4388 1962  
                          l4476 3A22                            l4468 39DA                            l4652 3CEC  
                          l4628 3CB4                            l3854 4238                            l3862 429C  
                          l3870 427A                            l3758 420A                            l3926 39A6  
                          l3918 3982                            l3934 411C                            l3782 373C  
                          l3774 36FC                            l3694 3896                            l3686 3858  
                          l3598 20DA                            l3846 2740                            l3838 2640  
                          l4398 19D2                            l4478 3A36                            l3880 42E0  
                          l3856 423A                            l3872 4280                            l3928 39C0  
                          l3864 3D66                            l3936 4120                            l3784 374C  
                          l3696 38E6                            l3688 3868                            l4648 3CDA  
                          l3874 42FA                            l3866 42BA                            l3858 423C  
                          l3882 3C30                            l3890 3906                            l3938 4138  
                          l3794 3776                            l3786 3750                            l3778 3710  
                          l3698 38EC                            l3876 4300                            l3868 42C0  
                          l3884 3C92                            l3892 3916                            l3796 3780  
                          l3788 375E                            l3878 42DA                            l3894 3916  
                          l3886 38F4                            l3990 276E                            l3798 378A  
                          l3896 3928                            l3888 3906                            l3992 277E  
                          l3984 2752                            l3898 3928                            l3994 278E  
                          l3986 275E                            l3996 279E                            l3988 276C  
                          l3998 27A0             detect_color@GC_REAL 008A                            STR_1 0E05  
                          STR_3 0E3E                            STR_4 0E4E                            STR_5 0E38  
                          STR_6 0E44                            STR_7 0E25                            STR_8 0E49  
                          STR_9 0E1E                            u3000 1C88                            u3001 1C84  
                          u3010 1CA8                            u3011 1CA4                            u3100 1DE8  
                          u3020 1CB6                            u3101 1DE4                            u3021 1CB2  
                          u3110 1E14                            u3030 1CC6                            u3111 1E10  
                          u3031 1CC2                            u4000 27F4                            u3200 1EF6  
                          u3120 1E24                            u3040 1CF8                    _BAUD4CONbits 000EE9  
                          u4001 27F0                            u3201 1EF2                            u3121 1E20  
                          u3041 1CF4                            _LATE 000F7D                            u4010 2834  
                          u3210 1F08                            u3130 1E40                            u3050 1D06  
                          u4011 2830                            u3211 1F04                            u3131 1E3C  
                          u3051 1D02                            _LATG 000F7F                            u3300 404C  
                          u2500 3FDE                            u4100 29C0                            u4020 2874  
                          u3220 1F18                            u3140 1E50                            u3060 1D24  
                          u3301 4044                            u2501 3FDA                            u4101 29BC  
                          u4021 2870                            u3221 1F14                            u3141 1E4C  
                          u3061 1D20                            u2510 41B6                            u4110 29EE  
                          u4030 28EA                            u3230 1F38                            u3150 1E62  
                          u3070 1D5C                            u2511 41B2                            u4111 29EA  
                          u4031 28E6                            u3231 1F34                            u3151 1E5E  
                          u3071 1D58                            u3320 4366                            u2520 32E0  
                          u2600 349A                            u4120 2A04                            u4040 290C  
                          u4200 2E4C                            u3400 205E                            u3240 1F4A  
                          u3160 1E78                            u3080 1DA2                            u3321 4362  
                          u2521 32DC                            u2601 3496                            u4121 2A00  
                          u4041 2908                            u4201 2E48                            u3401 205A  
                          u3241 1F46                            u3161 1E74                            u3081 1D9E  
                          u2530 3312                            u2610 34D8                            u4130 2A18  
                          u4050 2936                            u4210 2EA2                            u3410 21D8  
                          u3330 1F94                            u3250 1F66                            u3170 1E8E  
                          u3090 1DD8                            _T2PR 000FBC                            u2531 330E  
                          u2611 34D4                            u4131 2A14                            u4051 2932  
                          u4211 2E9E                            u3331 1F90                            u3251 1F62  
                          u3171 1E8A                            u3091 1DD4                            u2620 3502  
                          u2460 3AB2                            u2700 2B1C                            u3260 2FA8  
                          u4300 3266                            u4140 2A32                            u4060 295A  
                          u4220 2EEC                            u3500 234C                            u3420 2232  
                          u3340 1FA6                            u3180 1EA2                            u2541 333C  
                          u2621 34FE                            u2461 3AAE                            u2701 2B16  
                          u3261 2FA4                            u4301 3262                            u4141 2A2E  
                          u4061 2956                            u4221 2EE8                            u3501 2348  
                          u3421 222E                            u3341 1FA2                            u3181 1E9E  
                          u3318 404E                            u2550 3360                            u2630 3530  
                          u2470 3AC4                            u2710 2B1E                            u3270 2FF0  
                          u4310 32C2                            u4150 2A7A                            u4070 2970  
                          u4230 2F0A                            u3510 2386                            u3430 2252  
                          u3350 1FB6                            u3190 1EBC                            u2551 335C  
                          u2631 352C                            u2471 3AC0                            u3271 2FEC  
                          u4311 32BE                            u5007 3238                            u4151 2A76  
                          u4071 296C                            u4231 2F06                            u3511 2382  
                          u3431 224E                            u3415 21CE                            u3351 1FB2  
                          u3191 1EB8                            u2560 338A                            u2640 3578  
                          u2480 3AEC                            u2800 2D38                            u2720 2B34  
                          u3280 3014                            u4160 2AAA                            u4080 298E  
                          u4240 2F1A                            u3520 381A                            u3440 2264  
                          u3360 1FF6                            u4400 18CE                            u4320 1630  
                          u2561 3386                            u2641 3574                            u2481 3AE8  
                          u2801 2D34                            u2721 2B30                            u3281 3010  
                          u5017 3294                            u4161 2AA6                            u4081 298A  
                          u4241 2F16                            u3521 3816                            u3441 2260  
                          u3361 1FF2                            u4401 18CA                            u4321 162C  
                          u2570 33CA                            u2490 3B22                            u2650 3B7A  
                          u2810 2D48                            u2730 2B64                            u3290 30B8  
                          u4170 2AD8                            u4090 29AE                            u4250 2F28  
                          u3610 36FC                            u3530 3858                            u3450 2292  
                          u3370 2008                            u4410 1900                            u4330 16FE  
                          u5027 428A                            u2571 33C6                            u2491 3B1E  
                          u2651 3B76                            u2811 2D44                            u2731 2B60  
                          u3291 30B4                            u4171 2AD4                            u4091 29AA  
                          u4251 2F24                            u3611 36F8                            u3531 3854  
                          u3451 228E                            u3371 2004                            u4411 18FC  
                          u4331 16FA                            u2580 3414                            u2660 3B9C  
                          u2820 2D5A                            u2740 2B80                            u4260 2F62  
                          u4180 2DE2                            u3620 3730                            u3540 3876  
                          u3460 22A8                            u3380 2018                            u2900 1B38  
                          u3700 2440                            u4500 1A0E                            u4420 192E  
                          u4340 1740                            u5037 41D8                            u2581 3410  
                          u2661 3B98                            u2821 2D56                            u2741 2B7C  
                          u4261 2F5E                            u4181 2DDE                            u3541 3872  
                          u3461 22A4                            u3381 2014                            u2901 1B34  
                          u4501 1A0A                            u4421 192A                            u4341 173C  
                          u2590 3468                            u2670 3BF2                            u2830 2D6A  
                          u2750 2BAE                            u4270 2F70                            u4190 2DF0  
                          u3630 375E                            u3550 3896                            u3470 22BC  
                          u3390 204E                            u2910 1B4E                            u3710 245C  
                          u4510 1A24                            u4430 1962                            u4350 1800  
                          u5047 360C                            u2591 3464                            u2671 3BEE  
                          u2831 2D66                            u2751 2BAA                            u4271 2F6C  
                          u4191 2DEC                            u3631 375A                            u3551 3892  
                          u3471 22B8                            u3391 204A                            u2911 1B4A  
                          u3711 2458                            u4511 1A20                            u4431 195E  
                          u4351 17FC                            u2680 3C02                            u2840 2D82  
                          u2760 2BBC                            u3800 393A                            u4280 31AE  
                          u3640 3772                            u3560 38E6                            u3480 22D6  
                          u2920 1B60                            u3720 249C                            u4520 1A3A  
                          u4440 1990                            u4360 1818                            u5057 3670  
                          u2681 3BFE                            u2841 2D7E                            u2761 2BB8  
                          u3801 3936                            u4281 31AA                            u3641 376E  
                          u3625 3726                            u3561 38E2                            u3481 22D2  
                          u2921 1B5C                            u3721 2498                            u3705 2436  
                          u4521 1A36                            u4441 198C                            u4361 1814  
                          u2850 4262                            u2690 407E                            u2770 2CE6  
                          u3810 394C                            u4290 320A                            u3650 379A  
                          u3490 231E                            u3570 416C                            u2930 1B70  
                          u3730 25A2                            u4530 1A50                            u4450 19AA  
                          u4370 1862                            u2851 425E                            u5067 36D4  
                          u2691 407A                            u2771 2CE2                            u3811 3948  
                          u4291 3206                            u3651 3796                            u3491 231A  
                          u3571 4168                            u2931 1B6C                            u3731 259E  
                          u4531 1A4C                            u4451 19A6                            u4371 185E  
                          u2860 4278                            u2780 2D04                            u3580 3D5C  
                          u3820 395E                            u3660 37BA                            u2940 1BAC  
                          u3740 2640                            u4540 1A62                            u4460 19BC  
                          u4380 187A                            u5077 42CA                            u2861 4274  
                          u2781 2D00                            u3581 3D58                            u3821 395A  
                          u3661 37B6                            u2941 1BA8                            u3741 263C  
                          u4541 1A5E                            u4461 19B8                            u4381 1876  
                          u3590 4226                            u2790 2D1E                            u3830 3970  
                          u3670 37CA                            u2950 1BBA                            u2870 1AD4  
                          u3750 2700                            u4550 1A74                            u4470 19D2  
                          u4390 189A                            u5087 42EA                            u3591 4222  
                          u2791 2D1A                            u3831 396C                            u3671 37C6  
                          u2951 1BB6                            u2871 1AD0                            u4551 1A70  
                          u4471 19CE                            u4391 1896                            u3840 3982  
                          u2960 1C28                            u2880 1AE6                            u3760 271C  
                          u3680 23E4                            u4560 1A86                            u4480 19E8  
                          u5097 430A                            u3841 397E                            u2961 1C24  
                          u2881 1AE2                            u3761 2718                            u4561 1A82  
                          u4481 19E4                            u3850 3994                            u3770 3906  
                          u2970 1C40                            u2890 1AF6                            u3690 240C  
                          u4570 1A9C                            u4490 19FC                            u3851 3990  
                          u3771 3902                            u2971 1C3A                            u2891 1AF2  
                          u3755 26F6                            u3691 2408                            u4571 1A98  
                          u4491 19F8                            u3860 39A6                            u3780 3916  
                          u2980 1C42                            u4580 1AB2                            u3861 39A2  
                          u3781 3912                            u3685 23DA                            u4581 1AAE  
                          u3790 3928                            u3950 276C                            u3870 4138  
                          u2990 1C6A                            u3791 3924                            u3951 2768  
                          u3871 4134                            u2991 1C66                            u3960 277E  
                          u3880 414E                            u3961 277A                            u3881 414A  
                          u3970 278E                            u3971 278A                            u3980 27D2  
                          u3981 27CE                            u3990 27E4                            u4790 3CFC  
                          u3991 27E0                            u4791 3CF8                            u4957 10FE  
                          u4967 1388                            u4977 15F6                            u4987 3180  
                          u4997 31DC                            abs@a 0013             detect_color@GR_REAL 0088  
                          _dbuf 0165                            _main 3CA0                            _dtoa 2AEC  
                          _prec 00EE                            _nout 00EA                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001A  
                          fsr2l 000FD9                            prodh 000FF4                            prodl 000FF3  
                          start 0000                  ?_color_display 0058                 ___fldiv@new_exp 0020  
        __end_of_color_read_Red 3EB6                    ___param_bank 000000                  ?_color_predict 0001  
                         ??_abs 0015                           ??_pad 0017                   ___fltol@sign1 0064  
               __end_of___aodiv 3456                    main@complete 0185                 __end_of___fladd 1F7A  
                         ?_main 0001                           ?_dtoa 001C                 __end_of___aomod 35BA  
                         _ADPCH 000F5F                 __end_of___fldiv 2AEC                 __end_of___flneg 418E  
                         STR_10 0E13                           STR_11 0E2C                           STR_12 0E32  
                         STR_13 0E0D                 __end_of___flmul 23A4                 __end_of___flsub 3F9C  
               __end_of___fltol 37EC                           _LED_B 42FA                           _LED_C 427A  
                         _LED_G 42DA                           _LED_R 42BA                    vfpfcnvrt@fmt 0042  
       __end_of_sendCharSerial4 436C      __end_of_I2C_2_Master_Start 438C         ??_color_data_collection 005C  
    __end_of_I2C_2_Master_Write 4378                 __end_of_compare 4156                    compare@lower 006A  
                         _flags 00F0                           _color 0164                    compare@upper 006E  
                         _fputc 3AA0                           _fputs 3F9C                           pad@fp 0011  
                         _width 00EC                           _putch 4398                           _toint 0E01  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
                         tablat 000FF5                 __end_of_lroundf 411C                           status 000FD8  
               __end_of_sprintf 3E16                color_display@buf 0079         __end_of_color_read_Blue 3F56  
         _I2C_2_Master_RepStart 438C                 ?_color_read_Red 0005                 __initialization 40A4  
                  __end_of_main 3D04                    __end_of_dtoa 2DD0            __end_of_detect_color 1ABA  
        color_data_collection@i 00DE          color_data_collection@j 00E0          color_data_collection@k 00E2  
        color_data_collection@m 005A          color_data_collection@x 00E4                          ??_main 0060  
                        ??_dtoa 0026                   __activetblptr 000001                          ?_LED_B 0001  
                        ?_LED_C 0001                          ?_LED_G 0001                          ?_LED_R 0001  
        _initDCmotors_parameter 39CE                          ?_fputc 0001                          ?_fputs 000A  
                        _ADRESH 000F64                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70        __end_of_color_click_init 41F8  
                        _RX4PPS 000E15                          _TX4REG 000EE4                 ??_color_display 005A  
              __end_of___xxtofl 2F84                 ??_color_predict 0058                    vfprintf@cfmt 0056  
                        ___flge 37EC                       ??___aodiv 0011                       ??___fladd 0009  
                     ??___aomod 0011                       ??___fldiv 0017                       ??___flneg 0005  
                     ??___flmul 0030                       ??___flsub 0019                       ??___fltol 0060  
                 compare@result 005F                          clear_0 40C2                          clear_1 40CE  
                        _motorL 015A                          _motorR 0150                          isa$std 000001  
                        pad@buf 0013                          _roundf 23A4                          dtoa@fp 001C  
                        _strlen 418E                       ??_compare 005F                __end_of_pin_init 4354  
                        fputc@c 0001                          fputs@c 000E                          fputs@i 000F  
                        fputs@s 000A                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                ?_sendCharSerial4 0001  
                     ??_lroundf 005F                     read_color@m 000C                          putch@c 0001  
              __end_of_vfprintf 3D66               ??_initDCmotorsPWM 0003                       ??_sprintf 0058  
                    ___flge@ff1 0001                      ___flge@ff2 0005                    ___xxtofl@arg 000B  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                calibrate_white@w 000C  
                    __accesstop 0060         __end_of__initialization 40D4        __end_of_color_read_Clear 3E66  
                    ___flneg@f1 0001        __end_of_color_read_Green 3F06          ?_I2C_2_Master_RepStart 0001  
            color_predict@color 00DD    initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003  
                 ___rparam_used 000001                      ___fltol@f1 005B                   __end_of_LED_B 431A  
                 __end_of_LED_C 429A                   __end_of_LED_G 42FA                   __end_of_LED_R 42DA  
              ?_color_read_Blue 0005                  __pcstackCOMRAM 0001                    __pidataBANK0 4396  
                 __end_of_fputc 3B6A               detect_color@color 0090                   __end_of_fputs 3FE0  
                 __end_of_putch 439A                   __end_of_toint 0E05                         ??_LED_B 0001  
                       ??_LED_C 0001                         ??_LED_G 0001                         ??_LED_R 0001  
                       ??_fputc 0005                         ??_fputs 000E                         ??_putch 0001  
                    __pbssBANK0 00E6                      __pbssBANK1 0100                color_predict@buf 0079  
             _color_writetoaddr 429A                    _T2CLKCONbits 000FBF                         ?___flge 0001  
            ?_color_writetoaddr 0003                         ?_roundf 0041             ??_color_writetoaddr 0004  
                       ?_strlen 0001                       ?___xxtofl 0001                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5                    _detect_color 0E54  
 __end_of_color_data_collection 32CE          color_writetoaddr@value 0003                ??_color_read_Red 0007  
     __end_of_color_writetoaddr 42BA                       _ADREFbits 000F58              _I2C_2_Master_Start 4382  
                    _initUSART4 431A              _I2C_2_Master_Write 436C                       ?_pin_init 0001  
                       __Hparam 0000                         __Lparam 0000               color_read_Red@tmp 000A  
       sendStringSerial4@string 0002                         ___aodiv 32CE                         ___fladd 1ABA  
                       ___aomod 3456                         ___fldiv 2752                         ___flneg 4156  
                       ___flmul 1F7A                         ___flsub 3F56                         ___fltol 36E4  
           ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050  
                  __psmallconst 0E00                         __pcinit 40A4                         __ramtop 0E00  
                    _read_color 3D66                         __ptext0 3CA0                         __ptext1 4338  
                       __ptext2 431A                         __ptext3 39CE                         __ptext4 3FE0  
                       __ptext5 0E54                         __ptext6 40E2                         __ptext7 23A4  
                       __ptext8 3F56                         __ptext9 1ABA                         _compare 411C  
       ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD                      ??___xxtofl 0005  
                     _T2HLTbits 000FBE                         _lroundf 40E2                   _RxBufWriteCnt 00F5  
                       _sprintf 3DC4                         main@rgb 019A            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization 40D4                 _CALIBRATION_180 00F6  
                       fputc@fp 0003                         fputs@fp 000C               ?_color_click_init 0001  
                    ??_pin_init 0001              ??_color_click_init 0005               __end_of_vfpfcnvrt 3138  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                         roundf@e 004D                         roundf@u 0053  
                       roundf@x 0041                         roundf@y 0057                      ??_vfprintf 0056  
                       strlen@a 0003                         strlen@s 0001                 _initDCmotorsPWM 3FE0  
__end_of_initDCmotors_parameter 3AA0                       _PORTFbits 000F8E                     ___fladd@grs 0010  
                 ___xxtofl@sign 0009                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
      color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002                     ___flmul@grs 0035  
             ?_color_read_Clear 0005                    _EUSART4RXbuf 013C                    _EUSART4TXbuf 0100  
             ?_color_read_Green 0005                     ?_initUSART4 0001       sendCharSerial4@charToSend 0001  
         __end_of_color_display 3CA0                      main@motorL 0186                      main@motorR 0190  
             ??_calibrate_white 000E              ??_color_read_Clear 0007                  color_display@m 0058  
            ??_color_read_Green 0007                  detect_color@BB 0086                  detect_color@BC 0078  
                detect_color@BG 008E                  detect_color@GB 007E                  detect_color@GG 0082  
                detect_color@BR 008C                  detect_color@GR 0080                  detect_color@RB 007C  
                detect_color@RG 007A                  detect_color@RR 0084           __end_of_color_predict 39CE  
                __end_of___flge 38F0                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                     ?_read_color 000C                  __end_of_roundf 2752  
                __end_of_strlen 41C4             color_read_Clear@tmp 000A             start_initialization 40A4  
                   __end_of_abs 40A4                     __end_of_pad 3C30                   _TxBufWriteCnt 00F3  
           color_read_Green@tmp 000A         __end_of_initDCmotorsPWM 4022                     vfprintf@fmt 0052  
                      ??___flge 0009                     __pdataBANK0 00F6                        ??_roundf 0045  
                      ??_strlen 0003                       ___fladd@a 0005                       ___fladd@b 0001  
                     ___fldiv@a 0013                       ___fldiv@b 000F                       ___flmul@a 002C  
                     ___flmul@b 0028                       ___flsub@a 0015                       ___flsub@b 0011  
                 __pcstackBANK0 0060                   __pcstackBANK1 0185                ___aodiv@dividend 0001  
                     _dtoa$2375 002E                        ?___aodiv 0001                        ?___fladd 0001  
                      ?___aomod 0001                        ?___fldiv 000F                ___aodiv@quotient 0013  
                      ?___flneg 0001                        ?___flmul 0028                        ?___flsub 0011  
                      ?___fltol 005B            I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004  
                      ?_compare 006A                     __smallconst 0E00               _I2C_2_Master_Idle 4252  
             _I2C_2_Master_Init 4228               _I2C_2_Master_Read 4022               _I2C_2_Master_Stop 4378  
                  _RxBufReadCnt 00F4                        ?_lroundf 0066              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001              ?_I2C_2_Master_Stop 0001  
      initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060               _sendStringSerial4 41F8  
         _color_data_collection 3138             ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001  
           ??_I2C_2_Master_Read 0002                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATEbits 000F7D                        _LATFbits 000F7E  
                      _LATGbits 000F7F              ?_sendStringSerial4 0002                        _PIE4bits 000E2D  
                      _PIR4bits 000E37                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                        _SSP2STAT 000ED8  
                     _vfpfcnvrt 2F84                      _ADCON0bits 000F60       __end_of_I2C_2_Master_Idle 427A  
     __end_of_I2C_2_Master_Init 4252       __end_of_I2C_2_Master_Read 4064       __end_of_I2C_2_Master_Stop 4382  
   I2C_2_Master_Write@data_byte 0002                       main@white 01A2               ??_color_read_Blue 0007  
                 detect_color@m 0070                   detect_color@w 0072                    _TxBufReadCnt 00F2  
               _calibrate_white 35BA       __end_of_sendStringSerial4 4228   __end_of_I2C_2_Master_RepStart 4396  
            color_read_Blue@tmp 000A                      roundf@F527 00E6                    ??_initUSART4 0001  
                      __Hrparam 0000                      vfprintf@ap 0054                        __Lrparam 0000  
                    vfprintf@fp 0050                    __Lsmallconst 0E00            compare@value2compare 006C  
                    ?_vfpfcnvrt 0040                    ??_read_color 000E                 ___aodiv@divisor 0009  
               ___aodiv@counter 0011                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                    sprintf@fmt 0062                        ___xxtofl 2DD0              __end_of_initUSART4 4338  
                      __ptext10 4156                        __ptext11 1F7A                        __ptext20 38F0  
                      __ptext12 37EC                        __ptext21 3C30                        __ptext13 36E4  
                      __ptext30 4398                        __ptext22 3DC4                        __ptext14 411C  
                      __ptext31 4064                        __ptext23 3D04                        __ptext15 2DD0  
                      __ptext40 35BA                        __ptext32 3456                        __ptext24 2F84  
                      __ptext16 2752                        __ptext41 3E66                        __ptext33 32CE  
                      __ptext25 2AEC                        __ptext17 3138                        __ptext50 42BA  
                      __ptext42 3EB6                        __ptext34 41F8                        __ptext26 3B6A  
                      __ptext18 3D66                        __ptext51 42DA                        __ptext43 3F06  
                      __ptext35 4354                        __ptext27 418E                        __ptext19 3E16  
                      __ptext52 42FA                        __ptext44 436C                        __ptext36 427A  
                      __ptext28 3F9C                        __ptext45 4378                        __ptext37 41C4  
                      __ptext29 3AA0                        __ptext46 4382                        __ptext38 429A  
                      __ptext47 438C                        __ptext39 4228                        __ptext48 4022  
                      __ptext49 4252                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
        ?_color_data_collection 005A              __end_of_read_color 3DC4                        _pin_init 4338  
                      isa$xinst 000000                      _RC4STAbits 000EE7                     _SENSITIVITY 00F7  
                      _vfprintf 3D04                ___aomod@dividend 0001         __end_of_calibrate_white 36E4  
                 ?_detect_color 0070                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
                     sprintf@ap 006C                        lroundf@x 0066        ??_initDCmotors_parameter 0005  
               ___aomod@divisor 0009                     ??_vfpfcnvrt 0046                 ___aomod@counter 0011  
              _color_click_init 41C4                        sprintf@f 006E                        sprintf@s 0060  
             _detect_color$2736 0091                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
                ??_detect_color 0074                   ___fladd@signs 000D                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012                 _sendCharSerial4 4354                    ___fladd@aexp 000E  
                  ___fladd@bexp 000F                    ___aomod@sign 0012                     _roundf$2737 004F  
                   _roundf$2738 0049                   _color_display 3C30  
