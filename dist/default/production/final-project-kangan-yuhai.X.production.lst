

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Mar 10 10:57:25 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83  0000                     
    84                           ; Version 2.35
    85                           ; Generated 05/05/2021 GMT
    86                           ; 
    87                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F67K40 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     
   120                           	psect	idataBANK0
   121  004E10                     __pidataBANK0:
   122                           	callstack 0
   123                           
   124                           ;initializer for _CALIBRATION_180
   125  004E10  28                 	db	40
   126                           
   127                           ;initializer for _SENSITIVITY
   128  004E11  0B                 	db	11
   129                           
   130                           	psect	smallconst
   131  000E00                     __psmallconst:
   132                           	callstack 0
   133  000E00  00                 	db	0
   134  000E01  0000               	dw	0
   135  000E03  4B00               	dw	19200
   136  000E05                     __end_of_toint:
   137                           	callstack 0
   138  0000                     _TRISFbits	set	3974
   139  0000                     _TX4REG	set	3812
   140  0000                     _RC4STAbits	set	3815
   141  0000                     _SP4BRGH	set	3814
   142  0000                     _TRISGbits	set	3975
   143  0000                     _TRISEbits	set	3973
   144  0000                     _SSP2CON2bits	set	3802
   145  0000                     _LATG	set	3967
   146  0000                     _LATE	set	3965
   147  0000                     _RX4PPS	set	3605
   148  0000                     _SSP2CLKPPS	set	3612
   149  0000                     _SSP2DATPPS	set	3613
   150  0000                     _ANSELDbits	set	3751
   151  0000                     _SSP2ADD	set	3798
   152  0000                     _SSP2CON1bits	set	3801
   153  0000                     _LATAbits	set	3961
   154  0000                     _LATFbits	set	3966
   155  0000                     _LATGbits	set	3967
   156  0000                     _TRISAbits	set	3969
   157  0000                     _TRISCbits	set	3971
   158  0000                     _TRISDbits	set	3972
   159  0000                     _LATCbits	set	3963
   160  0000                     _LATEbits	set	3965
   161  0000                     _RC4REG	set	3811
   162  0000                     _SP4BRGL	set	3813
   163  0000                     _TX4STAbits	set	3816
   164  0000                     _BAUD4CONbits	set	3817
   165  0000                     _SSP2CON2	set	3802
   166  0000                     _SSP2STAT	set	3800
   167  0000                     _ANSELFbits	set	3764
   168  0000                     _SSP2BUF	set	3797
   169  0000                     _PIE4bits	set	3629
   170  0000                     _PIR4bits	set	3639
   171  0000                     _RC0PPS	set	3682
   172  0000                     _RC7PPS	set	3689
   173  0000                     _RD5PPS	set	3695
   174  0000                     _RE2PPS	set	3700
   175  0000                     _RD6PPS	set	3696
   176  0000                     _PORTFbits	set	3982
   177  0000                     _T2PR	set	4028
   178  0000                     _T2CONbits	set	4029
   179  0000                     _PWM7DCH	set	4000
   180  0000                     _PWM6DCH	set	4003
   181  0000                     _T2CLKCONbits	set	4031
   182  0000                     _T2HLTbits	set	4030
   183  0000                     _PWM6CONbits	set	4004
   184  0000                     _PWM7CONbits	set	4001
   185  0000                     _ADREFbits	set	3928
   186  0000                     _ADPCH	set	3935
   187  0000                     _ADRESH	set	3940
   188  0000                     _ADCON0bits	set	3936
   189  000E05                     STR_1:
   190  000E05  25                 	db	37
   191  000E06  64                 	db	100	;'d'
   192  000E07  09                 	db	9
   193  000E08  25                 	db	37
   194  000E09  64                 	db	100	;'d'
   195  000E0A  09                 	db	9
   196  000E0B  25                 	db	37
   197  000E0C  64                 	db	100	;'d'
   198  000E0D  09                 	db	9
   199  000E0E  25                 	db	37
   200  000E0F  64                 	db	100	;'d'
   201  000E10  0D                 	db	13
   202  000E11  0A                 	db	10
   203  000E12  00                 	db	0
   204  000E13  4C                 	db	76	;'L'
   205  000E14  69                 	db	105	;'i'
   206  000E15  67                 	db	103	;'g'
   207  000E16  68                 	db	104	;'h'
   208  000E17  74                 	db	116	;'t'
   209  000E18  20                 	db	32
   210  000E19  62                 	db	98	;'b'
   211  000E1A  6C                 	db	108	;'l'
   212  000E1B  75                 	db	117	;'u'
   213  000E1C  65                 	db	101	;'e'
   214  000E1D  00                 	db	0
   215  000E1E  4F                 	db	79	;'O'
   216  000E1F  72                 	db	114	;'r'
   217  000E20  61                 	db	97	;'a'
   218  000E21  6E                 	db	110	;'n'
   219  000E22  67                 	db	103	;'g'
   220  000E23  65                 	db	101	;'e'
   221  000E24  00                 	db	0
   222  000E25  59                 	db	89	;'Y'
   223  000E26  65                 	db	101	;'e'
   224  000E27  6C                 	db	108	;'l'
   225  000E28  6C                 	db	108	;'l'
   226  000E29  6F                 	db	111	;'o'
   227  000E2A  77                 	db	119	;'w'
   228  000E2B  00                 	db	0
   229  000E2C  57                 	db	87	;'W'
   230  000E2D  68                 	db	104	;'h'
   231  000E2E  69                 	db	105	;'i'
   232  000E2F  74                 	db	116	;'t'
   233  000E30  65                 	db	101	;'e'
   234  000E31  00                 	db	0
   235  000E32  42                 	db	66	;'B'
   236  000E33  6C                 	db	108	;'l'
   237  000E34  61                 	db	97	;'a'
   238  000E35  63                 	db	99	;'c'
   239  000E36  6B                 	db	107	;'k'
   240  000E37  00                 	db	0
   241  000E38  47                 	db	71	;'G'
   242  000E39  72                 	db	114	;'r'
   243  000E3A  65                 	db	101	;'e'
   244  000E3B  65                 	db	101	;'e'
   245  000E3C  6E                 	db	110	;'n'
   246  000E3D  00                 	db	0
   247  000E3E  45                 	db	69	;'E'
   248  000E3F  72                 	db	114	;'r'
   249  000E40  72                 	db	114	;'r'
   250  000E41  6F                 	db	111	;'o'
   251  000E42  72                 	db	114	;'r'
   252  000E43  00                 	db	0
   253  000E44  42                 	db	66	;'B'
   254  000E45  6C                 	db	108	;'l'
   255  000E46  75                 	db	117	;'u'
   256  000E47  65                 	db	101	;'e'
   257  000E48  00                 	db	0
   258  000E49  50                 	db	80	;'P'
   259  000E4A  69                 	db	105	;'i'
   260  000E4B  6E                 	db	110	;'n'
   261  000E4C  6B                 	db	107	;'k'
   262  000E4D  00                 	db	0
   263  000E4E  52                 	db	82	;'R'
   264  000E4F  65                 	db	101	;'e'
   265  000E50  64                 	db	100	;'d'
   266  000E51  00                 	db	0
   267  000E52  00                 	db	0	; dummy byte at the end
   268  0000                     
   269                           ; #config settings
   270                           
   271                           	psect	cinit
   272  004ADE                     __pcinit:
   273                           	callstack 0
   274  004ADE                     start_initialization:
   275                           	callstack 0
   276  004ADE                     __initialization:
   277                           	callstack 0
   278                           
   279                           ; Initialize objects allocated to BANK0 (2 bytes)
   280                           ; load TBLPTR registers with __pidataBANK0
   281  004ADE  0E10               	movlw	low __pidataBANK0
   282  004AE0  6EF6               	movwf	tblptrl,c
   283  004AE2  0E4E               	movlw	high __pidataBANK0
   284  004AE4  6EF7               	movwf	tblptrh,c
   285  004AE6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   286  004AE8  6EF8               	movwf	tblptru,c
   287  004AEA  0009               	tblrd		*+	;fetch initializer
   288  004AEC  CFF5 F0F8          	movff	tablat,__pdataBANK0
   289  004AF0  0009               	tblrd		*+	;fetch initializer
   290  004AF2  CFF5 F0F9          	movff	tablat,__pdataBANK0+1
   291                           
   292                           ; Clear objects allocated to BANK1 (133 bytes)
   293  004AF6  EE01  F000         	lfsr	0,__pbssBANK1
   294  004AFA  0E85               	movlw	133
   295  004AFC                     clear_0:
   296  004AFC  6AEE               	clrf	postinc0,c
   297  004AFE  06E8               	decf	wreg,f,c
   298  004B00  E1FD               	bnz	clear_0
   299                           
   300                           ; Clear objects allocated to BANK0 (16 bytes)
   301  004B02  EE00  F0E8         	lfsr	0,__pbssBANK0
   302  004B06  0E10               	movlw	16
   303  004B08                     clear_1:
   304  004B08  6AEE               	clrf	postinc0,c
   305  004B0A  06E8               	decf	wreg,f,c
   306  004B0C  E1FD               	bnz	clear_1
   307  004B0E                     end_of_initialization:
   308                           	callstack 0
   309  004B0E                     __end_of__initialization:
   310                           	callstack 0
   311  004B0E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   312  004B10  6EF8               	movwf	tblptru,c
   313  004B12  0E0E               	movlw	high __Lsmallconst
   314  004B14  6EF7               	movwf	tblptrh,c
   315  004B16  0100               	movlb	0
   316  004B18  EF59  F021         	goto	_main	;jump to C main() function
   317                           
   318                           	psect	bssBANK0
   319  0000E8                     __pbssBANK0:
   320                           	callstack 0
   321  0000E8                     roundf@F527:
   322                           	callstack 0
   323  0000E8                     	ds	4
   324  0000EC                     _nout:
   325                           	callstack 0
   326  0000EC                     	ds	2
   327  0000EE                     _width:
   328                           	callstack 0
   329  0000EE                     	ds	2
   330  0000F0                     _prec:
   331                           	callstack 0
   332  0000F0                     	ds	2
   333  0000F2                     _flags:
   334                           	callstack 0
   335  0000F2                     	ds	2
   336  0000F4                     _TxBufReadCnt:
   337                           	callstack 0
   338  0000F4                     	ds	1
   339  0000F5                     _TxBufWriteCnt:
   340                           	callstack 0
   341  0000F5                     	ds	1
   342  0000F6                     _RxBufReadCnt:
   343                           	callstack 0
   344  0000F6                     	ds	1
   345  0000F7                     _RxBufWriteCnt:
   346                           	callstack 0
   347  0000F7                     	ds	1
   348                           
   349                           	psect	dataBANK0
   350  0000F8                     __pdataBANK0:
   351                           	callstack 0
   352  0000F8                     _CALIBRATION_180:
   353                           	callstack 0
   354  0000F8                     	ds	1
   355  0000F9                     _SENSITIVITY:
   356                           	callstack 0
   357  0000F9                     	ds	1
   358                           
   359                           	psect	bssBANK1
   360  000100                     __pbssBANK1:
   361                           	callstack 0
   362  000100                     _EUSART4TXbuf:
   363                           	callstack 0
   364  000100                     	ds	60
   365  00013C                     _EUSART4RXbuf:
   366                           	callstack 0
   367  00013C                     	ds	20
   368  000150                     _motorR:
   369                           	callstack 0
   370  000150                     	ds	10
   371  00015A                     _motorL:
   372                           	callstack 0
   373  00015A                     	ds	10
   374  000164                     _color:
   375                           	callstack 0
   376  000164                     	ds	1
   377  000165                     _dbuf:
   378                           	callstack 0
   379  000165                     	ds	32
   380                           
   381                           	psect	cstackBANK1
   382  000185                     __pcstackBANK1:
   383                           	callstack 0
   384  000185                     main@rgb:
   385                           	callstack 0
   386                           
   387                           ; 8 bytes @ 0x0
   388  000185                     	ds	8
   389  00018D                     main@white:
   390                           	callstack 0
   391                           
   392                           ; 18 bytes @ 0x8
   393  00018D                     	ds	18
   394  00019F                     main@motorL:
   395                           	callstack 0
   396                           
   397                           ; 10 bytes @ 0x1A
   398  00019F                     	ds	10
   399  0001A9                     main@motorR:
   400                           	callstack 0
   401                           
   402                           ; 10 bytes @ 0x24
   403  0001A9                     	ds	10
   404                           
   405                           	psect	cstackBANK0
   406  000060                     __pcstackBANK0:
   407                           	callstack 0
   408  000060                     ??___fltol:
   409  000060                     ?_sprintf:
   410                           	callstack 0
   411  000060                     sprintf@s:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x0
   415  000060                     	ds	2
   416  000062                     sprintf@fmt:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x2
   420  000062                     	ds	2
   421  000064                     ___fltol@sign1:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x4
   425  000064                     	ds	1
   426  000065                     ___fltol@exp1:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0x5
   430  000065                     	ds	1
   431  000066                     ?_lroundf:
   432                           	callstack 0
   433  000066                     lroundf@x:
   434                           	callstack 0
   435                           
   436                           ; 4 bytes @ 0x6
   437  000066                     	ds	4
   438  00006A                     compare@lower:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0xA
   442  00006A                     	ds	2
   443  00006C                     compare@value2compare:
   444                           	callstack 0
   445  00006C                     sprintf@ap:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0xC
   449  00006C                     	ds	2
   450  00006E                     compare@upper:
   451                           	callstack 0
   452  00006E                     sprintf@f:
   453                           	callstack 0
   454                           
   455                           ; 11 bytes @ 0xE
   456  00006E                     	ds	2
   457  000070                     detect_color@m:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x10
   461  000070                     	ds	2
   462  000072                     detect_color@w:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x12
   466  000072                     	ds	2
   467  000074                     ??_detect_color:
   468                           
   469                           ; 1 bytes @ 0x14
   470  000074                     	ds	4
   471  000078                     detect_color@BC:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x18
   475  000078                     	ds	1
   476  000079                     color_display@buf:
   477                           	callstack 0
   478  000079                     color_predict@buf:
   479                           	callstack 0
   480                           
   481                           ; 100 bytes @ 0x19
   482  000079                     	ds	1
   483  00007A                     detect_color@RG:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x1A
   487  00007A                     	ds	2
   488  00007C                     detect_color@RB:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x1C
   492  00007C                     	ds	2
   493  00007E                     detect_color@GB:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x1E
   497  00007E                     	ds	2
   498  000080                     detect_color@GR:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x20
   502  000080                     	ds	2
   503  000082                     detect_color@GG:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x22
   507  000082                     	ds	2
   508  000084                     detect_color@RR:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x24
   512  000084                     	ds	2
   513  000086                     detect_color@BB:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x26
   517  000086                     	ds	2
   518  000088                     detect_color@BR:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x28
   522  000088                     	ds	2
   523  00008A                     detect_color@GR_REAL:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x2A
   527  00008A                     	ds	2
   528  00008C                     detect_color@GC_REAL:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x2C
   532  00008C                     	ds	2
   533  00008E                     detect_color@BG:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x2E
   537  00008E                     	ds	2
   538  000090                     detect_color@color:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x30
   542  000090                     	ds	1
   543  000091                     _detect_color$2740:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0x31
   547  000091                     	ds	76
   548  0000DD                     color_predict@color:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x7D
   552  0000DD                     	ds	1
   553  0000DE                     color_data_collection@i:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x7E
   557  0000DE                     	ds	2
   558  0000E0                     color_data_collection@j:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x80
   562  0000E0                     	ds	2
   563  0000E2                     color_data_collection@k:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x82
   567  0000E2                     	ds	2
   568  0000E4                     color_data_collection@x:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x84
   572  0000E4                     	ds	2
   573  0000E6                     ??_main:
   574                           
   575                           ; 1 bytes @ 0x86
   576  0000E6                     	ds	2
   577                           
   578                           	psect	cstackCOMRAM
   579  000001                     __pcstackCOMRAM:
   580                           	callstack 0
   581  000001                     ??_LED_R:
   582  000001                     ??_LED_C:
   583  000001                     ??_LED_B:
   584  000001                     ??_LED_G:
   585  000001                     ??_I2C_2_Master_Idle:
   586  000001                     ?_strlen:
   587                           	callstack 0
   588  000001                     ?___wmul:
   589                           	callstack 0
   590  000001                     ?___fladd:
   591                           	callstack 0
   592  000001                     ?___flneg:
   593                           	callstack 0
   594  000001                     ?___xxtofl:
   595                           	callstack 0
   596  000001                     ?___aodiv:
   597                           	callstack 0
   598  000001                     ?___aomod:
   599                           	callstack 0
   600  000001                     sendCharSerial4@charToSend:
   601                           	callstack 0
   602  000001                     initDCmotorsPWM@PWMperiod:
   603                           	callstack 0
   604  000001                     initDCmotors_parameter@motorL:
   605                           	callstack 0
   606  000001                     ___wmul@multiplier:
   607                           	callstack 0
   608  000001                     fputc@c:
   609                           	callstack 0
   610  000001                     strlen@s:
   611                           	callstack 0
   612  000001                     ___flge@ff1:
   613                           	callstack 0
   614  000001                     ___flneg@f1:
   615                           	callstack 0
   616  000001                     ___fladd@b:
   617                           	callstack 0
   618  000001                     ___xxtofl@val:
   619                           	callstack 0
   620  000001                     ___aodiv@dividend:
   621                           	callstack 0
   622  000001                     ___aomod@dividend:
   623                           	callstack 0
   624                           
   625                           ; 8 bytes @ 0x0
   626  000001                     	ds	1
   627  000002                     ??_I2C_2_Master_Read:
   628  000002                     I2C_2_Master_Write@data_byte:
   629                           	callstack 0
   630  000002                     sendStringSerial4@string:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x1
   634  000002                     	ds	1
   635  000003                     color_writetoaddr@value:
   636                           	callstack 0
   637  000003                     I2C_2_Master_Read@ack:
   638                           	callstack 0
   639  000003                     initDCmotors_parameter@motorR:
   640                           	callstack 0
   641  000003                     ___wmul@multiplicand:
   642                           	callstack 0
   643  000003                     fputc@fp:
   644                           	callstack 0
   645  000003                     strlen@a:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x2
   649  000003                     	ds	1
   650  000004                     color_writetoaddr@address:
   651                           	callstack 0
   652  000004                     I2C_2_Master_Read@tmp:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x3
   656  000004                     	ds	1
   657  000005                     ??_fputc:
   658  000005                     ??_color_click_init:
   659  000005                     ??___xxtofl:
   660  000005                     ?_color_read_Red:
   661                           	callstack 0
   662  000005                     ?_color_read_Blue:
   663                           	callstack 0
   664  000005                     ?_color_read_Green:
   665                           	callstack 0
   666  000005                     ?_color_read_Clear:
   667                           	callstack 0
   668  000005                     ___wmul@product:
   669                           	callstack 0
   670  000005                     ___flge@ff2:
   671                           	callstack 0
   672  000005                     ___fladd@a:
   673                           	callstack 0
   674                           
   675                           ; 4 bytes @ 0x4
   676  000005                     	ds	2
   677  000007                     ??_color_read_Red:
   678  000007                     ??_color_read_Blue:
   679  000007                     ??_color_read_Green:
   680  000007                     ??_color_read_Clear:
   681  000007                     ?___awdiv:
   682                           	callstack 0
   683  000007                     ___awdiv@dividend:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x6
   687  000007                     	ds	2
   688  000009                     ??___fladd:
   689  000009                     ??___flge:
   690  000009                     ___xxtofl@sign:
   691                           	callstack 0
   692  000009                     ___awdiv@divisor:
   693                           	callstack 0
   694  000009                     ___aodiv@divisor:
   695                           	callstack 0
   696  000009                     ___aomod@divisor:
   697                           	callstack 0
   698                           
   699                           ; 8 bytes @ 0x8
   700  000009                     	ds	1
   701  00000A                     ___xxtofl@exp:
   702                           	callstack 0
   703  00000A                     color_read_Red@tmp:
   704                           	callstack 0
   705  00000A                     color_read_Blue@tmp:
   706                           	callstack 0
   707  00000A                     color_read_Green@tmp:
   708                           	callstack 0
   709  00000A                     color_read_Clear@tmp:
   710                           	callstack 0
   711  00000A                     fputs@s:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x9
   715  00000A                     	ds	1
   716  00000B                     ___awdiv@counter:
   717                           	callstack 0
   718  00000B                     ___xxtofl@arg:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0xA
   722  00000B                     	ds	1
   723  00000C                     ___awdiv@sign:
   724                           	callstack 0
   725  00000C                     read_color@m:
   726                           	callstack 0
   727  00000C                     calibrate_white@w:
   728                           	callstack 0
   729  00000C                     fputs@fp:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0xB
   733  00000C                     	ds	1
   734  00000D                     ___fladd@signs:
   735                           	callstack 0
   736  00000D                     ___awdiv@quotient:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0xC
   740  00000D                     	ds	1
   741  00000E                     ??_calibrate_white:
   742  00000E                     ___fladd@aexp:
   743                           	callstack 0
   744  00000E                     fputs@c:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0xD
   748  00000E                     	ds	1
   749  00000F                     ?___fldiv:
   750                           	callstack 0
   751  00000F                     ___fladd@bexp:
   752                           	callstack 0
   753  00000F                     setMotorPWM@m:
   754                           	callstack 0
   755  00000F                     fputs@i:
   756                           	callstack 0
   757  00000F                     ___fldiv@b:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0xE
   761  00000F                     	ds	1
   762  000010                     ___fladd@grs:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0xF
   766  000010                     	ds	1
   767  000011                     ??_setMotorPWM:
   768  000011                     ?_pad:
   769                           	callstack 0
   770  000011                     ?___flsub:
   771                           	callstack 0
   772  000011                     ___aodiv@counter:
   773                           	callstack 0
   774  000011                     ___aomod@counter:
   775                           	callstack 0
   776  000011                     pad@fp:
   777                           	callstack 0
   778  000011                     ___flsub@b:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x10
   782  000011                     	ds	1
   783  000012                     ___aodiv@sign:
   784                           	callstack 0
   785  000012                     ___aomod@sign:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x11
   789  000012                     	ds	1
   790  000013                     ?_abs:
   791                           	callstack 0
   792  000013                     pad@buf:
   793                           	callstack 0
   794  000013                     abs@a:
   795                           	callstack 0
   796  000013                     ___fldiv@a:
   797                           	callstack 0
   798  000013                     ___aodiv@quotient:
   799                           	callstack 0
   800                           
   801                           ; 8 bytes @ 0x12
   802  000013                     	ds	2
   803  000015                     ??_abs:
   804  000015                     pad@p:
   805                           	callstack 0
   806  000015                     ___flsub@a:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x14
   810  000015                     	ds	2
   811  000017                     ??___fldiv:
   812  000017                     ??_pad:
   813                           
   814                           ; 1 bytes @ 0x16
   815  000017                     	ds	1
   816  000018                     setMotorPWM@PWMduty:
   817                           	callstack 0
   818  000018                     pad@i:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x17
   822  000018                     	ds	1
   823  000019                     
   824                           ; 1 bytes @ 0x18
   825  000019                     	ds	1
   826  00001A                     stop@mL:
   827                           	callstack 0
   828  00001A                     fullSpeedAhead@mL:
   829                           	callstack 0
   830  00001A                     pad@w:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x19
   834  00001A                     	ds	1
   835  00001B                     ___fldiv@rem:
   836                           	callstack 0
   837                           
   838                           ; 4 bytes @ 0x1A
   839  00001B                     	ds	1
   840  00001C                     ?_dtoa:
   841                           	callstack 0
   842  00001C                     stop@mR:
   843                           	callstack 0
   844  00001C                     fullSpeedAhead@mR:
   845                           	callstack 0
   846  00001C                     dtoa@fp:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x1B
   850  00001C                     	ds	2
   851  00001E                     ??_stop:
   852  00001E                     ??_fullSpeedAhead:
   853  00001E                     dtoa@d:
   854                           	callstack 0
   855                           
   856                           ; 8 bytes @ 0x1D
   857  00001E                     	ds	1
   858  00001F                     ___fldiv@sign:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x1E
   862  00001F                     	ds	1
   863  000020                     turnLeft@mL:
   864                           	callstack 0
   865  000020                     turnRight@mL:
   866                           	callstack 0
   867  000020                     fullSpeedBack@mL:
   868                           	callstack 0
   869  000020                     ___fldiv@new_exp:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x1F
   873  000020                     	ds	2
   874  000022                     turnLeft@mR:
   875                           	callstack 0
   876  000022                     turnRight@mR:
   877                           	callstack 0
   878  000022                     fullSpeedBack@mR:
   879                           	callstack 0
   880  000022                     ___fldiv@grs:
   881                           	callstack 0
   882                           
   883                           ; 4 bytes @ 0x21
   884  000022                     	ds	2
   885  000024                     ??_fullSpeedBack:
   886  000024                     turnLeft@angle_left:
   887                           	callstack 0
   888  000024                     turnRight@angle_right:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0x23
   892  000024                     	ds	1
   893  000025                     ??_turnRight:
   894  000025                     ??_turnLeft:
   895                           
   896                           ; 1 bytes @ 0x24
   897  000025                     	ds	1
   898  000026                     ??_dtoa:
   899  000026                     ___fldiv@bexp:
   900                           	callstack 0
   901  000026                     turnLeft@delay_180:
   902                           	callstack 0
   903  000026                     turnRight@delay_180:
   904                           	callstack 0
   905  000026                     short_reverse@mL:
   906                           	callstack 0
   907  000026                     reverse_square@mL:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x25
   911  000026                     	ds	1
   912  000027                     ___fldiv@aexp:
   913                           	callstack 0
   914                           
   915                           ; 1 bytes @ 0x26
   916  000027                     	ds	1
   917  000028                     ?___flmul:
   918                           	callstack 0
   919  000028                     turnLeft@i:
   920                           	callstack 0
   921  000028                     turnRight@i:
   922                           	callstack 0
   923  000028                     short_reverse@mR:
   924                           	callstack 0
   925  000028                     reverse_square@mR:
   926                           	callstack 0
   927  000028                     ___flmul@b:
   928                           	callstack 0
   929                           
   930                           ; 4 bytes @ 0x27
   931  000028                     	ds	2
   932  00002A                     ??_short_reverse:
   933  00002A                     ??_reverse_square:
   934  00002A                     turnLeft@i_1179:
   935                           	callstack 0
   936  00002A                     turnRight@i_1202:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x29
   940  00002A                     	ds	2
   941  00002C                     turnLeft@delay:
   942                           	callstack 0
   943  00002C                     turnRight@delay:
   944                           	callstack 0
   945  00002C                     ___flmul@a:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x2B
   949  00002C                     	ds	2
   950  00002E                     goback@mL:
   951                           	callstack 0
   952  00002E                     _dtoa$2382:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x2D
   956  00002E                     	ds	2
   957  000030                     ??___flmul:
   958  000030                     goback@mR:
   959                           	callstack 0
   960  000030                     dtoa@p:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x2F
   964  000030                     	ds	2
   965  000032                     action@mL:
   966                           	callstack 0
   967  000032                     dtoa@w:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x31
   971  000032                     	ds	2
   972  000034                     ___flmul@sign:
   973                           	callstack 0
   974  000034                     action@mR:
   975                           	callstack 0
   976  000034                     dtoa@s:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x33
   980  000034                     	ds	1
   981  000035                     ___flmul@grs:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0x34
   985  000035                     	ds	1
   986  000036                     action@color:
   987                           	callstack 0
   988  000036                     dtoa@n:
   989                           	callstack 0
   990                           
   991                           ; 8 bytes @ 0x35
   992  000036                     	ds	3
   993  000039                     ___flmul@aexp:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x38
   997  000039                     	ds	1
   998  00003A                     ___flmul@bexp:
   999                           	callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x39
  1002  00003A                     	ds	1
  1003  00003B                     ___flmul@prod:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x3A
  1007  00003B                     	ds	3
  1008  00003E                     dtoa@i:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x3D
  1012  00003E                     	ds	1
  1013  00003F                     ___flmul@temp:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x3E
  1017  00003F                     	ds	1
  1018  000040                     ?_vfpfcnvrt:
  1019                           	callstack 0
  1020  000040                     vfpfcnvrt@fp:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x3F
  1024  000040                     	ds	1
  1025  000041                     ?_roundf:
  1026                           	callstack 0
  1027  000041                     roundf@x:
  1028                           	callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x40
  1031  000041                     	ds	1
  1032  000042                     vfpfcnvrt@fmt:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x41
  1036  000042                     	ds	2
  1037  000044                     vfpfcnvrt@ap:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x43
  1041  000044                     	ds	1
  1042  000045                     ??_roundf:
  1043                           
  1044                           ; 1 bytes @ 0x44
  1045  000045                     	ds	1
  1046  000046                     ??_vfpfcnvrt:
  1047                           
  1048                           ; 1 bytes @ 0x45
  1049  000046                     	ds	2
  1050  000048                     vfpfcnvrt@ll:
  1051                           	callstack 0
  1052                           
  1053                           ; 8 bytes @ 0x47
  1054  000048                     	ds	1
  1055  000049                     _roundf$2742:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0x48
  1059  000049                     	ds	4
  1060  00004D                     roundf@e:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x4C
  1064  00004D                     	ds	2
  1065  00004F                     _roundf$2741:
  1066                           	callstack 0
  1067                           
  1068                           ; 4 bytes @ 0x4E
  1069  00004F                     	ds	1
  1070  000050                     ?_vfprintf:
  1071                           	callstack 0
  1072  000050                     vfprintf@fp:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x4F
  1076  000050                     	ds	2
  1077  000052                     vfprintf@fmt:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x51
  1081  000052                     	ds	1
  1082  000053                     roundf@u:
  1083                           	callstack 0
  1084                           
  1085                           ; 4 bytes @ 0x52
  1086  000053                     	ds	1
  1087  000054                     vfprintf@ap:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x53
  1091  000054                     	ds	2
  1092  000056                     vfprintf@cfmt:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x55
  1096  000056                     	ds	1
  1097  000057                     roundf@y:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x56
  1101  000057                     	ds	1
  1102  000058                     color_display@m:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x57
  1106  000058                     	ds	2
  1107  00005A                     color_data_collection@m:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x59
  1111  00005A                     	ds	1
  1112  00005B                     ?___fltol:
  1113                           	callstack 0
  1114  00005B                     ___fltol@f1:
  1115                           	callstack 0
  1116                           
  1117                           ; 4 bytes @ 0x5A
  1118  00005B                     	ds	1
  1119  00005C                     ??_color_data_collection:
  1120                           
  1121                           ; 1 bytes @ 0x5B
  1122  00005C                     	ds	3
  1123  00005F                     compare@result:
  1124                           	callstack 0
  1125                           
  1126                           ; 1 bytes @ 0x5E
  1127  00005F                     	ds	1
  1128                           
  1129 ;;
  1130 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1131 ;;
  1132 ;; *************** function _main *****************
  1133 ;; Defined at:
  1134 ;;		line 24 in file "main.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  white          18    8[BANK1 ] struct white_card
  1139 ;;  motorR         10   36[BANK1 ] struct DC_motor
  1140 ;;  motorL         10   26[BANK1 ] struct DC_motor
  1141 ;;  rgb             8    0[BANK1 ] struct color_rgb
  1142 ;;  complete        1    0        unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1153 ;;      Locals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1154 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1155 ;;      Totals:         0       2      46       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1156 ;;Total ram usage:       48 bytes
  1157 ;; Hardware stack levels required when called: 10
  1158 ;; This function calls:
  1159 ;;		_I2C_2_Master_Init
  1160 ;;		_action
  1161 ;;		_calibrate_white
  1162 ;;		_color_click_init
  1163 ;;		_color_data_collection
  1164 ;;		_color_predict
  1165 ;;		_detect_color
  1166 ;;		_initDCmotorsPWM
  1167 ;;		_initDCmotors_parameter
  1168 ;;		_initUSART4
  1169 ;;		_pin_init
  1170 ;; This function is called by:
  1171 ;;		Startup code after reset
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text0
  1176  0042B2                     __ptext0:
  1177                           	callstack 0
  1178  0042B2                     _main:
  1179                           	callstack 21
  1180  0042B2                     
  1181                           ;main.c: 25:     I2C_2_Master_Init();
  1182  0042B2  EC31  F026         	call	_I2C_2_Master_Init	;wreg free
  1183  0042B6                     
  1184                           ;main.c: 26:     color_click_init();
  1185  0042B6  ECFF  F025         	call	_color_click_init	;wreg free
  1186  0042BA                     
  1187                           ;main.c: 27:     initDCmotorsPWM(199);
  1188  0042BA  0E00               	movlw	0
  1189  0042BC  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1190  0042BE  0EC7               	movlw	199
  1191  0042C0  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1192  0042C2  ECCB  F024         	call	_initDCmotorsPWM	;wreg free
  1193  0042C6                     
  1194                           ;main.c: 29:     initUSART4();
  1195  0042C6  ECBD  F026         	call	_initUSART4	;wreg free
  1196  0042CA                     
  1197                           ;main.c: 31:     struct color_rgb rgb;;main.c: 32:     struct white_card white;;main.c: 
      +                          36:     struct DC_motor motorL, motorR;;main.c: 38:     initDCmotors_parameter(&motorL, 
      +                          &motorR);
  1198  0042CA  0E9F               	movlw	low main@motorL
  1199  0042CC  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1200  0042CE  0E01               	movlw	high main@motorL
  1201  0042D0  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1202  0042D2  0EA9               	movlw	low main@motorR
  1203  0042D4  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1204  0042D6  0E01               	movlw	high main@motorR
  1205  0042D8  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1206  0042DA  EC28  F020         	call	_initDCmotors_parameter	;wreg free
  1207  0042DE                     
  1208                           ;main.c: 41:     if (1 == 1){
  1209  0042DE  ECCC  F026         	call	_pin_init	;wreg free
  1210  0042E2                     
  1211                           ;main.c: 42:         _delay((unsigned long)((3000)*(64000000/4000.0)));
  1212  0042E2  0EF4               	movlw	244
  1213  0042E4  0100               	movlb	0	; () banked
  1214  0042E6  6FE7               	movwf	(??_main+1)& (0+255),b
  1215  0042E8  0E82               	movlw	130
  1216  0042EA  6FE6               	movwf	??_main& (0+255),b
  1217  0042EC  0E05               	movlw	5
  1218  0042EE                     u5137:
  1219  0042EE  2EE8               	decfsz	wreg,f,c
  1220  0042F0  D7FE               	bra	u5137
  1221  0042F2  2FE6               	decfsz	??_main& (0+255),f,b
  1222  0042F4  D7FC               	bra	u5137
  1223  0042F6  2FE7               	decfsz	(??_main+1)& (0+255),f,b
  1224  0042F8  D7FA               	bra	u5137
  1225  0042FA                     
  1226                           ;main.c: 43:         calibrate_white(&white);
  1227  0042FA  0E8D               	movlw	low main@white
  1228  0042FC  6E0C               	movwf	calibrate_white@w^0,c
  1229  0042FE  0E01               	movlw	high main@white
  1230  004300  6E0D               	movwf	(calibrate_white@w+1)^0,c
  1231  004302  EC1E  F01E         	call	_calibrate_white	;wreg free
  1232  004306                     
  1233                           ;main.c: 44:         _delay((unsigned long)((3000)*(64000000/4000.0)));
  1234  004306  0EF4               	movlw	244
  1235  004308  0100               	movlb	0	; () banked
  1236  00430A  6FE7               	movwf	(??_main+1)& (0+255),b
  1237  00430C  0E82               	movlw	130
  1238  00430E  6FE6               	movwf	??_main& (0+255),b
  1239  004310  0E05               	movlw	5
  1240  004312                     u5147:
  1241  004312  2EE8               	decfsz	wreg,f,c
  1242  004314  D7FE               	bra	u5147
  1243  004316  2FE6               	decfsz	??_main& (0+255),f,b
  1244  004318  D7FC               	bra	u5147
  1245  00431A  2FE7               	decfsz	(??_main+1)& (0+255),f,b
  1246  00431C  D7FA               	bra	u5147
  1247  00431E                     l4858:
  1248                           
  1249                           ;main.c: 56:             color = detect_color(&rgb, &white);
  1250  00431E  0E85               	movlw	low main@rgb
  1251  004320  0100               	movlb	0	; () banked
  1252  004322  6F70               	movwf	detect_color@m& (0+255),b
  1253  004324  0E01               	movlw	high main@rgb
  1254  004326  6F71               	movwf	(detect_color@m+1)& (0+255),b
  1255  004328  0E8D               	movlw	low main@white
  1256  00432A  6F72               	movwf	detect_color@w& (0+255),b
  1257  00432C  0E01               	movlw	high main@white
  1258  00432E  6F73               	movwf	(detect_color@w+1)& (0+255),b
  1259  004330  EC2A  F007         	call	_detect_color	;wreg free
  1260  004334  0101               	movlb	1	; () banked
  1261  004336  6F64               	movwf	_color& (0+255),b
  1262  004338                     
  1263                           ; BSR set to: 1
  1264                           ;main.c: 57:             color_predict(color);
  1265  004338  5164               	movf	_color& (0+255),w,b
  1266  00433A  ECB9  F01F         	call	_color_predict
  1267  00433E                     
  1268                           ;main.c: 58:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1269  00433E  0E11               	movlw	17
  1270  004340  0100               	movlb	0	; () banked
  1271  004342  6FE7               	movwf	(??_main+1)& (0+255),b
  1272  004344  0E3C               	movlw	60
  1273  004346  6FE6               	movwf	??_main& (0+255),b
  1274  004348  0ECB               	movlw	203
  1275  00434A                     u5157:
  1276  00434A  2EE8               	decfsz	wreg,f,c
  1277  00434C  D7FE               	bra	u5157
  1278  00434E  2FE6               	decfsz	??_main& (0+255),f,b
  1279  004350  D7FC               	bra	u5157
  1280  004352  2FE7               	decfsz	(??_main+1)& (0+255),f,b
  1281  004354  D7FA               	bra	u5157
  1282  004356                     
  1283                           ;main.c: 60:         action(color, &motorL, &motorR);
  1284  004356  0E9F               	movlw	low main@motorL
  1285  004358  6E32               	movwf	action@mL^0,c
  1286  00435A  0E01               	movlw	high main@motorL
  1287  00435C  6E33               	movwf	(action@mL+1)^0,c
  1288  00435E  0EA9               	movlw	low main@motorR
  1289  004360  6E34               	movwf	action@mR^0,c
  1290  004362  0E01               	movlw	high main@motorR
  1291  004364  6E35               	movwf	(action@mR+1)^0,c
  1292  004366  0101               	movlb	1	; () banked
  1293  004368  5164               	movf	_color& (0+255),w,b
  1294  00436A  EC00  F017         	call	_action
  1295                           
  1296                           ;main.c: 62:         if (1 == 2){
  1297  00436E  EF8F  F021         	goto	l4858
  1298  004372  EF00  F000         	goto	start
  1299  004376                     __end_of_main:
  1300                           	callstack 0
  1301                           
  1302 ;; *************** function _pin_init *****************
  1303 ;; Defined at:
  1304 ;;		line 58 in file "movement.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		None
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1322 ;;Total ram usage:        0 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; This function calls:
  1325 ;;		Nothing
  1326 ;; This function is called by:
  1327 ;;		_main
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text1
  1332  004D98                     __ptext1:
  1333                           	callstack 0
  1334  004D98                     _pin_init:
  1335                           	callstack 30
  1336  004D98  8486               	bsf	134,2,c	;volatile
  1337                           
  1338                           ;movement.c: 60:     ANSELFbits.ANSELF2=0;
  1339  004D9A  010E               	movlb	14	; () banked
  1340  004D9C  95B4               	bcf	180,2,b	;volatile
  1341                           
  1342                           ;movement.c: 61:     TRISFbits.TRISF3=1;
  1343  004D9E  8686               	bsf	134,3,c	;volatile
  1344                           
  1345                           ;movement.c: 62:     ANSELFbits.ANSELF3=0;
  1346  004DA0  97B4               	bcf	180,3,b	;volatile
  1347                           
  1348                           ;movement.c: 64:     TRISFbits.TRISF6 = 0;
  1349  004DA2  9C86               	bcf	134,6,c	;volatile
  1350                           
  1351                           ;movement.c: 65:     LATFbits.LATF6 = 0;
  1352  004DA4  9C7E               	bcf	126,6,c	;volatile
  1353                           
  1354                           ;movement.c: 67:     TRISGbits.TRISG1 = 0;
  1355  004DA6  9287               	bcf	135,1,c	;volatile
  1356                           
  1357                           ;movement.c: 68:     TRISFbits.TRISF7 = 0;
  1358  004DA8  9E86               	bcf	134,7,c	;volatile
  1359                           
  1360                           ;movement.c: 69:     TRISAbits.TRISA4 = 0;
  1361  004DAA  9881               	bcf	129,4,c	;volatile
  1362                           
  1363                           ;movement.c: 70:     LATGbits.LATG1 = 1;
  1364  004DAC  827F               	bsf	127,1,c	;volatile
  1365                           
  1366                           ;movement.c: 71:     LATFbits.LATF7 = 1;
  1367  004DAE  8E7E               	bsf	126,7,c	;volatile
  1368                           
  1369                           ;movement.c: 72:     LATAbits.LATA4 = 1;
  1370  004DB0  8879               	bsf	121,4,c	;volatile
  1371  004DB2                     
  1372                           ; BSR set to: 14
  1373  004DB2  0012               	return		;funcret
  1374  004DB4                     __end_of_pin_init:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function _initUSART4 *****************
  1378 ;; Defined at:
  1379 ;;		line 4 in file "serial.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; This function calls:
  1400 ;;		Nothing
  1401 ;; This function is called by:
  1402 ;;		_main
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text2
  1407  004D7A                     __ptext2:
  1408                           	callstack 0
  1409  004D7A                     _initUSART4:
  1410                           	callstack 30
  1411  004D7A                     
  1412                           ;serial.c: 8:     RC0PPS = 0x12;
  1413  004D7A  0E12               	movlw	18
  1414  004D7C  010E               	movlb	14	; () banked
  1415  004D7E  6F62               	movwf	98,b	;volatile
  1416                           
  1417                           ;serial.c: 9:     RX4PPS = 0x11;
  1418  004D80  0E11               	movlw	17
  1419  004D82  6F15               	movwf	21,b	;volatile
  1420  004D84                     
  1421                           ; BSR set to: 14
  1422                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  1423  004D84  97E9               	bcf	233,3,b	;volatile
  1424  004D86                     
  1425                           ; BSR set to: 14
  1426                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  1427  004D86  95E8               	bcf	232,2,b	;volatile
  1428                           
  1429                           ;serial.c: 13:     SP4BRGL = 51;
  1430  004D88  0E33               	movlw	51
  1431  004D8A  6FE5               	movwf	229,b	;volatile
  1432                           
  1433                           ;serial.c: 15:     SP4BRGH = 0;
  1434  004D8C  0E00               	movlw	0
  1435  004D8E  6FE6               	movwf	230,b	;volatile
  1436  004D90                     
  1437                           ; BSR set to: 14
  1438                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  1439  004D90  89E7               	bsf	231,4,b	;volatile
  1440  004D92                     
  1441                           ; BSR set to: 14
  1442                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  1443  004D92  8BE8               	bsf	232,5,b	;volatile
  1444  004D94                     
  1445                           ; BSR set to: 14
  1446                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  1447  004D94  8FE7               	bsf	231,7,b	;volatile
  1448  004D96                     
  1449                           ; BSR set to: 14
  1450  004D96  0012               	return		;funcret
  1451  004D98                     __end_of_initUSART4:
  1452                           	callstack 0
  1453                           
  1454 ;; *************** function _initDCmotors_parameter *****************
  1455 ;; Defined at:
  1456 ;;		line 42 in file "dc_motor.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  1459 ;;		 -> main@motorL(10), 
  1460 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  1461 ;;		 -> main@motorR(10), 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1476 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1477 ;;Total ram usage:        4 bytes
  1478 ;; Hardware stack levels used: 1
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text3
  1487  004050                     __ptext3:
  1488                           	callstack 0
  1489  004050                     _initDCmotors_parameter:
  1490                           	callstack 30
  1491  004050                     
  1492                           ;dc_motor.c: 44:     motorL->power = 0;
  1493  004050  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  1494  004054  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  1495  004058  0E00               	movlw	0
  1496  00405A  6EDF               	movwf	indf2,c
  1497  00405C                     
  1498                           ;dc_motor.c: 45:     motorL->direction = 1;
  1499  00405C  EE20 F001          	lfsr	2,1
  1500  004060  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1501  004062  26D9               	addwf	fsr2l,f,c
  1502  004064  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1503  004066  22DA               	addwfc	fsr2h,f,c
  1504  004068  0E01               	movlw	1
  1505  00406A  6EDF               	movwf	indf2,c
  1506  00406C                     
  1507                           ;dc_motor.c: 46:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  1508  00406C  EE20 F002          	lfsr	2,2
  1509  004070  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1510  004072  26D9               	addwf	fsr2l,f,c
  1511  004074  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1512  004076  22DA               	addwfc	fsr2h,f,c
  1513  004078  0EA3               	movlw	163
  1514  00407A  6EDE               	movwf	postinc2,c
  1515  00407C  0E0F               	movlw	15
  1516  00407E  6EDD               	movwf	postdec2,c
  1517  004080                     
  1518                           ;dc_motor.c: 47:     motorL->dir_LAT = (unsigned char *)(&LATE);
  1519  004080  EE20 F004          	lfsr	2,4
  1520  004084  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1521  004086  26D9               	addwf	fsr2l,f,c
  1522  004088  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1523  00408A  22DA               	addwfc	fsr2h,f,c
  1524  00408C  0E7D               	movlw	125
  1525  00408E  6EDE               	movwf	postinc2,c
  1526  004090  0E0F               	movlw	15
  1527  004092  6EDD               	movwf	postdec2,c
  1528  004094                     
  1529                           ;dc_motor.c: 48:     motorL->dir_pin = 4;
  1530  004094  EE20 F006          	lfsr	2,6
  1531  004098  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1532  00409A  26D9               	addwf	fsr2l,f,c
  1533  00409C  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1534  00409E  22DA               	addwfc	fsr2h,f,c
  1535  0040A0  0E04               	movlw	4
  1536  0040A2  6EDF               	movwf	indf2,c
  1537  0040A4                     
  1538                           ;dc_motor.c: 49:     motorL->PWMperiod = 199;
  1539  0040A4  EE20 F007          	lfsr	2,7
  1540  0040A8  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1541  0040AA  26D9               	addwf	fsr2l,f,c
  1542  0040AC  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1543  0040AE  22DA               	addwfc	fsr2h,f,c
  1544  0040B0  0EC7               	movlw	199
  1545  0040B2  6EDE               	movwf	postinc2,c
  1546  0040B4  0E00               	movlw	0
  1547  0040B6  6EDD               	movwf	postdec2,c
  1548  0040B8                     
  1549                           ;dc_motor.c: 52:     motorR->power = 0;
  1550  0040B8  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  1551  0040BC  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  1552  0040C0  0E00               	movlw	0
  1553  0040C2  6EDF               	movwf	indf2,c
  1554                           
  1555                           ;dc_motor.c: 53:     motorR->direction = 1;
  1556  0040C4  EE20 F001          	lfsr	2,1
  1557  0040C8  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1558  0040CA  26D9               	addwf	fsr2l,f,c
  1559  0040CC  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1560  0040CE  22DA               	addwfc	fsr2h,f,c
  1561  0040D0  0E01               	movlw	1
  1562  0040D2  6EDF               	movwf	indf2,c
  1563                           
  1564                           ;dc_motor.c: 54:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  1565  0040D4  EE20 F002          	lfsr	2,2
  1566  0040D8  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1567  0040DA  26D9               	addwf	fsr2l,f,c
  1568  0040DC  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1569  0040DE  22DA               	addwfc	fsr2h,f,c
  1570  0040E0  0EA0               	movlw	160
  1571  0040E2  6EDE               	movwf	postinc2,c
  1572  0040E4  0E0F               	movlw	15
  1573  0040E6  6EDD               	movwf	postdec2,c
  1574                           
  1575                           ;dc_motor.c: 55:     motorR->dir_LAT = (unsigned char *)(&LATG);
  1576  0040E8  EE20 F004          	lfsr	2,4
  1577  0040EC  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1578  0040EE  26D9               	addwf	fsr2l,f,c
  1579  0040F0  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1580  0040F2  22DA               	addwfc	fsr2h,f,c
  1581  0040F4  0E7F               	movlw	127
  1582  0040F6  6EDE               	movwf	postinc2,c
  1583  0040F8  0E0F               	movlw	15
  1584  0040FA  6EDD               	movwf	postdec2,c
  1585                           
  1586                           ;dc_motor.c: 56:     motorR->dir_pin = 6;
  1587  0040FC  EE20 F006          	lfsr	2,6
  1588  004100  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1589  004102  26D9               	addwf	fsr2l,f,c
  1590  004104  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1591  004106  22DA               	addwfc	fsr2h,f,c
  1592  004108  0E06               	movlw	6
  1593  00410A  6EDF               	movwf	indf2,c
  1594                           
  1595                           ;dc_motor.c: 57:     motorR->PWMperiod = 199;
  1596  00410C  EE20 F007          	lfsr	2,7
  1597  004110  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1598  004112  26D9               	addwf	fsr2l,f,c
  1599  004114  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1600  004116  22DA               	addwfc	fsr2h,f,c
  1601  004118  0EC7               	movlw	199
  1602  00411A  6EDE               	movwf	postinc2,c
  1603  00411C  0E00               	movlw	0
  1604  00411E  6EDD               	movwf	postdec2,c
  1605  004120  0012               	return		;funcret
  1606  004122                     __end_of_initDCmotors_parameter:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _initDCmotorsPWM *****************
  1610 ;; Defined at:
  1611 ;;		line 12 in file "dc_motor.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  PWMperiod       2    0[COMRAM] int 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1625 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1628 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1629 ;;Total ram usage:        2 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text4
  1639  004996                     __ptext4:
  1640                           	callstack 0
  1641  004996                     _initDCmotorsPWM:
  1642                           	callstack 30
  1643  004996                     
  1644                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  1645  004996  9485               	bcf	133,2,c	;volatile
  1646                           
  1647                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  1648  004998  9E83               	bcf	131,7,c	;volatile
  1649                           
  1650                           ;dc_motor.c: 17:     TRISGbits.TRISG6=0;
  1651  00499A  9C87               	bcf	135,6,c	;volatile
  1652                           
  1653                           ;dc_motor.c: 18:     TRISEbits.TRISE4=0;
  1654  00499C  9885               	bcf	133,4,c	;volatile
  1655                           
  1656                           ;dc_motor.c: 19:     LATEbits.LATE2=0;
  1657  00499E  947D               	bcf	125,2,c	;volatile
  1658                           
  1659                           ;dc_motor.c: 20:     LATCbits.LATC7=0;
  1660  0049A0  9E7B               	bcf	123,7,c	;volatile
  1661                           
  1662                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1663  0049A2  9C7F               	bcf	127,6,c	;volatile
  1664                           
  1665                           ;dc_motor.c: 22:     LATEbits.LATE4=0;
  1666  0049A4  987D               	bcf	125,4,c	;volatile
  1667  0049A6                     
  1668                           ;dc_motor.c: 25:     T2CONbits.CKPS=0b011;
  1669  0049A6  50BD               	movf	189,w,c	;volatile
  1670  0049A8  0B8F               	andlw	-113
  1671  0049AA  0930               	iorlw	48
  1672  0049AC  6EBD               	movwf	189,c	;volatile
  1673                           
  1674                           ;dc_motor.c: 26:     T2HLTbits.MODE=0b00000;
  1675  0049AE  0EE0               	movlw	-32
  1676  0049B0  16BE               	andwf	190,f,c	;volatile
  1677                           
  1678                           ;dc_motor.c: 27:     T2CLKCONbits.CS=0b0001;
  1679  0049B2  50BF               	movf	191,w,c	;volatile
  1680  0049B4  0BF0               	andlw	-16
  1681  0049B6  0901               	iorlw	1
  1682  0049B8  6EBF               	movwf	191,c	;volatile
  1683                           
  1684                           ;dc_motor.c: 30:     T2PR=200-1;
  1685  0049BA  0EC7               	movlw	199
  1686  0049BC  6EBC               	movwf	188,c	;volatile
  1687  0049BE                     
  1688                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  1689  0049BE  8EBD               	bsf	189,7,c	;volatile
  1690                           
  1691                           ;dc_motor.c: 33:     RE2PPS=0x0A;
  1692  0049C0  0E0A               	movlw	10
  1693  0049C2  010E               	movlb	14	; () banked
  1694  0049C4  6F74               	movwf	116,b	;volatile
  1695                           
  1696                           ;dc_motor.c: 34:     RC7PPS=0x0B;
  1697  0049C6  0E0B               	movlw	11
  1698  0049C8  6F69               	movwf	105,b	;volatile
  1699                           
  1700                           ;dc_motor.c: 36:     PWM6DCH=0;
  1701  0049CA  0E00               	movlw	0
  1702  0049CC  6EA3               	movwf	163,c	;volatile
  1703                           
  1704                           ;dc_motor.c: 37:     PWM7DCH=0;
  1705  0049CE  0E00               	movlw	0
  1706  0049D0  6EA0               	movwf	160,c	;volatile
  1707  0049D2                     
  1708                           ; BSR set to: 14
  1709                           ;dc_motor.c: 39:     PWM6CONbits.EN = 1;
  1710  0049D2  8EA4               	bsf	164,7,c	;volatile
  1711  0049D4                     
  1712                           ; BSR set to: 14
  1713                           ;dc_motor.c: 40:     PWM7CONbits.EN = 1;
  1714  0049D4  8EA1               	bsf	161,7,c	;volatile
  1715  0049D6                     
  1716                           ; BSR set to: 14
  1717  0049D6  0012               	return		;funcret
  1718  0049D8                     __end_of_initDCmotorsPWM:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _detect_color *****************
  1722 ;; Defined at:
  1723 ;;		line 226 in file "color.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  m               2   16[BANK0 ] PTR struct color_rgb
  1726 ;;		 -> main@rgb(8), 
  1727 ;;  w               2   18[BANK0 ] PTR struct white_card
  1728 ;;		 -> main@white(18), 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  BG              2   46[BANK0 ] unsigned int 
  1731 ;;  GC_REAL         2   44[BANK0 ] unsigned int 
  1732 ;;  GR_REAL         2   42[BANK0 ] unsigned int 
  1733 ;;  BR              2   40[BANK0 ] unsigned int 
  1734 ;;  BB              2   38[BANK0 ] unsigned int 
  1735 ;;  RR              2   36[BANK0 ] unsigned int 
  1736 ;;  GG              2   34[BANK0 ] unsigned int 
  1737 ;;  GR              2   32[BANK0 ] unsigned int 
  1738 ;;  GB              2   30[BANK0 ] unsigned int 
  1739 ;;  RB              2   28[BANK0 ] unsigned int 
  1740 ;;  RG              2   26[BANK0 ] unsigned int 
  1741 ;;  BC              2   24[BANK0 ] unsigned int 
  1742 ;;  color           1   48[BANK0 ] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      unsigned char 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1752 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1753 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1754 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1755 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1756 ;;Total ram usage:       37 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; Hardware stack levels required when called: 4
  1759 ;; This function calls:
  1760 ;;		_LED_B
  1761 ;;		_LED_G
  1762 ;;		_LED_R
  1763 ;;		___fldiv
  1764 ;;		___flmul
  1765 ;;		___xxtofl
  1766 ;;		_compare
  1767 ;;		_lroundf
  1768 ;;		_read_color
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text5
  1775  000E54                     __ptext5:
  1776                           	callstack 0
  1777  000E54                     _detect_color:
  1778                           	callstack 26
  1779  000E54  0E00               	movlw	0
  1780  000E56  0100               	movlb	0	; () banked
  1781  000E58  6F7B               	movwf	(detect_color@RG+1)& (0+255),b
  1782  000E5A  0E00               	movlw	0
  1783  000E5C  6F7A               	movwf	detect_color@RG& (0+255),b
  1784  000E5E  0E00               	movlw	0
  1785  000E60  6F7D               	movwf	(detect_color@RB+1)& (0+255),b
  1786  000E62  0E00               	movlw	0
  1787  000E64  6F7C               	movwf	detect_color@RB& (0+255),b
  1788  000E66  0E00               	movlw	0
  1789  000E68  6F81               	movwf	(detect_color@GR+1)& (0+255),b
  1790  000E6A  0E00               	movlw	0
  1791  000E6C  6F80               	movwf	detect_color@GR& (0+255),b
  1792  000E6E  0E00               	movlw	0
  1793  000E70  6F83               	movwf	(detect_color@GG+1)& (0+255),b
  1794  000E72  0E00               	movlw	0
  1795  000E74  6F82               	movwf	detect_color@GG& (0+255),b
  1796  000E76  0E00               	movlw	0
  1797  000E78  6F7F               	movwf	(detect_color@GB+1)& (0+255),b
  1798  000E7A  0E00               	movlw	0
  1799  000E7C  6F7E               	movwf	detect_color@GB& (0+255),b
  1800  000E7E  0E00               	movlw	0
  1801  000E80  6F89               	movwf	(detect_color@BR+1)& (0+255),b
  1802  000E82  0E00               	movlw	0
  1803  000E84  6F88               	movwf	detect_color@BR& (0+255),b
  1804  000E86  0E00               	movlw	0
  1805  000E88  6F8F               	movwf	(detect_color@BG+1)& (0+255),b
  1806  000E8A  0E00               	movlw	0
  1807  000E8C  6F8E               	movwf	detect_color@BG& (0+255),b
  1808  000E8E  0E00               	movlw	0
  1809  000E90  6F87               	movwf	(detect_color@BB+1)& (0+255),b
  1810  000E92  0E00               	movlw	0
  1811  000E94  6F86               	movwf	detect_color@BB& (0+255),b
  1812  000E96  0E00               	movlw	0
  1813  000E98  6F8B               	movwf	(detect_color@GR_REAL+1)& (0+255),b
  1814  000E9A  0E00               	movlw	0
  1815  000E9C  6F8A               	movwf	detect_color@GR_REAL& (0+255),b
  1816  000E9E  0E00               	movlw	0
  1817  000EA0  6F8D               	movwf	(detect_color@GC_REAL+1)& (0+255),b
  1818  000EA2  0E00               	movlw	0
  1819  000EA4  6F8C               	movwf	detect_color@GC_REAL& (0+255),b
  1820  000EA6  0E00               	movlw	0
  1821  000EA8  6F79               	movwf	(detect_color@BC+1)& (0+255),b
  1822  000EAA  0E00               	movlw	0
  1823  000EAC  6F78               	movwf	detect_color@BC& (0+255),b
  1824                           
  1825                           ;color.c: 231:     unsigned char color = 0;
  1826  000EAE  0E00               	movlw	0
  1827  000EB0  6F90               	movwf	detect_color@color& (0+255),b
  1828  000EB2                     
  1829                           ; BSR set to: 0
  1830                           ;color.c: 233:     LED_R();
  1831  000EB2  EC8D  F026         	call	_LED_R	;wreg free
  1832  000EB6                     
  1833                           ;color.c: 234:     read_color(m);
  1834  000EB6  C070  F00C         	movff	detect_color@m,read_color@m
  1835  000EBA  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  1836  000EBE  EC8E  F023         	call	_read_color	;wreg free
  1837  000EC2                     
  1838                           ;color.c: 235:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1839  000EC2  C072  FFD9         	movff	detect_color@w,fsr2l
  1840  000EC6  C073  FFDA         	movff	detect_color@w+1,fsr2h
  1841  000ECA  CFDE F074          	movff	postinc2,??_detect_color
  1842  000ECE  CFDD F075          	movff	postdec2,??_detect_color+1
  1843  000ED2  C074  F001         	movff	??_detect_color,___xxtofl@val
  1844  000ED6  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1845  000EDA  6A03               	clrf	(___xxtofl@val+2)^0,c
  1846  000EDC  6A04               	clrf	(___xxtofl@val+3)^0,c
  1847  000EDE  0E00               	movlw	0
  1848  000EE0  ECFD  F018         	call	___xxtofl
  1849  000EE4  C001  F013         	movff	?___xxtofl,___fldiv@a
  1850  000EE8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1851  000EEC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1852  000EF0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1853  000EF4  C070  FFD9         	movff	detect_color@m,fsr2l
  1854  000EF8  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1855  000EFC  CFDE F076          	movff	postinc2,??_detect_color+2
  1856  000F00  CFDD F077          	movff	postdec2,??_detect_color+3
  1857  000F04  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1858  000F08  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1859  000F0C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1860  000F0E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1861  000F10  0E00               	movlw	0
  1862  000F12  ECFD  F018         	call	___xxtofl
  1863  000F16  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1864  000F1A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1865  000F1E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1866  000F22  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1867  000F26  ECC1  F013         	call	___fldiv	;wreg free
  1868  000F2A  C00F  F028         	movff	?___fldiv,___flmul@b
  1869  000F2E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1870  000F32  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1871  000F36  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1872  000F3A  0E00               	movlw	0
  1873  000F3C  6E2C               	movwf	___flmul@a^0,c
  1874  000F3E  0E00               	movlw	0
  1875  000F40  6E2D               	movwf	(___flmul@a+1)^0,c
  1876  000F42  0EC8               	movlw	200
  1877  000F44  6E2E               	movwf	(___flmul@a+2)^0,c
  1878  000F46  0E42               	movlw	66
  1879  000F48  6E2F               	movwf	(___flmul@a+3)^0,c
  1880  000F4A  ECD5  F00F         	call	___flmul	;wreg free
  1881  000F4E  C028  F091         	movff	?___flmul,_detect_color$2740
  1882  000F52  C029  F092         	movff	?___flmul+1,_detect_color$2740+1
  1883  000F56  C02A  F093         	movff	?___flmul+2,_detect_color$2740+2
  1884  000F5A  C02B  F094         	movff	?___flmul+3,_detect_color$2740+3
  1885  000F5E                     
  1886                           ;color.c: 235:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1887  000F5E  C091  F066         	movff	_detect_color$2740,lroundf@x
  1888  000F62  C092  F067         	movff	_detect_color$2740+1,lroundf@x+1
  1889  000F66  C093  F068         	movff	_detect_color$2740+2,lroundf@x+2
  1890  000F6A  C094  F069         	movff	_detect_color$2740+3,lroundf@x+3
  1891  000F6E  EC8E  F025         	call	_lroundf	;wreg free
  1892  000F72  C066  F084         	movff	?_lroundf,detect_color@RR
  1893  000F76  C067  F085         	movff	?_lroundf+1,detect_color@RR+1
  1894  000F7A  0100               	movlb	0	; () banked
  1895  000F7C  EE20 F002          	lfsr	2,2
  1896  000F80  5172               	movf	detect_color@w& (0+255),w,b
  1897  000F82  26D9               	addwf	fsr2l,f,c
  1898  000F84  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1899  000F86  22DA               	addwfc	fsr2h,f,c
  1900  000F88  CFDE F074          	movff	postinc2,??_detect_color
  1901  000F8C  CFDD F075          	movff	postdec2,??_detect_color+1
  1902  000F90  C074  F001         	movff	??_detect_color,___xxtofl@val
  1903  000F94  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1904  000F98  6A03               	clrf	(___xxtofl@val+2)^0,c
  1905  000F9A  6A04               	clrf	(___xxtofl@val+3)^0,c
  1906  000F9C  0E00               	movlw	0
  1907  000F9E  ECFD  F018         	call	___xxtofl
  1908  000FA2  C001  F013         	movff	?___xxtofl,___fldiv@a
  1909  000FA6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1910  000FAA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1911  000FAE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1912  000FB2  0100               	movlb	0	; () banked
  1913  000FB4  EE20 F002          	lfsr	2,2
  1914  000FB8  5170               	movf	detect_color@m& (0+255),w,b
  1915  000FBA  26D9               	addwf	fsr2l,f,c
  1916  000FBC  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1917  000FBE  22DA               	addwfc	fsr2h,f,c
  1918  000FC0  CFDE F076          	movff	postinc2,??_detect_color+2
  1919  000FC4  CFDD F077          	movff	postdec2,??_detect_color+3
  1920  000FC8  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1921  000FCC  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1922  000FD0  6A03               	clrf	(___xxtofl@val+2)^0,c
  1923  000FD2  6A04               	clrf	(___xxtofl@val+3)^0,c
  1924  000FD4  0E00               	movlw	0
  1925  000FD6  ECFD  F018         	call	___xxtofl
  1926  000FDA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1927  000FDE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1928  000FE2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1929  000FE6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1930  000FEA  ECC1  F013         	call	___fldiv	;wreg free
  1931  000FEE  C00F  F028         	movff	?___fldiv,___flmul@b
  1932  000FF2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1933  000FF6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1934  000FFA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1935  000FFE  0E00               	movlw	0
  1936  001000  6E2C               	movwf	___flmul@a^0,c
  1937  001002  0E00               	movlw	0
  1938  001004  6E2D               	movwf	(___flmul@a+1)^0,c
  1939  001006  0EC8               	movlw	200
  1940  001008  6E2E               	movwf	(___flmul@a+2)^0,c
  1941  00100A  0E42               	movlw	66
  1942  00100C  6E2F               	movwf	(___flmul@a+3)^0,c
  1943  00100E  ECD5  F00F         	call	___flmul	;wreg free
  1944  001012  C028  F091         	movff	?___flmul,_detect_color$2740
  1945  001016  C029  F092         	movff	?___flmul+1,_detect_color$2740+1
  1946  00101A  C02A  F093         	movff	?___flmul+2,_detect_color$2740+2
  1947  00101E  C02B  F094         	movff	?___flmul+3,_detect_color$2740+3
  1948  001022  C091  F066         	movff	_detect_color$2740,lroundf@x
  1949  001026  C092  F067         	movff	_detect_color$2740+1,lroundf@x+1
  1950  00102A  C093  F068         	movff	_detect_color$2740+2,lroundf@x+2
  1951  00102E  C094  F069         	movff	_detect_color$2740+3,lroundf@x+3
  1952  001032  EC8E  F025         	call	_lroundf	;wreg free
  1953  001036  0100               	movlb	0	; () banked
  1954  001038  EE20 F004          	lfsr	2,4
  1955  00103C  5172               	movf	detect_color@w& (0+255),w,b
  1956  00103E  26D9               	addwf	fsr2l,f,c
  1957  001040  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1958  001042  22DA               	addwfc	fsr2h,f,c
  1959  001044  CFDE F074          	movff	postinc2,??_detect_color
  1960  001048  CFDD F075          	movff	postdec2,??_detect_color+1
  1961  00104C  C074  F001         	movff	??_detect_color,___xxtofl@val
  1962  001050  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1963  001054  6A03               	clrf	(___xxtofl@val+2)^0,c
  1964  001056  6A04               	clrf	(___xxtofl@val+3)^0,c
  1965  001058  0E00               	movlw	0
  1966  00105A  ECFD  F018         	call	___xxtofl
  1967  00105E  C001  F013         	movff	?___xxtofl,___fldiv@a
  1968  001062  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1969  001066  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1970  00106A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1971  00106E  0100               	movlb	0	; () banked
  1972  001070  EE20 F004          	lfsr	2,4
  1973  001074  5170               	movf	detect_color@m& (0+255),w,b
  1974  001076  26D9               	addwf	fsr2l,f,c
  1975  001078  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1976  00107A  22DA               	addwfc	fsr2h,f,c
  1977  00107C  CFDE F076          	movff	postinc2,??_detect_color+2
  1978  001080  CFDD F077          	movff	postdec2,??_detect_color+3
  1979  001084  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1980  001088  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1981  00108C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1982  00108E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1983  001090  0E00               	movlw	0
  1984  001092  ECFD  F018         	call	___xxtofl
  1985  001096  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1986  00109A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1987  00109E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1988  0010A2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1989  0010A6  ECC1  F013         	call	___fldiv	;wreg free
  1990  0010AA  C00F  F028         	movff	?___fldiv,___flmul@b
  1991  0010AE  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1992  0010B2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1993  0010B6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1994  0010BA  0E00               	movlw	0
  1995  0010BC  6E2C               	movwf	___flmul@a^0,c
  1996  0010BE  0E00               	movlw	0
  1997  0010C0  6E2D               	movwf	(___flmul@a+1)^0,c
  1998  0010C2  0EC8               	movlw	200
  1999  0010C4  6E2E               	movwf	(___flmul@a+2)^0,c
  2000  0010C6  0E42               	movlw	66
  2001  0010C8  6E2F               	movwf	(___flmul@a+3)^0,c
  2002  0010CA  ECD5  F00F         	call	___flmul	;wreg free
  2003  0010CE  C028  F091         	movff	?___flmul,_detect_color$2740
  2004  0010D2  C029  F092         	movff	?___flmul+1,_detect_color$2740+1
  2005  0010D6  C02A  F093         	movff	?___flmul+2,_detect_color$2740+2
  2006  0010DA  C02B  F094         	movff	?___flmul+3,_detect_color$2740+3
  2007  0010DE  C091  F066         	movff	_detect_color$2740,lroundf@x
  2008  0010E2  C092  F067         	movff	_detect_color$2740+1,lroundf@x+1
  2009  0010E6  C093  F068         	movff	_detect_color$2740+2,lroundf@x+2
  2010  0010EA  C094  F069         	movff	_detect_color$2740+3,lroundf@x+3
  2011  0010EE  EC8E  F025         	call	_lroundf	;wreg free
  2012  0010F2                     
  2013                           ;color.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2014  0010F2  0E05               	movlw	5
  2015  0010F4  0100               	movlb	0	; () banked
  2016  0010F6  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2017  0010F8  0E0F               	movlw	15
  2018  0010FA  6F74               	movwf	??_detect_color& (0+255),b
  2019  0010FC  0EF1               	movlw	241
  2020  0010FE                     u5167:
  2021  0010FE  2EE8               	decfsz	wreg,f,c
  2022  001100  D7FE               	bra	u5167
  2023  001102  2F74               	decfsz	??_detect_color& (0+255),f,b
  2024  001104  D7FC               	bra	u5167
  2025  001106  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  2026  001108  D7FA               	bra	u5167
  2027  00110A                     
  2028                           ;color.c: 238:     LED_G();
  2029  00110A  EC9D  F026         	call	_LED_G	;wreg free
  2030  00110E                     
  2031                           ;color.c: 239:     read_color(m);
  2032  00110E  C070  F00C         	movff	detect_color@m,read_color@m
  2033  001112  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  2034  001116  EC8E  F023         	call	_read_color	;wreg free
  2035  00111A                     
  2036                           ;color.c: 240:     GR_REAL = m->R ; GC_REAL = m->C;
  2037  00111A  C070  FFD9         	movff	detect_color@m,fsr2l
  2038  00111E  C071  FFDA         	movff	detect_color@m+1,fsr2h
  2039  001122  CFDE F08A          	movff	postinc2,detect_color@GR_REAL
  2040  001126  CFDD F08B          	movff	postdec2,detect_color@GR_REAL+1
  2041  00112A  0100               	movlb	0	; () banked
  2042  00112C  EE20 F006          	lfsr	2,6
  2043  001130  5170               	movf	detect_color@m& (0+255),w,b
  2044  001132  26D9               	addwf	fsr2l,f,c
  2045  001134  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2046  001136  22DA               	addwfc	fsr2h,f,c
  2047  001138  CFDE F08C          	movff	postinc2,detect_color@GC_REAL
  2048  00113C  CFDD F08D          	movff	postdec2,detect_color@GC_REAL+1
  2049  001140                     
  2050                           ; BSR set to: 0
  2051                           ;color.c: 241:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2052  001140  EE20 F006          	lfsr	2,6
  2053  001144  5172               	movf	detect_color@w& (0+255),w,b
  2054  001146  26D9               	addwf	fsr2l,f,c
  2055  001148  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2056  00114A  22DA               	addwfc	fsr2h,f,c
  2057  00114C  CFDE F074          	movff	postinc2,??_detect_color
  2058  001150  CFDD F075          	movff	postdec2,??_detect_color+1
  2059  001154  C074  F001         	movff	??_detect_color,___xxtofl@val
  2060  001158  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2061  00115C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2062  00115E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2063  001160  0E00               	movlw	0
  2064  001162  ECFD  F018         	call	___xxtofl
  2065  001166  C001  F013         	movff	?___xxtofl,___fldiv@a
  2066  00116A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2067  00116E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2068  001172  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2069  001176  C070  FFD9         	movff	detect_color@m,fsr2l
  2070  00117A  C071  FFDA         	movff	detect_color@m+1,fsr2h
  2071  00117E  CFDE F076          	movff	postinc2,??_detect_color+2
  2072  001182  CFDD F077          	movff	postdec2,??_detect_color+3
  2073  001186  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2074  00118A  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2075  00118E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2076  001190  6A04               	clrf	(___xxtofl@val+3)^0,c
  2077  001192  0E00               	movlw	0
  2078  001194  ECFD  F018         	call	___xxtofl
  2079  001198  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2080  00119C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2081  0011A0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2082  0011A4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2083  0011A8  ECC1  F013         	call	___fldiv	;wreg free
  2084  0011AC  C00F  F028         	movff	?___fldiv,___flmul@b
  2085  0011B0  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2086  0011B4  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2087  0011B8  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2088  0011BC  0E00               	movlw	0
  2089  0011BE  6E2C               	movwf	___flmul@a^0,c
  2090  0011C0  0E00               	movlw	0
  2091  0011C2  6E2D               	movwf	(___flmul@a+1)^0,c
  2092  0011C4  0EC8               	movlw	200
  2093  0011C6  6E2E               	movwf	(___flmul@a+2)^0,c
  2094  0011C8  0E42               	movlw	66
  2095  0011CA  6E2F               	movwf	(___flmul@a+3)^0,c
  2096  0011CC  ECD5  F00F         	call	___flmul	;wreg free
  2097  0011D0  C028  F091         	movff	?___flmul,_detect_color$2740
  2098  0011D4  C029  F092         	movff	?___flmul+1,_detect_color$2740+1
  2099  0011D8  C02A  F093         	movff	?___flmul+2,_detect_color$2740+2
  2100  0011DC  C02B  F094         	movff	?___flmul+3,_detect_color$2740+3
  2101  0011E0                     
  2102                           ;color.c: 241:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2103  0011E0  C091  F066         	movff	_detect_color$2740,lroundf@x
  2104  0011E4  C092  F067         	movff	_detect_color$2740+1,lroundf@x+1
  2105  0011E8  C093  F068         	movff	_detect_color$2740+2,lroundf@x+2
  2106  0011EC  C094  F069         	movff	_detect_color$2740+3,lroundf@x+3
  2107  0011F0  EC8E  F025         	call	_lroundf	;wreg free
  2108  0011F4  C066  F080         	movff	?_lroundf,detect_color@GR
  2109  0011F8  C067  F081         	movff	?_lroundf+1,detect_color@GR+1
  2110  0011FC  0100               	movlb	0	; () banked
  2111  0011FE  EE20 F008          	lfsr	2,8
  2112  001202  5172               	movf	detect_color@w& (0+255),w,b
  2113  001204  26D9               	addwf	fsr2l,f,c
  2114  001206  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2115  001208  22DA               	addwfc	fsr2h,f,c
  2116  00120A  CFDE F074          	movff	postinc2,??_detect_color
  2117  00120E  CFDD F075          	movff	postdec2,??_detect_color+1
  2118  001212  C074  F001         	movff	??_detect_color,___xxtofl@val
  2119  001216  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2120  00121A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2121  00121C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2122  00121E  0E00               	movlw	0
  2123  001220  ECFD  F018         	call	___xxtofl
  2124  001224  C001  F013         	movff	?___xxtofl,___fldiv@a
  2125  001228  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2126  00122C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2127  001230  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2128  001234  0100               	movlb	0	; () banked
  2129  001236  EE20 F002          	lfsr	2,2
  2130  00123A  5170               	movf	detect_color@m& (0+255),w,b
  2131  00123C  26D9               	addwf	fsr2l,f,c
  2132  00123E  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2133  001240  22DA               	addwfc	fsr2h,f,c
  2134  001242  CFDE F076          	movff	postinc2,??_detect_color+2
  2135  001246  CFDD F077          	movff	postdec2,??_detect_color+3
  2136  00124A  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2137  00124E  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2138  001252  6A03               	clrf	(___xxtofl@val+2)^0,c
  2139  001254  6A04               	clrf	(___xxtofl@val+3)^0,c
  2140  001256  0E00               	movlw	0
  2141  001258  ECFD  F018         	call	___xxtofl
  2142  00125C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2143  001260  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2144  001264  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2145  001268  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2146  00126C  ECC1  F013         	call	___fldiv	;wreg free
  2147  001270  C00F  F028         	movff	?___fldiv,___flmul@b
  2148  001274  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2149  001278  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2150  00127C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2151  001280  0E00               	movlw	0
  2152  001282  6E2C               	movwf	___flmul@a^0,c
  2153  001284  0E00               	movlw	0
  2154  001286  6E2D               	movwf	(___flmul@a+1)^0,c
  2155  001288  0EC8               	movlw	200
  2156  00128A  6E2E               	movwf	(___flmul@a+2)^0,c
  2157  00128C  0E42               	movlw	66
  2158  00128E  6E2F               	movwf	(___flmul@a+3)^0,c
  2159  001290  ECD5  F00F         	call	___flmul	;wreg free
  2160  001294  C028  F091         	movff	?___flmul,_detect_color$2740
  2161  001298  C029  F092         	movff	?___flmul+1,_detect_color$2740+1
  2162  00129C  C02A  F093         	movff	?___flmul+2,_detect_color$2740+2
  2163  0012A0  C02B  F094         	movff	?___flmul+3,_detect_color$2740+3
  2164  0012A4  C091  F066         	movff	_detect_color$2740,lroundf@x
  2165  0012A8  C092  F067         	movff	_detect_color$2740+1,lroundf@x+1
  2166  0012AC  C093  F068         	movff	_detect_color$2740+2,lroundf@x+2
  2167  0012B0  C094  F069         	movff	_detect_color$2740+3,lroundf@x+3
  2168  0012B4  EC8E  F025         	call	_lroundf	;wreg free
  2169  0012B8  C066  F082         	movff	?_lroundf,detect_color@GG
  2170  0012BC  C067  F083         	movff	?_lroundf+1,detect_color@GG+1
  2171  0012C0  0100               	movlb	0	; () banked
  2172  0012C2  EE20 F00A          	lfsr	2,10
  2173  0012C6  5172               	movf	detect_color@w& (0+255),w,b
  2174  0012C8  26D9               	addwf	fsr2l,f,c
  2175  0012CA  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2176  0012CC  22DA               	addwfc	fsr2h,f,c
  2177  0012CE  CFDE F074          	movff	postinc2,??_detect_color
  2178  0012D2  CFDD F075          	movff	postdec2,??_detect_color+1
  2179  0012D6  C074  F001         	movff	??_detect_color,___xxtofl@val
  2180  0012DA  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2181  0012DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2182  0012E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2183  0012E2  0E00               	movlw	0
  2184  0012E4  ECFD  F018         	call	___xxtofl
  2185  0012E8  C001  F013         	movff	?___xxtofl,___fldiv@a
  2186  0012EC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2187  0012F0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2188  0012F4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2189  0012F8  0100               	movlb	0	; () banked
  2190  0012FA  EE20 F004          	lfsr	2,4
  2191  0012FE  5170               	movf	detect_color@m& (0+255),w,b
  2192  001300  26D9               	addwf	fsr2l,f,c
  2193  001302  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2194  001304  22DA               	addwfc	fsr2h,f,c
  2195  001306  CFDE F076          	movff	postinc2,??_detect_color+2
  2196  00130A  CFDD F077          	movff	postdec2,??_detect_color+3
  2197  00130E  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2198  001312  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2199  001316  6A03               	clrf	(___xxtofl@val+2)^0,c
  2200  001318  6A04               	clrf	(___xxtofl@val+3)^0,c
  2201  00131A  0E00               	movlw	0
  2202  00131C  ECFD  F018         	call	___xxtofl
  2203  001320  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2204  001324  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2205  001328  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2206  00132C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2207  001330  ECC1  F013         	call	___fldiv	;wreg free
  2208  001334  C00F  F028         	movff	?___fldiv,___flmul@b
  2209  001338  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2210  00133C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2211  001340  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2212  001344  0E00               	movlw	0
  2213  001346  6E2C               	movwf	___flmul@a^0,c
  2214  001348  0E00               	movlw	0
  2215  00134A  6E2D               	movwf	(___flmul@a+1)^0,c
  2216  00134C  0EC8               	movlw	200
  2217  00134E  6E2E               	movwf	(___flmul@a+2)^0,c
  2218  001350  0E42               	movlw	66
  2219  001352  6E2F               	movwf	(___flmul@a+3)^0,c
  2220  001354  ECD5  F00F         	call	___flmul	;wreg free
  2221  001358  C028  F091         	movff	?___flmul,_detect_color$2740
  2222  00135C  C029  F092         	movff	?___flmul+1,_detect_color$2740+1
  2223  001360  C02A  F093         	movff	?___flmul+2,_detect_color$2740+2
  2224  001364  C02B  F094         	movff	?___flmul+3,_detect_color$2740+3
  2225  001368  C091  F066         	movff	_detect_color$2740,lroundf@x
  2226  00136C  C092  F067         	movff	_detect_color$2740+1,lroundf@x+1
  2227  001370  C093  F068         	movff	_detect_color$2740+2,lroundf@x+2
  2228  001374  C094  F069         	movff	_detect_color$2740+3,lroundf@x+3
  2229  001378  EC8E  F025         	call	_lroundf	;wreg free
  2230  00137C                     
  2231                           ;color.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2232  00137C  0E05               	movlw	5
  2233  00137E  0100               	movlb	0	; () banked
  2234  001380  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2235  001382  0E0F               	movlw	15
  2236  001384  6F74               	movwf	??_detect_color& (0+255),b
  2237  001386  0EF1               	movlw	241
  2238  001388                     u5177:
  2239  001388  2EE8               	decfsz	wreg,f,c
  2240  00138A  D7FE               	bra	u5177
  2241  00138C  2F74               	decfsz	??_detect_color& (0+255),f,b
  2242  00138E  D7FC               	bra	u5177
  2243  001390  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  2244  001392  D7FA               	bra	u5177
  2245  001394                     
  2246                           ;color.c: 244:     LED_B();
  2247  001394  ECAD  F026         	call	_LED_B	;wreg free
  2248  001398                     
  2249                           ;color.c: 245:     read_color(m);
  2250  001398  C070  F00C         	movff	detect_color@m,read_color@m
  2251  00139C  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  2252  0013A0  EC8E  F023         	call	_read_color	;wreg free
  2253  0013A4                     
  2254                           ;color.c: 246:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2255  0013A4  0100               	movlb	0	; () banked
  2256  0013A6  EE20 F00C          	lfsr	2,12
  2257  0013AA  5172               	movf	detect_color@w& (0+255),w,b
  2258  0013AC  26D9               	addwf	fsr2l,f,c
  2259  0013AE  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2260  0013B0  22DA               	addwfc	fsr2h,f,c
  2261  0013B2  CFDE F074          	movff	postinc2,??_detect_color
  2262  0013B6  CFDD F075          	movff	postdec2,??_detect_color+1
  2263  0013BA  C074  F001         	movff	??_detect_color,___xxtofl@val
  2264  0013BE  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2265  0013C2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2266  0013C4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2267  0013C6  0E00               	movlw	0
  2268  0013C8  ECFD  F018         	call	___xxtofl
  2269  0013CC  C001  F013         	movff	?___xxtofl,___fldiv@a
  2270  0013D0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2271  0013D4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2272  0013D8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2273  0013DC  C070  FFD9         	movff	detect_color@m,fsr2l
  2274  0013E0  C071  FFDA         	movff	detect_color@m+1,fsr2h
  2275  0013E4  CFDE F076          	movff	postinc2,??_detect_color+2
  2276  0013E8  CFDD F077          	movff	postdec2,??_detect_color+3
  2277  0013EC  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2278  0013F0  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2279  0013F4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2280  0013F6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2281  0013F8  0E00               	movlw	0
  2282  0013FA  ECFD  F018         	call	___xxtofl
  2283  0013FE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2284  001402  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2285  001406  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2286  00140A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2287  00140E  ECC1  F013         	call	___fldiv	;wreg free
  2288  001412  C00F  F028         	movff	?___fldiv,___flmul@b
  2289  001416  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2290  00141A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2291  00141E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2292  001422  0E00               	movlw	0
  2293  001424  6E2C               	movwf	___flmul@a^0,c
  2294  001426  0E00               	movlw	0
  2295  001428  6E2D               	movwf	(___flmul@a+1)^0,c
  2296  00142A  0EC8               	movlw	200
  2297  00142C  6E2E               	movwf	(___flmul@a+2)^0,c
  2298  00142E  0E42               	movlw	66
  2299  001430  6E2F               	movwf	(___flmul@a+3)^0,c
  2300  001432  ECD5  F00F         	call	___flmul	;wreg free
  2301  001436  C028  F091         	movff	?___flmul,_detect_color$2740
  2302  00143A  C029  F092         	movff	?___flmul+1,_detect_color$2740+1
  2303  00143E  C02A  F093         	movff	?___flmul+2,_detect_color$2740+2
  2304  001442  C02B  F094         	movff	?___flmul+3,_detect_color$2740+3
  2305  001446                     
  2306                           ;color.c: 246:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2307  001446  C091  F066         	movff	_detect_color$2740,lroundf@x
  2308  00144A  C092  F067         	movff	_detect_color$2740+1,lroundf@x+1
  2309  00144E  C093  F068         	movff	_detect_color$2740+2,lroundf@x+2
  2310  001452  C094  F069         	movff	_detect_color$2740+3,lroundf@x+3
  2311  001456  EC8E  F025         	call	_lroundf	;wreg free
  2312  00145A  C066  F088         	movff	?_lroundf,detect_color@BR
  2313  00145E  C067  F089         	movff	?_lroundf+1,detect_color@BR+1
  2314  001462  0100               	movlb	0	; () banked
  2315  001464  EE20 F00E          	lfsr	2,14
  2316  001468  5172               	movf	detect_color@w& (0+255),w,b
  2317  00146A  26D9               	addwf	fsr2l,f,c
  2318  00146C  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2319  00146E  22DA               	addwfc	fsr2h,f,c
  2320  001470  CFDE F074          	movff	postinc2,??_detect_color
  2321  001474  CFDD F075          	movff	postdec2,??_detect_color+1
  2322  001478  C074  F001         	movff	??_detect_color,___xxtofl@val
  2323  00147C  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2324  001480  6A03               	clrf	(___xxtofl@val+2)^0,c
  2325  001482  6A04               	clrf	(___xxtofl@val+3)^0,c
  2326  001484  0E00               	movlw	0
  2327  001486  ECFD  F018         	call	___xxtofl
  2328  00148A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2329  00148E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2330  001492  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2331  001496  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2332  00149A  0100               	movlb	0	; () banked
  2333  00149C  EE20 F002          	lfsr	2,2
  2334  0014A0  5170               	movf	detect_color@m& (0+255),w,b
  2335  0014A2  26D9               	addwf	fsr2l,f,c
  2336  0014A4  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2337  0014A6  22DA               	addwfc	fsr2h,f,c
  2338  0014A8  CFDE F076          	movff	postinc2,??_detect_color+2
  2339  0014AC  CFDD F077          	movff	postdec2,??_detect_color+3
  2340  0014B0  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2341  0014B4  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2342  0014B8  6A03               	clrf	(___xxtofl@val+2)^0,c
  2343  0014BA  6A04               	clrf	(___xxtofl@val+3)^0,c
  2344  0014BC  0E00               	movlw	0
  2345  0014BE  ECFD  F018         	call	___xxtofl
  2346  0014C2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2347  0014C6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2348  0014CA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2349  0014CE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2350  0014D2  ECC1  F013         	call	___fldiv	;wreg free
  2351  0014D6  C00F  F028         	movff	?___fldiv,___flmul@b
  2352  0014DA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2353  0014DE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2354  0014E2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2355  0014E6  0E00               	movlw	0
  2356  0014E8  6E2C               	movwf	___flmul@a^0,c
  2357  0014EA  0E00               	movlw	0
  2358  0014EC  6E2D               	movwf	(___flmul@a+1)^0,c
  2359  0014EE  0EC8               	movlw	200
  2360  0014F0  6E2E               	movwf	(___flmul@a+2)^0,c
  2361  0014F2  0E42               	movlw	66
  2362  0014F4  6E2F               	movwf	(___flmul@a+3)^0,c
  2363  0014F6  ECD5  F00F         	call	___flmul	;wreg free
  2364  0014FA  C028  F091         	movff	?___flmul,_detect_color$2740
  2365  0014FE  C029  F092         	movff	?___flmul+1,_detect_color$2740+1
  2366  001502  C02A  F093         	movff	?___flmul+2,_detect_color$2740+2
  2367  001506  C02B  F094         	movff	?___flmul+3,_detect_color$2740+3
  2368  00150A  C091  F066         	movff	_detect_color$2740,lroundf@x
  2369  00150E  C092  F067         	movff	_detect_color$2740+1,lroundf@x+1
  2370  001512  C093  F068         	movff	_detect_color$2740+2,lroundf@x+2
  2371  001516  C094  F069         	movff	_detect_color$2740+3,lroundf@x+3
  2372  00151A  EC8E  F025         	call	_lroundf	;wreg free
  2373  00151E  C066  F08E         	movff	?_lroundf,detect_color@BG
  2374  001522  C067  F08F         	movff	?_lroundf+1,detect_color@BG+1
  2375  001526  0100               	movlb	0	; () banked
  2376  001528  EE20 F010          	lfsr	2,16
  2377  00152C  5172               	movf	detect_color@w& (0+255),w,b
  2378  00152E  26D9               	addwf	fsr2l,f,c
  2379  001530  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2380  001532  22DA               	addwfc	fsr2h,f,c
  2381  001534  CFDE F074          	movff	postinc2,??_detect_color
  2382  001538  CFDD F075          	movff	postdec2,??_detect_color+1
  2383  00153C  C074  F001         	movff	??_detect_color,___xxtofl@val
  2384  001540  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2385  001544  6A03               	clrf	(___xxtofl@val+2)^0,c
  2386  001546  6A04               	clrf	(___xxtofl@val+3)^0,c
  2387  001548  0E00               	movlw	0
  2388  00154A  ECFD  F018         	call	___xxtofl
  2389  00154E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2390  001552  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2391  001556  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2392  00155A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2393  00155E  0100               	movlb	0	; () banked
  2394  001560  EE20 F004          	lfsr	2,4
  2395  001564  5170               	movf	detect_color@m& (0+255),w,b
  2396  001566  26D9               	addwf	fsr2l,f,c
  2397  001568  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2398  00156A  22DA               	addwfc	fsr2h,f,c
  2399  00156C  CFDE F076          	movff	postinc2,??_detect_color+2
  2400  001570  CFDD F077          	movff	postdec2,??_detect_color+3
  2401  001574  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2402  001578  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2403  00157C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2404  00157E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2405  001580  0E00               	movlw	0
  2406  001582  ECFD  F018         	call	___xxtofl
  2407  001586  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2408  00158A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2409  00158E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2410  001592  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2411  001596  ECC1  F013         	call	___fldiv	;wreg free
  2412  00159A  C00F  F028         	movff	?___fldiv,___flmul@b
  2413  00159E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2414  0015A2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2415  0015A6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2416  0015AA  0E00               	movlw	0
  2417  0015AC  6E2C               	movwf	___flmul@a^0,c
  2418  0015AE  0E00               	movlw	0
  2419  0015B0  6E2D               	movwf	(___flmul@a+1)^0,c
  2420  0015B2  0EC8               	movlw	200
  2421  0015B4  6E2E               	movwf	(___flmul@a+2)^0,c
  2422  0015B6  0E42               	movlw	66
  2423  0015B8  6E2F               	movwf	(___flmul@a+3)^0,c
  2424  0015BA  ECD5  F00F         	call	___flmul	;wreg free
  2425  0015BE  C028  F091         	movff	?___flmul,_detect_color$2740
  2426  0015C2  C029  F092         	movff	?___flmul+1,_detect_color$2740+1
  2427  0015C6  C02A  F093         	movff	?___flmul+2,_detect_color$2740+2
  2428  0015CA  C02B  F094         	movff	?___flmul+3,_detect_color$2740+3
  2429  0015CE  C091  F066         	movff	_detect_color$2740,lroundf@x
  2430  0015D2  C092  F067         	movff	_detect_color$2740+1,lroundf@x+1
  2431  0015D6  C093  F068         	movff	_detect_color$2740+2,lroundf@x+2
  2432  0015DA  C094  F069         	movff	_detect_color$2740+3,lroundf@x+3
  2433  0015DE  EC8E  F025         	call	_lroundf	;wreg free
  2434  0015E2  C066  F086         	movff	?_lroundf,detect_color@BB
  2435  0015E6  C067  F087         	movff	?_lroundf+1,detect_color@BB+1
  2436  0015EA                     
  2437                           ;color.c: 247:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2438  0015EA  0E05               	movlw	5
  2439  0015EC  0100               	movlb	0	; () banked
  2440  0015EE  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2441  0015F0  0E0F               	movlw	15
  2442  0015F2  6F74               	movwf	??_detect_color& (0+255),b
  2443  0015F4  0EF1               	movlw	241
  2444  0015F6                     u5187:
  2445  0015F6  2EE8               	decfsz	wreg,f,c
  2446  0015F8  D7FE               	bra	u5187
  2447  0015FA  2F74               	decfsz	??_detect_color& (0+255),f,b
  2448  0015FC  D7FC               	bra	u5187
  2449  0015FE  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  2450  001600  D7FA               	bra	u5187
  2451  001602                     
  2452                           ;color.c: 250:     if (compare(0, BR, 60)){
  2453  001602  0E00               	movlw	0
  2454  001604  0100               	movlb	0	; () banked
  2455  001606  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2456  001608  0E00               	movlw	0
  2457  00160A  6F6A               	movwf	compare@lower& (0+255),b
  2458  00160C  C088  F06C         	movff	detect_color@BR,compare@value2compare
  2459  001610  C089  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2460  001614  0E00               	movlw	0
  2461  001616  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2462  001618  0E3C               	movlw	60
  2463  00161A  6F6E               	movwf	compare@upper& (0+255),b
  2464  00161C  ECAB  F025         	call	_compare	;wreg free
  2465  001620  0900               	iorlw	0
  2466  001622  B4D8               	btfsc	status,2,c
  2467  001624  EF16  F00B         	goto	u4631
  2468  001628  EF18  F00B         	goto	u4630
  2469  00162C                     u4631:
  2470  00162C  EF89  F00B         	goto	l4590
  2471  001630                     u4630:
  2472  001630                     
  2473                           ;color.c: 251:         if (compare(0, lroundf((float)(GG + BG)/BB * 200), 400)){color = 
      +                          3;}
  2474  001630  C086  F001         	movff	detect_color@BB,___xxtofl@val
  2475  001634  C087  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2476  001638  6A03               	clrf	(___xxtofl@val+2)^0,c
  2477  00163A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2478  00163C  0E00               	movlw	0
  2479  00163E  ECFD  F018         	call	___xxtofl
  2480  001642  C001  F013         	movff	?___xxtofl,___fldiv@a
  2481  001646  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2482  00164A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2483  00164E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2484  001652  0100               	movlb	0	; () banked
  2485  001654  518E               	movf	detect_color@BG& (0+255),w,b
  2486  001656  2582               	addwf	detect_color@GG& (0+255),w,b
  2487  001658  6F74               	movwf	??_detect_color& (0+255),b
  2488  00165A  518F               	movf	(detect_color@BG+1)& (0+255),w,b
  2489  00165C  2183               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2490  00165E  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2491  001660  C074  F001         	movff	??_detect_color,___xxtofl@val
  2492  001664  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2493  001668  6A03               	clrf	(___xxtofl@val+2)^0,c
  2494  00166A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2495  00166C  0E00               	movlw	0
  2496  00166E  ECFD  F018         	call	___xxtofl
  2497  001672  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2498  001676  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2499  00167A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2500  00167E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2501  001682  ECC1  F013         	call	___fldiv	;wreg free
  2502  001686  C00F  F028         	movff	?___fldiv,___flmul@b
  2503  00168A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2504  00168E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2505  001692  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2506  001696  0E00               	movlw	0
  2507  001698  6E2C               	movwf	___flmul@a^0,c
  2508  00169A  0E00               	movlw	0
  2509  00169C  6E2D               	movwf	(___flmul@a+1)^0,c
  2510  00169E  0E48               	movlw	72
  2511  0016A0  6E2E               	movwf	(___flmul@a+2)^0,c
  2512  0016A2  0E43               	movlw	67
  2513  0016A4  6E2F               	movwf	(___flmul@a+3)^0,c
  2514  0016A6  ECD5  F00F         	call	___flmul	;wreg free
  2515  0016AA  C028  F091         	movff	?___flmul,_detect_color$2740
  2516  0016AE  C029  F092         	movff	?___flmul+1,_detect_color$2740+1
  2517  0016B2  C02A  F093         	movff	?___flmul+2,_detect_color$2740+2
  2518  0016B6  C02B  F094         	movff	?___flmul+3,_detect_color$2740+3
  2519                           
  2520                           ;color.c: 251:         if (compare(0, lroundf((float)(GG + BG)/BB * 200), 400)){color = 
      +                          3;}
  2521  0016BA  0E00               	movlw	0
  2522  0016BC  0100               	movlb	0	; () banked
  2523  0016BE  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2524  0016C0  0E00               	movlw	0
  2525  0016C2  6F6A               	movwf	compare@lower& (0+255),b
  2526  0016C4  C091  F066         	movff	_detect_color$2740,lroundf@x
  2527  0016C8  C092  F067         	movff	_detect_color$2740+1,lroundf@x+1
  2528  0016CC  C093  F068         	movff	_detect_color$2740+2,lroundf@x+2
  2529  0016D0  C094  F069         	movff	_detect_color$2740+3,lroundf@x+3
  2530  0016D4  EC8E  F025         	call	_lroundf	;wreg free
  2531  0016D8  C066  F06C         	movff	?_lroundf,compare@value2compare
  2532  0016DC  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2533  0016E0  0E01               	movlw	1
  2534  0016E2  0100               	movlb	0	; () banked
  2535  0016E4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2536  0016E6  0E90               	movlw	144
  2537  0016E8  6F6E               	movwf	compare@upper& (0+255),b
  2538  0016EA  ECAB  F025         	call	_compare	;wreg free
  2539  0016EE  0900               	iorlw	0
  2540  0016F0  B4D8               	btfsc	status,2,c
  2541  0016F2  EF7D  F00B         	goto	u4641
  2542  0016F6  EF7F  F00B         	goto	u4640
  2543  0016FA                     u4641:
  2544  0016FA  EF84  F00B         	goto	l4588
  2545  0016FE                     u4640:
  2546  0016FE  0E03               	movlw	3
  2547  001700  0100               	movlb	0	; () banked
  2548  001702  6F90               	movwf	detect_color@color& (0+255),b
  2549  001704  EF6A  F00C         	goto	l4620
  2550  001708                     l4588:
  2551  001708  0E02               	movlw	2
  2552  00170A  0100               	movlb	0	; () banked
  2553  00170C  6F90               	movwf	detect_color@color& (0+255),b
  2554  00170E  EF6A  F00C         	goto	l4620
  2555  001712                     l4590:
  2556                           
  2557                           ;color.c: 255:         if (compare(0, BG, 75)){
  2558  001712  0E00               	movlw	0
  2559  001714  0100               	movlb	0	; () banked
  2560  001716  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2561  001718  0E00               	movlw	0
  2562  00171A  6F6A               	movwf	compare@lower& (0+255),b
  2563  00171C  C08E  F06C         	movff	detect_color@BG,compare@value2compare
  2564  001720  C08F  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2565  001724  0E00               	movlw	0
  2566  001726  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2567  001728  0E4B               	movlw	75
  2568  00172A  6F6E               	movwf	compare@upper& (0+255),b
  2569  00172C  ECAB  F025         	call	_compare	;wreg free
  2570  001730  0900               	iorlw	0
  2571  001732  B4D8               	btfsc	status,2,c
  2572  001734  EF9E  F00B         	goto	u4651
  2573  001738  EFA0  F00B         	goto	u4650
  2574  00173C                     u4651:
  2575  00173C  EF1A  F00C         	goto	l4602
  2576  001740                     u4650:
  2577  001740                     
  2578                           ;color.c: 256:             if (compare(0, lroundf((float)RR/BG * 200), 319)){
  2579  001740  C08E  F001         	movff	detect_color@BG,___xxtofl@val
  2580  001744  C08F  F002         	movff	detect_color@BG+1,___xxtofl@val+1
  2581  001748  6A03               	clrf	(___xxtofl@val+2)^0,c
  2582  00174A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2583  00174C  0E00               	movlw	0
  2584  00174E  ECFD  F018         	call	___xxtofl
  2585  001752  C001  F013         	movff	?___xxtofl,___fldiv@a
  2586  001756  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2587  00175A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2588  00175E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2589  001762  C084  F001         	movff	detect_color@RR,___xxtofl@val
  2590  001766  C085  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  2591  00176A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2592  00176C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2593  00176E  0E00               	movlw	0
  2594  001770  ECFD  F018         	call	___xxtofl
  2595  001774  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2596  001778  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2597  00177C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2598  001780  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2599  001784  ECC1  F013         	call	___fldiv	;wreg free
  2600  001788  C00F  F028         	movff	?___fldiv,___flmul@b
  2601  00178C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2602  001790  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2603  001794  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2604  001798  0E00               	movlw	0
  2605  00179A  6E2C               	movwf	___flmul@a^0,c
  2606  00179C  0E00               	movlw	0
  2607  00179E  6E2D               	movwf	(___flmul@a+1)^0,c
  2608  0017A0  0E48               	movlw	72
  2609  0017A2  6E2E               	movwf	(___flmul@a+2)^0,c
  2610  0017A4  0E43               	movlw	67
  2611  0017A6  6E2F               	movwf	(___flmul@a+3)^0,c
  2612  0017A8  ECD5  F00F         	call	___flmul	;wreg free
  2613  0017AC  C028  F091         	movff	?___flmul,_detect_color$2740
  2614  0017B0  C029  F092         	movff	?___flmul+1,_detect_color$2740+1
  2615  0017B4  C02A  F093         	movff	?___flmul+2,_detect_color$2740+2
  2616  0017B8  C02B  F094         	movff	?___flmul+3,_detect_color$2740+3
  2617                           
  2618                           ;color.c: 256:             if (compare(0, lroundf((float)RR/BG * 200), 319)){
  2619  0017BC  0E00               	movlw	0
  2620  0017BE  0100               	movlb	0	; () banked
  2621  0017C0  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2622  0017C2  0E00               	movlw	0
  2623  0017C4  6F6A               	movwf	compare@lower& (0+255),b
  2624  0017C6  C091  F066         	movff	_detect_color$2740,lroundf@x
  2625  0017CA  C092  F067         	movff	_detect_color$2740+1,lroundf@x+1
  2626  0017CE  C093  F068         	movff	_detect_color$2740+2,lroundf@x+2
  2627  0017D2  C094  F069         	movff	_detect_color$2740+3,lroundf@x+3
  2628  0017D6  EC8E  F025         	call	_lroundf	;wreg free
  2629  0017DA  C066  F06C         	movff	?_lroundf,compare@value2compare
  2630  0017DE  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2631  0017E2  0E01               	movlw	1
  2632  0017E4  0100               	movlb	0	; () banked
  2633  0017E6  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2634  0017E8  0E3F               	movlw	63
  2635  0017EA  6F6E               	movwf	compare@upper& (0+255),b
  2636  0017EC  ECAB  F025         	call	_compare	;wreg free
  2637  0017F0  0900               	iorlw	0
  2638  0017F2  B4D8               	btfsc	status,2,c
  2639  0017F4  EFFE  F00B         	goto	u4661
  2640  0017F8  EF00  F00C         	goto	u4660
  2641  0017FC                     u4661:
  2642  0017FC  EF15  F00C         	goto	l4600
  2643  001800                     u4660:
  2644  001800                     
  2645                           ;color.c: 257:                 if (GR > 90){color = 6;}
  2646  001800  0100               	movlb	0	; () banked
  2647  001802  5181               	movf	(detect_color@GR+1)& (0+255),w,b
  2648  001804  E109               	bnz	u4670
  2649  001806  0E5B               	movlw	91
  2650  001808  5D80               	subwf	detect_color@GR& (0+255),w,b
  2651  00180A  A0D8               	btfss	status,0,c
  2652  00180C  EF0A  F00C         	goto	u4671
  2653  001810  EF0C  F00C         	goto	u4670
  2654  001814                     u4671:
  2655  001814  EF10  F00C         	goto	l4598
  2656  001818                     u4670:
  2657  001818                     
  2658                           ; BSR set to: 0
  2659  001818  0E06               	movlw	6
  2660  00181A  6F90               	movwf	detect_color@color& (0+255),b
  2661  00181C  EF6A  F00C         	goto	l4620
  2662  001820                     l4598:
  2663  001820  0E00               	movlw	0
  2664  001822  0100               	movlb	0	; () banked
  2665  001824  6F90               	movwf	detect_color@color& (0+255),b
  2666  001826  EF6A  F00C         	goto	l4620
  2667  00182A                     l4600:
  2668  00182A  0E01               	movlw	1
  2669  00182C  0100               	movlb	0	; () banked
  2670  00182E  6F90               	movwf	detect_color@color& (0+255),b
  2671  001830  EF6A  F00C         	goto	l4620
  2672  001834                     l4602:
  2673                           
  2674                           ;color.c: 263:             if (compare(0, BR, 90)){
  2675  001834  0E00               	movlw	0
  2676  001836  0100               	movlb	0	; () banked
  2677  001838  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2678  00183A  0E00               	movlw	0
  2679  00183C  6F6A               	movwf	compare@lower& (0+255),b
  2680  00183E  C088  F06C         	movff	detect_color@BR,compare@value2compare
  2681  001842  C089  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2682  001846  0E00               	movlw	0
  2683  001848  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2684  00184A  0E5A               	movlw	90
  2685  00184C  6F6E               	movwf	compare@upper& (0+255),b
  2686  00184E  ECAB  F025         	call	_compare	;wreg free
  2687  001852  0900               	iorlw	0
  2688  001854  B4D8               	btfsc	status,2,c
  2689  001856  EF2F  F00C         	goto	u4681
  2690  00185A  EF31  F00C         	goto	u4680
  2691  00185E                     u4681:
  2692  00185E  EF41  F00C         	goto	l4610
  2693  001862                     u4680:
  2694  001862                     
  2695                           ;color.c: 264:                 if (BG > 90){color = 7;}
  2696  001862  0100               	movlb	0	; () banked
  2697  001864  518F               	movf	(detect_color@BG+1)& (0+255),w,b
  2698  001866  E109               	bnz	u4690
  2699  001868  0E5B               	movlw	91
  2700  00186A  5D8E               	subwf	detect_color@BG& (0+255),w,b
  2701  00186C  A0D8               	btfss	status,0,c
  2702  00186E  EF3B  F00C         	goto	u4691
  2703  001872  EF3D  F00C         	goto	u4690
  2704  001876                     u4691:
  2705  001876  EF10  F00C         	goto	l4598
  2706  00187A                     u4690:
  2707  00187A                     
  2708                           ; BSR set to: 0
  2709  00187A  0E07               	movlw	7
  2710  00187C  6F90               	movwf	detect_color@color& (0+255),b
  2711  00187E  EF6A  F00C         	goto	l4620
  2712  001882                     l4610:
  2713                           
  2714                           ;color.c: 268:                 if (BG < BB){color = 5;}
  2715  001882  0100               	movlb	0	; () banked
  2716  001884  5186               	movf	detect_color@BB& (0+255),w,b
  2717  001886  5D8E               	subwf	detect_color@BG& (0+255),w,b
  2718  001888  5187               	movf	(detect_color@BB+1)& (0+255),w,b
  2719  00188A  598F               	subwfb	(detect_color@BG+1)& (0+255),w,b
  2720  00188C  B0D8               	btfsc	status,0,c
  2721  00188E  EF4B  F00C         	goto	u4701
  2722  001892  EF4D  F00C         	goto	u4700
  2723  001896                     u4701:
  2724  001896  EF51  F00C         	goto	l4614
  2725  00189A                     u4700:
  2726  00189A                     
  2727                           ; BSR set to: 0
  2728  00189A  0E05               	movlw	5
  2729  00189C  6F90               	movwf	detect_color@color& (0+255),b
  2730  00189E  EF6A  F00C         	goto	l4620
  2731  0018A2                     l4614:
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;color.c: 270:                     if (compare(0, BB, 90)){color = 4;}
  2735  0018A2  0E00               	movlw	0
  2736  0018A4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2737  0018A6  0E00               	movlw	0
  2738  0018A8  6F6A               	movwf	compare@lower& (0+255),b
  2739  0018AA  C086  F06C         	movff	detect_color@BB,compare@value2compare
  2740  0018AE  C087  F06D         	movff	detect_color@BB+1,compare@value2compare+1
  2741  0018B2  0E00               	movlw	0
  2742  0018B4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2743  0018B6  0E5A               	movlw	90
  2744  0018B8  6F6E               	movwf	compare@upper& (0+255),b
  2745  0018BA  ECAB  F025         	call	_compare	;wreg free
  2746  0018BE  0900               	iorlw	0
  2747  0018C0  B4D8               	btfsc	status,2,c
  2748  0018C2  EF65  F00C         	goto	u4711
  2749  0018C6  EF67  F00C         	goto	u4710
  2750  0018CA                     u4711:
  2751  0018CA  EF10  F00C         	goto	l4598
  2752  0018CE                     u4710:
  2753  0018CE  0E04               	movlw	4
  2754  0018D0  0100               	movlb	0	; () banked
  2755  0018D2  6F90               	movwf	detect_color@color& (0+255),b
  2756  0018D4                     l4620:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;color.c: 277:     if (compare(95, BR, 105) && compare(95,BG,105)){color = 8;}
  2760  0018D4  0E00               	movlw	0
  2761  0018D6  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2762  0018D8  0E5F               	movlw	95
  2763  0018DA  6F6A               	movwf	compare@lower& (0+255),b
  2764  0018DC  C088  F06C         	movff	detect_color@BR,compare@value2compare
  2765  0018E0  C089  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2766  0018E4  0E00               	movlw	0
  2767  0018E6  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2768  0018E8  0E69               	movlw	105
  2769  0018EA  6F6E               	movwf	compare@upper& (0+255),b
  2770  0018EC  ECAB  F025         	call	_compare	;wreg free
  2771  0018F0  0900               	iorlw	0
  2772  0018F2  B4D8               	btfsc	status,2,c
  2773  0018F4  EF7E  F00C         	goto	u4721
  2774  0018F8  EF80  F00C         	goto	u4720
  2775  0018FC                     u4721:
  2776  0018FC  EF9A  F00C         	goto	l4626
  2777  001900                     u4720:
  2778  001900  0E00               	movlw	0
  2779  001902  0100               	movlb	0	; () banked
  2780  001904  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2781  001906  0E5F               	movlw	95
  2782  001908  6F6A               	movwf	compare@lower& (0+255),b
  2783  00190A  C08E  F06C         	movff	detect_color@BG,compare@value2compare
  2784  00190E  C08F  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2785  001912  0E00               	movlw	0
  2786  001914  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2787  001916  0E69               	movlw	105
  2788  001918  6F6E               	movwf	compare@upper& (0+255),b
  2789  00191A  ECAB  F025         	call	_compare	;wreg free
  2790  00191E  0900               	iorlw	0
  2791  001920  B4D8               	btfsc	status,2,c
  2792  001922  EF95  F00C         	goto	u4731
  2793  001926  EF97  F00C         	goto	u4730
  2794  00192A                     u4731:
  2795  00192A  EF9A  F00C         	goto	l4626
  2796  00192E                     u4730:
  2797  00192E  0E08               	movlw	8
  2798  001930  0100               	movlb	0	; () banked
  2799  001932  6F90               	movwf	detect_color@color& (0+255),b
  2800  001934                     l4626:
  2801                           
  2802                           ;color.c: 278:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  2803  001934  0E00               	movlw	0
  2804  001936  0100               	movlb	0	; () banked
  2805  001938  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2806  00193A  0E00               	movlw	0
  2807  00193C  6F6A               	movwf	compare@lower& (0+255),b
  2808  00193E  C088  F06C         	movff	detect_color@BR,compare@value2compare
  2809  001942  C089  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2810  001946  0E00               	movlw	0
  2811  001948  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2812  00194A  0E19               	movlw	25
  2813  00194C  6F6E               	movwf	compare@upper& (0+255),b
  2814  00194E  ECAB  F025         	call	_compare	;wreg free
  2815  001952  0900               	iorlw	0
  2816  001954  B4D8               	btfsc	status,2,c
  2817  001956  EFAF  F00C         	goto	u4741
  2818  00195A  EFB1  F00C         	goto	u4740
  2819  00195E                     u4741:
  2820  00195E  EFCB  F00C         	goto	l4632
  2821  001962                     u4740:
  2822  001962  0E00               	movlw	0
  2823  001964  0100               	movlb	0	; () banked
  2824  001966  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2825  001968  0E00               	movlw	0
  2826  00196A  6F6A               	movwf	compare@lower& (0+255),b
  2827  00196C  C084  F06C         	movff	detect_color@RR,compare@value2compare
  2828  001970  C085  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  2829  001974  0E00               	movlw	0
  2830  001976  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2831  001978  0E5A               	movlw	90
  2832  00197A  6F6E               	movwf	compare@upper& (0+255),b
  2833  00197C  ECAB  F025         	call	_compare	;wreg free
  2834  001980  0900               	iorlw	0
  2835  001982  B4D8               	btfsc	status,2,c
  2836  001984  EFC6  F00C         	goto	u4751
  2837  001988  EFC8  F00C         	goto	u4750
  2838  00198C                     u4751:
  2839  00198C  EFCB  F00C         	goto	l4632
  2840  001990                     u4750:
  2841  001990  0E00               	movlw	0
  2842  001992  0100               	movlb	0	; () banked
  2843  001994  6F90               	movwf	detect_color@color& (0+255),b
  2844  001996                     l4632:
  2845                           
  2846                           ;color.c: 281:     if (color == 2 || color == 3){
  2847  001996  0E02               	movlw	2
  2848  001998  0100               	movlb	0	; () banked
  2849  00199A  1990               	xorwf	detect_color@color& (0+255),w,b
  2850  00199C  B4D8               	btfsc	status,2,c
  2851  00199E  EFD3  F00C         	goto	u4761
  2852  0019A2  EFD5  F00C         	goto	u4760
  2853  0019A6                     u4761:
  2854  0019A6  EFDE  F00C         	goto	l4636
  2855  0019AA                     u4760:
  2856  0019AA                     
  2857                           ; BSR set to: 0
  2858  0019AA  0E03               	movlw	3
  2859  0019AC  1990               	xorwf	detect_color@color& (0+255),w,b
  2860  0019AE  A4D8               	btfss	status,2,c
  2861  0019B0  EFDC  F00C         	goto	u4771
  2862  0019B4  EFDE  F00C         	goto	u4770
  2863  0019B8                     u4771:
  2864  0019B8  EFF6  F00C         	goto	l4642
  2865  0019BC                     u4770:
  2866  0019BC                     l4636:
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;color.c: 282:         if (GR_REAL < 60 || GC_REAL <550){color = 0;}
  2870  0019BC  518B               	movf	(detect_color@GR_REAL+1)& (0+255),w,b
  2871  0019BE  E109               	bnz	u4780
  2872  0019C0  0E3C               	movlw	60
  2873  0019C2  5D8A               	subwf	detect_color@GR_REAL& (0+255),w,b
  2874  0019C4  A0D8               	btfss	status,0,c
  2875  0019C6  EFE7  F00C         	goto	u4781
  2876  0019CA  EFE9  F00C         	goto	u4780
  2877  0019CE                     u4781:
  2878  0019CE  EFF4  F00C         	goto	l4640
  2879  0019D2                     u4780:
  2880  0019D2                     
  2881                           ; BSR set to: 0
  2882  0019D2  0E26               	movlw	38
  2883  0019D4  5D8C               	subwf	detect_color@GC_REAL& (0+255),w,b
  2884  0019D6  0E02               	movlw	2
  2885  0019D8  598D               	subwfb	(detect_color@GC_REAL+1)& (0+255),w,b
  2886  0019DA  B0D8               	btfsc	status,0,c
  2887  0019DC  EFF2  F00C         	goto	u4791
  2888  0019E0  EFF4  F00C         	goto	u4790
  2889  0019E4                     u4791:
  2890  0019E4  EFF6  F00C         	goto	l4642
  2891  0019E8                     u4790:
  2892  0019E8                     l4640:
  2893                           
  2894                           ; BSR set to: 0
  2895  0019E8  0E00               	movlw	0
  2896  0019EA  6F90               	movwf	detect_color@color& (0+255),b
  2897  0019EC                     l4642:
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;color.c: 284:     if (color == 1 || color == 6){
  2901  0019EC  0590               	decf	detect_color@color& (0+255),w,b
  2902  0019EE  B4D8               	btfsc	status,2,c
  2903  0019F0  EFFC  F00C         	goto	u4801
  2904  0019F4  EFFE  F00C         	goto	u4800
  2905  0019F8                     u4801:
  2906  0019F8  EF07  F00D         	goto	l4646
  2907  0019FC                     u4800:
  2908  0019FC                     
  2909                           ; BSR set to: 0
  2910  0019FC  0E06               	movlw	6
  2911  0019FE  1990               	xorwf	detect_color@color& (0+255),w,b
  2912  001A00  A4D8               	btfss	status,2,c
  2913  001A02  EF05  F00D         	goto	u4811
  2914  001A06  EF07  F00D         	goto	u4810
  2915  001A0A                     u4811:
  2916  001A0A  EF1F  F00D         	goto	l4652
  2917  001A0E                     u4810:
  2918  001A0E                     l4646:
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;color.c: 285:         if (GR_REAL < 100 || GC_REAL <550){color = 0;}
  2922  001A0E  518B               	movf	(detect_color@GR_REAL+1)& (0+255),w,b
  2923  001A10  E109               	bnz	u4820
  2924  001A12  0E64               	movlw	100
  2925  001A14  5D8A               	subwf	detect_color@GR_REAL& (0+255),w,b
  2926  001A16  A0D8               	btfss	status,0,c
  2927  001A18  EF10  F00D         	goto	u4821
  2928  001A1C  EF12  F00D         	goto	u4820
  2929  001A20                     u4821:
  2930  001A20  EF1D  F00D         	goto	l4650
  2931  001A24                     u4820:
  2932  001A24                     
  2933                           ; BSR set to: 0
  2934  001A24  0E26               	movlw	38
  2935  001A26  5D8C               	subwf	detect_color@GC_REAL& (0+255),w,b
  2936  001A28  0E02               	movlw	2
  2937  001A2A  598D               	subwfb	(detect_color@GC_REAL+1)& (0+255),w,b
  2938  001A2C  B0D8               	btfsc	status,0,c
  2939  001A2E  EF1B  F00D         	goto	u4831
  2940  001A32  EF1D  F00D         	goto	u4830
  2941  001A36                     u4831:
  2942  001A36  EF1F  F00D         	goto	l4652
  2943  001A3A                     u4830:
  2944  001A3A                     l4650:
  2945                           
  2946                           ; BSR set to: 0
  2947  001A3A  0E00               	movlw	0
  2948  001A3C  6F90               	movwf	detect_color@color& (0+255),b
  2949  001A3E                     l4652:
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;color.c: 287:     if (color == 4 || color == 5){
  2953  001A3E  0E04               	movlw	4
  2954  001A40  1990               	xorwf	detect_color@color& (0+255),w,b
  2955  001A42  B4D8               	btfsc	status,2,c
  2956  001A44  EF26  F00D         	goto	u4841
  2957  001A48  EF28  F00D         	goto	u4840
  2958  001A4C                     u4841:
  2959  001A4C  EF31  F00D         	goto	l4656
  2960  001A50                     u4840:
  2961  001A50                     
  2962                           ; BSR set to: 0
  2963  001A50  0E05               	movlw	5
  2964  001A52  1990               	xorwf	detect_color@color& (0+255),w,b
  2965  001A54  A4D8               	btfss	status,2,c
  2966  001A56  EF2F  F00D         	goto	u4851
  2967  001A5A  EF31  F00D         	goto	u4850
  2968  001A5E                     u4851:
  2969  001A5E  EF49  F00D         	goto	l4662
  2970  001A62                     u4850:
  2971  001A62                     l4656:
  2972                           
  2973                           ; BSR set to: 0
  2974                           ;color.c: 288:         if (GR_REAL < 120 || GC_REAL <650){color = 0;}
  2975  001A62  518B               	movf	(detect_color@GR_REAL+1)& (0+255),w,b
  2976  001A64  E109               	bnz	u4860
  2977  001A66  0E78               	movlw	120
  2978  001A68  5D8A               	subwf	detect_color@GR_REAL& (0+255),w,b
  2979  001A6A  A0D8               	btfss	status,0,c
  2980  001A6C  EF3A  F00D         	goto	u4861
  2981  001A70  EF3C  F00D         	goto	u4860
  2982  001A74                     u4861:
  2983  001A74  EF47  F00D         	goto	l4660
  2984  001A78                     u4860:
  2985  001A78                     
  2986                           ; BSR set to: 0
  2987  001A78  0E8A               	movlw	138
  2988  001A7A  5D8C               	subwf	detect_color@GC_REAL& (0+255),w,b
  2989  001A7C  0E02               	movlw	2
  2990  001A7E  598D               	subwfb	(detect_color@GC_REAL+1)& (0+255),w,b
  2991  001A80  B0D8               	btfsc	status,0,c
  2992  001A82  EF45  F00D         	goto	u4871
  2993  001A86  EF47  F00D         	goto	u4870
  2994  001A8A                     u4871:
  2995  001A8A  EF49  F00D         	goto	l4662
  2996  001A8E                     u4870:
  2997  001A8E                     l4660:
  2998                           
  2999                           ; BSR set to: 0
  3000  001A8E  0E00               	movlw	0
  3001  001A90  6F90               	movwf	detect_color@color& (0+255),b
  3002  001A92                     l4662:
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;color.c: 290:     if (color == 7 || color == 8){
  3006  001A92  0E07               	movlw	7
  3007  001A94  1990               	xorwf	detect_color@color& (0+255),w,b
  3008  001A96  B4D8               	btfsc	status,2,c
  3009  001A98  EF50  F00D         	goto	u4881
  3010  001A9C  EF52  F00D         	goto	u4880
  3011  001AA0                     u4881:
  3012  001AA0  EF5B  F00D         	goto	l4666
  3013  001AA4                     u4880:
  3014  001AA4                     
  3015                           ; BSR set to: 0
  3016  001AA4  0E08               	movlw	8
  3017  001AA6  1990               	xorwf	detect_color@color& (0+255),w,b
  3018  001AA8  A4D8               	btfss	status,2,c
  3019  001AAA  EF59  F00D         	goto	u4891
  3020  001AAE  EF5B  F00D         	goto	u4890
  3021  001AB2                     u4891:
  3022  001AB2  EF73  F00D         	goto	l155
  3023  001AB6                     u4890:
  3024  001AB6                     l4666:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;color.c: 291:         if (GR_REAL < 110 || GC_REAL <700){color = 0;}
  3028  001AB6  518B               	movf	(detect_color@GR_REAL+1)& (0+255),w,b
  3029  001AB8  E109               	bnz	u4900
  3030  001ABA  0E6E               	movlw	110
  3031  001ABC  5D8A               	subwf	detect_color@GR_REAL& (0+255),w,b
  3032  001ABE  A0D8               	btfss	status,0,c
  3033  001AC0  EF64  F00D         	goto	u4901
  3034  001AC4  EF66  F00D         	goto	u4900
  3035  001AC8                     u4901:
  3036  001AC8  EF71  F00D         	goto	l4670
  3037  001ACC                     u4900:
  3038  001ACC                     
  3039                           ; BSR set to: 0
  3040  001ACC  0EBC               	movlw	188
  3041  001ACE  5D8C               	subwf	detect_color@GC_REAL& (0+255),w,b
  3042  001AD0  0E02               	movlw	2
  3043  001AD2  598D               	subwfb	(detect_color@GC_REAL+1)& (0+255),w,b
  3044  001AD4  B0D8               	btfsc	status,0,c
  3045  001AD6  EF6F  F00D         	goto	u4911
  3046  001ADA  EF71  F00D         	goto	u4910
  3047  001ADE                     u4911:
  3048  001ADE  EF73  F00D         	goto	l155
  3049  001AE2                     u4910:
  3050  001AE2                     l4670:
  3051                           
  3052                           ; BSR set to: 0
  3053  001AE2  0E00               	movlw	0
  3054  001AE4  6F90               	movwf	detect_color@color& (0+255),b
  3055  001AE6                     l155:
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;color.c: 294:     return color;
  3059  001AE6  5190               	movf	detect_color@color& (0+255),w,b
  3060  001AE8                     
  3061                           ; BSR set to: 0
  3062  001AE8  0012               	return		;funcret
  3063  001AEA                     __end_of_detect_color:
  3064                           	callstack 0
  3065                           
  3066 ;; *************** function _lroundf *****************
  3067 ;; Defined at:
  3068 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  x               4    6[BANK0 ] float 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  4    6[BANK0 ] long 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3082 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3085 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3086 ;;Total ram usage:        4 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; Hardware stack levels required when called: 3
  3089 ;; This function calls:
  3090 ;;		___fltol
  3091 ;;		_roundf
  3092 ;; This function is called by:
  3093 ;;		_detect_color
  3094 ;;		_check_color_reading
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text6
  3099  004B1C                     __ptext6:
  3100                           	callstack 0
  3101  004B1C                     _lroundf:
  3102                           	callstack 26
  3103  004B1C  C066  F041         	movff	lroundf@x,roundf@x
  3104  004B20  C067  F042         	movff	lroundf@x+1,roundf@x+1
  3105  004B24  C068  F043         	movff	lroundf@x+2,roundf@x+2
  3106  004B28  C069  F044         	movff	lroundf@x+3,roundf@x+3
  3107  004B2C  ECEA  F011         	call	_roundf	;wreg free
  3108  004B30  C041  F05B         	movff	?_roundf,___fltol@f1
  3109  004B34  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  3110  004B38  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  3111  004B3C  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  3112  004B40  ECB3  F01E         	call	___fltol	;wreg free
  3113  004B44  C05B  F066         	movff	?___fltol,?_lroundf
  3114  004B48  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  3115  004B4C  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  3116  004B50  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  3117  004B54  0012               	return		;funcret
  3118  004B56                     __end_of_lroundf:
  3119                           	callstack 0
  3120                           
  3121 ;; *************** function _roundf *****************
  3122 ;; Defined at:
  3123 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  x               4   64[COMRAM] float 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  y               4   86[COMRAM] float 
  3128 ;;  u               4   82[COMRAM] struct .
  3129 ;;  e               2   76[COMRAM] int 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  4   64[COMRAM] float 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3139 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3140 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3141 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3142 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3143 ;;Total ram usage:       26 bytes
  3144 ;; Hardware stack levels used: 1
  3145 ;; Hardware stack levels required when called: 2
  3146 ;; This function calls:
  3147 ;;		___fladd
  3148 ;;		___flge
  3149 ;;		___flmul
  3150 ;;		___flneg
  3151 ;;		___flsub
  3152 ;; This function is called by:
  3153 ;;		_lroundf
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text7
  3158  0023D4                     __ptext7:
  3159                           	callstack 0
  3160  0023D4                     _roundf:
  3161                           	callstack 26
  3162  0023D4  C0E8  F053         	movff	roundf@F527,roundf@u
  3163  0023D8  C0E9  F054         	movff	roundf@F527+1,roundf@u+1
  3164  0023DC  C0EA  F055         	movff	roundf@F527+2,roundf@u+2
  3165  0023E0  C0EB  F056         	movff	roundf@F527+3,roundf@u+3
  3166  0023E4  C041  F053         	movff	roundf@x,roundf@u
  3167  0023E8  C042  F054         	movff	roundf@x+1,roundf@u+1
  3168  0023EC  C043  F055         	movff	roundf@x+2,roundf@u+2
  3169  0023F0  C044  F056         	movff	roundf@x+3,roundf@u+3
  3170  0023F4  C053  F045         	movff	roundf@u,??_roundf
  3171  0023F8  C054  F046         	movff	roundf@u+1,??_roundf+1
  3172  0023FC  C055  F047         	movff	roundf@u+2,??_roundf+2
  3173  002400  C056  F048         	movff	roundf@u+3,??_roundf+3
  3174  002404  0E18               	movlw	24
  3175  002406  EF0A  F012         	goto	u3990
  3176  00240A                     u3995:
  3177  00240A  90D8               	bcf	status,0,c
  3178  00240C  3248               	rrcf	(??_roundf+3)^0,f,c
  3179  00240E  3247               	rrcf	(??_roundf+2)^0,f,c
  3180  002410  3246               	rrcf	(??_roundf+1)^0,f,c
  3181  002412  3245               	rrcf	??_roundf^0,f,c
  3182  002414                     u3990:
  3183  002414  2EE8               	decfsz	wreg,f,c
  3184  002416  EF05  F012         	goto	u3995
  3185  00241A  5045               	movf	??_roundf^0,w,c
  3186  00241C  6E4D               	movwf	roundf@e^0,c
  3187  00241E  6A4E               	clrf	(roundf@e+1)^0,c
  3188  002420  BE4E               	btfsc	(roundf@e+1)^0,7,c
  3189  002422  EF1C  F012         	goto	u4001
  3190  002426  504E               	movf	(roundf@e+1)^0,w,c
  3191  002428  E109               	bnz	u4000
  3192  00242A  0E96               	movlw	150
  3193  00242C  5C4D               	subwf	roundf@e^0,w,c
  3194  00242E  A0D8               	btfss	status,0,c
  3195  002430  EF1C  F012         	goto	u4001
  3196  002434  EF1E  F012         	goto	u4000
  3197  002438                     u4001:
  3198  002438  EF28  F012         	goto	l4042
  3199  00243C                     u4000:
  3200  00243C  C041  F041         	movff	roundf@x,?_roundf
  3201  002440  C042  F042         	movff	roundf@x+1,?_roundf+1
  3202  002444  C043  F043         	movff	roundf@x+2,?_roundf+2
  3203  002448  C044  F044         	movff	roundf@x+3,?_roundf+3
  3204  00244C  EFC0  F013         	goto	l1393
  3205  002450                     l4042:
  3206  002450  C053  F045         	movff	roundf@u,??_roundf
  3207  002454  C054  F046         	movff	roundf@u+1,??_roundf+1
  3208  002458  C055  F047         	movff	roundf@u+2,??_roundf+2
  3209  00245C  C056  F048         	movff	roundf@u+3,??_roundf+3
  3210  002460  0E20               	movlw	32
  3211  002462  EF38  F012         	goto	u4010
  3212  002466                     u4015:
  3213  002466  90D8               	bcf	status,0,c
  3214  002468  3248               	rrcf	(??_roundf+3)^0,f,c
  3215  00246A  3247               	rrcf	(??_roundf+2)^0,f,c
  3216  00246C  3246               	rrcf	(??_roundf+1)^0,f,c
  3217  00246E  3245               	rrcf	??_roundf^0,f,c
  3218  002470                     u4010:
  3219  002470  2EE8               	decfsz	wreg,f,c
  3220  002472  EF33  F012         	goto	u4015
  3221  002476  5045               	movf	??_roundf^0,w,c
  3222  002478  1046               	iorwf	(??_roundf+1)^0,w,c
  3223  00247A  1047               	iorwf	(??_roundf+2)^0,w,c
  3224  00247C  1048               	iorwf	(??_roundf+3)^0,w,c
  3225  00247E  B4D8               	btfsc	status,2,c
  3226  002480  EF44  F012         	goto	u4021
  3227  002484  EF46  F012         	goto	u4020
  3228  002488                     u4021:
  3229  002488  EF58  F012         	goto	l4046
  3230  00248C                     u4020:
  3231  00248C  C041  F001         	movff	roundf@x,___flneg@f1
  3232  002490  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  3233  002494  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  3234  002498  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  3235  00249C  ECC8  F025         	call	___flneg	;wreg free
  3236  0024A0  C001  F041         	movff	?___flneg,roundf@x
  3237  0024A4  C002  F042         	movff	?___flneg+1,roundf@x+1
  3238  0024A8  C003  F043         	movff	?___flneg+2,roundf@x+2
  3239  0024AC  C004  F044         	movff	?___flneg+3,roundf@x+3
  3240  0024B0                     l4046:
  3241  0024B0  BE4E               	btfsc	(roundf@e+1)^0,7,c
  3242  0024B2  EF66  F012         	goto	u4030
  3243  0024B6  504E               	movf	(roundf@e+1)^0,w,c
  3244  0024B8  E107               	bnz	u4031
  3245  0024BA  0E7E               	movlw	126
  3246  0024BC  5C4D               	subwf	roundf@e^0,w,c
  3247  0024BE  B0D8               	btfsc	status,0,c
  3248  0024C0  EF64  F012         	goto	u4031
  3249  0024C4  EF66  F012         	goto	u4030
  3250  0024C8                     u4031:
  3251  0024C8  EF82  F012         	goto	l4052
  3252  0024CC                     u4030:
  3253  0024CC  C053  F028         	movff	roundf@u,___flmul@b
  3254  0024D0  C054  F029         	movff	roundf@u+1,___flmul@b+1
  3255  0024D4  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  3256  0024D8  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  3257  0024DC  0E00               	movlw	0
  3258  0024DE  6E2C               	movwf	___flmul@a^0,c
  3259  0024E0  0E00               	movlw	0
  3260  0024E2  6E2D               	movwf	(___flmul@a+1)^0,c
  3261  0024E4  0E00               	movlw	0
  3262  0024E6  6E2E               	movwf	(___flmul@a+2)^0,c
  3263  0024E8  0E00               	movlw	0
  3264  0024EA  6E2F               	movwf	(___flmul@a+3)^0,c
  3265  0024EC  ECD5  F00F         	call	___flmul	;wreg free
  3266  0024F0  C028  F041         	movff	?___flmul,?_roundf
  3267  0024F4  C029  F042         	movff	?___flmul+1,?_roundf+1
  3268  0024F8  C02A  F043         	movff	?___flmul+2,?_roundf+2
  3269  0024FC  C02B  F044         	movff	?___flmul+3,?_roundf+3
  3270  002500  EFC0  F013         	goto	l1393
  3271  002504                     l4052:
  3272  002504  0E00               	movlw	0
  3273  002506  6E05               	movwf	___fladd@a^0,c
  3274  002508  0E00               	movlw	0
  3275  00250A  6E06               	movwf	(___fladd@a+1)^0,c
  3276  00250C  0E00               	movlw	0
  3277  00250E  6E07               	movwf	(___fladd@a+2)^0,c
  3278  002510  0E4B               	movlw	75
  3279  002512  6E08               	movwf	(___fladd@a+3)^0,c
  3280  002514  C041  F001         	movff	roundf@x,___fladd@b
  3281  002518  C042  F002         	movff	roundf@x+1,___fladd@b+1
  3282  00251C  C043  F003         	movff	roundf@x+2,___fladd@b+2
  3283  002520  C044  F004         	movff	roundf@x+3,___fladd@b+3
  3284  002524  EC75  F00D         	call	___fladd	;wreg free
  3285  002528  C001  F04F         	movff	?___fladd,_roundf$2741
  3286  00252C  C002  F050         	movff	?___fladd+1,_roundf$2741+1
  3287  002530  C003  F051         	movff	?___fladd+2,_roundf$2741+2
  3288  002534  C004  F052         	movff	?___fladd+3,_roundf$2741+3
  3289  002538  0E00               	movlw	0
  3290  00253A  6E05               	movwf	___fladd@a^0,c
  3291  00253C  0E00               	movlw	0
  3292  00253E  6E06               	movwf	(___fladd@a+1)^0,c
  3293  002540  0E00               	movlw	0
  3294  002542  6E07               	movwf	(___fladd@a+2)^0,c
  3295  002544  0ECB               	movlw	203
  3296  002546  6E08               	movwf	(___fladd@a+3)^0,c
  3297  002548  C04F  F001         	movff	_roundf$2741,___fladd@b
  3298  00254C  C050  F002         	movff	_roundf$2741+1,___fladd@b+1
  3299  002550  C051  F003         	movff	_roundf$2741+2,___fladd@b+2
  3300  002554  C052  F004         	movff	_roundf$2741+3,___fladd@b+3
  3301  002558  EC75  F00D         	call	___fladd	;wreg free
  3302  00255C  C001  F049         	movff	?___fladd,_roundf$2742
  3303  002560  C002  F04A         	movff	?___fladd+1,_roundf$2742+1
  3304  002564  C003  F04B         	movff	?___fladd+2,_roundf$2742+2
  3305  002568  C004  F04C         	movff	?___fladd+3,_roundf$2742+3
  3306  00256C  C049  F011         	movff	_roundf$2742,___flsub@b
  3307  002570  C04A  F012         	movff	_roundf$2742+1,___flsub@b+1
  3308  002574  C04B  F013         	movff	_roundf$2742+2,___flsub@b+2
  3309  002578  C04C  F014         	movff	_roundf$2742+3,___flsub@b+3
  3310  00257C  C041  F015         	movff	roundf@x,___flsub@a
  3311  002580  C042  F016         	movff	roundf@x+1,___flsub@a+1
  3312  002584  C043  F017         	movff	roundf@x+2,___flsub@a+2
  3313  002588  C044  F018         	movff	roundf@x+3,___flsub@a+3
  3314  00258C  EC86  F024         	call	___flsub	;wreg free
  3315  002590  C011  F057         	movff	?___flsub,roundf@y
  3316  002594  C012  F058         	movff	?___flsub+1,roundf@y+1
  3317  002598  C013  F059         	movff	?___flsub+2,roundf@y+2
  3318  00259C  C014  F05A         	movff	?___flsub+3,roundf@y+3
  3319  0025A0  0E00               	movlw	0
  3320  0025A2  6E01               	movwf	___flge@ff1^0,c
  3321  0025A4  0E00               	movlw	0
  3322  0025A6  6E02               	movwf	(___flge@ff1+1)^0,c
  3323  0025A8  0E00               	movlw	0
  3324  0025AA  6E03               	movwf	(___flge@ff1+2)^0,c
  3325  0025AC  0E3F               	movlw	63
  3326  0025AE  6E04               	movwf	(___flge@ff1+3)^0,c
  3327  0025B0  C057  F005         	movff	roundf@y,___flge@ff2
  3328  0025B4  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  3329  0025B8  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  3330  0025BC  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  3331  0025C0  EC37  F01F         	call	___flge	;wreg free
  3332  0025C4  B0D8               	btfsc	status,0,c
  3333  0025C6  EFE7  F012         	goto	u4041
  3334  0025CA  EFE9  F012         	goto	u4040
  3335  0025CE                     u4041:
  3336  0025CE  EF1F  F013         	goto	l4056
  3337  0025D2                     u4040:
  3338  0025D2  C041  F005         	movff	roundf@x,___fladd@a
  3339  0025D6  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3340  0025DA  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3341  0025DE  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3342  0025E2  C057  F001         	movff	roundf@y,___fladd@b
  3343  0025E6  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3344  0025EA  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3345  0025EE  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3346  0025F2  EC75  F00D         	call	___fladd	;wreg free
  3347  0025F6  C001  F04F         	movff	?___fladd,_roundf$2741
  3348  0025FA  C002  F050         	movff	?___fladd+1,_roundf$2741+1
  3349  0025FE  C003  F051         	movff	?___fladd+2,_roundf$2741+2
  3350  002602  C004  F052         	movff	?___fladd+3,_roundf$2741+3
  3351  002606  C04F  F001         	movff	_roundf$2741,___fladd@b
  3352  00260A  C050  F002         	movff	_roundf$2741+1,___fladd@b+1
  3353  00260E  C051  F003         	movff	_roundf$2741+2,___fladd@b+2
  3354  002612  C052  F004         	movff	_roundf$2741+3,___fladd@b+3
  3355  002616  0E00               	movlw	0
  3356  002618  6E05               	movwf	___fladd@a^0,c
  3357  00261A  0E00               	movlw	0
  3358  00261C  6E06               	movwf	(___fladd@a+1)^0,c
  3359  00261E  0E80               	movlw	128
  3360  002620  6E07               	movwf	(___fladd@a+2)^0,c
  3361  002622  0EBF               	movlw	191
  3362  002624  6E08               	movwf	(___fladd@a+3)^0,c
  3363  002626  EC75  F00D         	call	___fladd	;wreg free
  3364  00262A  C001  F057         	movff	?___fladd,roundf@y
  3365  00262E  C002  F058         	movff	?___fladd+1,roundf@y+1
  3366  002632  C003  F059         	movff	?___fladd+2,roundf@y+2
  3367  002636  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3368  00263A  EF88  F013         	goto	l4062
  3369  00263E                     l4056:
  3370  00263E  0E00               	movlw	0
  3371  002640  6E01               	movwf	___flge@ff1^0,c
  3372  002642  0E00               	movlw	0
  3373  002644  6E02               	movwf	(___flge@ff1+1)^0,c
  3374  002646  0E00               	movlw	0
  3375  002648  6E03               	movwf	(___flge@ff1+2)^0,c
  3376  00264A  0EBF               	movlw	191
  3377  00264C  6E04               	movwf	(___flge@ff1+3)^0,c
  3378  00264E  C057  F005         	movff	roundf@y,___flge@ff2
  3379  002652  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  3380  002656  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  3381  00265A  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  3382  00265E  EC37  F01F         	call	___flge	;wreg free
  3383  002662  A0D8               	btfss	status,0,c
  3384  002664  EF36  F013         	goto	u4051
  3385  002668  EF38  F013         	goto	u4050
  3386  00266C                     u4051:
  3387  00266C  EF6E  F013         	goto	l4060
  3388  002670                     u4050:
  3389  002670  C041  F005         	movff	roundf@x,___fladd@a
  3390  002674  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3391  002678  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3392  00267C  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3393  002680  C057  F001         	movff	roundf@y,___fladd@b
  3394  002684  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3395  002688  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3396  00268C  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3397  002690  EC75  F00D         	call	___fladd	;wreg free
  3398  002694  C001  F04F         	movff	?___fladd,_roundf$2741
  3399  002698  C002  F050         	movff	?___fladd+1,_roundf$2741+1
  3400  00269C  C003  F051         	movff	?___fladd+2,_roundf$2741+2
  3401  0026A0  C004  F052         	movff	?___fladd+3,_roundf$2741+3
  3402  0026A4  C04F  F001         	movff	_roundf$2741,___fladd@b
  3403  0026A8  C050  F002         	movff	_roundf$2741+1,___fladd@b+1
  3404  0026AC  C051  F003         	movff	_roundf$2741+2,___fladd@b+2
  3405  0026B0  C052  F004         	movff	_roundf$2741+3,___fladd@b+3
  3406  0026B4  0E00               	movlw	0
  3407  0026B6  6E05               	movwf	___fladd@a^0,c
  3408  0026B8  0E00               	movlw	0
  3409  0026BA  6E06               	movwf	(___fladd@a+1)^0,c
  3410  0026BC  0E80               	movlw	128
  3411  0026BE  6E07               	movwf	(___fladd@a+2)^0,c
  3412  0026C0  0E3F               	movlw	63
  3413  0026C2  6E08               	movwf	(___fladd@a+3)^0,c
  3414  0026C4  EC75  F00D         	call	___fladd	;wreg free
  3415  0026C8  C001  F057         	movff	?___fladd,roundf@y
  3416  0026CC  C002  F058         	movff	?___fladd+1,roundf@y+1
  3417  0026D0  C003  F059         	movff	?___fladd+2,roundf@y+2
  3418  0026D4  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3419  0026D8  EF88  F013         	goto	l4062
  3420  0026DC                     l4060:
  3421  0026DC  C057  F001         	movff	roundf@y,___fladd@b
  3422  0026E0  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3423  0026E4  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3424  0026E8  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3425  0026EC  C041  F005         	movff	roundf@x,___fladd@a
  3426  0026F0  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3427  0026F4  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3428  0026F8  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3429  0026FC  EC75  F00D         	call	___fladd	;wreg free
  3430  002700  C001  F057         	movff	?___fladd,roundf@y
  3431  002704  C002  F058         	movff	?___fladd+1,roundf@y+1
  3432  002708  C003  F059         	movff	?___fladd+2,roundf@y+2
  3433  00270C  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3434  002710                     l4062:
  3435  002710  C053  F045         	movff	roundf@u,??_roundf
  3436  002714  C054  F046         	movff	roundf@u+1,??_roundf+1
  3437  002718  C055  F047         	movff	roundf@u+2,??_roundf+2
  3438  00271C  C056  F048         	movff	roundf@u+3,??_roundf+3
  3439  002720  0E20               	movlw	32
  3440  002722  EF98  F013         	goto	u4060
  3441  002726                     u4065:
  3442  002726  90D8               	bcf	status,0,c
  3443  002728  3248               	rrcf	(??_roundf+3)^0,f,c
  3444  00272A  3247               	rrcf	(??_roundf+2)^0,f,c
  3445  00272C  3246               	rrcf	(??_roundf+1)^0,f,c
  3446  00272E  3245               	rrcf	??_roundf^0,f,c
  3447  002730                     u4060:
  3448  002730  2EE8               	decfsz	wreg,f,c
  3449  002732  EF93  F013         	goto	u4065
  3450  002736  5045               	movf	??_roundf^0,w,c
  3451  002738  1046               	iorwf	(??_roundf+1)^0,w,c
  3452  00273A  1047               	iorwf	(??_roundf+2)^0,w,c
  3453  00273C  1048               	iorwf	(??_roundf+3)^0,w,c
  3454  00273E  B4D8               	btfsc	status,2,c
  3455  002740  EFA4  F013         	goto	u4071
  3456  002744  EFA6  F013         	goto	u4070
  3457  002748                     u4071:
  3458  002748  EFB8  F013         	goto	l4066
  3459  00274C                     u4070:
  3460  00274C  C057  F001         	movff	roundf@y,___flneg@f1
  3461  002750  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  3462  002754  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  3463  002758  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  3464  00275C  ECC8  F025         	call	___flneg	;wreg free
  3465  002760  C001  F057         	movff	?___flneg,roundf@y
  3466  002764  C002  F058         	movff	?___flneg+1,roundf@y+1
  3467  002768  C003  F059         	movff	?___flneg+2,roundf@y+2
  3468  00276C  C004  F05A         	movff	?___flneg+3,roundf@y+3
  3469  002770                     l4066:
  3470  002770  C057  F041         	movff	roundf@y,?_roundf
  3471  002774  C058  F042         	movff	roundf@y+1,?_roundf+1
  3472  002778  C059  F043         	movff	roundf@y+2,?_roundf+2
  3473  00277C  C05A  F044         	movff	roundf@y+3,?_roundf+3
  3474  002780                     l1393:
  3475  002780  0012               	return		;funcret
  3476  002782                     __end_of_roundf:
  3477                           	callstack 0
  3478                           
  3479 ;; *************** function ___flsub *****************
  3480 ;; Defined at:
  3481 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  b               4   16[COMRAM] float 
  3484 ;;  a               4   20[COMRAM] float 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  4   16[COMRAM] float 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3496 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3499 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3500 ;;Total ram usage:        8 bytes
  3501 ;; Hardware stack levels used: 1
  3502 ;; Hardware stack levels required when called: 1
  3503 ;; This function calls:
  3504 ;;		___fladd
  3505 ;; This function is called by:
  3506 ;;		_roundf
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text8
  3511  00490C                     __ptext8:
  3512                           	callstack 0
  3513  00490C                     ___flsub:
  3514                           	callstack 26
  3515  00490C  0E00               	movlw	0
  3516  00490E  1A15               	xorwf	___flsub@a^0,f,c
  3517  004910  0E00               	movlw	0
  3518  004912  1A16               	xorwf	(___flsub@a+1)^0,f,c
  3519  004914  0E00               	movlw	0
  3520  004916  1A17               	xorwf	(___flsub@a+2)^0,f,c
  3521  004918  0E80               	movlw	128
  3522  00491A  1A18               	xorwf	(___flsub@a+3)^0,f,c
  3523  00491C  C011  F001         	movff	___flsub@b,___fladd@b
  3524  004920  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  3525  004924  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  3526  004928  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  3527  00492C  C015  F005         	movff	___flsub@a,___fladd@a
  3528  004930  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  3529  004934  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  3530  004938  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  3531  00493C  EC75  F00D         	call	___fladd	;wreg free
  3532  004940  C001  F011         	movff	?___fladd,?___flsub
  3533  004944  C002  F012         	movff	?___fladd+1,?___flsub+1
  3534  004948  C003  F013         	movff	?___fladd+2,?___flsub+2
  3535  00494C  C004  F014         	movff	?___fladd+3,?___flsub+3
  3536  004950  0012               	return		;funcret
  3537  004952                     __end_of___flsub:
  3538                           	callstack 0
  3539                           
  3540 ;; *************** function ___fladd *****************
  3541 ;; Defined at:
  3542 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;  b               4    0[COMRAM] float 
  3545 ;;  a               4    4[COMRAM] float 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;  grs             1   15[COMRAM] unsigned char 
  3548 ;;  bexp            1   14[COMRAM] unsigned char 
  3549 ;;  aexp            1   13[COMRAM] unsigned char 
  3550 ;;  signs           1   12[COMRAM] unsigned char 
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  4    0[COMRAM] unsigned char 
  3553 ;; Registers used:
  3554 ;;		wreg, status,2, status,0
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3560 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3561 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3562 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3563 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3564 ;;Total ram usage:       16 bytes
  3565 ;; Hardware stack levels used: 1
  3566 ;; This function calls:
  3567 ;;		Nothing
  3568 ;; This function is called by:
  3569 ;;		___flsub
  3570 ;;		_roundf
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           	psect	text9
  3575  001AEA                     __ptext9:
  3576                           	callstack 0
  3577  001AEA                     ___fladd:
  3578                           	callstack 26
  3579  001AEA  5004               	movf	(___fladd@b+3)^0,w,c
  3580  001AEC  0B80               	andlw	128
  3581  001AEE  6E0D               	movwf	___fladd@signs^0,c
  3582  001AF0  5004               	movf	(___fladd@b+3)^0,w,c
  3583  001AF2  2404               	addwf	(___fladd@b+3)^0,w,c
  3584  001AF4  6E0F               	movwf	___fladd@bexp^0,c
  3585  001AF6  AE03               	btfss	(___fladd@b+2)^0,7,c
  3586  001AF8  EF80  F00D         	goto	u3091
  3587  001AFC  EF82  F00D         	goto	u3090
  3588  001B00                     u3091:
  3589  001B00  EF83  F00D         	goto	l3430
  3590  001B04                     u3090:
  3591  001B04  800F               	bsf	___fladd@bexp^0,0,c
  3592  001B06                     l3430:
  3593  001B06  500F               	movf	___fladd@bexp^0,w,c
  3594  001B08  B4D8               	btfsc	status,2,c
  3595  001B0A  EF89  F00D         	goto	u3101
  3596  001B0E  EF8B  F00D         	goto	u3100
  3597  001B12                     u3101:
  3598  001B12  EFA0  F00D         	goto	l3440
  3599  001B16                     u3100:
  3600  001B16  280F               	incf	___fladd@bexp^0,w,c
  3601  001B18  A4D8               	btfss	status,2,c
  3602  001B1A  EF91  F00D         	goto	u3111
  3603  001B1E  EF93  F00D         	goto	u3110
  3604  001B22                     u3111:
  3605  001B22  EF9B  F00D         	goto	l3436
  3606  001B26                     u3110:
  3607  001B26  0E00               	movlw	0
  3608  001B28  6E01               	movwf	___fladd@b^0,c
  3609  001B2A  0E00               	movlw	0
  3610  001B2C  6E02               	movwf	(___fladd@b+1)^0,c
  3611  001B2E  0E00               	movlw	0
  3612  001B30  6E03               	movwf	(___fladd@b+2)^0,c
  3613  001B32  0E00               	movlw	0
  3614  001B34  6E04               	movwf	(___fladd@b+3)^0,c
  3615  001B36                     l3436:
  3616  001B36  8E03               	bsf	(___fladd@b+2)^0,7,c
  3617  001B38  0E00               	movlw	0
  3618  001B3A  6E04               	movwf	(___fladd@b+3)^0,c
  3619  001B3C  EFA8  F00D         	goto	l3442
  3620  001B40                     l3440:
  3621  001B40  0E00               	movlw	0
  3622  001B42  6E01               	movwf	___fladd@b^0,c
  3623  001B44  0E00               	movlw	0
  3624  001B46  6E02               	movwf	(___fladd@b+1)^0,c
  3625  001B48  0E00               	movlw	0
  3626  001B4A  6E03               	movwf	(___fladd@b+2)^0,c
  3627  001B4C  0E00               	movlw	0
  3628  001B4E  6E04               	movwf	(___fladd@b+3)^0,c
  3629  001B50                     l3442:
  3630  001B50  5008               	movf	(___fladd@a+3)^0,w,c
  3631  001B52  0B80               	andlw	128
  3632  001B54  6E0E               	movwf	___fladd@aexp^0,c
  3633  001B56  500D               	movf	___fladd@signs^0,w,c
  3634  001B58  180E               	xorwf	___fladd@aexp^0,w,c
  3635  001B5A  B4D8               	btfsc	status,2,c
  3636  001B5C  EFB2  F00D         	goto	u3121
  3637  001B60  EFB4  F00D         	goto	u3120
  3638  001B64                     u3121:
  3639  001B64  EFB5  F00D         	goto	l3448
  3640  001B68                     u3120:
  3641  001B68  8C0D               	bsf	___fladd@signs^0,6,c
  3642  001B6A                     l3448:
  3643  001B6A  5008               	movf	(___fladd@a+3)^0,w,c
  3644  001B6C  2408               	addwf	(___fladd@a+3)^0,w,c
  3645  001B6E  6E0E               	movwf	___fladd@aexp^0,c
  3646  001B70  AE07               	btfss	(___fladd@a+2)^0,7,c
  3647  001B72  EFBD  F00D         	goto	u3131
  3648  001B76  EFBF  F00D         	goto	u3130
  3649  001B7A                     u3131:
  3650  001B7A  EFC0  F00D         	goto	l3454
  3651  001B7E                     u3130:
  3652  001B7E  800E               	bsf	___fladd@aexp^0,0,c
  3653  001B80                     l3454:
  3654  001B80  500E               	movf	___fladd@aexp^0,w,c
  3655  001B82  B4D8               	btfsc	status,2,c
  3656  001B84  EFC6  F00D         	goto	u3141
  3657  001B88  EFC8  F00D         	goto	u3140
  3658  001B8C                     u3141:
  3659  001B8C  EFDD  F00D         	goto	l3464
  3660  001B90                     u3140:
  3661  001B90  280E               	incf	___fladd@aexp^0,w,c
  3662  001B92  A4D8               	btfss	status,2,c
  3663  001B94  EFCE  F00D         	goto	u3151
  3664  001B98  EFD0  F00D         	goto	u3150
  3665  001B9C                     u3151:
  3666  001B9C  EFD8  F00D         	goto	l3460
  3667  001BA0                     u3150:
  3668  001BA0  0E00               	movlw	0
  3669  001BA2  6E05               	movwf	___fladd@a^0,c
  3670  001BA4  0E00               	movlw	0
  3671  001BA6  6E06               	movwf	(___fladd@a+1)^0,c
  3672  001BA8  0E00               	movlw	0
  3673  001BAA  6E07               	movwf	(___fladd@a+2)^0,c
  3674  001BAC  0E00               	movlw	0
  3675  001BAE  6E08               	movwf	(___fladd@a+3)^0,c
  3676  001BB0                     l3460:
  3677  001BB0  8E07               	bsf	(___fladd@a+2)^0,7,c
  3678  001BB2  0E00               	movlw	0
  3679  001BB4  6E08               	movwf	(___fladd@a+3)^0,c
  3680  001BB6  EFE5  F00D         	goto	l3466
  3681  001BBA                     l3464:
  3682  001BBA  0E00               	movlw	0
  3683  001BBC  6E05               	movwf	___fladd@a^0,c
  3684  001BBE  0E00               	movlw	0
  3685  001BC0  6E06               	movwf	(___fladd@a+1)^0,c
  3686  001BC2  0E00               	movlw	0
  3687  001BC4  6E07               	movwf	(___fladd@a+2)^0,c
  3688  001BC6  0E00               	movlw	0
  3689  001BC8  6E08               	movwf	(___fladd@a+3)^0,c
  3690  001BCA                     l3466:
  3691  001BCA  500F               	movf	___fladd@bexp^0,w,c
  3692  001BCC  5C0E               	subwf	___fladd@aexp^0,w,c
  3693  001BCE  B0D8               	btfsc	status,0,c
  3694  001BD0  EFEC  F00D         	goto	u3161
  3695  001BD4  EFEE  F00D         	goto	u3160
  3696  001BD8                     u3161:
  3697  001BD8  EF15  F00E         	goto	l3502
  3698  001BDC                     u3160:
  3699  001BDC  AC0D               	btfss	___fladd@signs^0,6,c
  3700  001BDE  EFF3  F00D         	goto	u3171
  3701  001BE2  EFF5  F00D         	goto	u3170
  3702  001BE6                     u3171:
  3703  001BE6  EFF7  F00D         	goto	l3472
  3704  001BEA                     u3170:
  3705  001BEA  0E80               	movlw	128
  3706  001BEC  1A0D               	xorwf	___fladd@signs^0,f,c
  3707  001BEE                     l3472:
  3708  001BEE  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  3709  001BF2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3710  001BF6  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  3711  001BFA  C001  F010         	movff	___fladd@b,___fladd@grs
  3712  001BFE  C005  F001         	movff	___fladd@a,___fladd@b
  3713  001C02  C010  F005         	movff	___fladd@grs,___fladd@a
  3714  001C06  C002  F010         	movff	___fladd@b+1,___fladd@grs
  3715  001C0A  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  3716  001C0E  C010  F006         	movff	___fladd@grs,___fladd@a+1
  3717  001C12  C003  F010         	movff	___fladd@b+2,___fladd@grs
  3718  001C16  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  3719  001C1A  C010  F007         	movff	___fladd@grs,___fladd@a+2
  3720  001C1E  C004  F010         	movff	___fladd@b+3,___fladd@grs
  3721  001C22  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  3722  001C26  C010  F008         	movff	___fladd@grs,___fladd@a+3
  3723  001C2A                     l3502:
  3724  001C2A  0E00               	movlw	0
  3725  001C2C  6E10               	movwf	___fladd@grs^0,c
  3726  001C2E  500F               	movf	___fladd@bexp^0,w,c
  3727  001C30  C00E  F009         	movff	___fladd@aexp,??___fladd
  3728  001C34  6A0A               	clrf	(??___fladd+1)^0,c
  3729  001C36  5E09               	subwf	??___fladd^0,f,c
  3730  001C38  0E00               	movlw	0
  3731  001C3A  5A0A               	subwfb	(??___fladd+1)^0,f,c
  3732  001C3C  BE0A               	btfsc	(??___fladd+1)^0,7,c
  3733  001C3E  EF2A  F00E         	goto	u3181
  3734  001C42  500A               	movf	(??___fladd+1)^0,w,c
  3735  001C44  E109               	bnz	u3180
  3736  001C46  0E1A               	movlw	26
  3737  001C48  5C09               	subwf	??___fladd^0,w,c
  3738  001C4A  A0D8               	btfss	status,0,c
  3739  001C4C  EF2A  F00E         	goto	u3181
  3740  001C50  EF2C  F00E         	goto	u3180
  3741  001C54                     u3181:
  3742  001C54  EF63  F00E         	goto	l1129
  3743  001C58                     u3180:
  3744  001C58  5001               	movf	___fladd@b^0,w,c
  3745  001C5A  1002               	iorwf	(___fladd@b+1)^0,w,c
  3746  001C5C  1003               	iorwf	(___fladd@b+2)^0,w,c
  3747  001C5E  1004               	iorwf	(___fladd@b+3)^0,w,c
  3748  001C60  A4D8               	btfss	status,2,c
  3749  001C62  EF35  F00E         	goto	u3191
  3750  001C66  EF38  F00E         	goto	u3190
  3751  001C6A                     u3191:
  3752  001C6A  0E01               	movlw	1
  3753  001C6C  EF39  F00E         	goto	u3200
  3754  001C70                     u3190:
  3755  001C70  0E00               	movlw	0
  3756  001C72                     u3200:
  3757  001C72  6E10               	movwf	___fladd@grs^0,c
  3758  001C74  0E00               	movlw	0
  3759  001C76  6E01               	movwf	___fladd@b^0,c
  3760  001C78  0E00               	movlw	0
  3761  001C7A  6E02               	movwf	(___fladd@b+1)^0,c
  3762  001C7C  0E00               	movlw	0
  3763  001C7E  6E03               	movwf	(___fladd@b+2)^0,c
  3764  001C80  0E00               	movlw	0
  3765  001C82  6E04               	movwf	(___fladd@b+3)^0,c
  3766  001C84  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3767  001C88  EF6C  F00E         	goto	l1128
  3768  001C8C                     l1130:
  3769  001C8C  A010               	btfss	___fladd@grs^0,0,c
  3770  001C8E  EF4B  F00E         	goto	u3211
  3771  001C92  EF4D  F00E         	goto	u3210
  3772  001C96                     u3211:
  3773  001C96  EF53  F00E         	goto	l3514
  3774  001C9A                     u3210:
  3775  001C9A  90D8               	bcf	status,0,c
  3776  001C9C  3010               	rrcf	___fladd@grs^0,w,c
  3777  001C9E  0901               	iorlw	1
  3778  001CA0  6E10               	movwf	___fladd@grs^0,c
  3779  001CA2  EF55  F00E         	goto	l3516
  3780  001CA6                     l3514:
  3781  001CA6  90D8               	bcf	status,0,c
  3782  001CA8  3210               	rrcf	___fladd@grs^0,f,c
  3783  001CAA                     l3516:
  3784  001CAA  A001               	btfss	___fladd@b^0,0,c
  3785  001CAC  EF5A  F00E         	goto	u3221
  3786  001CB0  EF5C  F00E         	goto	u3220
  3787  001CB4                     u3221:
  3788  001CB4  EF5D  F00E         	goto	l3520
  3789  001CB8                     u3220:
  3790  001CB8  8E10               	bsf	___fladd@grs^0,7,c
  3791  001CBA                     l3520:
  3792  001CBA  3404               	rlcf	(___fladd@b+3)^0,w,c
  3793  001CBC  3204               	rrcf	(___fladd@b+3)^0,f,c
  3794  001CBE  3203               	rrcf	(___fladd@b+2)^0,f,c
  3795  001CC0  3202               	rrcf	(___fladd@b+1)^0,f,c
  3796  001CC2  3201               	rrcf	___fladd@b^0,f,c
  3797  001CC4  2A0F               	incf	___fladd@bexp^0,f,c
  3798  001CC6                     l1129:
  3799  001CC6  500E               	movf	___fladd@aexp^0,w,c
  3800  001CC8  5C0F               	subwf	___fladd@bexp^0,w,c
  3801  001CCA  A0D8               	btfss	status,0,c
  3802  001CCC  EF6A  F00E         	goto	u3231
  3803  001CD0  EF6C  F00E         	goto	u3230
  3804  001CD4                     u3231:
  3805  001CD4  EF46  F00E         	goto	l1130
  3806  001CD8                     u3230:
  3807  001CD8                     l1128:
  3808  001CD8  BC0D               	btfsc	___fladd@signs^0,6,c
  3809  001CDA  EF71  F00E         	goto	u3241
  3810  001CDE  EF73  F00E         	goto	u3240
  3811  001CE2                     u3241:
  3812  001CE2  EFB3  F00E         	goto	l3548
  3813  001CE6                     u3240:
  3814  001CE6  500F               	movf	___fladd@bexp^0,w,c
  3815  001CE8  A4D8               	btfss	status,2,c
  3816  001CEA  EF79  F00E         	goto	u3251
  3817  001CEE  EF7B  F00E         	goto	u3250
  3818  001CF2                     u3251:
  3819  001CF2  EF85  F00E         	goto	l3530
  3820  001CF6                     u3250:
  3821  001CF6  0E00               	movlw	0
  3822  001CF8  6E01               	movwf	?___fladd^0,c
  3823  001CFA  0E00               	movlw	0
  3824  001CFC  6E02               	movwf	(?___fladd+1)^0,c
  3825  001CFE  0E00               	movlw	0
  3826  001D00  6E03               	movwf	(?___fladd+2)^0,c
  3827  001D02  0E00               	movlw	0
  3828  001D04  6E04               	movwf	(?___fladd+3)^0,c
  3829  001D06  EFD4  F00F         	goto	l1137
  3830  001D0A                     l3530:
  3831  001D0A  5005               	movf	___fladd@a^0,w,c
  3832  001D0C  2601               	addwf	___fladd@b^0,f,c
  3833  001D0E  5006               	movf	(___fladd@a+1)^0,w,c
  3834  001D10  2202               	addwfc	(___fladd@b+1)^0,f,c
  3835  001D12  5007               	movf	(___fladd@a+2)^0,w,c
  3836  001D14  2203               	addwfc	(___fladd@b+2)^0,f,c
  3837  001D16  5008               	movf	(___fladd@a+3)^0,w,c
  3838  001D18  2204               	addwfc	(___fladd@b+3)^0,f,c
  3839  001D1A  A004               	btfss	(___fladd@b+3)^0,0,c
  3840  001D1C  EF92  F00E         	goto	u3261
  3841  001D20  EF94  F00E         	goto	u3260
  3842  001D24                     u3261:
  3843  001D24  EF40  F00F         	goto	l3584
  3844  001D28                     u3260:
  3845  001D28  A010               	btfss	___fladd@grs^0,0,c
  3846  001D2A  EF99  F00E         	goto	u3271
  3847  001D2E  EF9B  F00E         	goto	u3270
  3848  001D32                     u3271:
  3849  001D32  EFA1  F00E         	goto	l3538
  3850  001D36                     u3270:
  3851  001D36  90D8               	bcf	status,0,c
  3852  001D38  3010               	rrcf	___fladd@grs^0,w,c
  3853  001D3A  0901               	iorlw	1
  3854  001D3C  6E10               	movwf	___fladd@grs^0,c
  3855  001D3E  EFA3  F00E         	goto	l3540
  3856  001D42                     l3538:
  3857  001D42  90D8               	bcf	status,0,c
  3858  001D44  3210               	rrcf	___fladd@grs^0,f,c
  3859  001D46                     l3540:
  3860  001D46  A001               	btfss	___fladd@b^0,0,c
  3861  001D48  EFA8  F00E         	goto	u3281
  3862  001D4C  EFAA  F00E         	goto	u3280
  3863  001D50                     u3281:
  3864  001D50  EFAB  F00E         	goto	l3544
  3865  001D54                     u3280:
  3866  001D54  8E10               	bsf	___fladd@grs^0,7,c
  3867  001D56                     l3544:
  3868  001D56  3404               	rlcf	(___fladd@b+3)^0,w,c
  3869  001D58  3204               	rrcf	(___fladd@b+3)^0,f,c
  3870  001D5A  3203               	rrcf	(___fladd@b+2)^0,f,c
  3871  001D5C  3202               	rrcf	(___fladd@b+1)^0,f,c
  3872  001D5E  3201               	rrcf	___fladd@b^0,f,c
  3873  001D60  2A0F               	incf	___fladd@bexp^0,f,c
  3874  001D62  EF40  F00F         	goto	l3584
  3875  001D66                     l3548:
  3876  001D66  5005               	movf	___fladd@a^0,w,c
  3877  001D68  5C01               	subwf	___fladd@b^0,w,c
  3878  001D6A  5006               	movf	(___fladd@a+1)^0,w,c
  3879  001D6C  5802               	subwfb	(___fladd@b+1)^0,w,c
  3880  001D6E  5007               	movf	(___fladd@a+2)^0,w,c
  3881  001D70  5803               	subwfb	(___fladd@b+2)^0,w,c
  3882  001D72  5004               	movf	(___fladd@b+3)^0,w,c
  3883  001D74  0A80               	xorlw	128
  3884  001D76  6E09               	movwf	??___fladd^0,c
  3885  001D78  5008               	movf	(___fladd@a+3)^0,w,c
  3886  001D7A  0A80               	xorlw	128
  3887  001D7C  5809               	subwfb	??___fladd^0,w,c
  3888  001D7E  B0D8               	btfsc	status,0,c
  3889  001D80  EFC4  F00E         	goto	u3291
  3890  001D84  EFC6  F00E         	goto	u3290
  3891  001D88                     u3291:
  3892  001D88  EFF1  F00E         	goto	l3558
  3893  001D8C                     u3290:
  3894  001D8C  5001               	movf	___fladd@b^0,w,c
  3895  001D8E  5C05               	subwf	___fladd@a^0,w,c
  3896  001D90  6E09               	movwf	??___fladd^0,c
  3897  001D92  5002               	movf	(___fladd@b+1)^0,w,c
  3898  001D94  5806               	subwfb	(___fladd@a+1)^0,w,c
  3899  001D96  6E0A               	movwf	(??___fladd+1)^0,c
  3900  001D98  5003               	movf	(___fladd@b+2)^0,w,c
  3901  001D9A  5807               	subwfb	(___fladd@a+2)^0,w,c
  3902  001D9C  6E0B               	movwf	(??___fladd+2)^0,c
  3903  001D9E  5004               	movf	(___fladd@b+3)^0,w,c
  3904  001DA0  5808               	subwfb	(___fladd@a+3)^0,w,c
  3905  001DA2  6E0C               	movwf	(??___fladd+3)^0,c
  3906  001DA4  0EFF               	movlw	255
  3907  001DA6  2409               	addwf	??___fladd^0,w,c
  3908  001DA8  6E01               	movwf	___fladd@b^0,c
  3909  001DAA  0EFF               	movlw	255
  3910  001DAC  200A               	addwfc	(??___fladd+1)^0,w,c
  3911  001DAE  6E02               	movwf	(___fladd@b+1)^0,c
  3912  001DB0  0EFF               	movlw	255
  3913  001DB2  200B               	addwfc	(??___fladd+2)^0,w,c
  3914  001DB4  6E03               	movwf	(___fladd@b+2)^0,c
  3915  001DB6  0EFF               	movlw	255
  3916  001DB8  200C               	addwfc	(??___fladd+3)^0,w,c
  3917  001DBA  6E04               	movwf	(___fladd@b+3)^0,c
  3918  001DBC  0E80               	movlw	128
  3919  001DBE  1A0D               	xorwf	___fladd@signs^0,f,c
  3920  001DC0  6C10               	negf	___fladd@grs^0,c
  3921  001DC2  5010               	movf	___fladd@grs^0,w,c
  3922  001DC4  A4D8               	btfss	status,2,c
  3923  001DC6  EFE7  F00E         	goto	u3301
  3924  001DCA  EFE9  F00E         	goto	u3300
  3925  001DCE                     u3301:
  3926  001DCE  EFF9  F00E         	goto	l1145
  3927  001DD2                     u3300:
  3928  001DD2  0E01               	movlw	1
  3929  001DD4  2601               	addwf	___fladd@b^0,f,c
  3930  001DD6  0E00               	movlw	0
  3931  001DD8  2202               	addwfc	(___fladd@b+1)^0,f,c
  3932  001DDA  2203               	addwfc	(___fladd@b+2)^0,f,c
  3933  001DDC  2204               	addwfc	(___fladd@b+3)^0,f,c
  3934  001DDE  EFF9  F00E         	goto	l1145
  3935  001DE2                     l3558:
  3936  001DE2  5005               	movf	___fladd@a^0,w,c
  3937  001DE4  5E01               	subwf	___fladd@b^0,f,c
  3938  001DE6  5006               	movf	(___fladd@a+1)^0,w,c
  3939  001DE8  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3940  001DEA  5007               	movf	(___fladd@a+2)^0,w,c
  3941  001DEC  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3942  001DEE  5008               	movf	(___fladd@a+3)^0,w,c
  3943  001DF0  5A04               	subwfb	(___fladd@b+3)^0,f,c
  3944  001DF2                     l1145:
  3945  001DF2  5001               	movf	___fladd@b^0,w,c
  3946  001DF4  1002               	iorwf	(___fladd@b+1)^0,w,c
  3947  001DF6  1003               	iorwf	(___fladd@b+2)^0,w,c
  3948  001DF8  1004               	iorwf	(___fladd@b+3)^0,w,c
  3949  001DFA  A4D8               	btfss	status,2,c
  3950  001DFC  EF02  F00F         	goto	u3311
  3951  001E00  EF04  F00F         	goto	u3310
  3952  001E04                     u3311:
  3953  001E04  EF39  F00F         	goto	l3582
  3954  001E08                     u3310:
  3955  001E08  5010               	movf	___fladd@grs^0,w,c
  3956  001E0A  A4D8               	btfss	status,2,c
  3957  001E0C  EF0A  F00F         	goto	u3321
  3958  001E10  EF0C  F00F         	goto	u3320
  3959  001E14                     u3321:
  3960  001E14  EF39  F00F         	goto	l3582
  3961  001E18                     u3320:
  3962  001E18  0E00               	movlw	0
  3963  001E1A  6E01               	movwf	?___fladd^0,c
  3964  001E1C  0E00               	movlw	0
  3965  001E1E  6E02               	movwf	(?___fladd+1)^0,c
  3966  001E20  0E00               	movlw	0
  3967  001E22  6E03               	movwf	(?___fladd+2)^0,c
  3968  001E24  0E00               	movlw	0
  3969  001E26  6E04               	movwf	(?___fladd+3)^0,c
  3970  001E28  EFD4  F00F         	goto	l1137
  3971  001E2C                     l3566:
  3972  001E2C  90D8               	bcf	status,0,c
  3973  001E2E  3601               	rlcf	___fladd@b^0,f,c
  3974  001E30  3602               	rlcf	(___fladd@b+1)^0,f,c
  3975  001E32  3603               	rlcf	(___fladd@b+2)^0,f,c
  3976  001E34  3604               	rlcf	(___fladd@b+3)^0,f,c
  3977  001E36  AE10               	btfss	___fladd@grs^0,7,c
  3978  001E38  EF20  F00F         	goto	u3331
  3979  001E3C  EF22  F00F         	goto	u3330
  3980  001E40                     u3331:
  3981  001E40  EF23  F00F         	goto	l3572
  3982  001E44                     u3330:
  3983  001E44  8001               	bsf	___fladd@b^0,0,c
  3984  001E46                     l3572:
  3985  001E46  A010               	btfss	___fladd@grs^0,0,c
  3986  001E48  EF28  F00F         	goto	u3341
  3987  001E4C  EF2A  F00F         	goto	u3340
  3988  001E50                     u3341:
  3989  001E50  EF2E  F00F         	goto	l3576
  3990  001E54                     u3340:
  3991  001E54  80D8               	bsf	status,0,c
  3992  001E56  3610               	rlcf	___fladd@grs^0,f,c
  3993  001E58  EF30  F00F         	goto	l3578
  3994  001E5C                     l3576:
  3995  001E5C  90D8               	bcf	status,0,c
  3996  001E5E  3610               	rlcf	___fladd@grs^0,f,c
  3997  001E60                     l3578:
  3998  001E60  500F               	movf	___fladd@bexp^0,w,c
  3999  001E62  B4D8               	btfsc	status,2,c
  4000  001E64  EF36  F00F         	goto	u3351
  4001  001E68  EF38  F00F         	goto	u3350
  4002  001E6C                     u3351:
  4003  001E6C  EF39  F00F         	goto	l3582
  4004  001E70                     u3350:
  4005  001E70  060F               	decf	___fladd@bexp^0,f,c
  4006  001E72                     l3582:
  4007  001E72  AE03               	btfss	(___fladd@b+2)^0,7,c
  4008  001E74  EF3E  F00F         	goto	u3361
  4009  001E78  EF40  F00F         	goto	u3360
  4010  001E7C                     u3361:
  4011  001E7C  EF16  F00F         	goto	l3566
  4012  001E80                     u3360:
  4013  001E80                     l3584:
  4014  001E80  0E00               	movlw	0
  4015  001E82  6E0E               	movwf	___fladd@aexp^0,c
  4016  001E84  AE10               	btfss	___fladd@grs^0,7,c
  4017  001E86  EF47  F00F         	goto	u3371
  4018  001E8A  EF49  F00F         	goto	u3370
  4019  001E8E                     u3371:
  4020  001E8E  EF61  F00F         	goto	l1154
  4021  001E92                     u3370:
  4022  001E92  C010  F009         	movff	___fladd@grs,??___fladd
  4023  001E96  0E7F               	movlw	127
  4024  001E98  1609               	andwf	??___fladd^0,f,c
  4025  001E9A  B4D8               	btfsc	status,2,c
  4026  001E9C  EF52  F00F         	goto	u3381
  4027  001EA0  EF54  F00F         	goto	u3380
  4028  001EA4                     u3381:
  4029  001EA4  EF58  F00F         	goto	l1155
  4030  001EA8                     u3380:
  4031  001EA8                     l3590:
  4032  001EA8  0E01               	movlw	1
  4033  001EAA  6E0E               	movwf	___fladd@aexp^0,c
  4034  001EAC  EF61  F00F         	goto	l1154
  4035  001EB0                     l1155:
  4036  001EB0  A001               	btfss	___fladd@b^0,0,c
  4037  001EB2  EF5D  F00F         	goto	u3391
  4038  001EB6  EF5F  F00F         	goto	u3390
  4039  001EBA                     u3391:
  4040  001EBA  EF61  F00F         	goto	l1154
  4041  001EBE                     u3390:
  4042  001EBE  EF54  F00F         	goto	l3590
  4043  001EC2                     l1154:
  4044  001EC2  500E               	movf	___fladd@aexp^0,w,c
  4045  001EC4  B4D8               	btfsc	status,2,c
  4046  001EC6  EF67  F00F         	goto	u3401
  4047  001ECA  EF69  F00F         	goto	u3400
  4048  001ECE                     u3401:
  4049  001ECE  EF94  F00F         	goto	l3602
  4050  001ED2                     u3400:
  4051  001ED2  0E01               	movlw	1
  4052  001ED4  2601               	addwf	___fladd@b^0,f,c
  4053  001ED6  0E00               	movlw	0
  4054  001ED8  2202               	addwfc	(___fladd@b+1)^0,f,c
  4055  001EDA  2203               	addwfc	(___fladd@b+2)^0,f,c
  4056  001EDC  2204               	addwfc	(___fladd@b+3)^0,f,c
  4057  001EDE  A004               	btfss	(___fladd@b+3)^0,0,c
  4058  001EE0  EF74  F00F         	goto	u3411
  4059  001EE4  EF76  F00F         	goto	u3410
  4060  001EE8                     u3411:
  4061  001EE8  EF94  F00F         	goto	l3602
  4062  001EEC                     u3410:
  4063  001EEC  C001  F009         	movff	___fladd@b,??___fladd
  4064  001EF0  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4065  001EF4  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4066  001EF8  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4067  001EFC  340C               	rlcf	(??___fladd+3)^0,w,c
  4068  001EFE  320C               	rrcf	(??___fladd+3)^0,f,c
  4069  001F00  320B               	rrcf	(??___fladd+2)^0,f,c
  4070  001F02  320A               	rrcf	(??___fladd+1)^0,f,c
  4071  001F04  3209               	rrcf	??___fladd^0,f,c
  4072  001F06  C009  F001         	movff	??___fladd,___fladd@b
  4073  001F0A  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4074  001F0E  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4075  001F12  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4076  001F16  280F               	incf	___fladd@bexp^0,w,c
  4077  001F18  B4D8               	btfsc	status,2,c
  4078  001F1A  EF91  F00F         	goto	u3421
  4079  001F1E  EF93  F00F         	goto	u3420
  4080  001F22                     u3421:
  4081  001F22  EF94  F00F         	goto	l3602
  4082  001F26                     u3420:
  4083  001F26  2A0F               	incf	___fladd@bexp^0,f,c
  4084  001F28                     l3602:
  4085  001F28  280F               	incf	___fladd@bexp^0,w,c
  4086  001F2A  B4D8               	btfsc	status,2,c
  4087  001F2C  EF9A  F00F         	goto	u3431
  4088  001F30  EF9C  F00F         	goto	u3430
  4089  001F34                     u3431:
  4090  001F34  EFA4  F00F         	goto	l3606
  4091  001F38                     u3430:
  4092  001F38  500F               	movf	___fladd@bexp^0,w,c
  4093  001F3A  A4D8               	btfss	status,2,c
  4094  001F3C  EFA2  F00F         	goto	u3441
  4095  001F40  EFA4  F00F         	goto	u3440
  4096  001F44                     u3441:
  4097  001F44  EFB6  F00F         	goto	l3610
  4098  001F48                     u3440:
  4099  001F48                     l3606:
  4100  001F48  0E00               	movlw	0
  4101  001F4A  6E01               	movwf	___fladd@b^0,c
  4102  001F4C  0E00               	movlw	0
  4103  001F4E  6E02               	movwf	(___fladd@b+1)^0,c
  4104  001F50  0E00               	movlw	0
  4105  001F52  6E03               	movwf	(___fladd@b+2)^0,c
  4106  001F54  0E00               	movlw	0
  4107  001F56  6E04               	movwf	(___fladd@b+3)^0,c
  4108  001F58  500F               	movf	___fladd@bexp^0,w,c
  4109  001F5A  A4D8               	btfss	status,2,c
  4110  001F5C  EFB2  F00F         	goto	u3451
  4111  001F60  EFB4  F00F         	goto	u3450
  4112  001F64                     u3451:
  4113  001F64  EFB6  F00F         	goto	l3610
  4114  001F68                     u3450:
  4115  001F68  0E00               	movlw	0
  4116  001F6A  6E0D               	movwf	___fladd@signs^0,c
  4117  001F6C                     l3610:
  4118  001F6C  A00F               	btfss	___fladd@bexp^0,0,c
  4119  001F6E  EFBB  F00F         	goto	u3461
  4120  001F72  EFBD  F00F         	goto	u3460
  4121  001F76                     u3461:
  4122  001F76  EFC0  F00F         	goto	l3614
  4123  001F7A                     u3460:
  4124  001F7A  8E03               	bsf	(___fladd@b+2)^0,7,c
  4125  001F7C  EFC1  F00F         	goto	l3616
  4126  001F80                     l3614:
  4127  001F80  9E03               	bcf	(___fladd@b+2)^0,7,c
  4128  001F82                     l3616:
  4129  001F82  90D8               	bcf	status,0,c
  4130  001F84  300F               	rrcf	___fladd@bexp^0,w,c
  4131  001F86  6E04               	movwf	(___fladd@b+3)^0,c
  4132  001F88  AE0D               	btfss	___fladd@signs^0,7,c
  4133  001F8A  EFC9  F00F         	goto	u3471
  4134  001F8E  EFCB  F00F         	goto	u3470
  4135  001F92                     u3471:
  4136  001F92  EFCC  F00F         	goto	l3622
  4137  001F96                     u3470:
  4138  001F96  8E04               	bsf	(___fladd@b+3)^0,7,c
  4139  001F98                     l3622:
  4140  001F98  C001  F001         	movff	___fladd@b,?___fladd
  4141  001F9C  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4142  001FA0  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4143  001FA4  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4144  001FA8                     l1137:
  4145  001FA8  0012               	return		;funcret
  4146  001FAA                     __end_of___fladd:
  4147                           	callstack 0
  4148                           
  4149 ;; *************** function ___flneg *****************
  4150 ;; Defined at:
  4151 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;  f1              4    0[COMRAM] unsigned char 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;		None
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  4    0[COMRAM] unsigned char 
  4158 ;; Registers used:
  4159 ;;		wreg, status,2, status,0
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4165 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4168 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4169 ;;Total ram usage:        4 bytes
  4170 ;; Hardware stack levels used: 1
  4171 ;; This function calls:
  4172 ;;		Nothing
  4173 ;; This function is called by:
  4174 ;;		_roundf
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text10
  4179  004B90                     __ptext10:
  4180                           	callstack 0
  4181  004B90                     ___flneg:
  4182                           	callstack 27
  4183  004B90  5001               	movf	___flneg@f1^0,w,c
  4184  004B92  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4185  004B94  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4186  004B96  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4187  004B98  B4D8               	btfsc	status,2,c
  4188  004B9A  EFD1  F025         	goto	u3831
  4189  004B9E  EFD3  F025         	goto	u3830
  4190  004BA2                     u3831:
  4191  004BA2  EFDB  F025         	goto	l3886
  4192  004BA6                     u3830:
  4193  004BA6  0E00               	movlw	0
  4194  004BA8  1A01               	xorwf	___flneg@f1^0,f,c
  4195  004BAA  0E00               	movlw	0
  4196  004BAC  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4197  004BAE  0E00               	movlw	0
  4198  004BB0  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4199  004BB2  0E80               	movlw	128
  4200  004BB4  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4201  004BB6                     l3886:
  4202  004BB6  C001  F001         	movff	___flneg@f1,?___flneg
  4203  004BBA  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4204  004BBE  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4205  004BC2  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4206  004BC6  0012               	return		;funcret
  4207  004BC8                     __end_of___flneg:
  4208                           	callstack 0
  4209                           
  4210 ;; *************** function ___flmul *****************
  4211 ;; Defined at:
  4212 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;  b               4   39[COMRAM] unsigned char 
  4215 ;;  a               4   43[COMRAM] unsigned char 
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  prod            4   58[COMRAM] struct .
  4218 ;;  grs             4   52[COMRAM] unsigned long 
  4219 ;;  temp            2   62[COMRAM] struct .
  4220 ;;  bexp            1   57[COMRAM] unsigned char 
  4221 ;;  aexp            1   56[COMRAM] unsigned char 
  4222 ;;  sign            1   51[COMRAM] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  4   39[COMRAM] unsigned char 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0, prodl, prodh
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4232 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4233 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4234 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4235 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4236 ;;Total ram usage:       25 bytes
  4237 ;; Hardware stack levels used: 1
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		_detect_color
  4242 ;;		_roundf
  4243 ;;		_check_color_reading
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           	psect	text11
  4248  001FAA                     __ptext11:
  4249                           	callstack 0
  4250  001FAA                     ___flmul:
  4251                           	callstack 27
  4252  001FAA  502B               	movf	(___flmul@b+3)^0,w,c
  4253  001FAC  0B80               	andlw	128
  4254  001FAE  6E34               	movwf	___flmul@sign^0,c
  4255  001FB0  502B               	movf	(___flmul@b+3)^0,w,c
  4256  001FB2  242B               	addwf	(___flmul@b+3)^0,w,c
  4257  001FB4  6E3A               	movwf	___flmul@bexp^0,c
  4258  001FB6  AE2A               	btfss	(___flmul@b+2)^0,7,c
  4259  001FB8  EFE0  F00F         	goto	u3591
  4260  001FBC  EFE2  F00F         	goto	u3590
  4261  001FC0                     u3591:
  4262  001FC0  EFE3  F00F         	goto	l3730
  4263  001FC4                     u3590:
  4264  001FC4  803A               	bsf	___flmul@bexp^0,0,c
  4265  001FC6                     l3730:
  4266  001FC6  503A               	movf	___flmul@bexp^0,w,c
  4267  001FC8  B4D8               	btfsc	status,2,c
  4268  001FCA  EFE9  F00F         	goto	u3601
  4269  001FCE  EFEB  F00F         	goto	u3600
  4270  001FD2                     u3601:
  4271  001FD2  EFFE  F00F         	goto	l3738
  4272  001FD6                     u3600:
  4273  001FD6  283A               	incf	___flmul@bexp^0,w,c
  4274  001FD8  A4D8               	btfss	status,2,c
  4275  001FDA  EFF1  F00F         	goto	u3611
  4276  001FDE  EFF3  F00F         	goto	u3610
  4277  001FE2                     u3611:
  4278  001FE2  EFFB  F00F         	goto	l3736
  4279  001FE6                     u3610:
  4280  001FE6  0E00               	movlw	0
  4281  001FE8  6E28               	movwf	___flmul@b^0,c
  4282  001FEA  0E00               	movlw	0
  4283  001FEC  6E29               	movwf	(___flmul@b+1)^0,c
  4284  001FEE  0E00               	movlw	0
  4285  001FF0  6E2A               	movwf	(___flmul@b+2)^0,c
  4286  001FF2  0E00               	movlw	0
  4287  001FF4  6E2B               	movwf	(___flmul@b+3)^0,c
  4288  001FF6                     l3736:
  4289  001FF6  8E2A               	bsf	(___flmul@b+2)^0,7,c
  4290  001FF8  EF06  F010         	goto	l3740
  4291  001FFC                     l3738:
  4292  001FFC  0E00               	movlw	0
  4293  001FFE  6E28               	movwf	___flmul@b^0,c
  4294  002000  0E00               	movlw	0
  4295  002002  6E29               	movwf	(___flmul@b+1)^0,c
  4296  002004  0E00               	movlw	0
  4297  002006  6E2A               	movwf	(___flmul@b+2)^0,c
  4298  002008  0E00               	movlw	0
  4299  00200A  6E2B               	movwf	(___flmul@b+3)^0,c
  4300  00200C                     l3740:
  4301  00200C  502F               	movf	(___flmul@a+3)^0,w,c
  4302  00200E  0B80               	andlw	128
  4303  002010  1A34               	xorwf	___flmul@sign^0,f,c
  4304  002012  502F               	movf	(___flmul@a+3)^0,w,c
  4305  002014  242F               	addwf	(___flmul@a+3)^0,w,c
  4306  002016  6E39               	movwf	___flmul@aexp^0,c
  4307  002018  AE2E               	btfss	(___flmul@a+2)^0,7,c
  4308  00201A  EF11  F010         	goto	u3621
  4309  00201E  EF13  F010         	goto	u3620
  4310  002022                     u3621:
  4311  002022  EF14  F010         	goto	l3748
  4312  002026                     u3620:
  4313  002026  8039               	bsf	___flmul@aexp^0,0,c
  4314  002028                     l3748:
  4315  002028  5039               	movf	___flmul@aexp^0,w,c
  4316  00202A  B4D8               	btfsc	status,2,c
  4317  00202C  EF1A  F010         	goto	u3631
  4318  002030  EF1C  F010         	goto	u3630
  4319  002034                     u3631:
  4320  002034  EF2F  F010         	goto	l3756
  4321  002038                     u3630:
  4322  002038  2839               	incf	___flmul@aexp^0,w,c
  4323  00203A  A4D8               	btfss	status,2,c
  4324  00203C  EF22  F010         	goto	u3641
  4325  002040  EF24  F010         	goto	u3640
  4326  002044                     u3641:
  4327  002044  EF2C  F010         	goto	l3754
  4328  002048                     u3640:
  4329  002048  0E00               	movlw	0
  4330  00204A  6E2C               	movwf	___flmul@a^0,c
  4331  00204C  0E00               	movlw	0
  4332  00204E  6E2D               	movwf	(___flmul@a+1)^0,c
  4333  002050  0E00               	movlw	0
  4334  002052  6E2E               	movwf	(___flmul@a+2)^0,c
  4335  002054  0E00               	movlw	0
  4336  002056  6E2F               	movwf	(___flmul@a+3)^0,c
  4337  002058                     l3754:
  4338  002058  8E2E               	bsf	(___flmul@a+2)^0,7,c
  4339  00205A  EF37  F010         	goto	l1214
  4340  00205E                     l3756:
  4341  00205E  0E00               	movlw	0
  4342  002060  6E2C               	movwf	___flmul@a^0,c
  4343  002062  0E00               	movlw	0
  4344  002064  6E2D               	movwf	(___flmul@a+1)^0,c
  4345  002066  0E00               	movlw	0
  4346  002068  6E2E               	movwf	(___flmul@a+2)^0,c
  4347  00206A  0E00               	movlw	0
  4348  00206C  6E2F               	movwf	(___flmul@a+3)^0,c
  4349  00206E                     l1214:
  4350  00206E  5039               	movf	___flmul@aexp^0,w,c
  4351  002070  B4D8               	btfsc	status,2,c
  4352  002072  EF3D  F010         	goto	u3651
  4353  002076  EF3F  F010         	goto	u3650
  4354  00207A                     u3651:
  4355  00207A  EF47  F010         	goto	l3760
  4356  00207E                     u3650:
  4357  00207E  503A               	movf	___flmul@bexp^0,w,c
  4358  002080  A4D8               	btfss	status,2,c
  4359  002082  EF45  F010         	goto	u3661
  4360  002086  EF47  F010         	goto	u3660
  4361  00208A                     u3661:
  4362  00208A  EF51  F010         	goto	l3764
  4363  00208E                     u3660:
  4364  00208E                     l3760:
  4365  00208E  0E00               	movlw	0
  4366  002090  6E28               	movwf	?___flmul^0,c
  4367  002092  0E00               	movlw	0
  4368  002094  6E29               	movwf	(?___flmul+1)^0,c
  4369  002096  0E00               	movlw	0
  4370  002098  6E2A               	movwf	(?___flmul+2)^0,c
  4371  00209A  0E00               	movlw	0
  4372  00209C  6E2B               	movwf	(?___flmul+3)^0,c
  4373  00209E  EFE9  F011         	goto	l1218
  4374  0020A2                     l3764:
  4375  0020A2  502E               	movf	(___flmul@a+2)^0,w,c
  4376  0020A4  0228               	mulwf	___flmul@b^0,c
  4377  0020A6  CFF3 F03F          	movff	prodl,___flmul@temp
  4378  0020AA  CFF4 F040          	movff	prodh,___flmul@temp+1
  4379  0020AE  503F               	movf	___flmul@temp^0,w,c
  4380  0020B0  6E35               	movwf	___flmul@grs^0,c
  4381  0020B2  6A36               	clrf	(___flmul@grs+1)^0,c
  4382  0020B4  6A37               	clrf	(___flmul@grs+2)^0,c
  4383  0020B6  6A38               	clrf	(___flmul@grs+3)^0,c
  4384  0020B8  5040               	movf	(___flmul@temp+1)^0,w,c
  4385  0020BA  6E3B               	movwf	___flmul@prod^0,c
  4386  0020BC  6A3C               	clrf	(___flmul@prod+1)^0,c
  4387  0020BE  6A3D               	clrf	(___flmul@prod+2)^0,c
  4388  0020C0  6A3E               	clrf	(___flmul@prod+3)^0,c
  4389  0020C2  502D               	movf	(___flmul@a+1)^0,w,c
  4390  0020C4  0229               	mulwf	(___flmul@b+1)^0,c
  4391  0020C6  CFF3 F03F          	movff	prodl,___flmul@temp
  4392  0020CA  CFF4 F040          	movff	prodh,___flmul@temp+1
  4393  0020CE  503F               	movf	___flmul@temp^0,w,c
  4394  0020D0  2635               	addwf	___flmul@grs^0,f,c
  4395  0020D2  0E00               	movlw	0
  4396  0020D4  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4397  0020D6  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4398  0020D8  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4399  0020DA  5040               	movf	(___flmul@temp+1)^0,w,c
  4400  0020DC  263B               	addwf	___flmul@prod^0,f,c
  4401  0020DE  0E00               	movlw	0
  4402  0020E0  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4403  0020E2  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4404  0020E4  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4405  0020E6  502C               	movf	___flmul@a^0,w,c
  4406  0020E8  022A               	mulwf	(___flmul@b+2)^0,c
  4407  0020EA  CFF3 F03F          	movff	prodl,___flmul@temp
  4408  0020EE  CFF4 F040          	movff	prodh,___flmul@temp+1
  4409  0020F2  503F               	movf	___flmul@temp^0,w,c
  4410  0020F4  2635               	addwf	___flmul@grs^0,f,c
  4411  0020F6  0E00               	movlw	0
  4412  0020F8  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4413  0020FA  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4414  0020FC  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4415  0020FE  5040               	movf	(___flmul@temp+1)^0,w,c
  4416  002100  263B               	addwf	___flmul@prod^0,f,c
  4417  002102  0E00               	movlw	0
  4418  002104  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4419  002106  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4420  002108  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4421  00210A  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4422  00210E  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4423  002112  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4424  002116  6A35               	clrf	___flmul@grs^0,c
  4425  002118  502C               	movf	___flmul@a^0,w,c
  4426  00211A  0229               	mulwf	(___flmul@b+1)^0,c
  4427  00211C  CFF3 F03F          	movff	prodl,___flmul@temp
  4428  002120  CFF4 F040          	movff	prodh,___flmul@temp+1
  4429  002124  503F               	movf	___flmul@temp^0,w,c
  4430  002126  2635               	addwf	___flmul@grs^0,f,c
  4431  002128  5040               	movf	(___flmul@temp+1)^0,w,c
  4432  00212A  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4433  00212C  0E00               	movlw	0
  4434  00212E  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4435  002130  0E00               	movlw	0
  4436  002132  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4437  002134  502D               	movf	(___flmul@a+1)^0,w,c
  4438  002136  0228               	mulwf	___flmul@b^0,c
  4439  002138  CFF3 F03F          	movff	prodl,___flmul@temp
  4440  00213C  CFF4 F040          	movff	prodh,___flmul@temp+1
  4441  002140  503F               	movf	___flmul@temp^0,w,c
  4442  002142  2635               	addwf	___flmul@grs^0,f,c
  4443  002144  5040               	movf	(___flmul@temp+1)^0,w,c
  4444  002146  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4445  002148  0E00               	movlw	0
  4446  00214A  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4447  00214C  0E00               	movlw	0
  4448  00214E  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4449  002150  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4450  002154  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4451  002158  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4452  00215C  6A35               	clrf	___flmul@grs^0,c
  4453  00215E  502C               	movf	___flmul@a^0,w,c
  4454  002160  0228               	mulwf	___flmul@b^0,c
  4455  002162  CFF3 F03F          	movff	prodl,___flmul@temp
  4456  002166  CFF4 F040          	movff	prodh,___flmul@temp+1
  4457  00216A  503F               	movf	___flmul@temp^0,w,c
  4458  00216C  2635               	addwf	___flmul@grs^0,f,c
  4459  00216E  5040               	movf	(___flmul@temp+1)^0,w,c
  4460  002170  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4461  002172  0E00               	movlw	0
  4462  002174  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4463  002176  0E00               	movlw	0
  4464  002178  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4465  00217A  502E               	movf	(___flmul@a+2)^0,w,c
  4466  00217C  0229               	mulwf	(___flmul@b+1)^0,c
  4467  00217E  CFF3 F03F          	movff	prodl,___flmul@temp
  4468  002182  CFF4 F040          	movff	prodh,___flmul@temp+1
  4469  002186  503F               	movf	___flmul@temp^0,w,c
  4470  002188  263B               	addwf	___flmul@prod^0,f,c
  4471  00218A  5040               	movf	(___flmul@temp+1)^0,w,c
  4472  00218C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4473  00218E  0E00               	movlw	0
  4474  002190  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4475  002192  0E00               	movlw	0
  4476  002194  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4477  002196  502D               	movf	(___flmul@a+1)^0,w,c
  4478  002198  022A               	mulwf	(___flmul@b+2)^0,c
  4479  00219A  CFF3 F03F          	movff	prodl,___flmul@temp
  4480  00219E  CFF4 F040          	movff	prodh,___flmul@temp+1
  4481  0021A2  503F               	movf	___flmul@temp^0,w,c
  4482  0021A4  263B               	addwf	___flmul@prod^0,f,c
  4483  0021A6  5040               	movf	(___flmul@temp+1)^0,w,c
  4484  0021A8  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4485  0021AA  0E00               	movlw	0
  4486  0021AC  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4487  0021AE  0E00               	movlw	0
  4488  0021B0  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4489  0021B2  502E               	movf	(___flmul@a+2)^0,w,c
  4490  0021B4  022A               	mulwf	(___flmul@b+2)^0,c
  4491  0021B6  CFF3 F03F          	movff	prodl,___flmul@temp
  4492  0021BA  CFF4 F040          	movff	prodh,___flmul@temp+1
  4493  0021BE  503F               	movf	___flmul@temp^0,w,c
  4494  0021C0  6E30               	movwf	??___flmul^0,c
  4495  0021C2  5040               	movf	(___flmul@temp+1)^0,w,c
  4496  0021C4  6E31               	movwf	(??___flmul+1)^0,c
  4497  0021C6  6A32               	clrf	(??___flmul+2)^0,c
  4498  0021C8  6A33               	clrf	(??___flmul+3)^0,c
  4499  0021CA  C032  F033         	movff	??___flmul+2,??___flmul+3
  4500  0021CE  C031  F032         	movff	??___flmul+1,??___flmul+2
  4501  0021D2  C030  F031         	movff	??___flmul,??___flmul+1
  4502  0021D6  6A30               	clrf	??___flmul^0,c
  4503  0021D8  5030               	movf	??___flmul^0,w,c
  4504  0021DA  263B               	addwf	___flmul@prod^0,f,c
  4505  0021DC  5031               	movf	(??___flmul+1)^0,w,c
  4506  0021DE  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4507  0021E0  5032               	movf	(??___flmul+2)^0,w,c
  4508  0021E2  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4509  0021E4  5033               	movf	(??___flmul+3)^0,w,c
  4510  0021E6  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4511  0021E8  C035  F030         	movff	___flmul@grs,??___flmul
  4512  0021EC  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  4513  0021F0  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  4514  0021F4  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  4515  0021F8  0E19               	movlw	25
  4516  0021FA  EF04  F011         	goto	u3670
  4517  0021FE                     u3675:
  4518  0021FE  90D8               	bcf	status,0,c
  4519  002200  3233               	rrcf	(??___flmul+3)^0,f,c
  4520  002202  3232               	rrcf	(??___flmul+2)^0,f,c
  4521  002204  3231               	rrcf	(??___flmul+1)^0,f,c
  4522  002206  3230               	rrcf	??___flmul^0,f,c
  4523  002208                     u3670:
  4524  002208  2EE8               	decfsz	wreg,f,c
  4525  00220A  EFFF  F010         	goto	u3675
  4526  00220E  5030               	movf	??___flmul^0,w,c
  4527  002210  263B               	addwf	___flmul@prod^0,f,c
  4528  002212  5031               	movf	(??___flmul+1)^0,w,c
  4529  002214  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4530  002216  5032               	movf	(??___flmul+2)^0,w,c
  4531  002218  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4532  00221A  5033               	movf	(??___flmul+3)^0,w,c
  4533  00221C  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4534  00221E  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4535  002222  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4536  002226  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4537  00222A  6A35               	clrf	___flmul@grs^0,c
  4538  00222C  5039               	movf	___flmul@aexp^0,w,c
  4539  00222E  C03A  F030         	movff	___flmul@bexp,??___flmul
  4540  002232  6A31               	clrf	(??___flmul+1)^0,c
  4541  002234  2630               	addwf	??___flmul^0,f,c
  4542  002236  0E00               	movlw	0
  4543  002238  2231               	addwfc	(??___flmul+1)^0,f,c
  4544  00223A  0E82               	movlw	130
  4545  00223C  2430               	addwf	??___flmul^0,w,c
  4546  00223E  6E3F               	movwf	___flmul@temp^0,c
  4547  002240  0EFF               	movlw	255
  4548  002242  2031               	addwfc	(??___flmul+1)^0,w,c
  4549  002244  6E40               	movwf	(___flmul@temp+1)^0,c
  4550  002246  EF3A  F011         	goto	l3812
  4551  00224A                     l3806:
  4552  00224A  90D8               	bcf	status,0,c
  4553  00224C  363B               	rlcf	___flmul@prod^0,f,c
  4554  00224E  363C               	rlcf	(___flmul@prod+1)^0,f,c
  4555  002250  363D               	rlcf	(___flmul@prod+2)^0,f,c
  4556  002252  363E               	rlcf	(___flmul@prod+3)^0,f,c
  4557  002254  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4558  002256  EF2F  F011         	goto	u3681
  4559  00225A  EF31  F011         	goto	u3680
  4560  00225E                     u3681:
  4561  00225E  EF32  F011         	goto	l1221
  4562  002262                     u3680:
  4563  002262  803B               	bsf	___flmul@prod^0,0,c
  4564  002264                     l1221:
  4565  002264  90D8               	bcf	status,0,c
  4566  002266  3635               	rlcf	___flmul@grs^0,f,c
  4567  002268  3636               	rlcf	(___flmul@grs+1)^0,f,c
  4568  00226A  3637               	rlcf	(___flmul@grs+2)^0,f,c
  4569  00226C  3638               	rlcf	(___flmul@grs+3)^0,f,c
  4570  00226E  063F               	decf	___flmul@temp^0,f,c
  4571  002270  A0D8               	btfss	status,0,c
  4572  002272  0640               	decf	(___flmul@temp+1)^0,f,c
  4573  002274                     l3812:
  4574  002274  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  4575  002276  EF3F  F011         	goto	u3691
  4576  00227A  EF41  F011         	goto	u3690
  4577  00227E                     u3691:
  4578  00227E  EF25  F011         	goto	l3806
  4579  002282                     u3690:
  4580  002282  0E00               	movlw	0
  4581  002284  6E39               	movwf	___flmul@aexp^0,c
  4582  002286  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4583  002288  EF48  F011         	goto	u3701
  4584  00228C  EF4A  F011         	goto	u3700
  4585  002290                     u3701:
  4586  002290  EF6E  F011         	goto	l1223
  4587  002294                     u3700:
  4588  002294  0EFF               	movlw	255
  4589  002296  1435               	andwf	___flmul@grs^0,w,c
  4590  002298  6E30               	movwf	??___flmul^0,c
  4591  00229A  0EFF               	movlw	255
  4592  00229C  1436               	andwf	(___flmul@grs+1)^0,w,c
  4593  00229E  6E31               	movwf	(??___flmul+1)^0,c
  4594  0022A0  0EFF               	movlw	255
  4595  0022A2  1437               	andwf	(___flmul@grs+2)^0,w,c
  4596  0022A4  6E32               	movwf	(??___flmul+2)^0,c
  4597  0022A6  0E7F               	movlw	127
  4598  0022A8  1438               	andwf	(___flmul@grs+3)^0,w,c
  4599  0022AA  6E33               	movwf	(??___flmul+3)^0,c
  4600  0022AC  5030               	movf	??___flmul^0,w,c
  4601  0022AE  1031               	iorwf	(??___flmul+1)^0,w,c
  4602  0022B0  1032               	iorwf	(??___flmul+2)^0,w,c
  4603  0022B2  1033               	iorwf	(??___flmul+3)^0,w,c
  4604  0022B4  B4D8               	btfsc	status,2,c
  4605  0022B6  EF5F  F011         	goto	u3711
  4606  0022BA  EF61  F011         	goto	u3710
  4607  0022BE                     u3711:
  4608  0022BE  EF65  F011         	goto	l1224
  4609  0022C2                     u3710:
  4610  0022C2                     l3820:
  4611  0022C2  0E01               	movlw	1
  4612  0022C4  6E39               	movwf	___flmul@aexp^0,c
  4613  0022C6  EF6E  F011         	goto	l1223
  4614  0022CA                     l1224:
  4615  0022CA  A03B               	btfss	___flmul@prod^0,0,c
  4616  0022CC  EF6A  F011         	goto	u3721
  4617  0022D0  EF6C  F011         	goto	u3720
  4618  0022D4                     u3721:
  4619  0022D4  EF6E  F011         	goto	l1223
  4620  0022D8                     u3720:
  4621  0022D8  EF61  F011         	goto	l3820
  4622  0022DC                     l1223:
  4623  0022DC  5039               	movf	___flmul@aexp^0,w,c
  4624  0022DE  B4D8               	btfsc	status,2,c
  4625  0022E0  EF74  F011         	goto	u3731
  4626  0022E4  EF76  F011         	goto	u3730
  4627  0022E8                     u3731:
  4628  0022E8  EF9A  F011         	goto	l3832
  4629  0022EC                     u3730:
  4630  0022EC  0E01               	movlw	1
  4631  0022EE  263B               	addwf	___flmul@prod^0,f,c
  4632  0022F0  0E00               	movlw	0
  4633  0022F2  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4634  0022F4  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4635  0022F6  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4636  0022F8  A03E               	btfss	(___flmul@prod+3)^0,0,c
  4637  0022FA  EF81  F011         	goto	u3741
  4638  0022FE  EF83  F011         	goto	u3740
  4639  002302                     u3741:
  4640  002302  EF9A  F011         	goto	l3832
  4641  002306                     u3740:
  4642  002306  C03B  F030         	movff	___flmul@prod,??___flmul
  4643  00230A  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  4644  00230E  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  4645  002312  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  4646  002316  3433               	rlcf	(??___flmul+3)^0,w,c
  4647  002318  3233               	rrcf	(??___flmul+3)^0,f,c
  4648  00231A  3232               	rrcf	(??___flmul+2)^0,f,c
  4649  00231C  3231               	rrcf	(??___flmul+1)^0,f,c
  4650  00231E  3230               	rrcf	??___flmul^0,f,c
  4651  002320  C030  F03B         	movff	??___flmul,___flmul@prod
  4652  002324  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  4653  002328  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  4654  00232C  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  4655  002330  4A3F               	infsnz	___flmul@temp^0,f,c
  4656  002332  2A40               	incf	(___flmul@temp+1)^0,f,c
  4657  002334                     l3832:
  4658  002334  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4659  002336  EFA5  F011         	goto	u3751
  4660  00233A  5040               	movf	(___flmul@temp+1)^0,w,c
  4661  00233C  E108               	bnz	u3750
  4662  00233E  283F               	incf	___flmul@temp^0,w,c
  4663  002340  A0D8               	btfss	status,0,c
  4664  002342  EFA5  F011         	goto	u3751
  4665  002346  EFA7  F011         	goto	u3750
  4666  00234A                     u3751:
  4667  00234A  EFB1  F011         	goto	l3836
  4668  00234E                     u3750:
  4669  00234E  0E00               	movlw	0
  4670  002350  6E3B               	movwf	___flmul@prod^0,c
  4671  002352  0E00               	movlw	0
  4672  002354  6E3C               	movwf	(___flmul@prod+1)^0,c
  4673  002356  0E80               	movlw	128
  4674  002358  6E3D               	movwf	(___flmul@prod+2)^0,c
  4675  00235A  0E7F               	movlw	127
  4676  00235C  6E3E               	movwf	(___flmul@prod+3)^0,c
  4677  00235E  EFDF  F011         	goto	l3848
  4678  002362                     l3836:
  4679  002362  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4680  002364  EFBE  F011         	goto	u3760
  4681  002368  5040               	movf	(___flmul@temp+1)^0,w,c
  4682  00236A  E106               	bnz	u3761
  4683  00236C  043F               	decf	___flmul@temp^0,w,c
  4684  00236E  B0D8               	btfsc	status,0,c
  4685  002370  EFBC  F011         	goto	u3761
  4686  002374  EFBE  F011         	goto	u3760
  4687  002378                     u3761:
  4688  002378  EFCA  F011         	goto	l1231
  4689  00237C                     u3760:
  4690  00237C  0E00               	movlw	0
  4691  00237E  6E3B               	movwf	___flmul@prod^0,c
  4692  002380  0E00               	movlw	0
  4693  002382  6E3C               	movwf	(___flmul@prod+1)^0,c
  4694  002384  0E00               	movlw	0
  4695  002386  6E3D               	movwf	(___flmul@prod+2)^0,c
  4696  002388  0E00               	movlw	0
  4697  00238A  6E3E               	movwf	(___flmul@prod+3)^0,c
  4698  00238C  0E00               	movlw	0
  4699  00238E  6E34               	movwf	___flmul@sign^0,c
  4700  002390  EFDF  F011         	goto	l3848
  4701  002394                     l1231:
  4702  002394  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  4703  002398  0EFF               	movlw	255
  4704  00239A  163B               	andwf	___flmul@prod^0,f,c
  4705  00239C  0EFF               	movlw	255
  4706  00239E  163C               	andwf	(___flmul@prod+1)^0,f,c
  4707  0023A0  0E7F               	movlw	127
  4708  0023A2  163D               	andwf	(___flmul@prod+2)^0,f,c
  4709  0023A4  0E00               	movlw	0
  4710  0023A6  163E               	andwf	(___flmul@prod+3)^0,f,c
  4711  0023A8  A03A               	btfss	___flmul@bexp^0,0,c
  4712  0023AA  EFD9  F011         	goto	u3771
  4713  0023AE  EFDB  F011         	goto	u3770
  4714  0023B2                     u3771:
  4715  0023B2  EFDC  F011         	goto	l3846
  4716  0023B6                     u3770:
  4717  0023B6  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  4718  0023B8                     l3846:
  4719  0023B8  90D8               	bcf	status,0,c
  4720  0023BA  303A               	rrcf	___flmul@bexp^0,w,c
  4721  0023BC  6E3E               	movwf	(___flmul@prod+3)^0,c
  4722  0023BE                     l3848:
  4723  0023BE  5034               	movf	___flmul@sign^0,w,c
  4724  0023C0  123E               	iorwf	(___flmul@prod+3)^0,f,c
  4725  0023C2  C03B  F028         	movff	___flmul@prod,?___flmul
  4726  0023C6  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  4727  0023CA  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  4728  0023CE  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  4729  0023D2                     l1218:
  4730  0023D2  0012               	return		;funcret
  4731  0023D4                     __end_of___flmul:
  4732                           	callstack 0
  4733                           
  4734 ;; *************** function ___flge *****************
  4735 ;; Defined at:
  4736 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  ff1             4    0[COMRAM] unsigned char 
  4739 ;;  ff2             4    4[COMRAM] unsigned char 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;		None               void
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4751 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4753 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4754 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4755 ;;Total ram usage:       12 bytes
  4756 ;; Hardware stack levels used: 1
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_roundf
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text12
  4765  003E6E                     __ptext12:
  4766                           	callstack 0
  4767  003E6E                     ___flge:
  4768                           	callstack 27
  4769  003E6E  0E00               	movlw	0
  4770  003E70  1401               	andwf	___flge@ff1^0,w,c
  4771  003E72  6E09               	movwf	??___flge^0,c
  4772  003E74  0E00               	movlw	0
  4773  003E76  1402               	andwf	(___flge@ff1+1)^0,w,c
  4774  003E78  6E0A               	movwf	(??___flge+1)^0,c
  4775  003E7A  0E80               	movlw	128
  4776  003E7C  1403               	andwf	(___flge@ff1+2)^0,w,c
  4777  003E7E  6E0B               	movwf	(??___flge+2)^0,c
  4778  003E80  0E7F               	movlw	127
  4779  003E82  1404               	andwf	(___flge@ff1+3)^0,w,c
  4780  003E84  6E0C               	movwf	(??___flge+3)^0,c
  4781  003E86  5009               	movf	??___flge^0,w,c
  4782  003E88  100A               	iorwf	(??___flge+1)^0,w,c
  4783  003E8A  100B               	iorwf	(??___flge+2)^0,w,c
  4784  003E8C  100C               	iorwf	(??___flge+3)^0,w,c
  4785  003E8E  A4D8               	btfss	status,2,c
  4786  003E90  EF4C  F01F         	goto	u3781
  4787  003E94  EF4E  F01F         	goto	u3780
  4788  003E98                     u3781:
  4789  003E98  EF56  F01F         	goto	l3864
  4790  003E9C                     u3780:
  4791  003E9C  0E00               	movlw	0
  4792  003E9E  6E01               	movwf	___flge@ff1^0,c
  4793  003EA0  0E00               	movlw	0
  4794  003EA2  6E02               	movwf	(___flge@ff1+1)^0,c
  4795  003EA4  0E00               	movlw	0
  4796  003EA6  6E03               	movwf	(___flge@ff1+2)^0,c
  4797  003EA8  0E00               	movlw	0
  4798  003EAA  6E04               	movwf	(___flge@ff1+3)^0,c
  4799  003EAC                     l3864:
  4800  003EAC  0E00               	movlw	0
  4801  003EAE  1405               	andwf	___flge@ff2^0,w,c
  4802  003EB0  6E09               	movwf	??___flge^0,c
  4803  003EB2  0E00               	movlw	0
  4804  003EB4  1406               	andwf	(___flge@ff2+1)^0,w,c
  4805  003EB6  6E0A               	movwf	(??___flge+1)^0,c
  4806  003EB8  0E80               	movlw	128
  4807  003EBA  1407               	andwf	(___flge@ff2+2)^0,w,c
  4808  003EBC  6E0B               	movwf	(??___flge+2)^0,c
  4809  003EBE  0E7F               	movlw	127
  4810  003EC0  1408               	andwf	(___flge@ff2+3)^0,w,c
  4811  003EC2  6E0C               	movwf	(??___flge+3)^0,c
  4812  003EC4  5009               	movf	??___flge^0,w,c
  4813  003EC6  100A               	iorwf	(??___flge+1)^0,w,c
  4814  003EC8  100B               	iorwf	(??___flge+2)^0,w,c
  4815  003ECA  100C               	iorwf	(??___flge+3)^0,w,c
  4816  003ECC  A4D8               	btfss	status,2,c
  4817  003ECE  EF6B  F01F         	goto	u3791
  4818  003ED2  EF6D  F01F         	goto	u3790
  4819  003ED6                     u3791:
  4820  003ED6  EF75  F01F         	goto	l3868
  4821  003EDA                     u3790:
  4822  003EDA  0E00               	movlw	0
  4823  003EDC  6E05               	movwf	___flge@ff2^0,c
  4824  003EDE  0E00               	movlw	0
  4825  003EE0  6E06               	movwf	(___flge@ff2+1)^0,c
  4826  003EE2  0E00               	movlw	0
  4827  003EE4  6E07               	movwf	(___flge@ff2+2)^0,c
  4828  003EE6  0E00               	movlw	0
  4829  003EE8  6E08               	movwf	(___flge@ff2+3)^0,c
  4830  003EEA                     l3868:
  4831  003EEA  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4832  003EEC  EF7A  F01F         	goto	u3801
  4833  003EF0  EF7C  F01F         	goto	u3800
  4834  003EF4                     u3801:
  4835  003EF4  EF85  F01F         	goto	l3872
  4836  003EF8                     u3800:
  4837  003EF8  6C01               	negf	___flge@ff1^0,c
  4838  003EFA  1E02               	comf	(___flge@ff1+1)^0,f,c
  4839  003EFC  B0D8               	btfsc	status,0,c
  4840  003EFE  2A02               	incf	(___flge@ff1+1)^0,f,c
  4841  003F00  1E03               	comf	(___flge@ff1+2)^0,f,c
  4842  003F02  B0D8               	btfsc	status,0,c
  4843  003F04  2A03               	incf	(___flge@ff1+2)^0,f,c
  4844  003F06  0E80               	movlw	128
  4845  003F08  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4846  003F0A                     l3872:
  4847  003F0A  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4848  003F0C  EF8A  F01F         	goto	u3811
  4849  003F10  EF8C  F01F         	goto	u3810
  4850  003F14                     u3811:
  4851  003F14  EF95  F01F         	goto	l865
  4852  003F18                     u3810:
  4853  003F18  6C05               	negf	___flge@ff2^0,c
  4854  003F1A  1E06               	comf	(___flge@ff2+1)^0,f,c
  4855  003F1C  B0D8               	btfsc	status,0,c
  4856  003F1E  2A06               	incf	(___flge@ff2+1)^0,f,c
  4857  003F20  1E07               	comf	(___flge@ff2+2)^0,f,c
  4858  003F22  B0D8               	btfsc	status,0,c
  4859  003F24  2A07               	incf	(___flge@ff2+2)^0,f,c
  4860  003F26  0E80               	movlw	128
  4861  003F28  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4862  003F2A                     l865:
  4863  003F2A  0E00               	movlw	0
  4864  003F2C  1A01               	xorwf	___flge@ff1^0,f,c
  4865  003F2E  0E00               	movlw	0
  4866  003F30  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4867  003F32  0E00               	movlw	0
  4868  003F34  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4869  003F36  0E80               	movlw	128
  4870  003F38  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4871  003F3A  0E00               	movlw	0
  4872  003F3C  1A05               	xorwf	___flge@ff2^0,f,c
  4873  003F3E  0E00               	movlw	0
  4874  003F40  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4875  003F42  0E00               	movlw	0
  4876  003F44  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4877  003F46  0E80               	movlw	128
  4878  003F48  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4879  003F4A  5005               	movf	___flge@ff2^0,w,c
  4880  003F4C  5C01               	subwf	___flge@ff1^0,w,c
  4881  003F4E  5006               	movf	(___flge@ff2+1)^0,w,c
  4882  003F50  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4883  003F52  5007               	movf	(___flge@ff2+2)^0,w,c
  4884  003F54  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4885  003F56  5008               	movf	(___flge@ff2+3)^0,w,c
  4886  003F58  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4887  003F5A  B0D8               	btfsc	status,0,c
  4888  003F5C  EFB2  F01F         	goto	u3821
  4889  003F60  EFB4  F01F         	goto	u3820
  4890  003F64                     u3821:
  4891  003F64  EFB7  F01F         	goto	l3878
  4892  003F68                     u3820:
  4893  003F68  90D8               	bcf	status,0,c
  4894  003F6A  EFB8  F01F         	goto	l870
  4895  003F6E                     l3878:
  4896  003F6E  80D8               	bsf	status,0,c
  4897  003F70                     l870:
  4898  003F70  0012               	return		;funcret
  4899  003F72                     __end_of___flge:
  4900                           	callstack 0
  4901                           
  4902 ;; *************** function ___fltol *****************
  4903 ;; Defined at:
  4904 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  f1              4   90[COMRAM] unsigned char 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  exp1            1    5[BANK0 ] unsigned char 
  4909 ;;  sign1           1    4[BANK0 ] unsigned char 
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  4   90[COMRAM] long 
  4912 ;; Registers used:
  4913 ;;		wreg, status,2, status,0
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4920 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4921 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4922 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4923 ;;Total ram usage:       10 bytes
  4924 ;; Hardware stack levels used: 1
  4925 ;; This function calls:
  4926 ;;		Nothing
  4927 ;; This function is called by:
  4928 ;;		_lroundf
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text13
  4933  003D66                     __ptext13:
  4934                           	callstack 0
  4935  003D66                     ___fltol:
  4936                           	callstack 28
  4937  003D66  345D               	rlcf	(___fltol@f1+2)^0,w,c
  4938  003D68  345E               	rlcf	(___fltol@f1+3)^0,w,c
  4939  003D6A  0100               	movlb	0	; () banked
  4940  003D6C  6F65               	movwf	___fltol@exp1& (0+255),b
  4941  003D6E  5165               	movf	___fltol@exp1& (0+255),w,b
  4942  003D70  A4D8               	btfss	status,2,c
  4943  003D72  EFBD  F01E         	goto	u3921
  4944  003D76  EFBF  F01E         	goto	u3920
  4945  003D7A                     u3921:
  4946  003D7A  EFC9  F01E         	goto	l3998
  4947  003D7E                     u3920:
  4948  003D7E                     l3994:
  4949                           
  4950                           ; BSR set to: 0
  4951  003D7E  0E00               	movlw	0
  4952  003D80  6E5B               	movwf	?___fltol^0,c
  4953  003D82  0E00               	movlw	0
  4954  003D84  6E5C               	movwf	(?___fltol+1)^0,c
  4955  003D86  0E00               	movlw	0
  4956  003D88  6E5D               	movwf	(?___fltol+2)^0,c
  4957  003D8A  0E00               	movlw	0
  4958  003D8C  6E5E               	movwf	(?___fltol+3)^0,c
  4959  003D8E  EF36  F01F         	goto	l897
  4960  003D92                     l3998:
  4961                           
  4962                           ; BSR set to: 0
  4963  003D92  C05B  F060         	movff	___fltol@f1,??___fltol
  4964  003D96  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  4965  003D9A  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  4966  003D9E  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  4967  003DA2  0E20               	movlw	32
  4968  003DA4  EFD9  F01E         	goto	u3930
  4969  003DA8                     u3935:
  4970  003DA8  90D8               	bcf	status,0,c
  4971  003DAA  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  4972  003DAC  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  4973  003DAE  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  4974  003DB0  3360               	rrcf	??___fltol& (0+255),f,b
  4975  003DB2                     u3930:
  4976  003DB2  2EE8               	decfsz	wreg,f,c
  4977  003DB4  EFD4  F01E         	goto	u3935
  4978  003DB8  5160               	movf	??___fltol& (0+255),w,b
  4979  003DBA  6F64               	movwf	___fltol@sign1& (0+255),b
  4980  003DBC                     
  4981                           ; BSR set to: 0
  4982  003DBC  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  4983  003DBE                     
  4984                           ; BSR set to: 0
  4985  003DBE  0EFF               	movlw	255
  4986  003DC0  165B               	andwf	___fltol@f1^0,f,c
  4987  003DC2  0EFF               	movlw	255
  4988  003DC4  165C               	andwf	(___fltol@f1+1)^0,f,c
  4989  003DC6  0EFF               	movlw	255
  4990  003DC8  165D               	andwf	(___fltol@f1+2)^0,f,c
  4991  003DCA  0E00               	movlw	0
  4992  003DCC  165E               	andwf	(___fltol@f1+3)^0,f,c
  4993  003DCE                     
  4994                           ; BSR set to: 0
  4995  003DCE  0E96               	movlw	150
  4996  003DD0  5F65               	subwf	___fltol@exp1& (0+255),f,b
  4997  003DD2                     
  4998                           ; BSR set to: 0
  4999  003DD2  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  5000  003DD4  EFF0  F01E         	goto	u3940
  5001  003DD8  EFEE  F01E         	goto	u3941
  5002  003DDC                     u3941:
  5003  003DDC  EF06  F01F         	goto	l4018
  5004  003DE0                     u3940:
  5005  003DE0                     
  5006                           ; BSR set to: 0
  5007  003DE0  5165               	movf	___fltol@exp1& (0+255),w,b
  5008  003DE2  0A80               	xorlw	128
  5009  003DE4  0F97               	addlw	151
  5010  003DE6  B0D8               	btfsc	status,0,c
  5011  003DE8  EFF8  F01E         	goto	u3951
  5012  003DEC  EFFA  F01E         	goto	u3950
  5013  003DF0                     u3951:
  5014  003DF0  EFFC  F01E         	goto	l4014
  5015  003DF4                     u3950:
  5016  003DF4  EFBF  F01E         	goto	l3994
  5017  003DF8                     l4014:
  5018                           
  5019                           ; BSR set to: 0
  5020  003DF8  90D8               	bcf	status,0,c
  5021  003DFA  325E               	rrcf	(___fltol@f1+3)^0,f,c
  5022  003DFC  325D               	rrcf	(___fltol@f1+2)^0,f,c
  5023  003DFE  325C               	rrcf	(___fltol@f1+1)^0,f,c
  5024  003E00  325B               	rrcf	___fltol@f1^0,f,c
  5025  003E02                     
  5026                           ; BSR set to: 0
  5027  003E02  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  5028  003E04  EFFC  F01E         	goto	l4014
  5029  003E08  EF1E  F01F         	goto	l4028
  5030  003E0C                     l4018:
  5031                           
  5032                           ; BSR set to: 0
  5033  003E0C  0E1F               	movlw	31
  5034  003E0E  6565               	cpfsgt	___fltol@exp1& (0+255),b
  5035  003E10  EF0C  F01F         	goto	u3961
  5036  003E14  EF0E  F01F         	goto	u3960
  5037  003E18                     u3961:
  5038  003E18  EF16  F01F         	goto	l4026
  5039  003E1C                     u3960:
  5040  003E1C  EFBF  F01E         	goto	l3994
  5041  003E20                     l4024:
  5042                           
  5043                           ; BSR set to: 0
  5044  003E20  90D8               	bcf	status,0,c
  5045  003E22  365B               	rlcf	___fltol@f1^0,f,c
  5046  003E24  365C               	rlcf	(___fltol@f1+1)^0,f,c
  5047  003E26  365D               	rlcf	(___fltol@f1+2)^0,f,c
  5048  003E28  365E               	rlcf	(___fltol@f1+3)^0,f,c
  5049  003E2A  0765               	decf	___fltol@exp1& (0+255),f,b
  5050  003E2C                     l4026:
  5051                           
  5052                           ; BSR set to: 0
  5053  003E2C  5165               	movf	___fltol@exp1& (0+255),w,b
  5054  003E2E  A4D8               	btfss	status,2,c
  5055  003E30  EF1C  F01F         	goto	u3971
  5056  003E34  EF1E  F01F         	goto	u3970
  5057  003E38                     u3971:
  5058  003E38  EF10  F01F         	goto	l4024
  5059  003E3C                     u3970:
  5060  003E3C                     l4028:
  5061                           
  5062                           ; BSR set to: 0
  5063  003E3C  5164               	movf	___fltol@sign1& (0+255),w,b
  5064  003E3E  B4D8               	btfsc	status,2,c
  5065  003E40  EF24  F01F         	goto	u3981
  5066  003E44  EF26  F01F         	goto	u3980
  5067  003E48                     u3981:
  5068  003E48  EF2E  F01F         	goto	l4032
  5069  003E4C                     u3980:
  5070  003E4C                     
  5071                           ; BSR set to: 0
  5072  003E4C  1E5E               	comf	(___fltol@f1+3)^0,f,c
  5073  003E4E  1E5D               	comf	(___fltol@f1+2)^0,f,c
  5074  003E50  1E5C               	comf	(___fltol@f1+1)^0,f,c
  5075  003E52  6C5B               	negf	___fltol@f1^0,c
  5076  003E54  0E00               	movlw	0
  5077  003E56  225C               	addwfc	(___fltol@f1+1)^0,f,c
  5078  003E58  225D               	addwfc	(___fltol@f1+2)^0,f,c
  5079  003E5A  225E               	addwfc	(___fltol@f1+3)^0,f,c
  5080  003E5C                     l4032:
  5081                           
  5082                           ; BSR set to: 0
  5083  003E5C  C05B  F05B         	movff	___fltol@f1,?___fltol
  5084  003E60  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  5085  003E64  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  5086  003E68  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  5087  003E6C                     l897:
  5088                           
  5089                           ; BSR set to: 0
  5090  003E6C  0012               	return		;funcret
  5091  003E6E                     __end_of___fltol:
  5092                           	callstack 0
  5093                           
  5094 ;; *************** function _compare *****************
  5095 ;; Defined at:
  5096 ;;		line 297 in file "color.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;  lower           2   10[BANK0 ] unsigned int 
  5099 ;;  value2compar    2   12[BANK0 ] unsigned int 
  5100 ;;  upper           2   14[BANK0 ] unsigned int 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  result          1   94[COMRAM] unsigned char 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  1    wreg      unsigned char 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5112 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5115 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5116 ;;Total ram usage:        7 bytes
  5117 ;; Hardware stack levels used: 1
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_detect_color
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text14
  5126  004B56                     __ptext14:
  5127                           	callstack 0
  5128  004B56                     _compare:
  5129                           	callstack 29
  5130  004B56                     
  5131                           ;color.c: 297: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 298: {;color.c: 299:     unsigned char result = 0;
  5132  004B56  0E00               	movlw	0
  5133  004B58  6E5F               	movwf	compare@result^0,c
  5134  004B5A                     
  5135                           ;color.c: 300:     if (lower < value2compare && value2compare <= upper){result = 1;}
  5136  004B5A  0100               	movlb	0	; () banked
  5137  004B5C  516C               	movf	compare@value2compare& (0+255),w,b
  5138  004B5E  5D6A               	subwf	compare@lower& (0+255),w,b
  5139  004B60  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  5140  004B62  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  5141  004B64  B0D8               	btfsc	status,0,c
  5142  004B66  EFB7  F025         	goto	u4181
  5143  004B6A  EFB9  F025         	goto	u4180
  5144  004B6E                     u4181:
  5145  004B6E  EFC6  F025         	goto	l164
  5146  004B72                     u4180:
  5147  004B72                     
  5148                           ; BSR set to: 0
  5149  004B72  516C               	movf	compare@value2compare& (0+255),w,b
  5150  004B74  5D6E               	subwf	compare@upper& (0+255),w,b
  5151  004B76  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  5152  004B78  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  5153  004B7A  A0D8               	btfss	status,0,c
  5154  004B7C  EFC2  F025         	goto	u4191
  5155  004B80  EFC4  F025         	goto	u4190
  5156  004B84                     u4191:
  5157  004B84  EFC6  F025         	goto	l164
  5158  004B88                     u4190:
  5159  004B88                     
  5160                           ; BSR set to: 0
  5161  004B88  0E01               	movlw	1
  5162  004B8A  6E5F               	movwf	compare@result^0,c
  5163  004B8C                     l164:
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;color.c: 301:     return result;
  5167  004B8C  505F               	movf	compare@result^0,w,c
  5168  004B8E                     
  5169                           ; BSR set to: 0
  5170  004B8E  0012               	return		;funcret
  5171  004B90                     __end_of_compare:
  5172                           	callstack 0
  5173                           
  5174 ;; *************** function ___xxtofl *****************
  5175 ;; Defined at:
  5176 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  sign            1    wreg     unsigned char 
  5179 ;;  val             4    0[COMRAM] long 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;  sign            1    8[COMRAM] unsigned char 
  5182 ;;  arg             4   10[COMRAM] unsigned long 
  5183 ;;  exp             1    9[COMRAM] unsigned char 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  4    0[COMRAM] unsigned char 
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, status,0
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5193 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5194 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5195 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5196 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5197 ;;Total ram usage:       14 bytes
  5198 ;; Hardware stack levels used: 1
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_detect_color
  5203 ;;		_check_color_reading
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text15
  5208  0031FA                     __ptext15:
  5209                           	callstack 0
  5210  0031FA                     ___xxtofl:
  5211                           	callstack 29
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;incstack = 0
  5215                           ;___xxtofl@sign stored from wreg
  5216  0031FA  6E09               	movwf	___xxtofl@sign^0,c
  5217  0031FC  5009               	movf	___xxtofl@sign^0,w,c
  5218  0031FE  B4D8               	btfsc	status,2,c
  5219  003200  EF04  F019         	goto	u4491
  5220  003204  EF06  F019         	goto	u4490
  5221  003208                     u4491:
  5222  003208  EF28  F019         	goto	l1255
  5223  00320C                     u4490:
  5224  00320C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5225  00320E  EF0D  F019         	goto	u4500
  5226  003212  EF0B  F019         	goto	u4501
  5227  003216                     u4501:
  5228  003216  EF28  F019         	goto	l1255
  5229  00321A                     u4500:
  5230  00321A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5231  00321E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5232  003222  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5233  003226  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5234  00322A  1E05               	comf	??___xxtofl^0,f,c
  5235  00322C  1E06               	comf	(??___xxtofl+1)^0,f,c
  5236  00322E  1E07               	comf	(??___xxtofl+2)^0,f,c
  5237  003230  1E08               	comf	(??___xxtofl+3)^0,f,c
  5238  003232  2A05               	incf	??___xxtofl^0,f,c
  5239  003234  0E00               	movlw	0
  5240  003236  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5241  003238  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5242  00323A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5243  00323C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5244  003240  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5245  003244  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5246  003248  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5247  00324C  EF30  F019         	goto	l4368
  5248  003250                     l1255:
  5249  003250  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5250  003254  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5251  003258  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5252  00325C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5253  003260                     l4368:
  5254  003260  5001               	movf	___xxtofl@val^0,w,c
  5255  003262  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5256  003264  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5257  003266  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5258  003268  A4D8               	btfss	status,2,c
  5259  00326A  EF39  F019         	goto	u4511
  5260  00326E  EF3B  F019         	goto	u4510
  5261  003272                     u4511:
  5262  003272  EF45  F019         	goto	l4374
  5263  003276                     u4510:
  5264  003276  0E00               	movlw	0
  5265  003278  6E01               	movwf	?___xxtofl^0,c
  5266  00327A  0E00               	movlw	0
  5267  00327C  6E02               	movwf	(?___xxtofl+1)^0,c
  5268  00327E  0E00               	movlw	0
  5269  003280  6E03               	movwf	(?___xxtofl+2)^0,c
  5270  003282  0E00               	movlw	0
  5271  003284  6E04               	movwf	(?___xxtofl+3)^0,c
  5272  003286  EFD6  F019         	goto	l1258
  5273  00328A                     l4374:
  5274  00328A  0E96               	movlw	150
  5275  00328C  6E0A               	movwf	___xxtofl@exp^0,c
  5276  00328E  EF4F  F019         	goto	l4378
  5277  003292                     l4376:
  5278  003292  2A0A               	incf	___xxtofl@exp^0,f,c
  5279  003294  90D8               	bcf	status,0,c
  5280  003296  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5281  003298  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5282  00329A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5283  00329C  320B               	rrcf	___xxtofl@arg^0,f,c
  5284  00329E                     l4378:
  5285  00329E  0E00               	movlw	0
  5286  0032A0  140B               	andwf	___xxtofl@arg^0,w,c
  5287  0032A2  6E05               	movwf	??___xxtofl^0,c
  5288  0032A4  0E00               	movlw	0
  5289  0032A6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5290  0032A8  6E06               	movwf	(??___xxtofl+1)^0,c
  5291  0032AA  0E00               	movlw	0
  5292  0032AC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5293  0032AE  6E07               	movwf	(??___xxtofl+2)^0,c
  5294  0032B0  0EFE               	movlw	254
  5295  0032B2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5296  0032B4  6E08               	movwf	(??___xxtofl+3)^0,c
  5297  0032B6  5005               	movf	??___xxtofl^0,w,c
  5298  0032B8  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5299  0032BA  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5300  0032BC  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5301  0032BE  A4D8               	btfss	status,2,c
  5302  0032C0  EF64  F019         	goto	u4521
  5303  0032C4  EF66  F019         	goto	u4520
  5304  0032C8                     u4521:
  5305  0032C8  EF49  F019         	goto	l4376
  5306  0032CC                     u4520:
  5307  0032CC  EF74  F019         	goto	l1262
  5308  0032D0                     l4380:
  5309  0032D0  2A0A               	incf	___xxtofl@exp^0,f,c
  5310  0032D2  0E01               	movlw	1
  5311  0032D4  260B               	addwf	___xxtofl@arg^0,f,c
  5312  0032D6  0E00               	movlw	0
  5313  0032D8  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5314  0032DA  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5315  0032DC  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5316  0032DE  90D8               	bcf	status,0,c
  5317  0032E0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5318  0032E2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5319  0032E4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5320  0032E6  320B               	rrcf	___xxtofl@arg^0,f,c
  5321  0032E8                     l1262:
  5322  0032E8  0E00               	movlw	0
  5323  0032EA  140B               	andwf	___xxtofl@arg^0,w,c
  5324  0032EC  6E05               	movwf	??___xxtofl^0,c
  5325  0032EE  0E00               	movlw	0
  5326  0032F0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5327  0032F2  6E06               	movwf	(??___xxtofl+1)^0,c
  5328  0032F4  0E00               	movlw	0
  5329  0032F6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5330  0032F8  6E07               	movwf	(??___xxtofl+2)^0,c
  5331  0032FA  0EFF               	movlw	255
  5332  0032FC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5333  0032FE  6E08               	movwf	(??___xxtofl+3)^0,c
  5334  003300  5005               	movf	??___xxtofl^0,w,c
  5335  003302  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5336  003304  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5337  003306  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5338  003308  A4D8               	btfss	status,2,c
  5339  00330A  EF89  F019         	goto	u4531
  5340  00330E  EF8B  F019         	goto	u4530
  5341  003312                     u4531:
  5342  003312  EF68  F019         	goto	l4380
  5343  003316                     u4530:
  5344  003316  EF93  F019         	goto	l4388
  5345  00331A                     l4386:
  5346  00331A  060A               	decf	___xxtofl@exp^0,f,c
  5347  00331C  90D8               	bcf	status,0,c
  5348  00331E  360B               	rlcf	___xxtofl@arg^0,f,c
  5349  003320  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5350  003322  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5351  003324  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5352  003326                     l4388:
  5353  003326  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5354  003328  EF98  F019         	goto	u4541
  5355  00332C  EF9A  F019         	goto	u4540
  5356  003330                     u4541:
  5357  003330  EFA2  F019         	goto	l1269
  5358  003334                     u4540:
  5359  003334  0E02               	movlw	2
  5360  003336  600A               	cpfslt	___xxtofl@exp^0,c
  5361  003338  EFA0  F019         	goto	u4551
  5362  00333C  EFA2  F019         	goto	u4550
  5363  003340                     u4551:
  5364  003340  EF8D  F019         	goto	l4386
  5365  003344                     u4550:
  5366  003344                     l1269:
  5367  003344  B00A               	btfsc	___xxtofl@exp^0,0,c
  5368  003346  EFA7  F019         	goto	u4561
  5369  00334A  EFA9  F019         	goto	u4560
  5370  00334E                     u4561:
  5371  00334E  EFAA  F019         	goto	l4394
  5372  003352                     u4560:
  5373  003352  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5374  003354                     l4394:
  5375  003354  90D8               	bcf	status,0,c
  5376  003356  320A               	rrcf	___xxtofl@exp^0,f,c
  5377  003358  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5378  00335C  6A06               	clrf	(??___xxtofl+1)^0,c
  5379  00335E  6A07               	clrf	(??___xxtofl+2)^0,c
  5380  003360  6A08               	clrf	(??___xxtofl+3)^0,c
  5381  003362  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5382  003366  6A07               	clrf	(??___xxtofl+2)^0,c
  5383  003368  6A06               	clrf	(??___xxtofl+1)^0,c
  5384  00336A  6A05               	clrf	??___xxtofl^0,c
  5385  00336C  5005               	movf	??___xxtofl^0,w,c
  5386  00336E  120B               	iorwf	___xxtofl@arg^0,f,c
  5387  003370  5006               	movf	(??___xxtofl+1)^0,w,c
  5388  003372  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5389  003374  5007               	movf	(??___xxtofl+2)^0,w,c
  5390  003376  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5391  003378  5008               	movf	(??___xxtofl+3)^0,w,c
  5392  00337A  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5393  00337C  5009               	movf	___xxtofl@sign^0,w,c
  5394  00337E  B4D8               	btfsc	status,2,c
  5395  003380  EFC4  F019         	goto	u4571
  5396  003384  EFC6  F019         	goto	u4570
  5397  003388                     u4571:
  5398  003388  EFCE  F019         	goto	l4404
  5399  00338C                     u4570:
  5400  00338C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5401  00338E  EFCD  F019         	goto	u4580
  5402  003392  EFCB  F019         	goto	u4581
  5403  003396                     u4581:
  5404  003396  EFCE  F019         	goto	l4404
  5405  00339A                     u4580:
  5406  00339A  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5407  00339C                     l4404:
  5408  00339C  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5409  0033A0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5410  0033A4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5411  0033A8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5412  0033AC                     l1258:
  5413  0033AC  0012               	return		;funcret
  5414  0033AE                     __end_of___xxtofl:
  5415                           	callstack 0
  5416                           
  5417 ;; *************** function ___fldiv *****************
  5418 ;; Defined at:
  5419 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;  b               4   14[COMRAM] unsigned char 
  5422 ;;  a               4   18[COMRAM] unsigned char 
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;  grs             4   33[COMRAM] unsigned long 
  5425 ;;  rem             4   26[COMRAM] unsigned long 
  5426 ;;  new_exp         2   31[COMRAM] short 
  5427 ;;  aexp            1   38[COMRAM] unsigned char 
  5428 ;;  bexp            1   37[COMRAM] unsigned char 
  5429 ;;  sign            1   30[COMRAM] unsigned char 
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  4   14[COMRAM] unsigned char 
  5432 ;; Registers used:
  5433 ;;		wreg, status,2, status,0
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5439 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5440 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5441 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5442 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5443 ;;Total ram usage:       25 bytes
  5444 ;; Hardware stack levels used: 1
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_detect_color
  5449 ;;		_check_color_reading
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text16
  5454  002782                     __ptext16:
  5455                           	callstack 0
  5456  002782                     ___fldiv:
  5457                           	callstack 29
  5458  002782  5012               	movf	(___fldiv@b+3)^0,w,c
  5459  002784  0B80               	andlw	128
  5460  002786  6E1F               	movwf	___fldiv@sign^0,c
  5461  002788  5012               	movf	(___fldiv@b+3)^0,w,c
  5462  00278A  2412               	addwf	(___fldiv@b+3)^0,w,c
  5463  00278C  6E26               	movwf	___fldiv@bexp^0,c
  5464  00278E  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5465  002790  EFCC  F013         	goto	u4261
  5466  002794  EFCE  F013         	goto	u4260
  5467  002798                     u4261:
  5468  002798  EFCF  F013         	goto	l4230
  5469  00279C                     u4260:
  5470  00279C  8026               	bsf	___fldiv@bexp^0,0,c
  5471  00279E                     l4230:
  5472  00279E  5026               	movf	___fldiv@bexp^0,w,c
  5473  0027A0  B4D8               	btfsc	status,2,c
  5474  0027A2  EFD5  F013         	goto	u4271
  5475  0027A6  EFD7  F013         	goto	u4270
  5476  0027AA                     u4271:
  5477  0027AA  EFEC  F013         	goto	l4240
  5478  0027AE                     u4270:
  5479  0027AE  2826               	incf	___fldiv@bexp^0,w,c
  5480  0027B0  A4D8               	btfss	status,2,c
  5481  0027B2  EFDD  F013         	goto	u4281
  5482  0027B6  EFDF  F013         	goto	u4280
  5483  0027BA                     u4281:
  5484  0027BA  EFE7  F013         	goto	l4236
  5485  0027BE                     u4280:
  5486  0027BE  0E00               	movlw	0
  5487  0027C0  6E0F               	movwf	___fldiv@b^0,c
  5488  0027C2  0E00               	movlw	0
  5489  0027C4  6E10               	movwf	(___fldiv@b+1)^0,c
  5490  0027C6  0E00               	movlw	0
  5491  0027C8  6E11               	movwf	(___fldiv@b+2)^0,c
  5492  0027CA  0E00               	movlw	0
  5493  0027CC  6E12               	movwf	(___fldiv@b+3)^0,c
  5494  0027CE                     l4236:
  5495  0027CE  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5496  0027D0  0E00               	movlw	0
  5497  0027D2  6E12               	movwf	(___fldiv@b+3)^0,c
  5498  0027D4  EFF4  F013         	goto	l4242
  5499  0027D8                     l4240:
  5500  0027D8  0E00               	movlw	0
  5501  0027DA  6E0F               	movwf	___fldiv@b^0,c
  5502  0027DC  0E00               	movlw	0
  5503  0027DE  6E10               	movwf	(___fldiv@b+1)^0,c
  5504  0027E0  0E00               	movlw	0
  5505  0027E2  6E11               	movwf	(___fldiv@b+2)^0,c
  5506  0027E4  0E00               	movlw	0
  5507  0027E6  6E12               	movwf	(___fldiv@b+3)^0,c
  5508  0027E8                     l4242:
  5509  0027E8  5016               	movf	(___fldiv@a+3)^0,w,c
  5510  0027EA  0B80               	andlw	128
  5511  0027EC  1A1F               	xorwf	___fldiv@sign^0,f,c
  5512  0027EE  5016               	movf	(___fldiv@a+3)^0,w,c
  5513  0027F0  2416               	addwf	(___fldiv@a+3)^0,w,c
  5514  0027F2  6E27               	movwf	___fldiv@aexp^0,c
  5515  0027F4  AE15               	btfss	(___fldiv@a+2)^0,7,c
  5516  0027F6  EFFF  F013         	goto	u4291
  5517  0027FA  EF01  F014         	goto	u4290
  5518  0027FE                     u4291:
  5519  0027FE  EF02  F014         	goto	l4250
  5520  002802                     u4290:
  5521  002802  8027               	bsf	___fldiv@aexp^0,0,c
  5522  002804                     l4250:
  5523  002804  5027               	movf	___fldiv@aexp^0,w,c
  5524  002806  B4D8               	btfsc	status,2,c
  5525  002808  EF08  F014         	goto	u4301
  5526  00280C  EF0A  F014         	goto	u4300
  5527  002810                     u4301:
  5528  002810  EF1F  F014         	goto	l4260
  5529  002814                     u4300:
  5530  002814  2827               	incf	___fldiv@aexp^0,w,c
  5531  002816  A4D8               	btfss	status,2,c
  5532  002818  EF10  F014         	goto	u4311
  5533  00281C  EF12  F014         	goto	u4310
  5534  002820                     u4311:
  5535  002820  EF1A  F014         	goto	l4256
  5536  002824                     u4310:
  5537  002824  0E00               	movlw	0
  5538  002826  6E13               	movwf	___fldiv@a^0,c
  5539  002828  0E00               	movlw	0
  5540  00282A  6E14               	movwf	(___fldiv@a+1)^0,c
  5541  00282C  0E00               	movlw	0
  5542  00282E  6E15               	movwf	(___fldiv@a+2)^0,c
  5543  002830  0E00               	movlw	0
  5544  002832  6E16               	movwf	(___fldiv@a+3)^0,c
  5545  002834                     l4256:
  5546  002834  8E15               	bsf	(___fldiv@a+2)^0,7,c
  5547  002836  0E00               	movlw	0
  5548  002838  6E16               	movwf	(___fldiv@a+3)^0,c
  5549  00283A  EF27  F014         	goto	l4262
  5550  00283E                     l4260:
  5551  00283E  0E00               	movlw	0
  5552  002840  6E13               	movwf	___fldiv@a^0,c
  5553  002842  0E00               	movlw	0
  5554  002844  6E14               	movwf	(___fldiv@a+1)^0,c
  5555  002846  0E00               	movlw	0
  5556  002848  6E15               	movwf	(___fldiv@a+2)^0,c
  5557  00284A  0E00               	movlw	0
  5558  00284C  6E16               	movwf	(___fldiv@a+3)^0,c
  5559  00284E                     l4262:
  5560  00284E  5013               	movf	___fldiv@a^0,w,c
  5561  002850  1014               	iorwf	(___fldiv@a+1)^0,w,c
  5562  002852  1015               	iorwf	(___fldiv@a+2)^0,w,c
  5563  002854  1016               	iorwf	(___fldiv@a+3)^0,w,c
  5564  002856  A4D8               	btfss	status,2,c
  5565  002858  EF30  F014         	goto	u4321
  5566  00285C  EF32  F014         	goto	u4320
  5567  002860                     u4321:
  5568  002860  EF4A  F014         	goto	l4274
  5569  002864                     u4320:
  5570  002864  0E00               	movlw	0
  5571  002866  6E0F               	movwf	___fldiv@b^0,c
  5572  002868  0E00               	movlw	0
  5573  00286A  6E10               	movwf	(___fldiv@b+1)^0,c
  5574  00286C  0E00               	movlw	0
  5575  00286E  6E11               	movwf	(___fldiv@b+2)^0,c
  5576  002870  0E00               	movlw	0
  5577  002872  6E12               	movwf	(___fldiv@b+3)^0,c
  5578  002874  0E80               	movlw	128
  5579  002876  1211               	iorwf	(___fldiv@b+2)^0,f,c
  5580  002878  0E7F               	movlw	127
  5581  00287A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5582  00287C                     l4268:
  5583  00287C  501F               	movf	___fldiv@sign^0,w,c
  5584  00287E  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5585  002880  C00F  F00F         	movff	___fldiv@b,?___fldiv
  5586  002884  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  5587  002888  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  5588  00288C  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  5589  002890  EF8D  F015         	goto	l1182
  5590  002894                     l4274:
  5591  002894  5026               	movf	___fldiv@bexp^0,w,c
  5592  002896  A4D8               	btfss	status,2,c
  5593  002898  EF50  F014         	goto	u4331
  5594  00289C  EF52  F014         	goto	u4330
  5595  0028A0                     u4331:
  5596  0028A0  EF5C  F014         	goto	l4282
  5597  0028A4                     u4330:
  5598  0028A4  0E00               	movlw	0
  5599  0028A6  6E0F               	movwf	?___fldiv^0,c
  5600  0028A8  0E00               	movlw	0
  5601  0028AA  6E10               	movwf	(?___fldiv+1)^0,c
  5602  0028AC  0E00               	movlw	0
  5603  0028AE  6E11               	movwf	(?___fldiv+2)^0,c
  5604  0028B0  0E00               	movlw	0
  5605  0028B2  6E12               	movwf	(?___fldiv+3)^0,c
  5606  0028B4  EF8D  F015         	goto	l1182
  5607  0028B8                     l4282:
  5608  0028B8  5027               	movf	___fldiv@aexp^0,w,c
  5609  0028BA  C026  F017         	movff	___fldiv@bexp,??___fldiv
  5610  0028BE  6A18               	clrf	(??___fldiv+1)^0,c
  5611  0028C0  5E17               	subwf	??___fldiv^0,f,c
  5612  0028C2  0E00               	movlw	0
  5613  0028C4  5A18               	subwfb	(??___fldiv+1)^0,f,c
  5614  0028C6  0E7F               	movlw	127
  5615  0028C8  2417               	addwf	??___fldiv^0,w,c
  5616  0028CA  6E20               	movwf	___fldiv@new_exp^0,c
  5617  0028CC  0E00               	movlw	0
  5618  0028CE  2018               	addwfc	(??___fldiv+1)^0,w,c
  5619  0028D0  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5620  0028D2  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  5621  0028D6  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  5622  0028DA  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  5623  0028DE  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  5624  0028E2  0E00               	movlw	0
  5625  0028E4  6E0F               	movwf	___fldiv@b^0,c
  5626  0028E6  0E00               	movlw	0
  5627  0028E8  6E10               	movwf	(___fldiv@b+1)^0,c
  5628  0028EA  0E00               	movlw	0
  5629  0028EC  6E11               	movwf	(___fldiv@b+2)^0,c
  5630  0028EE  0E00               	movlw	0
  5631  0028F0  6E12               	movwf	(___fldiv@b+3)^0,c
  5632  0028F2  0E00               	movlw	0
  5633  0028F4  6E22               	movwf	___fldiv@grs^0,c
  5634  0028F6  0E00               	movlw	0
  5635  0028F8  6E23               	movwf	(___fldiv@grs+1)^0,c
  5636  0028FA  0E00               	movlw	0
  5637  0028FC  6E24               	movwf	(___fldiv@grs+2)^0,c
  5638  0028FE  0E00               	movlw	0
  5639  002900  6E25               	movwf	(___fldiv@grs+3)^0,c
  5640  002902  0E00               	movlw	0
  5641  002904  6E27               	movwf	___fldiv@aexp^0,c
  5642  002906  EFBD  F014         	goto	l1184
  5643  00290A                     l4292:
  5644  00290A  5027               	movf	___fldiv@aexp^0,w,c
  5645  00290C  B4D8               	btfsc	status,2,c
  5646  00290E  EF8B  F014         	goto	u4341
  5647  002912  EF8D  F014         	goto	u4340
  5648  002916                     u4341:
  5649  002916  EFA4  F014         	goto	l4300
  5650  00291A                     u4340:
  5651  00291A  90D8               	bcf	status,0,c
  5652  00291C  361B               	rlcf	___fldiv@rem^0,f,c
  5653  00291E  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  5654  002920  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  5655  002922  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  5656  002924  90D8               	bcf	status,0,c
  5657  002926  360F               	rlcf	___fldiv@b^0,f,c
  5658  002928  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5659  00292A  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5660  00292C  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5661  00292E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5662  002930  EF9C  F014         	goto	u4351
  5663  002934  EF9E  F014         	goto	u4350
  5664  002938                     u4351:
  5665  002938  EF9F  F014         	goto	l1187
  5666  00293C                     u4350:
  5667  00293C  800F               	bsf	___fldiv@b^0,0,c
  5668  00293E                     l1187:
  5669  00293E  90D8               	bcf	status,0,c
  5670  002940  3622               	rlcf	___fldiv@grs^0,f,c
  5671  002942  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5672  002944  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5673  002946  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5674  002948                     l4300:
  5675  002948  5013               	movf	___fldiv@a^0,w,c
  5676  00294A  5C1B               	subwf	___fldiv@rem^0,w,c
  5677  00294C  5014               	movf	(___fldiv@a+1)^0,w,c
  5678  00294E  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  5679  002950  5015               	movf	(___fldiv@a+2)^0,w,c
  5680  002952  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  5681  002954  5016               	movf	(___fldiv@a+3)^0,w,c
  5682  002956  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  5683  002958  A0D8               	btfss	status,0,c
  5684  00295A  EFB1  F014         	goto	u4361
  5685  00295E  EFB3  F014         	goto	u4360
  5686  002962                     u4361:
  5687  002962  EFBC  F014         	goto	l4306
  5688  002966                     u4360:
  5689  002966  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  5690  002968  5013               	movf	___fldiv@a^0,w,c
  5691  00296A  5E1B               	subwf	___fldiv@rem^0,f,c
  5692  00296C  5014               	movf	(___fldiv@a+1)^0,w,c
  5693  00296E  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  5694  002970  5015               	movf	(___fldiv@a+2)^0,w,c
  5695  002972  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  5696  002974  5016               	movf	(___fldiv@a+3)^0,w,c
  5697  002976  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  5698  002978                     l4306:
  5699  002978  2A27               	incf	___fldiv@aexp^0,f,c
  5700  00297A                     l1184:
  5701  00297A  0E19               	movlw	25
  5702  00297C  6427               	cpfsgt	___fldiv@aexp^0,c
  5703  00297E  EFC3  F014         	goto	u4371
  5704  002982  EFC5  F014         	goto	u4370
  5705  002986                     u4371:
  5706  002986  EF85  F014         	goto	l4292
  5707  00298A                     u4370:
  5708  00298A  501B               	movf	___fldiv@rem^0,w,c
  5709  00298C  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  5710  00298E  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  5711  002990  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  5712  002992  B4D8               	btfsc	status,2,c
  5713  002994  EFCE  F014         	goto	u4381
  5714  002998  EFD0  F014         	goto	u4380
  5715  00299C                     u4381:
  5716  00299C  EFE8  F014         	goto	l4318
  5717  0029A0                     u4380:
  5718  0029A0  8022               	bsf	___fldiv@grs^0,0,c
  5719  0029A2  EFE8  F014         	goto	l4318
  5720  0029A6                     l4312:
  5721  0029A6  90D8               	bcf	status,0,c
  5722  0029A8  360F               	rlcf	___fldiv@b^0,f,c
  5723  0029AA  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5724  0029AC  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5725  0029AE  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5726  0029B0  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5727  0029B2  EFDD  F014         	goto	u4391
  5728  0029B6  EFDF  F014         	goto	u4390
  5729  0029BA                     u4391:
  5730  0029BA  EFE0  F014         	goto	l1193
  5731  0029BE                     u4390:
  5732  0029BE  800F               	bsf	___fldiv@b^0,0,c
  5733  0029C0                     l1193:
  5734  0029C0  90D8               	bcf	status,0,c
  5735  0029C2  3622               	rlcf	___fldiv@grs^0,f,c
  5736  0029C4  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5737  0029C6  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5738  0029C8  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5739  0029CA  0620               	decf	___fldiv@new_exp^0,f,c
  5740  0029CC  A0D8               	btfss	status,0,c
  5741  0029CE  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  5742  0029D0                     l4318:
  5743  0029D0  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5744  0029D2  EFED  F014         	goto	u4401
  5745  0029D6  EFEF  F014         	goto	u4400
  5746  0029DA                     u4401:
  5747  0029DA  EFD3  F014         	goto	l4312
  5748  0029DE                     u4400:
  5749  0029DE  0E00               	movlw	0
  5750  0029E0  6E27               	movwf	___fldiv@aexp^0,c
  5751  0029E2  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5752  0029E4  EFF6  F014         	goto	u4411
  5753  0029E8  EFF8  F014         	goto	u4410
  5754  0029EC                     u4411:
  5755  0029EC  EF1C  F015         	goto	l1195
  5756  0029F0                     u4410:
  5757  0029F0  0EFF               	movlw	255
  5758  0029F2  1422               	andwf	___fldiv@grs^0,w,c
  5759  0029F4  6E17               	movwf	??___fldiv^0,c
  5760  0029F6  0EFF               	movlw	255
  5761  0029F8  1423               	andwf	(___fldiv@grs+1)^0,w,c
  5762  0029FA  6E18               	movwf	(??___fldiv+1)^0,c
  5763  0029FC  0EFF               	movlw	255
  5764  0029FE  1424               	andwf	(___fldiv@grs+2)^0,w,c
  5765  002A00  6E19               	movwf	(??___fldiv+2)^0,c
  5766  002A02  0E7F               	movlw	127
  5767  002A04  1425               	andwf	(___fldiv@grs+3)^0,w,c
  5768  002A06  6E1A               	movwf	(??___fldiv+3)^0,c
  5769  002A08  5017               	movf	??___fldiv^0,w,c
  5770  002A0A  1018               	iorwf	(??___fldiv+1)^0,w,c
  5771  002A0C  1019               	iorwf	(??___fldiv+2)^0,w,c
  5772  002A0E  101A               	iorwf	(??___fldiv+3)^0,w,c
  5773  002A10  B4D8               	btfsc	status,2,c
  5774  002A12  EF0D  F015         	goto	u4421
  5775  002A16  EF0F  F015         	goto	u4420
  5776  002A1A                     u4421:
  5777  002A1A  EF13  F015         	goto	l1196
  5778  002A1E                     u4420:
  5779  002A1E                     l4326:
  5780  002A1E  0E01               	movlw	1
  5781  002A20  6E27               	movwf	___fldiv@aexp^0,c
  5782  002A22  EF1C  F015         	goto	l1195
  5783  002A26                     l1196:
  5784  002A26  A00F               	btfss	___fldiv@b^0,0,c
  5785  002A28  EF18  F015         	goto	u4431
  5786  002A2C  EF1A  F015         	goto	u4430
  5787  002A30                     u4431:
  5788  002A30  EF1C  F015         	goto	l1195
  5789  002A34                     u4430:
  5790  002A34  EF0F  F015         	goto	l4326
  5791  002A38                     l1195:
  5792  002A38  5027               	movf	___fldiv@aexp^0,w,c
  5793  002A3A  B4D8               	btfsc	status,2,c
  5794  002A3C  EF22  F015         	goto	u4441
  5795  002A40  EF24  F015         	goto	u4440
  5796  002A44                     u4441:
  5797  002A44  EF48  F015         	goto	l4338
  5798  002A48                     u4440:
  5799  002A48  0E01               	movlw	1
  5800  002A4A  260F               	addwf	___fldiv@b^0,f,c
  5801  002A4C  0E00               	movlw	0
  5802  002A4E  2210               	addwfc	(___fldiv@b+1)^0,f,c
  5803  002A50  2211               	addwfc	(___fldiv@b+2)^0,f,c
  5804  002A52  2212               	addwfc	(___fldiv@b+3)^0,f,c
  5805  002A54  A012               	btfss	(___fldiv@b+3)^0,0,c
  5806  002A56  EF2F  F015         	goto	u4451
  5807  002A5A  EF31  F015         	goto	u4450
  5808  002A5E                     u4451:
  5809  002A5E  EF48  F015         	goto	l4338
  5810  002A62                     u4450:
  5811  002A62  C00F  F017         	movff	___fldiv@b,??___fldiv
  5812  002A66  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  5813  002A6A  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  5814  002A6E  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  5815  002A72  341A               	rlcf	(??___fldiv+3)^0,w,c
  5816  002A74  321A               	rrcf	(??___fldiv+3)^0,f,c
  5817  002A76  3219               	rrcf	(??___fldiv+2)^0,f,c
  5818  002A78  3218               	rrcf	(??___fldiv+1)^0,f,c
  5819  002A7A  3217               	rrcf	??___fldiv^0,f,c
  5820  002A7C  C017  F00F         	movff	??___fldiv,___fldiv@b
  5821  002A80  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  5822  002A84  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  5823  002A88  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  5824  002A8C  4A20               	infsnz	___fldiv@new_exp^0,f,c
  5825  002A8E  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  5826  002A90                     l4338:
  5827  002A90  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5828  002A92  EF53  F015         	goto	u4461
  5829  002A96  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5830  002A98  E108               	bnz	u4460
  5831  002A9A  2820               	incf	___fldiv@new_exp^0,w,c
  5832  002A9C  A0D8               	btfss	status,0,c
  5833  002A9E  EF53  F015         	goto	u4461
  5834  002AA2  EF55  F015         	goto	u4460
  5835  002AA6                     u4461:
  5836  002AA6  EF60  F015         	goto	l4342
  5837  002AAA                     u4460:
  5838  002AAA  0E00               	movlw	0
  5839  002AAC  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5840  002AAE  6820               	setf	___fldiv@new_exp^0,c
  5841  002AB0  0E00               	movlw	0
  5842  002AB2  6E0F               	movwf	___fldiv@b^0,c
  5843  002AB4  0E00               	movlw	0
  5844  002AB6  6E10               	movwf	(___fldiv@b+1)^0,c
  5845  002AB8  0E00               	movlw	0
  5846  002ABA  6E11               	movwf	(___fldiv@b+2)^0,c
  5847  002ABC  0E00               	movlw	0
  5848  002ABE  6E12               	movwf	(___fldiv@b+3)^0,c
  5849  002AC0                     l4342:
  5850  002AC0  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5851  002AC2  EF6D  F015         	goto	u4470
  5852  002AC6  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5853  002AC8  E106               	bnz	u4471
  5854  002ACA  0420               	decf	___fldiv@new_exp^0,w,c
  5855  002ACC  B0D8               	btfsc	status,0,c
  5856  002ACE  EF6B  F015         	goto	u4471
  5857  002AD2  EF6D  F015         	goto	u4470
  5858  002AD6                     u4471:
  5859  002AD6  EF7B  F015         	goto	l4346
  5860  002ADA                     u4470:
  5861  002ADA  0E00               	movlw	0
  5862  002ADC  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5863  002ADE  0E00               	movlw	0
  5864  002AE0  6E20               	movwf	___fldiv@new_exp^0,c
  5865  002AE2  0E00               	movlw	0
  5866  002AE4  6E0F               	movwf	___fldiv@b^0,c
  5867  002AE6  0E00               	movlw	0
  5868  002AE8  6E10               	movwf	(___fldiv@b+1)^0,c
  5869  002AEA  0E00               	movlw	0
  5870  002AEC  6E11               	movwf	(___fldiv@b+2)^0,c
  5871  002AEE  0E00               	movlw	0
  5872  002AF0  6E12               	movwf	(___fldiv@b+3)^0,c
  5873  002AF2  0E00               	movlw	0
  5874  002AF4  6E1F               	movwf	___fldiv@sign^0,c
  5875  002AF6                     l4346:
  5876  002AF6  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  5877  002AFA  A026               	btfss	___fldiv@bexp^0,0,c
  5878  002AFC  EF82  F015         	goto	u4481
  5879  002B00  EF84  F015         	goto	u4480
  5880  002B04                     u4481:
  5881  002B04  EF87  F015         	goto	l4352
  5882  002B08                     u4480:
  5883  002B08  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5884  002B0A  EF88  F015         	goto	l4354
  5885  002B0E                     l4352:
  5886  002B0E  9E11               	bcf	(___fldiv@b+2)^0,7,c
  5887  002B10                     l4354:
  5888  002B10  90D8               	bcf	status,0,c
  5889  002B12  3026               	rrcf	___fldiv@bexp^0,w,c
  5890  002B14  6E12               	movwf	(___fldiv@b+3)^0,c
  5891  002B16  EF3E  F014         	goto	l4268
  5892  002B1A                     l1182:
  5893  002B1A  0012               	return		;funcret
  5894  002B1C                     __end_of___fldiv:
  5895                           	callstack 0
  5896                           
  5897 ;; *************** function _color_data_collection *****************
  5898 ;; Defined at:
  5899 ;;		line 137 in file "color.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;  m               2   89[COMRAM] PTR struct color_rgb
  5902 ;;		 -> main@rgb(8), 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;  x               2  132[BANK0 ] int 
  5905 ;;  k               2  130[BANK0 ] int 
  5906 ;;  j               2  128[BANK0 ] int 
  5907 ;;  i               2  126[BANK0 ] int 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      void 
  5910 ;; Registers used:
  5911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5918 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5919 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5920 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5921 ;;Total ram usage:       12 bytes
  5922 ;; Hardware stack levels used: 1
  5923 ;; Hardware stack levels required when called: 9
  5924 ;; This function calls:
  5925 ;;		_LED_B
  5926 ;;		_LED_C
  5927 ;;		_LED_G
  5928 ;;		_LED_R
  5929 ;;		_color_display
  5930 ;;		_color_predict
  5931 ;;		_read_color
  5932 ;; This function is called by:
  5933 ;;		_main
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text17
  5938  003562                     __ptext17:
  5939                           	callstack 0
  5940  003562                     _color_data_collection:
  5941                           	callstack 21
  5942  003562                     
  5943                           ;color.c: 139:     int i = 0; int j = 0; int k = 0; int x = 0;
  5944  003562  0E00               	movlw	0
  5945  003564  0100               	movlb	0	; () banked
  5946  003566  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  5947  003568  0E00               	movlw	0
  5948  00356A  6FDE               	movwf	color_data_collection@i& (0+255),b
  5949  00356C  0E00               	movlw	0
  5950  00356E  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  5951  003570  0E00               	movlw	0
  5952  003572  6FE2               	movwf	color_data_collection@k& (0+255),b
  5953  003574  0E00               	movlw	0
  5954  003576  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  5955  003578  0E00               	movlw	0
  5956  00357A  6FE4               	movwf	color_data_collection@x& (0+255),b
  5957                           
  5958                           ;color.c: 140:     for (i = 0; i < 1; ++i){
  5959  00357C  0E00               	movlw	0
  5960  00357E  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  5961  003580  0E00               	movlw	0
  5962  003582  6FDE               	movwf	color_data_collection@i& (0+255),b
  5963  003584                     l4424:
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;color.c: 141:         LED_C();
  5967  003584  EC6D  F026         	call	_LED_C	;wreg free
  5968  003588                     
  5969                           ;color.c: 142:         read_color(m);
  5970  003588  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5971  00358C  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5972  003590  EC8E  F023         	call	_read_color	;wreg free
  5973  003594                     
  5974                           ;color.c: 143:         color_display(m);
  5975  003594  C05A  F058         	movff	color_data_collection@m,color_display@m
  5976  003598  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5977  00359C  EC25  F023         	call	_color_display	;wreg free
  5978  0035A0                     
  5979                           ;color.c: 144:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5980  0035A0  0E29               	movlw	41
  5981  0035A2  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5982  0035A4  0E96               	movlw	150
  5983  0035A6  6E5C               	movwf	??_color_data_collection^0,c
  5984  0035A8  0E7F               	movlw	127
  5985  0035AA                     u5197:
  5986  0035AA  2EE8               	decfsz	wreg,f,c
  5987  0035AC  D7FE               	bra	u5197
  5988  0035AE  2E5C               	decfsz	??_color_data_collection^0,f,c
  5989  0035B0  D7FC               	bra	u5197
  5990  0035B2  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5991  0035B4  D7FA               	bra	u5197
  5992  0035B6  F000               	nop	
  5993  0035B8                     
  5994                           ;color.c: 145:     }
  5995  0035B8  0100               	movlb	0	; () banked
  5996  0035BA  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  5997  0035BC  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  5998  0035BE                     
  5999                           ; BSR set to: 0
  6000  0035BE  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  6001  0035C0  EFEA  F01A         	goto	u4591
  6002  0035C4  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  6003  0035C6  E108               	bnz	u4590
  6004  0035C8  05DE               	decf	color_data_collection@i& (0+255),w,b
  6005  0035CA  A0D8               	btfss	status,0,c
  6006  0035CC  EFEA  F01A         	goto	u4591
  6007  0035D0  EFEC  F01A         	goto	u4590
  6008  0035D4                     u4591:
  6009  0035D4  EFC2  F01A         	goto	l4424
  6010  0035D8                     u4590:
  6011  0035D8                     
  6012                           ; BSR set to: 0
  6013                           ;color.c: 147:     for (j = 0; j < 1; ++j){
  6014  0035D8  0E00               	movlw	0
  6015  0035DA  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  6016  0035DC  0E00               	movlw	0
  6017  0035DE  6FE0               	movwf	color_data_collection@j& (0+255),b
  6018  0035E0                     l4442:
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;color.c: 148:         LED_R();
  6022  0035E0  EC8D  F026         	call	_LED_R	;wreg free
  6023  0035E4                     
  6024                           ;color.c: 149:         read_color(m);
  6025  0035E4  C05A  F00C         	movff	color_data_collection@m,read_color@m
  6026  0035E8  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  6027  0035EC  EC8E  F023         	call	_read_color	;wreg free
  6028  0035F0                     
  6029                           ;color.c: 150:         color_display(m);
  6030  0035F0  C05A  F058         	movff	color_data_collection@m,color_display@m
  6031  0035F4  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  6032  0035F8  EC25  F023         	call	_color_display	;wreg free
  6033  0035FC                     
  6034                           ;color.c: 151:         _delay((unsigned long)((500)*(64000000/4000.0)));
  6035  0035FC  0E29               	movlw	41
  6036  0035FE  6E5D               	movwf	(??_color_data_collection+1)^0,c
  6037  003600  0E96               	movlw	150
  6038  003602  6E5C               	movwf	??_color_data_collection^0,c
  6039  003604  0E7F               	movlw	127
  6040  003606                     u5207:
  6041  003606  2EE8               	decfsz	wreg,f,c
  6042  003608  D7FE               	bra	u5207
  6043  00360A  2E5C               	decfsz	??_color_data_collection^0,f,c
  6044  00360C  D7FC               	bra	u5207
  6045  00360E  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  6046  003610  D7FA               	bra	u5207
  6047  003612  F000               	nop	
  6048  003614                     
  6049                           ;color.c: 152:     }
  6050  003614  0100               	movlb	0	; () banked
  6051  003616  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  6052  003618  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  6053  00361A                     
  6054                           ; BSR set to: 0
  6055  00361A  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  6056  00361C  EF18  F01B         	goto	u4601
  6057  003620  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  6058  003622  E108               	bnz	u4600
  6059  003624  05E0               	decf	color_data_collection@j& (0+255),w,b
  6060  003626  A0D8               	btfss	status,0,c
  6061  003628  EF18  F01B         	goto	u4601
  6062  00362C  EF1A  F01B         	goto	u4600
  6063  003630                     u4601:
  6064  003630  EFF0  F01A         	goto	l4442
  6065  003634                     u4600:
  6066  003634                     
  6067                           ; BSR set to: 0
  6068                           ;color.c: 154:     for (k = 0; k < 1; ++k){
  6069  003634  0E00               	movlw	0
  6070  003636  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  6071  003638  0E00               	movlw	0
  6072  00363A  6FE2               	movwf	color_data_collection@k& (0+255),b
  6073  00363C                     l4460:
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;color.c: 155:         LED_G();
  6077  00363C  EC9D  F026         	call	_LED_G	;wreg free
  6078  003640                     
  6079                           ;color.c: 156:         read_color(m);
  6080  003640  C05A  F00C         	movff	color_data_collection@m,read_color@m
  6081  003644  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  6082  003648  EC8E  F023         	call	_read_color	;wreg free
  6083  00364C                     
  6084                           ;color.c: 157:         color_display(m);
  6085  00364C  C05A  F058         	movff	color_data_collection@m,color_display@m
  6086  003650  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  6087  003654  EC25  F023         	call	_color_display	;wreg free
  6088  003658                     
  6089                           ;color.c: 158:         _delay((unsigned long)((500)*(64000000/4000.0)));
  6090  003658  0E29               	movlw	41
  6091  00365A  6E5D               	movwf	(??_color_data_collection+1)^0,c
  6092  00365C  0E96               	movlw	150
  6093  00365E  6E5C               	movwf	??_color_data_collection^0,c
  6094  003660  0E7F               	movlw	127
  6095  003662                     u5217:
  6096  003662  2EE8               	decfsz	wreg,f,c
  6097  003664  D7FE               	bra	u5217
  6098  003666  2E5C               	decfsz	??_color_data_collection^0,f,c
  6099  003668  D7FC               	bra	u5217
  6100  00366A  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  6101  00366C  D7FA               	bra	u5217
  6102  00366E  F000               	nop	
  6103  003670                     
  6104                           ;color.c: 159:     }
  6105  003670  0100               	movlb	0	; () banked
  6106  003672  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  6107  003674  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  6108  003676                     
  6109                           ; BSR set to: 0
  6110  003676  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  6111  003678  EF46  F01B         	goto	u4611
  6112  00367C  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  6113  00367E  E108               	bnz	u4610
  6114  003680  05E2               	decf	color_data_collection@k& (0+255),w,b
  6115  003682  A0D8               	btfss	status,0,c
  6116  003684  EF46  F01B         	goto	u4611
  6117  003688  EF48  F01B         	goto	u4610
  6118  00368C                     u4611:
  6119  00368C  EF1E  F01B         	goto	l4460
  6120  003690                     u4610:
  6121  003690                     
  6122                           ; BSR set to: 0
  6123                           ;color.c: 161:     for (x = 0; x < 1; ++x){
  6124  003690  0E00               	movlw	0
  6125  003692  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  6126  003694  0E00               	movlw	0
  6127  003696  6FE4               	movwf	color_data_collection@x& (0+255),b
  6128  003698                     l4478:
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;color.c: 162:         LED_B();
  6132  003698  ECAD  F026         	call	_LED_B	;wreg free
  6133  00369C                     
  6134                           ;color.c: 163:         read_color(m);
  6135  00369C  C05A  F00C         	movff	color_data_collection@m,read_color@m
  6136  0036A0  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  6137  0036A4  EC8E  F023         	call	_read_color	;wreg free
  6138  0036A8                     
  6139                           ;color.c: 164:         color_display(m);
  6140  0036A8  C05A  F058         	movff	color_data_collection@m,color_display@m
  6141  0036AC  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  6142  0036B0  EC25  F023         	call	_color_display	;wreg free
  6143  0036B4                     
  6144                           ;color.c: 165:         _delay((unsigned long)((500)*(64000000/4000.0)));
  6145  0036B4  0E29               	movlw	41
  6146  0036B6  6E5D               	movwf	(??_color_data_collection+1)^0,c
  6147  0036B8  0E96               	movlw	150
  6148  0036BA  6E5C               	movwf	??_color_data_collection^0,c
  6149  0036BC  0E7F               	movlw	127
  6150  0036BE                     u5227:
  6151  0036BE  2EE8               	decfsz	wreg,f,c
  6152  0036C0  D7FE               	bra	u5227
  6153  0036C2  2E5C               	decfsz	??_color_data_collection^0,f,c
  6154  0036C4  D7FC               	bra	u5227
  6155  0036C6  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  6156  0036C8  D7FA               	bra	u5227
  6157  0036CA  F000               	nop	
  6158  0036CC                     
  6159                           ;color.c: 166:     }
  6160  0036CC  0100               	movlb	0	; () banked
  6161  0036CE  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  6162  0036D0  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  6163  0036D2                     
  6164                           ; BSR set to: 0
  6165  0036D2  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  6166  0036D4  EF74  F01B         	goto	u4621
  6167  0036D8  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  6168  0036DA  E108               	bnz	u4620
  6169  0036DC  05E4               	decf	color_data_collection@x& (0+255),w,b
  6170  0036DE  A0D8               	btfss	status,0,c
  6171  0036E0  EF74  F01B         	goto	u4621
  6172  0036E4  EF76  F01B         	goto	u4620
  6173  0036E8                     u4621:
  6174  0036E8  EF4C  F01B         	goto	l4478
  6175  0036EC                     u4620:
  6176  0036EC                     
  6177                           ; BSR set to: 0
  6178                           ;color.c: 167:     color_predict(00000);
  6179  0036EC  0E00               	movlw	0
  6180  0036EE  ECB9  F01F         	call	_color_predict
  6181  0036F2                     
  6182                           ;color.c: 168:     LED_C();
  6183  0036F2  EC6D  F026         	call	_LED_C	;wreg free
  6184  0036F6  0012               	return		;funcret
  6185  0036F8                     __end_of_color_data_collection:
  6186                           	callstack 0
  6187                           
  6188 ;; *************** function _read_color *****************
  6189 ;; Defined at:
  6190 ;;		line 92 in file "color.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  m               2   11[COMRAM] PTR struct color_rgb
  6193 ;;		 -> main@rgb(8), 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;		None
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1    wreg      void 
  6198 ;; Registers used:
  6199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6209 ;;Total ram usage:        2 bytes
  6210 ;; Hardware stack levels used: 1
  6211 ;; Hardware stack levels required when called: 3
  6212 ;; This function calls:
  6213 ;;		_color_read_Blue
  6214 ;;		_color_read_Clear
  6215 ;;		_color_read_Green
  6216 ;;		_color_read_Red
  6217 ;; This function is called by:
  6218 ;;		_color_data_collection
  6219 ;;		_detect_color
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text18
  6224  00471C                     __ptext18:
  6225                           	callstack 0
  6226  00471C                     _read_color:
  6227                           	callstack 26
  6228  00471C                     
  6229                           ;color.c: 92: void read_color (struct color_rgb *m);color.c: 93: {;color.c: 94:     m->R
      +                           = color_read_Red();
  6230  00471C  EC0E  F024         	call	_color_read_Red	;wreg free
  6231  004720  C00C  FFD9         	movff	read_color@m,fsr2l
  6232  004724  C00D  FFDA         	movff	read_color@m+1,fsr2h
  6233  004728  C005  FFDE         	movff	?_color_read_Red,postinc2
  6234  00472C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6235                           
  6236                           ;color.c: 95:     m->B = color_read_Blue();
  6237  004730  EC5E  F024         	call	_color_read_Blue	;wreg free
  6238  004734  EE20 F004          	lfsr	2,4
  6239  004738  500C               	movf	read_color@m^0,w,c
  6240  00473A  26D9               	addwf	fsr2l,f,c
  6241  00473C  500D               	movf	(read_color@m+1)^0,w,c
  6242  00473E  22DA               	addwfc	fsr2h,f,c
  6243  004740  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6244  004744  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6245                           
  6246                           ;color.c: 96:     m->G = color_read_Green();
  6247  004748  EC36  F024         	call	_color_read_Green	;wreg free
  6248  00474C  EE20 F002          	lfsr	2,2
  6249  004750  500C               	movf	read_color@m^0,w,c
  6250  004752  26D9               	addwf	fsr2l,f,c
  6251  004754  500D               	movf	(read_color@m+1)^0,w,c
  6252  004756  22DA               	addwfc	fsr2h,f,c
  6253  004758  C005  FFDE         	movff	?_color_read_Green,postinc2
  6254  00475C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6255                           
  6256                           ;color.c: 97:     m->C = color_read_Clear();
  6257  004760  ECE6  F023         	call	_color_read_Clear	;wreg free
  6258  004764  EE20 F006          	lfsr	2,6
  6259  004768  500C               	movf	read_color@m^0,w,c
  6260  00476A  26D9               	addwf	fsr2l,f,c
  6261  00476C  500D               	movf	(read_color@m+1)^0,w,c
  6262  00476E  22DA               	addwfc	fsr2h,f,c
  6263  004770  C005  FFDE         	movff	?_color_read_Clear,postinc2
  6264  004774  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  6265  004778  0012               	return		;funcret
  6266  00477A                     __end_of_read_color:
  6267                           	callstack 0
  6268                           
  6269 ;; *************** function _color_read_Clear *****************
  6270 ;; Defined at:
  6271 ;;		line 78 in file "color.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;		None
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;  tmp             2    9[COMRAM] unsigned int 
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  2    4[COMRAM] unsigned int 
  6278 ;; Registers used:
  6279 ;;		wreg, status,2, status,0, cstack
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6287 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6288 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6289 ;;Total ram usage:        7 bytes
  6290 ;; Hardware stack levels used: 1
  6291 ;; Hardware stack levels required when called: 2
  6292 ;; This function calls:
  6293 ;;		_I2C_2_Master_Read
  6294 ;;		_I2C_2_Master_RepStart
  6295 ;;		_I2C_2_Master_Start
  6296 ;;		_I2C_2_Master_Stop
  6297 ;;		_I2C_2_Master_Write
  6298 ;; This function is called by:
  6299 ;;		_read_color
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text19
  6304  0047CC                     __ptext19:
  6305                           	callstack 0
  6306  0047CC                     _color_read_Clear:
  6307                           	callstack 26
  6308  0047CC                     
  6309                           ;color.c: 80:  unsigned int tmp;;color.c: 81:  I2C_2_Master_Start();
  6310  0047CC  ECFE  F026         	call	_I2C_2_Master_Start	;wreg free
  6311                           
  6312                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  6313  0047D0  0E52               	movlw	82
  6314  0047D2  ECF3  F026         	call	_I2C_2_Master_Write
  6315                           
  6316                           ;color.c: 83:  I2C_2_Master_Write(0xA0 | 0x14);
  6317  0047D6  0EB4               	movlw	180
  6318  0047D8  ECF3  F026         	call	_I2C_2_Master_Write
  6319                           
  6320                           ;color.c: 84:  I2C_2_Master_RepStart();
  6321  0047DC  EC03  F027         	call	_I2C_2_Master_RepStart	;wreg free
  6322                           
  6323                           ;color.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  6324  0047E0  0E53               	movlw	83
  6325  0047E2  ECF3  F026         	call	_I2C_2_Master_Write
  6326                           
  6327                           ;color.c: 86:  tmp=I2C_2_Master_Read(1);
  6328  0047E6  0E01               	movlw	1
  6329  0047E8  ECEC  F024         	call	_I2C_2_Master_Read
  6330  0047EC  6E07               	movwf	??_color_read_Clear^0,c
  6331  0047EE  5007               	movf	??_color_read_Clear^0,w,c
  6332  0047F0  6E0A               	movwf	color_read_Clear@tmp^0,c
  6333  0047F2  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  6334                           
  6335                           ;color.c: 87:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6336  0047F4  0E00               	movlw	0
  6337  0047F6  ECEC  F024         	call	_I2C_2_Master_Read
  6338  0047FA  6E07               	movwf	??_color_read_Clear^0,c
  6339  0047FC  5007               	movf	??_color_read_Clear^0,w,c
  6340  0047FE  6E09               	movwf	(??_color_read_Clear+2)^0,c
  6341  004800  6A08               	clrf	(??_color_read_Clear+1)^0,c
  6342  004802  500A               	movf	color_read_Clear@tmp^0,w,c
  6343  004804  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  6344  004806  6E0A               	movwf	color_read_Clear@tmp^0,c
  6345  004808  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  6346  00480A  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  6347  00480C  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  6348                           
  6349                           ;color.c: 88:  I2C_2_Master_Stop();
  6350  00480E  ECF9  F026         	call	_I2C_2_Master_Stop	;wreg free
  6351  004812                     
  6352                           ;color.c: 89:  return tmp;
  6353  004812  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  6354  004816  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  6355  00481A  0012               	return		;funcret
  6356  00481C                     __end_of_color_read_Clear:
  6357                           	callstack 0
  6358                           
  6359 ;; *************** function _color_predict *****************
  6360 ;; Defined at:
  6361 ;;		line 187 in file "color.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  color           1    wreg     unsigned char 
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;  color           1  125[BANK0 ] unsigned char 
  6366 ;;  buf           100   25[BANK0 ] unsigned char [100]
  6367 ;;  color_name      1    0        unsigned char 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  1    wreg      void 
  6370 ;; Registers used:
  6371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6378 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6380 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6381 ;;Total ram usage:      101 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; Hardware stack levels required when called: 8
  6384 ;; This function calls:
  6385 ;;		_sendStringSerial4
  6386 ;;		_sprintf
  6387 ;; This function is called by:
  6388 ;;		_color_data_collection
  6389 ;;		_main
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text20
  6394  003F72                     __ptext20:
  6395                           	callstack 0
  6396  003F72                     _color_predict:
  6397                           	callstack 22
  6398                           
  6399                           ;incstack = 0
  6400                           ;color_predict@color stored from wreg
  6401  003F72  0100               	movlb	0	; () banked
  6402  003F74  6FDD               	movwf	color_predict@color& (0+255),b
  6403  003F76                     
  6404                           ;color.c: 187: void color_predict(unsigned char color);color.c: 188: {;color.c: 189:    
      +                           char buf[100];;color.c: 190:     char color_name;;color.c: 191:     if (color == 0){col
      +                          or_name = "Error";}
  6405  003F76  0100               	movlb	0	; () banked
  6406  003F78  51DD               	movf	color_predict@color& (0+255),w,b
  6407  003F7A  A4D8               	btfss	status,2,c
  6408  003F7C  EFC2  F01F         	goto	u4081
  6409  003F80  EFC4  F01F         	goto	u4080
  6410  003F84                     u4081:
  6411  003F84  EFC4  F01F         	goto	l4110
  6412  003F88                     u4080:
  6413  003F88                     l4110:
  6414                           
  6415                           ; BSR set to: 0
  6416                           ;color.c: 192:     if (color == 1){color_name = "Red";}
  6417  003F88  05DD               	decf	color_predict@color& (0+255),w,b
  6418  003F8A  A4D8               	btfss	status,2,c
  6419  003F8C  EFCA  F01F         	goto	u4091
  6420  003F90  EFCC  F01F         	goto	u4090
  6421  003F94                     u4091:
  6422  003F94  EFCC  F01F         	goto	l4114
  6423  003F98                     u4090:
  6424  003F98                     l4114:
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;color.c: 193:     if (color == 2){color_name = "Green";}
  6428  003F98  0E02               	movlw	2
  6429  003F9A  19DD               	xorwf	color_predict@color& (0+255),w,b
  6430  003F9C  A4D8               	btfss	status,2,c
  6431  003F9E  EFD3  F01F         	goto	u4101
  6432  003FA2  EFD5  F01F         	goto	u4100
  6433  003FA6                     u4101:
  6434  003FA6  EFD5  F01F         	goto	l4118
  6435  003FAA                     u4100:
  6436  003FAA                     l4118:
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;color.c: 194:     if (color == 3){color_name = "Blue";}
  6440  003FAA  0E03               	movlw	3
  6441  003FAC  19DD               	xorwf	color_predict@color& (0+255),w,b
  6442  003FAE  A4D8               	btfss	status,2,c
  6443  003FB0  EFDC  F01F         	goto	u4111
  6444  003FB4  EFDE  F01F         	goto	u4110
  6445  003FB8                     u4111:
  6446  003FB8  EFDE  F01F         	goto	l4122
  6447  003FBC                     u4110:
  6448  003FBC                     l4122:
  6449                           
  6450                           ; BSR set to: 0
  6451                           ;color.c: 195:     if (color == 4){color_name = "Yellow";}
  6452  003FBC  0E04               	movlw	4
  6453  003FBE  19DD               	xorwf	color_predict@color& (0+255),w,b
  6454  003FC0  A4D8               	btfss	status,2,c
  6455  003FC2  EFE5  F01F         	goto	u4121
  6456  003FC6  EFE7  F01F         	goto	u4120
  6457  003FCA                     u4121:
  6458  003FCA  EFE7  F01F         	goto	l4126
  6459  003FCE                     u4120:
  6460  003FCE                     l4126:
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;color.c: 196:     if (color == 5){color_name = "Pink";}
  6464  003FCE  0E05               	movlw	5
  6465  003FD0  19DD               	xorwf	color_predict@color& (0+255),w,b
  6466  003FD2  A4D8               	btfss	status,2,c
  6467  003FD4  EFEE  F01F         	goto	u4131
  6468  003FD8  EFF0  F01F         	goto	u4130
  6469  003FDC                     u4131:
  6470  003FDC  EFF0  F01F         	goto	l4130
  6471  003FE0                     u4130:
  6472  003FE0                     l4130:
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;color.c: 197:     if (color == 6){color_name = "Orange";}
  6476  003FE0  0E06               	movlw	6
  6477  003FE2  19DD               	xorwf	color_predict@color& (0+255),w,b
  6478  003FE4  A4D8               	btfss	status,2,c
  6479  003FE6  EFF7  F01F         	goto	u4141
  6480  003FEA  EFF9  F01F         	goto	u4140
  6481  003FEE                     u4141:
  6482  003FEE  EFF9  F01F         	goto	l4134
  6483  003FF2                     u4140:
  6484  003FF2                     l4134:
  6485                           
  6486                           ; BSR set to: 0
  6487                           ;color.c: 198:     if (color == 7){color_name = "Light blue";}
  6488  003FF2  0E07               	movlw	7
  6489  003FF4  19DD               	xorwf	color_predict@color& (0+255),w,b
  6490  003FF6  A4D8               	btfss	status,2,c
  6491  003FF8  EF00  F020         	goto	u4151
  6492  003FFC  EF02  F020         	goto	u4150
  6493  004000                     u4151:
  6494  004000  EF02  F020         	goto	l4138
  6495  004004                     u4150:
  6496  004004                     l4138:
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;color.c: 199:     if (color == 8){color_name = "White";}
  6500  004004  0E08               	movlw	8
  6501  004006  19DD               	xorwf	color_predict@color& (0+255),w,b
  6502  004008  A4D8               	btfss	status,2,c
  6503  00400A  EF09  F020         	goto	u4161
  6504  00400E  EF0B  F020         	goto	u4160
  6505  004012                     u4161:
  6506  004012  EF0B  F020         	goto	l4142
  6507  004016                     u4160:
  6508  004016                     l4142:
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;color.c: 200:     if (color == 9){color_name = "Black";}
  6512  004016  0E09               	movlw	9
  6513  004018  19DD               	xorwf	color_predict@color& (0+255),w,b
  6514  00401A  A4D8               	btfss	status,2,c
  6515  00401C  EF12  F020         	goto	u4171
  6516  004020  EF14  F020         	goto	u4170
  6517  004024                     u4171:
  6518  004024  EF14  F020         	goto	l4146
  6519  004028                     u4170:
  6520  004028                     l4146:
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;color.c: 202:     sprintf(buf,"\t%d\r\n", color);
  6524  004028  0E79               	movlw	low color_predict@buf
  6525  00402A  6F60               	movwf	sprintf@s& (0+255),b
  6526  00402C  0E00               	movlw	high color_predict@buf
  6527  00402E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  6528  004030  0E0D               	movlw	low (STR_1+8)
  6529  004032  6F62               	movwf	sprintf@fmt& (0+255),b
  6530  004034  0E0E               	movlw	high (STR_1+8)
  6531  004036  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  6532  004038  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  6533  00403C  6B65               	clrf	(?_sprintf+5)& (0+255),b
  6534  00403E  ECBD  F023         	call	_sprintf	;wreg free
  6535  004042                     
  6536                           ;color.c: 203:     sendStringSerial4(buf);
  6537  004042  0E79               	movlw	low color_predict@buf
  6538  004044  6E02               	movwf	sendStringSerial4@string^0,c
  6539  004046  0E00               	movlw	high color_predict@buf
  6540  004048  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  6541  00404A  EC19  F026         	call	_sendStringSerial4	;wreg free
  6542  00404E  0012               	return		;funcret
  6543  004050                     __end_of_color_predict:
  6544                           	callstack 0
  6545                           
  6546 ;; *************** function _color_display *****************
  6547 ;; Defined at:
  6548 ;;		line 171 in file "color.c"
  6549 ;; Parameters:    Size  Location     Type
  6550 ;;  m               2   87[COMRAM] PTR struct color_rgb
  6551 ;;		 -> main@rgb(8), 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;  buf           100   25[BANK0 ] unsigned char [100]
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  1    wreg      void 
  6556 ;; Registers used:
  6557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6564 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6566 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6567 ;;Total ram usage:      102 bytes
  6568 ;; Hardware stack levels used: 1
  6569 ;; Hardware stack levels required when called: 8
  6570 ;; This function calls:
  6571 ;;		_sendStringSerial4
  6572 ;;		_sprintf
  6573 ;; This function is called by:
  6574 ;;		_color_data_collection
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           	psect	text21
  6579  00464A                     __ptext21:
  6580                           	callstack 0
  6581  00464A                     _color_display:
  6582                           	callstack 21
  6583  00464A                     
  6584                           ;color.c: 171: void color_display(struct color_rgb *m);color.c: 172: {;color.c: 173:    
      +                           char buf[100];;color.c: 174:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  6585  00464A  0E79               	movlw	low color_display@buf
  6586  00464C  0100               	movlb	0	; () banked
  6587  00464E  6F60               	movwf	sprintf@s& (0+255),b
  6588  004650  0E00               	movlw	high color_display@buf
  6589  004652  6F61               	movwf	(sprintf@s+1)& (0+255),b
  6590  004654  0E05               	movlw	low STR_1
  6591  004656  6F62               	movwf	sprintf@fmt& (0+255),b
  6592  004658  0E0E               	movlw	high STR_1
  6593  00465A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  6594  00465C  C058  FFD9         	movff	color_display@m,fsr2l
  6595  004660  C059  FFDA         	movff	color_display@m+1,fsr2h
  6596  004664  CFDE F064          	movff	postinc2,?_sprintf+4
  6597  004668  CFDD F065          	movff	postdec2,?_sprintf+5
  6598  00466C  EE20 F002          	lfsr	2,2
  6599  004670  5058               	movf	color_display@m^0,w,c
  6600  004672  26D9               	addwf	fsr2l,f,c
  6601  004674  5059               	movf	(color_display@m+1)^0,w,c
  6602  004676  22DA               	addwfc	fsr2h,f,c
  6603  004678  CFDE F066          	movff	postinc2,?_sprintf+6
  6604  00467C  CFDD F067          	movff	postdec2,?_sprintf+7
  6605  004680  EE20 F004          	lfsr	2,4
  6606  004684  5058               	movf	color_display@m^0,w,c
  6607  004686  26D9               	addwf	fsr2l,f,c
  6608  004688  5059               	movf	(color_display@m+1)^0,w,c
  6609  00468A  22DA               	addwfc	fsr2h,f,c
  6610  00468C  CFDE F068          	movff	postinc2,?_sprintf+8
  6611  004690  CFDD F069          	movff	postdec2,?_sprintf+9
  6612  004694  EE20 F006          	lfsr	2,6
  6613  004698  5058               	movf	color_display@m^0,w,c
  6614  00469A  26D9               	addwf	fsr2l,f,c
  6615  00469C  5059               	movf	(color_display@m+1)^0,w,c
  6616  00469E  22DA               	addwfc	fsr2h,f,c
  6617  0046A0  CFDE F06A          	movff	postinc2,?_sprintf+10
  6618  0046A4  CFDD F06B          	movff	postdec2,?_sprintf+11
  6619  0046A8  ECBD  F023         	call	_sprintf	;wreg free
  6620  0046AC                     
  6621                           ;color.c: 175:     sendStringSerial4(buf);
  6622  0046AC  0E79               	movlw	low color_display@buf
  6623  0046AE  6E02               	movwf	sendStringSerial4@string^0,c
  6624  0046B0  0E00               	movlw	high color_display@buf
  6625  0046B2  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  6626  0046B4  EC19  F026         	call	_sendStringSerial4	;wreg free
  6627  0046B8  0012               	return		;funcret
  6628  0046BA                     __end_of_color_display:
  6629                           	callstack 0
  6630                           
  6631 ;; *************** function _sprintf *****************
  6632 ;; Defined at:
  6633 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  s               2    0[BANK0 ] PTR unsigned char 
  6636 ;;		 -> voltage_display@buf(80), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  6637 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  6638 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;  f              11   14[BANK0 ] struct _IO_FILE
  6641 ;;  ap              2   12[BANK0 ] PTR void [1]
  6642 ;;		 -> ?_sprintf(2), 
  6643 ;;  ret             2    0        int 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  2    0[BANK0 ] int 
  6646 ;; Registers used:
  6647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6653 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6654 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6656 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6657 ;;Total ram usage:       25 bytes
  6658 ;; Hardware stack levels used: 1
  6659 ;; Hardware stack levels required when called: 7
  6660 ;; This function calls:
  6661 ;;		_vfprintf
  6662 ;; This function is called by:
  6663 ;;		_color_display
  6664 ;;		_color_predict
  6665 ;;		_check_color_reading
  6666 ;;		_voltage_display
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text22
  6671  00477A                     __ptext22:
  6672                           	callstack 0
  6673  00477A                     _sprintf:
  6674                           	callstack 22
  6675  00477A  0E64               	movlw	low (?_sprintf+4)
  6676  00477C  0100               	movlb	0	; () banked
  6677  00477E  6F6C               	movwf	sprintf@ap& (0+255),b
  6678  004780  0E00               	movlw	high (?_sprintf+4)
  6679  004782  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  6680  004784  C060  F06E         	movff	sprintf@s,sprintf@f
  6681  004788  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  6682  00478C                     
  6683                           ; BSR set to: 0
  6684  00478C  0E00               	movlw	0
  6685  00478E  6F72               	movwf	(sprintf@f+4)& (0+255),b
  6686  004790  0E00               	movlw	0
  6687  004792  6F71               	movwf	(sprintf@f+3)& (0+255),b
  6688  004794                     
  6689                           ; BSR set to: 0
  6690  004794  0E00               	movlw	0
  6691  004796  6F78               	movwf	(sprintf@f+10)& (0+255),b
  6692  004798  0E00               	movlw	0
  6693  00479A  6F77               	movwf	(sprintf@f+9)& (0+255),b
  6694  00479C                     
  6695                           ; BSR set to: 0
  6696  00479C  0E6E               	movlw	low sprintf@f
  6697  00479E  6E50               	movwf	vfprintf@fp^0,c
  6698  0047A0  0E00               	movlw	high sprintf@f
  6699  0047A2  6E51               	movwf	(vfprintf@fp+1)^0,c
  6700  0047A4  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  6701  0047A8  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6702  0047AC  0E6C               	movlw	low sprintf@ap
  6703  0047AE  6E54               	movwf	vfprintf@ap^0,c
  6704  0047B0  0E00               	movlw	high sprintf@ap
  6705  0047B2  6E55               	movwf	(vfprintf@ap+1)^0,c
  6706  0047B4  EC5D  F023         	call	_vfprintf	;wreg free
  6707  0047B8  0100               	movlb	0	; () banked
  6708  0047BA  5171               	movf	(sprintf@f+3)& (0+255),w,b
  6709  0047BC  2560               	addwf	sprintf@s& (0+255),w,b
  6710  0047BE  6ED9               	movwf	fsr2l,c
  6711  0047C0  5172               	movf	(sprintf@f+4)& (0+255),w,b
  6712  0047C2  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  6713  0047C4  6EDA               	movwf	fsr2h,c
  6714  0047C6  0E00               	movlw	0
  6715  0047C8  6EDF               	movwf	indf2,c
  6716  0047CA                     
  6717                           ; BSR set to: 0
  6718  0047CA  0012               	return		;funcret
  6719  0047CC                     __end_of_sprintf:
  6720                           	callstack 0
  6721                           
  6722 ;; *************** function _vfprintf *****************
  6723 ;; Defined at:
  6724 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  6727 ;;		 -> sprintf@f(11), 
  6728 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  6729 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  6730 ;;  ap              2   83[COMRAM] PTR PTR void 
  6731 ;;		 -> sprintf@ap(2), 
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  6734 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  6735 ;; Return value:  Size  Location     Type
  6736 ;;                  2   79[COMRAM] int 
  6737 ;; Registers used:
  6738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6739 ;; Tracked objects:
  6740 ;;		On entry : 0/0
  6741 ;;		On exit  : 0/0
  6742 ;;		Unchanged: 0/0
  6743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6744 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6745 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6747 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6748 ;;Total ram usage:        8 bytes
  6749 ;; Hardware stack levels used: 1
  6750 ;; Hardware stack levels required when called: 6
  6751 ;; This function calls:
  6752 ;;		_vfpfcnvrt
  6753 ;; This function is called by:
  6754 ;;		_sprintf
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           
  6758                           	psect	text23
  6759  0046BA                     __ptext23:
  6760                           	callstack 0
  6761  0046BA                     _vfprintf:
  6762                           	callstack 22
  6763  0046BA                     
  6764                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6765  0046BA  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  6766  0046BE  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6767  0046C2                     
  6768                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6769  0046C2  0E00               	movlw	0
  6770  0046C4  0100               	movlb	0	; () banked
  6771  0046C6  6FED               	movwf	(_nout+1)& (0+255),b
  6772  0046C8  0E00               	movlw	0
  6773  0046CA  6FEC               	movwf	_nout& (0+255),b
  6774                           
  6775                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6776  0046CC  EF7B  F023         	goto	l3896
  6777  0046D0                     l3894:
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6781  0046D0  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  6782  0046D4  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6783  0046D8  0E56               	movlw	low vfprintf@cfmt
  6784  0046DA  6E42               	movwf	vfpfcnvrt@fmt^0,c
  6785  0046DC  0E00               	movlw	high vfprintf@cfmt
  6786  0046DE  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6787  0046E0  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  6788  0046E4  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6789  0046E8  ECD7  F019         	call	_vfpfcnvrt	;wreg free
  6790  0046EC  5040               	movf	?_vfpfcnvrt^0,w,c
  6791  0046EE  0100               	movlb	0	; () banked
  6792  0046F0  27EC               	addwf	_nout& (0+255),f,b
  6793  0046F2  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  6794  0046F4  23ED               	addwfc	(_nout+1)& (0+255),f,b
  6795  0046F6                     l3896:
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6799  0046F6  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  6800  0046FA  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6801  0046FE                     	if	0	;tblptru may be non-zero
  6802  0046FE                     	endif
  6803  0046FE                     	if	0	;tblptru may be non-zero
  6804  0046FE                     	endif
  6805  0046FE  0008               	tblrd		*
  6806  004700  50F5               	movf	tablat,w,c
  6807  004702  0900               	iorlw	0
  6808  004704  A4D8               	btfss	status,2,c
  6809  004706  EF87  F023         	goto	u3841
  6810  00470A  EF89  F023         	goto	u3840
  6811  00470E                     u3841:
  6812  00470E  EF68  F023         	goto	l3894
  6813  004712                     u3840:
  6814  004712                     
  6815                           ; BSR set to: 0
  6816                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6817  004712  C0EC  F050         	movff	_nout,?_vfprintf
  6818  004716  C0ED  F051         	movff	_nout+1,?_vfprintf+1
  6819  00471A                     
  6820                           ; BSR set to: 0
  6821  00471A  0012               	return		;funcret
  6822  00471C                     __end_of_vfprintf:
  6823                           	callstack 0
  6824                           
  6825 ;; *************** function _vfpfcnvrt *****************
  6826 ;; Defined at:
  6827 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6830 ;;		 -> sprintf@f(11), 
  6831 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6832 ;;		 -> vfprintf@cfmt(2), 
  6833 ;;  ap              2   67[COMRAM] PTR PTR void 
  6834 ;;		 -> sprintf@ap(2), 
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;  ll              8   71[COMRAM] long long 
  6837 ;;  llu             8    0        unsigned long long 
  6838 ;;  f               4    0        unsigned long long 
  6839 ;;  vp              3    0        PTR void 
  6840 ;;  ct              3    0        unsigned char [3]
  6841 ;;  cp              3    0        PTR unsigned char 
  6842 ;;  i               2    0        int 
  6843 ;;  done            2    0        int 
  6844 ;;  c               1    0        unsigned char 
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  2   63[COMRAM] int 
  6847 ;; Registers used:
  6848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6849 ;; Tracked objects:
  6850 ;;		On entry : 0/0
  6851 ;;		On exit  : 0/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6854 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6855 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6856 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6857 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;Total ram usage:       16 bytes
  6859 ;; Hardware stack levels used: 1
  6860 ;; Hardware stack levels required when called: 5
  6861 ;; This function calls:
  6862 ;;		_dtoa
  6863 ;;		_fputc
  6864 ;; This function is called by:
  6865 ;;		_vfprintf
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text24
  6870  0033AE                     __ptext24:
  6871                           	callstack 0
  6872  0033AE                     _vfpfcnvrt:
  6873                           	callstack 22
  6874  0033AE                     
  6875                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6876  0033AE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6877  0033B2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6878  0033B6  CFDE FFF6          	movff	postinc2,tblptrl
  6879  0033BA  CFDD FFF7          	movff	postdec2,tblptrh
  6880  0033BE                     	if	0	;tblptru may be non-zero
  6881  0033BE                     	endif
  6882  0033BE                     	if	0	;tblptru may be non-zero
  6883  0033BE                     	endif
  6884  0033BE  0008               	tblrd		*
  6885  0033C0  50F5               	movf	tablat,w,c
  6886  0033C2  0A25               	xorlw	37
  6887  0033C4  A4D8               	btfss	status,2,c
  6888  0033C6  EFE7  F019         	goto	u3481
  6889  0033CA  EFE9  F019         	goto	u3480
  6890  0033CE                     u3481:
  6891  0033CE  EF95  F01A         	goto	l3660
  6892  0033D2                     u3480:
  6893  0033D2                     
  6894                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6895  0033D2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6896  0033D6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6897  0033DA  2ADE               	incf	postinc2,f,c
  6898  0033DC  0E00               	movlw	0
  6899  0033DE  22DD               	addwfc	postdec2,f,c
  6900  0033E0                     
  6901                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6902  0033E0  0E00               	movlw	0
  6903  0033E2  0100               	movlb	0	; () banked
  6904  0033E4  6FEF               	movwf	(_width+1)& (0+255),b
  6905  0033E6  0E00               	movlw	0
  6906  0033E8  6FEE               	movwf	_width& (0+255),b
  6907  0033EA  C0EE  F0F2         	movff	_width,_flags
  6908  0033EE  C0EF  F0F3         	movff	_width+1,_flags+1
  6909  0033F2                     
  6910                           ; BSR set to: 0
  6911                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6912  0033F2  69F0               	setf	_prec& (0+255),b
  6913  0033F4  69F1               	setf	(_prec+1)& (0+255),b
  6914  0033F6                     
  6915                           ; BSR set to: 0
  6916                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6917  0033F6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6918  0033FA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6919  0033FE  CFDE FFF6          	movff	postinc2,tblptrl
  6920  003402  CFDD FFF7          	movff	postdec2,tblptrh
  6921  003406                     	if	0	;tblptru may be non-zero
  6922  003406                     	endif
  6923  003406                     	if	0	;tblptru may be non-zero
  6924  003406                     	endif
  6925  003406  0008               	tblrd		*
  6926  003408  50F5               	movf	tablat,w,c
  6927  00340A  0A64               	xorlw	100
  6928  00340C  B4D8               	btfsc	status,2,c
  6929  00340E  EF0B  F01A         	goto	u3491
  6930  003412  EF0D  F01A         	goto	u3490
  6931  003416                     u3491:
  6932  003416  EF1F  F01A         	goto	l3638
  6933  00341A                     u3490:
  6934  00341A                     
  6935                           ; BSR set to: 0
  6936  00341A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6937  00341E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6938  003422  CFDE FFF6          	movff	postinc2,tblptrl
  6939  003426  CFDD FFF7          	movff	postdec2,tblptrh
  6940  00342A                     	if	0	;tblptru may be non-zero
  6941  00342A                     	endif
  6942  00342A                     	if	0	;tblptru may be non-zero
  6943  00342A                     	endif
  6944  00342A  0008               	tblrd		*
  6945  00342C  50F5               	movf	tablat,w,c
  6946  00342E  0A69               	xorlw	105
  6947  003430  A4D8               	btfss	status,2,c
  6948  003432  EF1D  F01A         	goto	u3501
  6949  003436  EF1F  F01A         	goto	u3500
  6950  00343A                     u3501:
  6951  00343A  EF5F  F01A         	goto	l3644
  6952  00343E                     u3500:
  6953  00343E                     l3638:
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6957  00343E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6958  003442  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6959  003446  2ADE               	incf	postinc2,f,c
  6960  003448  0E00               	movlw	0
  6961  00344A  22DD               	addwfc	postdec2,f,c
  6962                           
  6963                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6964  00344C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6965  003450  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6966  003454  CFDF F046          	movff	indf2,??_vfpfcnvrt
  6967  003458  0E02               	movlw	2
  6968  00345A  26DE               	addwf	postinc2,f,c
  6969  00345C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  6970  003460  0E00               	movlw	0
  6971  003462  22DD               	addwfc	postdec2,f,c
  6972  003464  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6973  003468  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6974  00346C  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  6975  003470  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  6976  003474  0E00               	movlw	0
  6977  003476  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  6978  003478  0EFF               	movlw	-1
  6979  00347A  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  6980  00347C  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  6981  00347E  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  6982  003480  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  6983  003482  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  6984  003484  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  6985  003486                     
  6986                           ; BSR set to: 0
  6987                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6988  003486  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6989  00348A  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6990  00348E  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6991  003492  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6992  003496  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6993  00349A  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6994  00349E  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6995  0034A2  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6996  0034A6  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6997  0034AA  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6998  0034AE  EC8E  F015         	call	_dtoa	;wreg free
  6999  0034B2  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  7000  0034B6  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7001  0034BA  EFB0  F01A         	goto	l1348
  7002  0034BE                     l3644:
  7003                           
  7004                           ; BSR set to: 0
  7005                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7006  0034BE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7007  0034C2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7008  0034C6  CFDE FFF6          	movff	postinc2,tblptrl
  7009  0034CA  CFDD FFF7          	movff	postdec2,tblptrh
  7010  0034CE                     	if	0	;tblptru may be non-zero
  7011  0034CE                     	endif
  7012  0034CE                     	if	0	;tblptru may be non-zero
  7013  0034CE                     	endif
  7014  0034CE  0008               	tblrd		*
  7015  0034D0  50F5               	movf	tablat,w,c
  7016  0034D2  0A25               	xorlw	37
  7017  0034D4  A4D8               	btfss	status,2,c
  7018  0034D6  EF6F  F01A         	goto	u3511
  7019  0034DA  EF71  F01A         	goto	u3510
  7020  0034DE                     u3511:
  7021  0034DE  EF88  F01A         	goto	l3654
  7022  0034E2                     u3510:
  7023  0034E2                     
  7024                           ; BSR set to: 0
  7025                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7026  0034E2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7027  0034E6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7028  0034EA  2ADE               	incf	postinc2,f,c
  7029  0034EC  0E00               	movlw	0
  7030  0034EE  22DD               	addwfc	postdec2,f,c
  7031  0034F0                     
  7032                           ; BSR set to: 0
  7033                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7034  0034F0  0E00               	movlw	0
  7035  0034F2  6E02               	movwf	(fputc@c+1)^0,c
  7036  0034F4  0E25               	movlw	37
  7037  0034F6  6E01               	movwf	fputc@c^0,c
  7038  0034F8  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7039  0034FC  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7040  003500  EC91  F020         	call	_fputc	;wreg free
  7041  003504                     l3650:
  7042                           
  7043                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7044  003504  0E00               	movlw	0
  7045  003506  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7046  003508  0E01               	movlw	1
  7047  00350A  6E40               	movwf	?_vfpfcnvrt^0,c
  7048  00350C  EFB0  F01A         	goto	l1348
  7049  003510                     l3654:
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7053  003510  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7054  003514  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7055  003518  2ADE               	incf	postinc2,f,c
  7056  00351A  0E00               	movlw	0
  7057  00351C  22DD               	addwfc	postdec2,f,c
  7058  00351E                     
  7059                           ; BSR set to: 0
  7060                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7061  00351E  0E00               	movlw	0
  7062  003520  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7063  003522  0E00               	movlw	0
  7064  003524  6E40               	movwf	?_vfpfcnvrt^0,c
  7065  003526  EFB0  F01A         	goto	l1348
  7066  00352A                     l3660:
  7067                           
  7068                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7069  00352A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7070  00352E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7071  003532  CFDE FFF6          	movff	postinc2,tblptrl
  7072  003536  CFDD FFF7          	movff	postdec2,tblptrh
  7073  00353A                     	if	0	;tblptru may be non-zero
  7074  00353A                     	endif
  7075  00353A                     	if	0	;tblptru may be non-zero
  7076  00353A                     	endif
  7077  00353A  0008               	tblrd		*
  7078  00353C  50F5               	movf	tablat,w,c
  7079  00353E  6E01               	movwf	fputc@c^0,c
  7080  003540  6A02               	clrf	(fputc@c+1)^0,c
  7081  003542  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7082  003546  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7083  00354A  EC91  F020         	call	_fputc	;wreg free
  7084  00354E                     
  7085                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7086  00354E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7087  003552  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7088  003556  2ADE               	incf	postinc2,f,c
  7089  003558  0E00               	movlw	0
  7090  00355A  22DD               	addwfc	postdec2,f,c
  7091  00355C  EF82  F01A         	goto	l3650
  7092  003560                     l1348:
  7093  003560  0012               	return		;funcret
  7094  003562                     __end_of_vfpfcnvrt:
  7095                           	callstack 0
  7096                           
  7097 ;; *************** function _dtoa *****************
  7098 ;; Defined at:
  7099 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7102 ;;		 -> sprintf@f(11), 
  7103 ;;  d               8   29[COMRAM] long long 
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;  n               8   53[COMRAM] long long 
  7106 ;;  i               2   61[COMRAM] int 
  7107 ;;  s               2   51[COMRAM] int 
  7108 ;;  w               2   49[COMRAM] int 
  7109 ;;  p               2   47[COMRAM] int 
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  2   27[COMRAM] int 
  7112 ;; Registers used:
  7113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7119 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7120 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7121 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7122 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7123 ;;Total ram usage:       36 bytes
  7124 ;; Hardware stack levels used: 1
  7125 ;; Hardware stack levels required when called: 4
  7126 ;; This function calls:
  7127 ;;		___aodiv
  7128 ;;		___aomod
  7129 ;;		_abs
  7130 ;;		_pad
  7131 ;; This function is called by:
  7132 ;;		_vfpfcnvrt
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text25
  7137  002B1C                     __ptext25:
  7138                           	callstack 0
  7139  002B1C                     _dtoa:
  7140                           	callstack 22
  7141  002B1C                     
  7142                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7143  002B1C  C01E  F036         	movff	dtoa@d,dtoa@n
  7144  002B20  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7145  002B24  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7146  002B28  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7147  002B2C  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7148  002B30  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7149  002B34  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7150  002B38  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7151  002B3C                     
  7152                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7153  002B3C  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7154  002B3E  EFA3  F015         	goto	u2881
  7155  002B42  EFA6  F015         	goto	u2880
  7156  002B46                     u2881:
  7157  002B46  0E01               	movlw	1
  7158  002B48  EFA7  F015         	goto	u2890
  7159  002B4C                     u2880:
  7160  002B4C  0E00               	movlw	0
  7161  002B4E                     u2890:
  7162  002B4E  6E34               	movwf	dtoa@s^0,c
  7163  002B50  6A35               	clrf	(dtoa@s+1)^0,c
  7164                           
  7165                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7166  002B52  5034               	movf	dtoa@s^0,w,c
  7167  002B54  1035               	iorwf	(dtoa@s+1)^0,w,c
  7168  002B56  B4D8               	btfsc	status,2,c
  7169  002B58  EFB0  F015         	goto	u2901
  7170  002B5C  EFB2  F015         	goto	u2900
  7171  002B60                     u2901:
  7172  002B60  EFC2  F015         	goto	l3350
  7173  002B64                     u2900:
  7174  002B64                     
  7175                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7176  002B64  1E3D               	comf	(dtoa@n+7)^0,f,c
  7177  002B66  1E3C               	comf	(dtoa@n+6)^0,f,c
  7178  002B68  1E3B               	comf	(dtoa@n+5)^0,f,c
  7179  002B6A  1E3A               	comf	(dtoa@n+4)^0,f,c
  7180  002B6C  1E39               	comf	(dtoa@n+3)^0,f,c
  7181  002B6E  1E38               	comf	(dtoa@n+2)^0,f,c
  7182  002B70  1E37               	comf	(dtoa@n+1)^0,f,c
  7183  002B72  6C36               	negf	dtoa@n^0,c
  7184  002B74  0E00               	movlw	0
  7185  002B76  2237               	addwfc	(dtoa@n+1)^0,f,c
  7186  002B78  2238               	addwfc	(dtoa@n+2)^0,f,c
  7187  002B7A  2239               	addwfc	(dtoa@n+3)^0,f,c
  7188  002B7C  223A               	addwfc	(dtoa@n+4)^0,f,c
  7189  002B7E  223B               	addwfc	(dtoa@n+5)^0,f,c
  7190  002B80  223C               	addwfc	(dtoa@n+6)^0,f,c
  7191  002B82  223D               	addwfc	(dtoa@n+7)^0,f,c
  7192  002B84                     l3350:
  7193                           
  7194                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7195  002B84  0100               	movlb	0	; () banked
  7196  002B86  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  7197  002B88  EFC8  F015         	goto	u2911
  7198  002B8C  EFCA  F015         	goto	u2910
  7199  002B90                     u2911:
  7200  002B90  EFCB  F015         	goto	l3354
  7201  002B94                     u2910:
  7202  002B94                     
  7203                           ; BSR set to: 0
  7204                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7205  002B94  93F2               	bcf	_flags& (0+255),1,b
  7206  002B96                     l3354:
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7210  002B96  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  7211  002B98  EFD8  F015         	goto	u2920
  7212  002B9C  51F1               	movf	(_prec+1)& (0+255),w,b
  7213  002B9E  E106               	bnz	u2921
  7214  002BA0  05F0               	decf	_prec& (0+255),w,b
  7215  002BA2  B0D8               	btfsc	status,0,c
  7216  002BA4  EFD6  F015         	goto	u2921
  7217  002BA8  EFD8  F015         	goto	u2920
  7218  002BAC                     u2921:
  7219  002BAC  EFDE  F015         	goto	l1321
  7220  002BB0                     u2920:
  7221  002BB0                     
  7222                           ; BSR set to: 0
  7223  002BB0  0E00               	movlw	0
  7224  002BB2  6E31               	movwf	(dtoa@p+1)^0,c
  7225  002BB4  0E01               	movlw	1
  7226  002BB6  6E30               	movwf	dtoa@p^0,c
  7227  002BB8  EFE2  F015         	goto	l1323
  7228  002BBC                     l1321:
  7229                           
  7230                           ; BSR set to: 0
  7231  002BBC  C0F0  F030         	movff	_prec,dtoa@p
  7232  002BC0  C0F1  F031         	movff	_prec+1,dtoa@p+1
  7233  002BC4                     l1323:
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7237  002BC4  C0EE  F032         	movff	_width,dtoa@w
  7238  002BC8  C0EF  F033         	movff	_width+1,dtoa@w+1
  7239  002BCC                     
  7240                           ; BSR set to: 0
  7241                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7242  002BCC  5034               	movf	dtoa@s^0,w,c
  7243  002BCE  1035               	iorwf	(dtoa@s+1)^0,w,c
  7244  002BD0  A4D8               	btfss	status,2,c
  7245  002BD2  EFED  F015         	goto	u2931
  7246  002BD6  EFEF  F015         	goto	u2930
  7247  002BDA                     u2931:
  7248  002BDA  EFF6  F015         	goto	l3362
  7249  002BDE                     u2930:
  7250  002BDE                     
  7251                           ; BSR set to: 0
  7252  002BDE  A5F2               	btfss	_flags& (0+255),2,b
  7253  002BE0  EFF4  F015         	goto	u2941
  7254  002BE4  EFF6  F015         	goto	u2940
  7255  002BE8                     u2941:
  7256  002BE8  EFF9  F015         	goto	l3364
  7257  002BEC                     u2940:
  7258  002BEC                     l3362:
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  7262  002BEC  0632               	decf	dtoa@w^0,f,c
  7263  002BEE  A0D8               	btfss	status,0,c
  7264  002BF0  0633               	decf	(dtoa@w+1)^0,f,c
  7265  002BF2                     l3364:
  7266                           
  7267                           ; BSR set to: 0
  7268                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7269  002BF2  0E00               	movlw	0
  7270  002BF4  6E3F               	movwf	(dtoa@i+1)^0,c
  7271  002BF6  0E1F               	movlw	31
  7272  002BF8  6E3E               	movwf	dtoa@i^0,c
  7273  002BFA                     
  7274                           ; BSR set to: 0
  7275                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7276  002BFA  0E00               	movlw	0
  7277  002BFC  0101               	movlb	1	; () banked
  7278  002BFE  6F84               	movwf	(_dbuf+31)& (0+255),b
  7279                           
  7280                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7281  002C00  EF7E  F016         	goto	l3378
  7282  002C04                     l3368:
  7283                           
  7284                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  7285  002C04  063E               	decf	dtoa@i^0,f,c
  7286  002C06  A0D8               	btfss	status,0,c
  7287  002C08  063F               	decf	(dtoa@i+1)^0,f,c
  7288  002C0A                     
  7289                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7290  002C0A  0E65               	movlw	low _dbuf
  7291  002C0C  243E               	addwf	dtoa@i^0,w,c
  7292  002C0E  6ED9               	movwf	fsr2l,c
  7293  002C10  0E01               	movlw	high _dbuf
  7294  002C12  203F               	addwfc	(dtoa@i+1)^0,w,c
  7295  002C14  6EDA               	movwf	fsr2h,c
  7296  002C16  C036  F001         	movff	dtoa@n,___aomod@dividend
  7297  002C1A  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7298  002C1E  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7299  002C22  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7300  002C26  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7301  002C2A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7302  002C2E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7303  002C32  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7304  002C36  0E0A               	movlw	10
  7305  002C38  6E09               	movwf	___aomod@divisor^0,c
  7306  002C3A  0E00               	movlw	0
  7307  002C3C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7308  002C3E  0E00               	movlw	0
  7309  002C40  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7310  002C42  0E00               	movlw	0
  7311  002C44  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7312  002C46  0E00               	movlw	0
  7313  002C48  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7314  002C4A  0E00               	movlw	0
  7315  002C4C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7316  002C4E  0E00               	movlw	0
  7317  002C50  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7318  002C52  0E00               	movlw	0
  7319  002C54  6E10               	movwf	(___aomod@divisor+7)^0,c
  7320  002C56  EC40  F01C         	call	___aomod	;wreg free
  7321  002C5A  C001  F026         	movff	?___aomod,??_dtoa
  7322  002C5E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7323  002C62  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7324  002C66  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7325  002C6A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7326  002C6E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7327  002C72  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7328  002C76  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7329  002C7A  C026  F013         	movff	??_dtoa,abs@a
  7330  002C7E  C028  F014         	movff	??_dtoa+2,abs@a+1
  7331  002C82  EC4F  F025         	call	_abs	;wreg free
  7332  002C86  5013               	movf	?_abs^0,w,c
  7333  002C88  0F30               	addlw	48
  7334  002C8A  6EDF               	movwf	indf2,c
  7335  002C8C                     
  7336                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  7337  002C8C  0630               	decf	dtoa@p^0,f,c
  7338  002C8E  A0D8               	btfss	status,0,c
  7339  002C90  0631               	decf	(dtoa@p+1)^0,f,c
  7340  002C92                     
  7341                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  7342  002C92  0632               	decf	dtoa@w^0,f,c
  7343  002C94  A0D8               	btfss	status,0,c
  7344  002C96  0633               	decf	(dtoa@w+1)^0,f,c
  7345  002C98                     
  7346                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7347  002C98  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7348  002C9C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7349  002CA0  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7350  002CA4  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7351  002CA8  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7352  002CAC  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7353  002CB0  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7354  002CB4  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7355  002CB8  0E0A               	movlw	10
  7356  002CBA  6E09               	movwf	___aodiv@divisor^0,c
  7357  002CBC  0E00               	movlw	0
  7358  002CBE  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7359  002CC0  0E00               	movlw	0
  7360  002CC2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7361  002CC4  0E00               	movlw	0
  7362  002CC6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7363  002CC8  0E00               	movlw	0
  7364  002CCA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7365  002CCC  0E00               	movlw	0
  7366  002CCE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7367  002CD0  0E00               	movlw	0
  7368  002CD2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7369  002CD4  0E00               	movlw	0
  7370  002CD6  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7371  002CD8  EC7C  F01B         	call	___aodiv	;wreg free
  7372  002CDC  C001  F036         	movff	?___aodiv,dtoa@n
  7373  002CE0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7374  002CE4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7375  002CE8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7376  002CEC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7377  002CF0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7378  002CF4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7379  002CF8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7380  002CFC                     l3378:
  7381                           
  7382                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7383  002CFC  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7384  002CFE  EF89  F016         	goto	u2951
  7385  002D02  503F               	movf	(dtoa@i+1)^0,w,c
  7386  002D04  E108               	bnz	u2950
  7387  002D06  043E               	decf	dtoa@i^0,w,c
  7388  002D08  A0D8               	btfss	status,0,c
  7389  002D0A  EF89  F016         	goto	u2951
  7390  002D0E  EF8B  F016         	goto	u2950
  7391  002D12                     u2951:
  7392  002D12  EFBC  F016         	goto	l3388
  7393  002D16                     u2950:
  7394  002D16  5036               	movf	dtoa@n^0,w,c
  7395  002D18  1037               	iorwf	(dtoa@n+1)^0,w,c
  7396  002D1A  1038               	iorwf	(dtoa@n+2)^0,w,c
  7397  002D1C  1039               	iorwf	(dtoa@n+3)^0,w,c
  7398  002D1E  103A               	iorwf	(dtoa@n+4)^0,w,c
  7399  002D20  103B               	iorwf	(dtoa@n+5)^0,w,c
  7400  002D22  103C               	iorwf	(dtoa@n+6)^0,w,c
  7401  002D24  103D               	iorwf	(dtoa@n+7)^0,w,c
  7402  002D26  A4D8               	btfss	status,2,c
  7403  002D28  EF98  F016         	goto	u2961
  7404  002D2C  EF9A  F016         	goto	u2960
  7405  002D30                     u2961:
  7406  002D30  EF02  F016         	goto	l3368
  7407  002D34                     u2960:
  7408  002D34  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7409  002D36  EFA7  F016         	goto	u2970
  7410  002D3A  5031               	movf	(dtoa@p+1)^0,w,c
  7411  002D3C  E106               	bnz	u2971
  7412  002D3E  0430               	decf	dtoa@p^0,w,c
  7413  002D40  B0D8               	btfsc	status,0,c
  7414  002D42  EFA5  F016         	goto	u2971
  7415  002D46  EFA7  F016         	goto	u2970
  7416  002D4A                     u2971:
  7417  002D4A  EF02  F016         	goto	l3368
  7418  002D4E                     u2970:
  7419  002D4E  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7420  002D50  EFB2  F016         	goto	u2981
  7421  002D54  5033               	movf	(dtoa@w+1)^0,w,c
  7422  002D56  E108               	bnz	u2980
  7423  002D58  0432               	decf	dtoa@w^0,w,c
  7424  002D5A  A0D8               	btfss	status,0,c
  7425  002D5C  EFB2  F016         	goto	u2981
  7426  002D60  EFB4  F016         	goto	u2980
  7427  002D64                     u2981:
  7428  002D64  EFBC  F016         	goto	l3388
  7429  002D68                     u2980:
  7430  002D68  0100               	movlb	0	; () banked
  7431  002D6A  B3F2               	btfsc	_flags& (0+255),1,b
  7432  002D6C  EFBA  F016         	goto	u2991
  7433  002D70  EFBC  F016         	goto	u2990
  7434  002D74                     u2991:
  7435  002D74  EF02  F016         	goto	l3368
  7436  002D78                     u2990:
  7437  002D78                     l3388:
  7438                           
  7439                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7440  002D78  5034               	movf	dtoa@s^0,w,c
  7441  002D7A  1035               	iorwf	(dtoa@s+1)^0,w,c
  7442  002D7C  A4D8               	btfss	status,2,c
  7443  002D7E  EFC3  F016         	goto	u3001
  7444  002D82  EFC5  F016         	goto	u3000
  7445  002D86                     u3001:
  7446  002D86  EFCD  F016         	goto	l3392
  7447  002D8A                     u3000:
  7448  002D8A  0100               	movlb	0	; () banked
  7449  002D8C  A5F2               	btfss	_flags& (0+255),2,b
  7450  002D8E  EFCB  F016         	goto	u3011
  7451  002D92  EFCD  F016         	goto	u3010
  7452  002D96                     u3011:
  7453  002D96  EFEB  F016         	goto	l3402
  7454  002D9A                     u3010:
  7455  002D9A                     l3392:
  7456                           
  7457                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  7458  002D9A  063E               	decf	dtoa@i^0,f,c
  7459  002D9C  A0D8               	btfss	status,0,c
  7460  002D9E  063F               	decf	(dtoa@i+1)^0,f,c
  7461  002DA0                     
  7462                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7463  002DA0  5034               	movf	dtoa@s^0,w,c
  7464  002DA2  1035               	iorwf	(dtoa@s+1)^0,w,c
  7465  002DA4  A4D8               	btfss	status,2,c
  7466  002DA6  EFD7  F016         	goto	u3021
  7467  002DAA  EFD9  F016         	goto	u3020
  7468  002DAE                     u3021:
  7469  002DAE  EFDF  F016         	goto	l3398
  7470  002DB2                     u3020:
  7471  002DB2  0E00               	movlw	0
  7472  002DB4  6E2F               	movwf	(_dtoa$2382+1)^0,c
  7473  002DB6  0E2B               	movlw	43
  7474  002DB8  6E2E               	movwf	_dtoa$2382^0,c
  7475  002DBA  EFE3  F016         	goto	l3400
  7476  002DBE                     l3398:
  7477  002DBE  0E00               	movlw	0
  7478  002DC0  6E2F               	movwf	(_dtoa$2382+1)^0,c
  7479  002DC2  0E2D               	movlw	45
  7480  002DC4  6E2E               	movwf	_dtoa$2382^0,c
  7481  002DC6                     l3400:
  7482  002DC6  0E65               	movlw	low _dbuf
  7483  002DC8  243E               	addwf	dtoa@i^0,w,c
  7484  002DCA  6ED9               	movwf	fsr2l,c
  7485  002DCC  0E01               	movlw	high _dbuf
  7486  002DCE  203F               	addwfc	(dtoa@i+1)^0,w,c
  7487  002DD0  6EDA               	movwf	fsr2h,c
  7488  002DD2  C02E  FFDF         	movff	_dtoa$2382,indf2
  7489  002DD6                     l3402:
  7490                           
  7491                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7492  002DD6  C01C  F011         	movff	dtoa@fp,pad@fp
  7493  002DDA  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7494  002DDE  0E65               	movlw	low _dbuf
  7495  002DE0  243E               	addwf	dtoa@i^0,w,c
  7496  002DE2  6E13               	movwf	pad@buf^0,c
  7497  002DE4  0E01               	movlw	high _dbuf
  7498  002DE6  203F               	addwfc	(dtoa@i+1)^0,w,c
  7499  002DE8  6E14               	movwf	(pad@buf+1)^0,c
  7500  002DEA  C032  F015         	movff	dtoa@w,pad@p
  7501  002DEE  C033  F016         	movff	dtoa@w+1,pad@p+1
  7502  002DF2  ECF6  F020         	call	_pad	;wreg free
  7503  002DF6  C011  F01C         	movff	?_pad,?_dtoa
  7504  002DFA  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7505  002DFE  0012               	return		;funcret
  7506  002E00                     __end_of_dtoa:
  7507                           	callstack 0
  7508                           
  7509 ;; *************** function _pad *****************
  7510 ;; Defined at:
  7511 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7514 ;;		 -> sprintf@f(11), 
  7515 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7516 ;;		 -> dbuf(32), 
  7517 ;;  p               2   20[COMRAM] int 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  w               2   25[COMRAM] int 
  7520 ;;  i               2   23[COMRAM] int 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  2   16[COMRAM] int 
  7523 ;; Registers used:
  7524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7530 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7531 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7533 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7534 ;;Total ram usage:       11 bytes
  7535 ;; Hardware stack levels used: 1
  7536 ;; Hardware stack levels required when called: 3
  7537 ;; This function calls:
  7538 ;;		_fputc
  7539 ;;		_fputs
  7540 ;;		_strlen
  7541 ;; This function is called by:
  7542 ;;		_dtoa
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text26
  7547  0041EC                     __ptext26:
  7548                           	callstack 0
  7549  0041EC                     _pad:
  7550                           	callstack 22
  7551  0041EC                     
  7552                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7553  0041EC  0100               	movlb	0	; () banked
  7554  0041EE  A1F2               	btfss	_flags& (0+255),0,b
  7555  0041F0  EFFC  F020         	goto	u2771
  7556  0041F4  EFFE  F020         	goto	u2770
  7557  0041F8                     u2771:
  7558  0041F8  EF08  F021         	goto	l3272
  7559  0041FC                     u2770:
  7560  0041FC                     
  7561                           ; BSR set to: 0
  7562                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7563  0041FC  C013  F00A         	movff	pad@buf,fputs@s
  7564  004200  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7565  004204  C011  F00C         	movff	pad@fp,fputs@fp
  7566  004208  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7567  00420C  ECA9  F024         	call	_fputs	;wreg free
  7568  004210                     l3272:
  7569                           
  7570                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7571  004210  BE16               	btfsc	(pad@p+1)^0,7,c
  7572  004212  EF0D  F021         	goto	u2781
  7573  004216  EF0F  F021         	goto	u2780
  7574  00421A                     u2781:
  7575  00421A  EF15  F021         	goto	l3276
  7576  00421E                     u2780:
  7577  00421E  C015  F01A         	movff	pad@p,pad@w
  7578  004222  C016  F01B         	movff	pad@p+1,pad@w+1
  7579  004226  EF19  F021         	goto	l1310
  7580  00422A                     l3276:
  7581  00422A  0E00               	movlw	0
  7582  00422C  6E1B               	movwf	(pad@w+1)^0,c
  7583  00422E  0E00               	movlw	0
  7584  004230  6E1A               	movwf	pad@w^0,c
  7585  004232                     l1310:
  7586                           
  7587                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7588  004232  0E00               	movlw	0
  7589  004234  6E19               	movwf	(pad@i+1)^0,c
  7590  004236  0E00               	movlw	0
  7591  004238  6E18               	movwf	pad@i^0,c
  7592                           
  7593                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7594  00423A  EF2B  F021         	goto	l3282
  7595  00423E                     l3278:
  7596                           
  7597                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7598  00423E  0E00               	movlw	0
  7599  004240  6E02               	movwf	(fputc@c+1)^0,c
  7600  004242  0E20               	movlw	32
  7601  004244  6E01               	movwf	fputc@c^0,c
  7602  004246  C011  F003         	movff	pad@fp,fputc@fp
  7603  00424A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7604  00424E  EC91  F020         	call	_fputc	;wreg free
  7605  004252                     
  7606                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7607  004252  4A18               	infsnz	pad@i^0,f,c
  7608  004254  2A19               	incf	(pad@i+1)^0,f,c
  7609  004256                     l3282:
  7610                           
  7611                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7612  004256  501A               	movf	pad@w^0,w,c
  7613  004258  5C18               	subwf	pad@i^0,w,c
  7614  00425A  5019               	movf	(pad@i+1)^0,w,c
  7615  00425C  0A80               	xorlw	128
  7616  00425E  6E17               	movwf	??_pad^0,c
  7617  004260  501B               	movf	(pad@w+1)^0,w,c
  7618  004262  0A80               	xorlw	128
  7619  004264  5817               	subwfb	??_pad^0,w,c
  7620  004266  A0D8               	btfss	status,0,c
  7621  004268  EF38  F021         	goto	u2791
  7622  00426C  EF3A  F021         	goto	u2790
  7623  004270                     u2791:
  7624  004270  EF1F  F021         	goto	l3278
  7625  004274                     u2790:
  7626  004274                     
  7627                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7628  004274  0100               	movlb	0	; () banked
  7629  004276  B1F2               	btfsc	_flags& (0+255),0,b
  7630  004278  EF40  F021         	goto	u2801
  7631  00427C  EF42  F021         	goto	u2800
  7632  004280                     u2801:
  7633  004280  EF4C  F021         	goto	l3286
  7634  004284                     u2800:
  7635  004284                     
  7636                           ; BSR set to: 0
  7637                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7638  004284  C013  F00A         	movff	pad@buf,fputs@s
  7639  004288  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7640  00428C  C011  F00C         	movff	pad@fp,fputs@fp
  7641  004290  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7642  004294  ECA9  F024         	call	_fputs	;wreg free
  7643  004298                     l3286:
  7644                           
  7645                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7646  004298  C013  F001         	movff	pad@buf,strlen@s
  7647  00429C  C014  F002         	movff	pad@buf+1,strlen@s+1
  7648  0042A0  ECE4  F025         	call	_strlen	;wreg free
  7649  0042A4  501A               	movf	pad@w^0,w,c
  7650  0042A6  2401               	addwf	?_strlen^0,w,c
  7651  0042A8  6E11               	movwf	?_pad^0,c
  7652  0042AA  501B               	movf	(pad@w+1)^0,w,c
  7653  0042AC  2002               	addwfc	(?_strlen+1)^0,w,c
  7654  0042AE  6E12               	movwf	(?_pad+1)^0,c
  7655  0042B0  0012               	return		;funcret
  7656  0042B2                     __end_of_pad:
  7657                           	callstack 0
  7658                           
  7659 ;; *************** function _strlen *****************
  7660 ;; Defined at:
  7661 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7664 ;;		 -> dbuf(32), 
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7667 ;;		 -> dbuf(32), 
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  2    0[COMRAM] unsigned int 
  7670 ;; Registers used:
  7671 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7677 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7678 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7680 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7681 ;;Total ram usage:        4 bytes
  7682 ;; Hardware stack levels used: 1
  7683 ;; This function calls:
  7684 ;;		Nothing
  7685 ;; This function is called by:
  7686 ;;		_pad
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           	psect	text27
  7691  004BC8                     __ptext27:
  7692                           	callstack 0
  7693  004BC8                     _strlen:
  7694                           	callstack 24
  7695  004BC8  C001  F003         	movff	strlen@s,strlen@a
  7696  004BCC  C002  F004         	movff	strlen@s+1,strlen@a+1
  7697  004BD0  EFEC  F025         	goto	l3182
  7698  004BD4                     l3180:
  7699  004BD4  4A01               	infsnz	strlen@s^0,f,c
  7700  004BD6  2A02               	incf	(strlen@s+1)^0,f,c
  7701  004BD8                     l3182:
  7702  004BD8  C001  FFD9         	movff	strlen@s,fsr2l
  7703  004BDC  C002  FFDA         	movff	strlen@s+1,fsr2h
  7704  004BE0  50DF               	movf	indf2,w,c
  7705  004BE2  A4D8               	btfss	status,2,c
  7706  004BE4  EFF6  F025         	goto	u2631
  7707  004BE8  EFF8  F025         	goto	u2630
  7708  004BEC                     u2631:
  7709  004BEC  EFEA  F025         	goto	l3180
  7710  004BF0                     u2630:
  7711  004BF0  5003               	movf	strlen@a^0,w,c
  7712  004BF2  5C01               	subwf	strlen@s^0,w,c
  7713  004BF4  6E01               	movwf	?_strlen^0,c
  7714  004BF6  5004               	movf	(strlen@a+1)^0,w,c
  7715  004BF8  5802               	subwfb	(strlen@s+1)^0,w,c
  7716  004BFA  6E02               	movwf	(?_strlen+1)^0,c
  7717  004BFC  0012               	return		;funcret
  7718  004BFE                     __end_of_strlen:
  7719                           	callstack 0
  7720                           
  7721 ;; *************** function _fputs *****************
  7722 ;; Defined at:
  7723 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7726 ;;		 -> dbuf(32), 
  7727 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7728 ;;		 -> sprintf@f(11), 
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;  i               2   14[COMRAM] int 
  7731 ;;  c               1   13[COMRAM] unsigned char 
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  2    9[COMRAM] int 
  7734 ;; Registers used:
  7735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7742 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7744 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7745 ;;Total ram usage:        7 bytes
  7746 ;; Hardware stack levels used: 1
  7747 ;; Hardware stack levels required when called: 2
  7748 ;; This function calls:
  7749 ;;		_fputc
  7750 ;; This function is called by:
  7751 ;;		_pad
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           	psect	text28
  7756  004952                     __ptext28:
  7757                           	callstack 0
  7758  004952                     _fputs:
  7759                           	callstack 22
  7760  004952  0E00               	movlw	0
  7761  004954  6E10               	movwf	(fputs@i+1)^0,c
  7762  004956  0E00               	movlw	0
  7763  004958  6E0F               	movwf	fputs@i^0,c
  7764  00495A  EFBA  F024         	goto	l3176
  7765  00495E                     l3172:
  7766  00495E  C00E  F001         	movff	fputs@c,fputc@c
  7767  004962  6A02               	clrf	(fputc@c+1)^0,c
  7768  004964  C00C  F003         	movff	fputs@fp,fputc@fp
  7769  004968  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7770  00496C  EC91  F020         	call	_fputc	;wreg free
  7771  004970  4A0F               	infsnz	fputs@i^0,f,c
  7772  004972  2A10               	incf	(fputs@i+1)^0,f,c
  7773  004974                     l3176:
  7774  004974  500F               	movf	fputs@i^0,w,c
  7775  004976  240A               	addwf	fputs@s^0,w,c
  7776  004978  6ED9               	movwf	fsr2l,c
  7777  00497A  5010               	movf	(fputs@i+1)^0,w,c
  7778  00497C  200B               	addwfc	(fputs@s+1)^0,w,c
  7779  00497E  6EDA               	movwf	fsr2h,c
  7780  004980  50DF               	movf	indf2,w,c
  7781  004982  6E0E               	movwf	fputs@c^0,c
  7782  004984  500E               	movf	fputs@c^0,w,c
  7783  004986  A4D8               	btfss	status,2,c
  7784  004988  EFC8  F024         	goto	u2621
  7785  00498C  EFCA  F024         	goto	u2620
  7786  004990                     u2621:
  7787  004990  EFAF  F024         	goto	l3172
  7788  004994                     u2620:
  7789  004994  0012               	return		;funcret
  7790  004996                     __end_of_fputs:
  7791                           	callstack 0
  7792                           
  7793 ;; *************** function _fputc *****************
  7794 ;; Defined at:
  7795 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  7796 ;; Parameters:    Size  Location     Type
  7797 ;;  c               2    0[COMRAM] int 
  7798 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7799 ;;		 -> sprintf@f(11), 
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;		None
  7802 ;; Return value:  Size  Location     Type
  7803 ;;                  2    0[COMRAM] int 
  7804 ;; Registers used:
  7805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7806 ;; Tracked objects:
  7807 ;;		On entry : 0/0
  7808 ;;		On exit  : 0/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7813 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7814 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7815 ;;Total ram usage:        9 bytes
  7816 ;; Hardware stack levels used: 1
  7817 ;; Hardware stack levels required when called: 1
  7818 ;; This function calls:
  7819 ;;		_putch
  7820 ;; This function is called by:
  7821 ;;		_pad
  7822 ;;		_vfpfcnvrt
  7823 ;;		_fputs
  7824 ;; This function uses a non-reentrant model
  7825 ;;
  7826                           
  7827                           	psect	text29
  7828  004122                     __ptext29:
  7829                           	callstack 0
  7830  004122                     _fputc:
  7831                           	callstack 25
  7832  004122  5003               	movf	fputc@fp^0,w,c
  7833  004124  1004               	iorwf	(fputc@fp+1)^0,w,c
  7834  004126  B4D8               	btfsc	status,2,c
  7835  004128  EF98  F020         	goto	u2581
  7836  00412C  EF9A  F020         	goto	u2580
  7837  004130                     u2581:
  7838  004130  EFA3  F020         	goto	l3160
  7839  004134                     u2580:
  7840  004134  5003               	movf	fputc@fp^0,w,c
  7841  004136  1004               	iorwf	(fputc@fp+1)^0,w,c
  7842  004138  A4D8               	btfss	status,2,c
  7843  00413A  EFA1  F020         	goto	u2591
  7844  00413E  EFA3  F020         	goto	u2590
  7845  004142                     u2591:
  7846  004142  EFA8  F020         	goto	l3162
  7847  004146                     u2590:
  7848  004146                     l3160:
  7849  004146  5001               	movf	fputc@c^0,w,c
  7850  004148  EC09  F027         	call	_putch
  7851  00414C  EFF5  F020         	goto	l1374
  7852  004150                     l3162:
  7853  004150  EE20 F009          	lfsr	2,9
  7854  004154  5003               	movf	fputc@fp^0,w,c
  7855  004156  26D9               	addwf	fsr2l,f,c
  7856  004158  5004               	movf	(fputc@fp+1)^0,w,c
  7857  00415A  22DA               	addwfc	fsr2h,f,c
  7858  00415C  50DE               	movf	postinc2,w,c
  7859  00415E  10DE               	iorwf	postinc2,w,c
  7860  004160  B4D8               	btfsc	status,2,c
  7861  004162  EFB5  F020         	goto	u2601
  7862  004166  EFB7  F020         	goto	u2600
  7863  00416A                     u2601:
  7864  00416A  EFD2  F020         	goto	l3166
  7865  00416E                     u2600:
  7866  00416E  EE20 F009          	lfsr	2,9
  7867  004172  5003               	movf	fputc@fp^0,w,c
  7868  004174  26D9               	addwf	fsr2l,f,c
  7869  004176  5004               	movf	(fputc@fp+1)^0,w,c
  7870  004178  22DA               	addwfc	fsr2h,f,c
  7871  00417A  EE10 F003          	lfsr	1,3
  7872  00417E  5003               	movf	fputc@fp^0,w,c
  7873  004180  26E1               	addwf	fsr1l,f,c
  7874  004182  5004               	movf	(fputc@fp+1)^0,w,c
  7875  004184  22E2               	addwfc	fsr1h,f,c
  7876  004186  50DE               	movf	postinc2,w,c
  7877  004188  5CE6               	subwf	postinc1,w,c
  7878  00418A  50E6               	movf	postinc1,w,c
  7879  00418C  0A80               	xorlw	128
  7880  00418E  6E09               	movwf	(??_fputc+4)^0,c
  7881  004190  50DE               	movf	postinc2,w,c
  7882  004192  0A80               	xorlw	128
  7883  004194  5809               	subwfb	(??_fputc+4)^0,w,c
  7884  004196  B0D8               	btfsc	status,0,c
  7885  004198  EFD0  F020         	goto	u2611
  7886  00419C  EFD2  F020         	goto	u2610
  7887  0041A0                     u2611:
  7888  0041A0  EFF5  F020         	goto	l1374
  7889  0041A4                     u2610:
  7890  0041A4                     l3166:
  7891  0041A4  EE20 F003          	lfsr	2,3
  7892  0041A8  5003               	movf	fputc@fp^0,w,c
  7893  0041AA  26D9               	addwf	fsr2l,f,c
  7894  0041AC  5004               	movf	(fputc@fp+1)^0,w,c
  7895  0041AE  22DA               	addwfc	fsr2h,f,c
  7896  0041B0  CFDE F005          	movff	postinc2,??_fputc
  7897  0041B4  CFDD F006          	movff	postdec2,??_fputc+1
  7898  0041B8  C003  FFD9         	movff	fputc@fp,fsr2l
  7899  0041BC  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7900  0041C0  CFDE F007          	movff	postinc2,??_fputc+2
  7901  0041C4  CFDD F008          	movff	postdec2,??_fputc+3
  7902  0041C8  5005               	movf	??_fputc^0,w,c
  7903  0041CA  2407               	addwf	(??_fputc+2)^0,w,c
  7904  0041CC  6ED9               	movwf	fsr2l,c
  7905  0041CE  5006               	movf	(??_fputc+1)^0,w,c
  7906  0041D0  2008               	addwfc	(??_fputc+3)^0,w,c
  7907  0041D2  6EDA               	movwf	fsr2h,c
  7908  0041D4  C001  FFDF         	movff	fputc@c,indf2
  7909  0041D8  EE20 F003          	lfsr	2,3
  7910  0041DC  5003               	movf	fputc@fp^0,w,c
  7911  0041DE  26D9               	addwf	fsr2l,f,c
  7912  0041E0  5004               	movf	(fputc@fp+1)^0,w,c
  7913  0041E2  22DA               	addwfc	fsr2h,f,c
  7914  0041E4  2ADE               	incf	postinc2,f,c
  7915  0041E6  0E00               	movlw	0
  7916  0041E8  22DD               	addwfc	postdec2,f,c
  7917  0041EA                     l1374:
  7918  0041EA  0012               	return		;funcret
  7919  0041EC                     __end_of_fputc:
  7920                           	callstack 0
  7921                           
  7922 ;; *************** function _putch *****************
  7923 ;; Defined at:
  7924 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  c               1    wreg     unsigned char 
  7927 ;; Auto vars:     Size  Location     Type
  7928 ;;  c               1    0[COMRAM] unsigned char 
  7929 ;; Return value:  Size  Location     Type
  7930 ;;                  1    wreg      void 
  7931 ;; Registers used:
  7932 ;;		wreg
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7942 ;;Total ram usage:        0 bytes
  7943 ;; Hardware stack levels used: 1
  7944 ;; This function calls:
  7945 ;;		Nothing
  7946 ;; This function is called by:
  7947 ;;		_fputc
  7948 ;; This function uses a non-reentrant model
  7949 ;;
  7950                           
  7951                           	psect	text30
  7952  004E12                     __ptext30:
  7953                           	callstack 0
  7954  004E12                     _putch:
  7955                           	callstack 25
  7956  004E12  0012               	return		;funcret
  7957  004E14                     __end_of_putch:
  7958                           	callstack 0
  7959                           
  7960 ;; *************** function _abs *****************
  7961 ;; Defined at:
  7962 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  a               2   18[COMRAM] int 
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;		None
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  2   18[COMRAM] int 
  7969 ;; Registers used:
  7970 ;;		wreg, status,2, status,0
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7978 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7979 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7980 ;;Total ram usage:        4 bytes
  7981 ;; Hardware stack levels used: 1
  7982 ;; This function calls:
  7983 ;;		Nothing
  7984 ;; This function is called by:
  7985 ;;		_dtoa
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989                           	psect	text31
  7990  004A9E                     __ptext31:
  7991                           	callstack 0
  7992  004A9E                     _abs:
  7993                           	callstack 25
  7994  004A9E  BE14               	btfsc	(abs@a+1)^0,7,c
  7995  004AA0  EF5C  F025         	goto	u2810
  7996  004AA4  5014               	movf	(abs@a+1)^0,w,c
  7997  004AA6  E106               	bnz	u2811
  7998  004AA8  0413               	decf	abs@a^0,w,c
  7999  004AAA  B0D8               	btfsc	status,0,c
  8000  004AAC  EF5A  F025         	goto	u2811
  8001  004AB0  EF5C  F025         	goto	u2810
  8002  004AB4                     u2811:
  8003  004AB4  EF6A  F025         	goto	l1359
  8004  004AB8                     u2810:
  8005  004AB8  C013  F015         	movff	abs@a,??_abs
  8006  004ABC  C014  F016         	movff	abs@a+1,??_abs+1
  8007  004AC0  1E15               	comf	??_abs^0,f,c
  8008  004AC2  1E16               	comf	(??_abs+1)^0,f,c
  8009  004AC4  4A15               	infsnz	??_abs^0,f,c
  8010  004AC6  2A16               	incf	(??_abs+1)^0,f,c
  8011  004AC8  C015  F013         	movff	??_abs,?_abs
  8012  004ACC  C016  F014         	movff	??_abs+1,?_abs+1
  8013  004AD0  EF6E  F025         	goto	l1362
  8014  004AD4                     l1359:
  8015  004AD4  C013  F013         	movff	abs@a,?_abs
  8016  004AD8  C014  F014         	movff	abs@a+1,?_abs+1
  8017  004ADC                     l1362:
  8018  004ADC  0012               	return		;funcret
  8019  004ADE                     __end_of_abs:
  8020                           	callstack 0
  8021                           
  8022 ;; *************** function ___aomod *****************
  8023 ;; Defined at:
  8024 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  8025 ;; Parameters:    Size  Location     Type
  8026 ;;  dividend        8    0[COMRAM] long long 
  8027 ;;  divisor         8    8[COMRAM] long long 
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;  sign            1   17[COMRAM] unsigned char 
  8030 ;;  counter         1   16[COMRAM] unsigned char 
  8031 ;; Return value:  Size  Location     Type
  8032 ;;                  8    0[COMRAM] long long 
  8033 ;; Registers used:
  8034 ;;		wreg, status,2, status,0
  8035 ;; Tracked objects:
  8036 ;;		On entry : 0/0
  8037 ;;		On exit  : 0/0
  8038 ;;		Unchanged: 0/0
  8039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8040 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8041 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8043 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8044 ;;Total ram usage:       18 bytes
  8045 ;; Hardware stack levels used: 1
  8046 ;; This function calls:
  8047 ;;		Nothing
  8048 ;; This function is called by:
  8049 ;;		_dtoa
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053                           	psect	text32
  8054  003880                     __ptext32:
  8055                           	callstack 0
  8056  003880                     ___aomod:
  8057                           	callstack 25
  8058  003880  0E00               	movlw	0
  8059  003882  6E12               	movwf	___aomod@sign^0,c
  8060  003884  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8061  003886  EF49  F01C         	goto	u2710
  8062  00388A  EF47  F01C         	goto	u2711
  8063  00388E                     u2711:
  8064  00388E  EF5B  F01C         	goto	l3240
  8065  003892                     u2710:
  8066  003892  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8067  003894  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8068  003896  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8069  003898  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8070  00389A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8071  00389C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8072  00389E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8073  0038A0  6C01               	negf	___aomod@dividend^0,c
  8074  0038A2  0E00               	movlw	0
  8075  0038A4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8076  0038A6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8077  0038A8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8078  0038AA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8079  0038AC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8080  0038AE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8081  0038B0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8082  0038B2  0E01               	movlw	1
  8083  0038B4  6E12               	movwf	___aomod@sign^0,c
  8084  0038B6                     l3240:
  8085  0038B6  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8086  0038B8  EF62  F01C         	goto	u2720
  8087  0038BC  EF60  F01C         	goto	u2721
  8088  0038C0                     u2721:
  8089  0038C0  EF72  F01C         	goto	l3244
  8090  0038C4                     u2720:
  8091  0038C4  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8092  0038C6  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8093  0038C8  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8094  0038CA  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8095  0038CC  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8096  0038CE  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8097  0038D0  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8098  0038D2  6C09               	negf	___aomod@divisor^0,c
  8099  0038D4  0E00               	movlw	0
  8100  0038D6  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8101  0038D8  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8102  0038DA  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8103  0038DC  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8104  0038DE  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8105  0038E0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8106  0038E2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8107  0038E4                     l3244:
  8108  0038E4  5009               	movf	___aomod@divisor^0,w,c
  8109  0038E6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8110  0038E8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8111  0038EA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8112  0038EC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8113  0038EE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8114  0038F0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8115  0038F2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8116  0038F4  B4D8               	btfsc	status,2,c
  8117  0038F6  EF7F  F01C         	goto	u2731
  8118  0038FA  EF81  F01C         	goto	u2730
  8119  0038FE                     u2731:
  8120  0038FE  EFC9  F01C         	goto	l3260
  8121  003902                     u2730:
  8122  003902  0E01               	movlw	1
  8123  003904  6E11               	movwf	___aomod@counter^0,c
  8124  003906  EF8F  F01C         	goto	l3250
  8125  00390A                     l3248:
  8126  00390A  90D8               	bcf	status,0,c
  8127  00390C  3609               	rlcf	___aomod@divisor^0,f,c
  8128  00390E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8129  003910  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8130  003912  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8131  003914  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8132  003916  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8133  003918  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8134  00391A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8135  00391C  2A11               	incf	___aomod@counter^0,f,c
  8136  00391E                     l3250:
  8137  00391E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8138  003920  EF94  F01C         	goto	u2741
  8139  003924  EF96  F01C         	goto	u2740
  8140  003928                     u2741:
  8141  003928  EF85  F01C         	goto	l3248
  8142  00392C                     u2740:
  8143  00392C                     l3252:
  8144  00392C  5009               	movf	___aomod@divisor^0,w,c
  8145  00392E  5C01               	subwf	___aomod@dividend^0,w,c
  8146  003930  500A               	movf	(___aomod@divisor+1)^0,w,c
  8147  003932  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8148  003934  500B               	movf	(___aomod@divisor+2)^0,w,c
  8149  003936  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8150  003938  500C               	movf	(___aomod@divisor+3)^0,w,c
  8151  00393A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8152  00393C  500D               	movf	(___aomod@divisor+4)^0,w,c
  8153  00393E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8154  003940  500E               	movf	(___aomod@divisor+5)^0,w,c
  8155  003942  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8156  003944  500F               	movf	(___aomod@divisor+6)^0,w,c
  8157  003946  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8158  003948  5010               	movf	(___aomod@divisor+7)^0,w,c
  8159  00394A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8160  00394C  A0D8               	btfss	status,0,c
  8161  00394E  EFAB  F01C         	goto	u2751
  8162  003952  EFAD  F01C         	goto	u2750
  8163  003956                     u2751:
  8164  003956  EFBD  F01C         	goto	l3256
  8165  00395A                     u2750:
  8166  00395A  5009               	movf	___aomod@divisor^0,w,c
  8167  00395C  5E01               	subwf	___aomod@dividend^0,f,c
  8168  00395E  500A               	movf	(___aomod@divisor+1)^0,w,c
  8169  003960  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8170  003962  500B               	movf	(___aomod@divisor+2)^0,w,c
  8171  003964  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8172  003966  500C               	movf	(___aomod@divisor+3)^0,w,c
  8173  003968  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8174  00396A  500D               	movf	(___aomod@divisor+4)^0,w,c
  8175  00396C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8176  00396E  500E               	movf	(___aomod@divisor+5)^0,w,c
  8177  003970  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8178  003972  500F               	movf	(___aomod@divisor+6)^0,w,c
  8179  003974  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8180  003976  5010               	movf	(___aomod@divisor+7)^0,w,c
  8181  003978  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8182  00397A                     l3256:
  8183  00397A  90D8               	bcf	status,0,c
  8184  00397C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8185  00397E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8186  003980  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8187  003982  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8188  003984  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8189  003986  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8190  003988  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8191  00398A  3209               	rrcf	___aomod@divisor^0,f,c
  8192  00398C  2E11               	decfsz	___aomod@counter^0,f,c
  8193  00398E  EF96  F01C         	goto	l3252
  8194  003992                     l3260:
  8195  003992  5012               	movf	___aomod@sign^0,w,c
  8196  003994  B4D8               	btfsc	status,2,c
  8197  003996  EFCF  F01C         	goto	u2761
  8198  00399A  EFD1  F01C         	goto	u2760
  8199  00399E                     u2761:
  8200  00399E  EFE1  F01C         	goto	l3264
  8201  0039A2                     u2760:
  8202  0039A2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8203  0039A4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8204  0039A6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8205  0039A8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8206  0039AA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8207  0039AC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8208  0039AE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8209  0039B0  6C01               	negf	___aomod@dividend^0,c
  8210  0039B2  0E00               	movlw	0
  8211  0039B4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8212  0039B6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8213  0039B8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8214  0039BA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8215  0039BC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8216  0039BE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8217  0039C0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8218  0039C2                     l3264:
  8219  0039C2  C001  F001         	movff	___aomod@dividend,?___aomod
  8220  0039C6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8221  0039CA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8222  0039CE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8223  0039D2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8224  0039D6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8225  0039DA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8226  0039DE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8227  0039E2  0012               	return		;funcret
  8228  0039E4                     __end_of___aomod:
  8229                           	callstack 0
  8230                           
  8231 ;; *************** function ___aodiv *****************
  8232 ;; Defined at:
  8233 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  8234 ;; Parameters:    Size  Location     Type
  8235 ;;  dividend        8    0[COMRAM] long long 
  8236 ;;  divisor         8    8[COMRAM] long long 
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;  quotient        8   18[COMRAM] long long 
  8239 ;;  sign            1   17[COMRAM] unsigned char 
  8240 ;;  counter         1   16[COMRAM] unsigned char 
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  8    0[COMRAM] long long 
  8243 ;; Registers used:
  8244 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8250 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8251 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8253 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8254 ;;Total ram usage:       26 bytes
  8255 ;; Hardware stack levels used: 1
  8256 ;; This function calls:
  8257 ;;		Nothing
  8258 ;; This function is called by:
  8259 ;;		_dtoa
  8260 ;; This function uses a non-reentrant model
  8261 ;;
  8262                           
  8263                           	psect	text33
  8264  0036F8                     __ptext33:
  8265                           	callstack 0
  8266  0036F8                     ___aodiv:
  8267                           	callstack 25
  8268  0036F8  0E00               	movlw	0
  8269  0036FA  6E12               	movwf	___aodiv@sign^0,c
  8270  0036FC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8271  0036FE  EF85  F01B         	goto	u2640
  8272  003702  EF83  F01B         	goto	u2641
  8273  003706                     u2641:
  8274  003706  EF97  F01B         	goto	l3196
  8275  00370A                     u2640:
  8276  00370A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8277  00370C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8278  00370E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8279  003710  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8280  003712  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8281  003714  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8282  003716  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8283  003718  6C09               	negf	___aodiv@divisor^0,c
  8284  00371A  0E00               	movlw	0
  8285  00371C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8286  00371E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8287  003720  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8288  003722  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8289  003724  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8290  003726  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8291  003728  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8292  00372A  0E01               	movlw	1
  8293  00372C  6E12               	movwf	___aodiv@sign^0,c
  8294  00372E                     l3196:
  8295  00372E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8296  003730  EF9E  F01B         	goto	u2650
  8297  003734  EF9C  F01B         	goto	u2651
  8298  003738                     u2651:
  8299  003738  EFB0  F01B         	goto	l3202
  8300  00373C                     u2650:
  8301  00373C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8302  00373E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8303  003740  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8304  003742  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8305  003744  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8306  003746  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8307  003748  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8308  00374A  6C01               	negf	___aodiv@dividend^0,c
  8309  00374C  0E00               	movlw	0
  8310  00374E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8311  003750  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8312  003752  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8313  003754  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8314  003756  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8315  003758  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8316  00375A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8317  00375C  0E01               	movlw	1
  8318  00375E  1A12               	xorwf	___aodiv@sign^0,f,c
  8319  003760                     l3202:
  8320  003760  EE20  F013         	lfsr	2,___aodiv@quotient
  8321  003764  0E07               	movlw	7
  8322  003766                     u2661:
  8323  003766  6ADE               	clrf	postinc2,c
  8324  003768  06E8               	decf	wreg,f,c
  8325  00376A  E2FD               	bc	u2661
  8326  00376C  5009               	movf	___aodiv@divisor^0,w,c
  8327  00376E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8328  003770  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8329  003772  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8330  003774  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8331  003776  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8332  003778  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8333  00377A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8334  00377C  B4D8               	btfsc	status,2,c
  8335  00377E  EFC3  F01B         	goto	u2671
  8336  003782  EFC5  F01B         	goto	u2670
  8337  003786                     u2671:
  8338  003786  EF17  F01C         	goto	l3224
  8339  00378A                     u2670:
  8340  00378A  0E01               	movlw	1
  8341  00378C  6E11               	movwf	___aodiv@counter^0,c
  8342  00378E  EFD3  F01B         	goto	l3210
  8343  003792                     l3208:
  8344  003792  90D8               	bcf	status,0,c
  8345  003794  3609               	rlcf	___aodiv@divisor^0,f,c
  8346  003796  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8347  003798  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8348  00379A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8349  00379C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8350  00379E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8351  0037A0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8352  0037A2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8353  0037A4  2A11               	incf	___aodiv@counter^0,f,c
  8354  0037A6                     l3210:
  8355  0037A6  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8356  0037A8  EFD8  F01B         	goto	u2681
  8357  0037AC  EFDA  F01B         	goto	u2680
  8358  0037B0                     u2681:
  8359  0037B0  EFC9  F01B         	goto	l3208
  8360  0037B4                     u2680:
  8361  0037B4                     l3212:
  8362  0037B4  90D8               	bcf	status,0,c
  8363  0037B6  3613               	rlcf	___aodiv@quotient^0,f,c
  8364  0037B8  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8365  0037BA  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8366  0037BC  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8367  0037BE  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8368  0037C0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8369  0037C2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8370  0037C4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8371  0037C6  5009               	movf	___aodiv@divisor^0,w,c
  8372  0037C8  5C01               	subwf	___aodiv@dividend^0,w,c
  8373  0037CA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8374  0037CC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8375  0037CE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8376  0037D0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8377  0037D2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8378  0037D4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8379  0037D6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8380  0037D8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8381  0037DA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8382  0037DC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8383  0037DE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8384  0037E0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8385  0037E2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8386  0037E4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8387  0037E6  A0D8               	btfss	status,0,c
  8388  0037E8  EFF8  F01B         	goto	u2691
  8389  0037EC  EFFA  F01B         	goto	u2690
  8390  0037F0                     u2691:
  8391  0037F0  EF0B  F01C         	goto	l3220
  8392  0037F4                     u2690:
  8393  0037F4  5009               	movf	___aodiv@divisor^0,w,c
  8394  0037F6  5E01               	subwf	___aodiv@dividend^0,f,c
  8395  0037F8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8396  0037FA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8397  0037FC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8398  0037FE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8399  003800  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8400  003802  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8401  003804  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8402  003806  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8403  003808  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8404  00380A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8405  00380C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8406  00380E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8407  003810  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8408  003812  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8409  003814  8013               	bsf	___aodiv@quotient^0,0,c
  8410  003816                     l3220:
  8411  003816  90D8               	bcf	status,0,c
  8412  003818  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8413  00381A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8414  00381C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8415  00381E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8416  003820  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8417  003822  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8418  003824  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8419  003826  3209               	rrcf	___aodiv@divisor^0,f,c
  8420  003828  2E11               	decfsz	___aodiv@counter^0,f,c
  8421  00382A  EFDA  F01B         	goto	l3212
  8422  00382E                     l3224:
  8423  00382E  5012               	movf	___aodiv@sign^0,w,c
  8424  003830  B4D8               	btfsc	status,2,c
  8425  003832  EF1D  F01C         	goto	u2701
  8426  003836  EF1F  F01C         	goto	u2700
  8427  00383A                     u2701:
  8428  00383A  EF2F  F01C         	goto	l3228
  8429  00383E                     u2700:
  8430  00383E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8431  003840  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8432  003842  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8433  003844  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8434  003846  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8435  003848  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8436  00384A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8437  00384C  6C13               	negf	___aodiv@quotient^0,c
  8438  00384E  0E00               	movlw	0
  8439  003850  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8440  003852  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8441  003854  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8442  003856  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8443  003858  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8444  00385A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8445  00385C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8446  00385E                     l3228:
  8447  00385E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8448  003862  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8449  003866  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8450  00386A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8451  00386E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8452  003872  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8453  003876  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8454  00387A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8455  00387E  0012               	return		;funcret
  8456  003880                     __end_of___aodiv:
  8457                           	callstack 0
  8458                           
  8459 ;; *************** function _sendStringSerial4 *****************
  8460 ;; Defined at:
  8461 ;;		line 36 in file "serial.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;  string          2    1[COMRAM] PTR unsigned char 
  8464 ;;		 -> voltage_display@buf(80), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;		None
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1    wreg      void 
  8469 ;; Registers used:
  8470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8480 ;;Total ram usage:        2 bytes
  8481 ;; Hardware stack levels used: 1
  8482 ;; Hardware stack levels required when called: 1
  8483 ;; This function calls:
  8484 ;;		_sendCharSerial4
  8485 ;; This function is called by:
  8486 ;;		_color_display
  8487 ;;		_color_predict
  8488 ;;		_check_color_reading
  8489 ;;		_voltage_display
  8490 ;; This function uses a non-reentrant model
  8491 ;;
  8492                           
  8493                           	psect	text34
  8494  004C32                     __ptext34:
  8495                           	callstack 0
  8496  004C32                     _sendStringSerial4:
  8497                           	callstack 28
  8498  004C32                     
  8499                           ;serial.c: 38:     while(*string != 0){
  8500  004C32  EF24  F026         	goto	l3940
  8501  004C36                     l3936:
  8502                           
  8503                           ;serial.c: 39:   sendCharSerial4(*string++);}
  8504  004C36  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8505  004C3A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8506  004C3E  50DF               	movf	indf2,w,c
  8507  004C40  ECE7  F026         	call	_sendCharSerial4
  8508  004C44  4A02               	infsnz	sendStringSerial4@string^0,f,c
  8509  004C46  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  8510  004C48                     l3940:
  8511                           
  8512                           ;serial.c: 38:     while(*string != 0){
  8513  004C48  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8514  004C4C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8515  004C50  50DF               	movf	indf2,w,c
  8516  004C52  A4D8               	btfss	status,2,c
  8517  004C54  EF2E  F026         	goto	u3851
  8518  004C58  EF30  F026         	goto	u3850
  8519  004C5C                     u3851:
  8520  004C5C  EF1B  F026         	goto	l3936
  8521  004C60                     u3850:
  8522  004C60  0012               	return		;funcret
  8523  004C62                     __end_of_sendStringSerial4:
  8524                           	callstack 0
  8525                           
  8526 ;; *************** function _sendCharSerial4 *****************
  8527 ;; Defined at:
  8528 ;;		line 29 in file "serial.c"
  8529 ;; Parameters:    Size  Location     Type
  8530 ;;  charToSend      1    wreg     unsigned char 
  8531 ;; Auto vars:     Size  Location     Type
  8532 ;;  charToSend      1    0[COMRAM] unsigned char 
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  1    wreg      void 
  8535 ;; Registers used:
  8536 ;;		wreg
  8537 ;; Tracked objects:
  8538 ;;		On entry : 0/0
  8539 ;;		On exit  : 0/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8546 ;;Total ram usage:        1 bytes
  8547 ;; Hardware stack levels used: 1
  8548 ;; This function calls:
  8549 ;;		Nothing
  8550 ;; This function is called by:
  8551 ;;		_sendStringSerial4
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           	psect	text35
  8556  004DCE                     __ptext35:
  8557                           	callstack 0
  8558  004DCE                     _sendCharSerial4:
  8559                           	callstack 28
  8560                           
  8561                           ;incstack = 0
  8562                           ;sendCharSerial4@charToSend stored from wreg
  8563  004DCE  6E01               	movwf	sendCharSerial4@charToSend^0,c
  8564  004DD0                     l423:
  8565  004DD0  010E               	movlb	14	; () banked
  8566  004DD2  A537               	btfss	55,2,b	;volatile
  8567  004DD4  EFEE  F026         	goto	u3581
  8568  004DD8  EFF0  F026         	goto	u3580
  8569  004DDC                     u3581:
  8570  004DDC  EFE8  F026         	goto	l423
  8571  004DE0                     u3580:
  8572  004DE0                     
  8573                           ; BSR set to: 14
  8574                           ;serial.c: 31:     TX4REG = charToSend;
  8575  004DE0  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  8576  004DE4                     
  8577                           ; BSR set to: 14
  8578  004DE4  0012               	return		;funcret
  8579  004DE6                     __end_of_sendCharSerial4:
  8580                           	callstack 0
  8581                           
  8582 ;; *************** function _LED_C *****************
  8583 ;; Defined at:
  8584 ;;		line 109 in file "color.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;		None
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;		None
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  1    wreg      void 
  8591 ;; Registers used:
  8592 ;;		wreg
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8601 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8602 ;;Total ram usage:        2 bytes
  8603 ;; Hardware stack levels used: 1
  8604 ;; This function calls:
  8605 ;;		Nothing
  8606 ;; This function is called by:
  8607 ;;		_color_data_collection
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           	psect	text36
  8612  004CDA                     __ptext36:
  8613                           	callstack 0
  8614  004CDA                     _LED_C:
  8615                           	callstack 29
  8616  004CDA                     
  8617                           ;color.c: 111:     LATGbits.LATG1 = 1;
  8618  004CDA  827F               	bsf	127,1,c	;volatile
  8619                           
  8620                           ;color.c: 112:     LATFbits.LATF7 = 1;
  8621  004CDC  8E7E               	bsf	126,7,c	;volatile
  8622                           
  8623                           ;color.c: 113:     LATAbits.LATA4 = 1;
  8624  004CDE  8879               	bsf	121,4,c	;volatile
  8625  004CE0                     
  8626                           ;color.c: 114:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8627  004CE0  0E11               	movlw	17
  8628  004CE2  6E02               	movwf	(??_LED_C+1)^0,c
  8629  004CE4  0E3C               	movlw	60
  8630  004CE6  6E01               	movwf	??_LED_C^0,c
  8631  004CE8  0ECB               	movlw	203
  8632  004CEA                     u5237:
  8633  004CEA  2EE8               	decfsz	wreg,f,c
  8634  004CEC  D7FE               	bra	u5237
  8635  004CEE  2E01               	decfsz	??_LED_C^0,f,c
  8636  004CF0  D7FC               	bra	u5237
  8637  004CF2  2E02               	decfsz	(??_LED_C+1)^0,f,c
  8638  004CF4  D7FA               	bra	u5237
  8639  004CF6  F000               	nop	
  8640  004CF8  0012               	return		;funcret
  8641  004CFA                     __end_of_LED_C:
  8642                           	callstack 0
  8643                           
  8644 ;; *************** function _color_click_init *****************
  8645 ;; Defined at:
  8646 ;;		line 12 in file "color.c"
  8647 ;; Parameters:    Size  Location     Type
  8648 ;;		None
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;		None
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  1    wreg      void 
  8653 ;; Registers used:
  8654 ;;		wreg, status,2, status,0, cstack
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8662 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8664 ;;Total ram usage:        1 bytes
  8665 ;; Hardware stack levels used: 1
  8666 ;; Hardware stack levels required when called: 3
  8667 ;; This function calls:
  8668 ;;		_I2C_2_Master_Init
  8669 ;;		_color_writetoaddr
  8670 ;; This function is called by:
  8671 ;;		_main
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           	psect	text37
  8676  004BFE                     __ptext37:
  8677                           	callstack 0
  8678  004BFE                     _color_click_init:
  8679                           	callstack 27
  8680  004BFE                     
  8681                           ;color.c: 15:     I2C_2_Master_Init();
  8682  004BFE  EC31  F026         	call	_I2C_2_Master_Init	;wreg free
  8683  004C02                     
  8684                           ;color.c: 18:   color_writetoaddr(0x00, 0x01);
  8685  004C02  0E01               	movlw	1
  8686  004C04  6E03               	movwf	color_writetoaddr@value^0,c
  8687  004C06  0E00               	movlw	0
  8688  004C08  EC7D  F026         	call	_color_writetoaddr
  8689  004C0C                     
  8690                           ;color.c: 19:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8691  004C0C  0E3F               	movlw	63
  8692  004C0E  6E05               	movwf	??_color_click_init^0,c
  8693  004C10  0E55               	movlw	85
  8694  004C12                     u5247:
  8695  004C12  2EE8               	decfsz	wreg,f,c
  8696  004C14  D7FE               	bra	u5247
  8697  004C16  2E05               	decfsz	??_color_click_init^0,f,c
  8698  004C18  D7FC               	bra	u5247
  8699  004C1A  F000               	nop	
  8700  004C1C                     
  8701                           ;color.c: 22:  color_writetoaddr(0x00, 0x03);
  8702  004C1C  0E03               	movlw	3
  8703  004C1E  6E03               	movwf	color_writetoaddr@value^0,c
  8704  004C20  0E00               	movlw	0
  8705  004C22  EC7D  F026         	call	_color_writetoaddr
  8706  004C26                     
  8707                           ;color.c: 25:  color_writetoaddr(0x01, 0xD5);
  8708  004C26  0ED5               	movlw	213
  8709  004C28  6E03               	movwf	color_writetoaddr@value^0,c
  8710  004C2A  0E01               	movlw	1
  8711  004C2C  EC7D  F026         	call	_color_writetoaddr
  8712  004C30  0012               	return		;funcret
  8713  004C32                     __end_of_color_click_init:
  8714                           	callstack 0
  8715                           
  8716 ;; *************** function _color_writetoaddr *****************
  8717 ;; Defined at:
  8718 ;;		line 28 in file "color.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;  address         1    wreg     unsigned char 
  8721 ;;  value           1    2[COMRAM] unsigned char 
  8722 ;; Auto vars:     Size  Location     Type
  8723 ;;  address         1    3[COMRAM] unsigned char 
  8724 ;; Return value:  Size  Location     Type
  8725 ;;                  1    wreg      void 
  8726 ;; Registers used:
  8727 ;;		wreg, status,2, status,0, cstack
  8728 ;; Tracked objects:
  8729 ;;		On entry : 0/0
  8730 ;;		On exit  : 0/0
  8731 ;;		Unchanged: 0/0
  8732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8733 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8737 ;;Total ram usage:        2 bytes
  8738 ;; Hardware stack levels used: 1
  8739 ;; Hardware stack levels required when called: 2
  8740 ;; This function calls:
  8741 ;;		_I2C_2_Master_Start
  8742 ;;		_I2C_2_Master_Stop
  8743 ;;		_I2C_2_Master_Write
  8744 ;; This function is called by:
  8745 ;;		_color_click_init
  8746 ;; This function uses a non-reentrant model
  8747 ;;
  8748                           
  8749                           	psect	text38
  8750  004CFA                     __ptext38:
  8751                           	callstack 0
  8752  004CFA                     _color_writetoaddr:
  8753                           	callstack 27
  8754                           
  8755                           ;incstack = 0
  8756                           ;color_writetoaddr@address stored from wreg
  8757  004CFA  6E04               	movwf	color_writetoaddr@address^0,c
  8758  004CFC                     
  8759                           ;color.c: 29:     I2C_2_Master_Start();
  8760  004CFC  ECFE  F026         	call	_I2C_2_Master_Start	;wreg free
  8761                           
  8762                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  8763  004D00  0E52               	movlw	82
  8764  004D02  ECF3  F026         	call	_I2C_2_Master_Write
  8765                           
  8766                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  8767  004D06  5004               	movf	color_writetoaddr@address^0,w,c
  8768  004D08  0980               	iorlw	128
  8769  004D0A  ECF3  F026         	call	_I2C_2_Master_Write
  8770                           
  8771                           ;color.c: 32:     I2C_2_Master_Write(value);
  8772  004D0E  5003               	movf	color_writetoaddr@value^0,w,c
  8773  004D10  ECF3  F026         	call	_I2C_2_Master_Write
  8774                           
  8775                           ;color.c: 33:     I2C_2_Master_Stop();
  8776  004D14  ECF9  F026         	call	_I2C_2_Master_Stop	;wreg free
  8777  004D18  0012               	return		;funcret
  8778  004D1A                     __end_of_color_writetoaddr:
  8779                           	callstack 0
  8780                           
  8781 ;; *************** function _I2C_2_Master_Init *****************
  8782 ;; Defined at:
  8783 ;;		line 4 in file "i2c.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;		None
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;		None
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  1    wreg      void 
  8790 ;; Registers used:
  8791 ;;		wreg, status,2
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8801 ;;Total ram usage:        0 bytes
  8802 ;; Hardware stack levels used: 1
  8803 ;; This function calls:
  8804 ;;		Nothing
  8805 ;; This function is called by:
  8806 ;;		_color_click_init
  8807 ;;		_main
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           	psect	text39
  8812  004C62                     __ptext39:
  8813                           	callstack 0
  8814  004C62                     _I2C_2_Master_Init:
  8815                           	callstack 29
  8816  004C62                     
  8817                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8818  004C62  010E               	movlb	14	; () banked
  8819  004C64  51D9               	movf	217,w,b	;volatile
  8820  004C66  0BF0               	andlw	-16
  8821  004C68  0908               	iorlw	8
  8822  004C6A  6FD9               	movwf	217,b	;volatile
  8823  004C6C                     
  8824                           ; BSR set to: 14
  8825                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8826  004C6C  8BD9               	bsf	217,5,b	;volatile
  8827                           
  8828                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8829  004C6E  0E9F               	movlw	159
  8830  004C70  6FD6               	movwf	214,b	;volatile
  8831  004C72                     
  8832                           ; BSR set to: 14
  8833                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8834  004C72  8A84               	bsf	132,5,c	;volatile
  8835  004C74                     
  8836                           ; BSR set to: 14
  8837                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8838  004C74  8C84               	bsf	132,6,c	;volatile
  8839  004C76                     
  8840                           ; BSR set to: 14
  8841                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8842  004C76  9BA7               	bcf	167,5,b	;volatile
  8843  004C78                     
  8844                           ; BSR set to: 14
  8845                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8846  004C78  9DA7               	bcf	167,6,b	;volatile
  8847                           
  8848                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8849  004C7A  0E1D               	movlw	29
  8850  004C7C  6F1D               	movwf	29,b	;volatile
  8851                           
  8852                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8853  004C7E  0E1E               	movlw	30
  8854  004C80  6F1C               	movwf	28,b	;volatile
  8855                           
  8856                           ;i2c.c: 18:   RD5PPS=0x1C;
  8857  004C82  0E1C               	movlw	28
  8858  004C84  6F6F               	movwf	111,b	;volatile
  8859                           
  8860                           ;i2c.c: 19:   RD6PPS=0x1B;
  8861  004C86  0E1B               	movlw	27
  8862  004C88  6F70               	movwf	112,b	;volatile
  8863  004C8A                     
  8864                           ; BSR set to: 14
  8865  004C8A  0012               	return		;funcret
  8866  004C8C                     __end_of_I2C_2_Master_Init:
  8867                           	callstack 0
  8868                           
  8869 ;; *************** function _calibrate_white *****************
  8870 ;; Defined at:
  8871 ;;		line 207 in file "color.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;  w               2   11[COMRAM] PTR struct white_card
  8874 ;;		 -> main@white(18), 
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;		None
  8877 ;; Return value:  Size  Location     Type
  8878 ;;                  1    wreg      void 
  8879 ;; Registers used:
  8880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8881 ;; Tracked objects:
  8882 ;;		On entry : 0/0
  8883 ;;		On exit  : 0/0
  8884 ;;		Unchanged: 0/0
  8885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8888 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8889 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8890 ;;Total ram usage:        4 bytes
  8891 ;; Hardware stack levels used: 1
  8892 ;; Hardware stack levels required when called: 3
  8893 ;; This function calls:
  8894 ;;		_LED_B
  8895 ;;		_LED_G
  8896 ;;		_LED_R
  8897 ;;		_color_read_Blue
  8898 ;;		_color_read_Green
  8899 ;;		_color_read_Red
  8900 ;; This function is called by:
  8901 ;;		_main
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           	psect	text40
  8906  003C3C                     __ptext40:
  8907                           	callstack 0
  8908  003C3C                     _calibrate_white:
  8909                           	callstack 27
  8910  003C3C                     
  8911                           ;color.c: 207: void calibrate_white(struct white_card *w);color.c: 208: {;color.c: 209: 
      +                              LED_R();
  8912  003C3C  EC8D  F026         	call	_LED_R	;wreg free
  8913  003C40                     
  8914                           ;color.c: 211:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  8915  003C40  EC0E  F024         	call	_color_read_Red	;wreg free
  8916  003C44  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  8917  003C48  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  8918  003C4C  C005  FFDE         	movff	?_color_read_Red,postinc2
  8919  003C50  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8920  003C54  EC36  F024         	call	_color_read_Green	;wreg free
  8921  003C58  EE20 F002          	lfsr	2,2
  8922  003C5C  500C               	movf	calibrate_white@w^0,w,c
  8923  003C5E  26D9               	addwf	fsr2l,f,c
  8924  003C60  500D               	movf	(calibrate_white@w+1)^0,w,c
  8925  003C62  22DA               	addwfc	fsr2h,f,c
  8926  003C64  C005  FFDE         	movff	?_color_read_Green,postinc2
  8927  003C68  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8928  003C6C  EC5E  F024         	call	_color_read_Blue	;wreg free
  8929  003C70  EE20 F004          	lfsr	2,4
  8930  003C74  500C               	movf	calibrate_white@w^0,w,c
  8931  003C76  26D9               	addwf	fsr2l,f,c
  8932  003C78  500D               	movf	(calibrate_white@w+1)^0,w,c
  8933  003C7A  22DA               	addwfc	fsr2h,f,c
  8934  003C7C  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8935  003C80  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8936  003C84                     
  8937                           ;color.c: 212:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8938  003C84  0E09               	movlw	9
  8939  003C86  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8940  003C88  0E1E               	movlw	30
  8941  003C8A  6E0E               	movwf	??_calibrate_white^0,c
  8942  003C8C  0EE4               	movlw	228
  8943  003C8E                     u5257:
  8944  003C8E  2EE8               	decfsz	wreg,f,c
  8945  003C90  D7FE               	bra	u5257
  8946  003C92  2E0E               	decfsz	??_calibrate_white^0,f,c
  8947  003C94  D7FC               	bra	u5257
  8948  003C96  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8949  003C98  D7FA               	bra	u5257
  8950  003C9A  D000               	nop2	
  8951  003C9C                     
  8952                           ;color.c: 214:     LED_G();
  8953  003C9C  EC9D  F026         	call	_LED_G	;wreg free
  8954  003CA0                     
  8955                           ;color.c: 216:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  8956  003CA0  EC0E  F024         	call	_color_read_Red	;wreg free
  8957  003CA4  EE20 F006          	lfsr	2,6
  8958  003CA8  500C               	movf	calibrate_white@w^0,w,c
  8959  003CAA  26D9               	addwf	fsr2l,f,c
  8960  003CAC  500D               	movf	(calibrate_white@w+1)^0,w,c
  8961  003CAE  22DA               	addwfc	fsr2h,f,c
  8962  003CB0  C005  FFDE         	movff	?_color_read_Red,postinc2
  8963  003CB4  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8964  003CB8  EC36  F024         	call	_color_read_Green	;wreg free
  8965  003CBC  EE20 F008          	lfsr	2,8
  8966  003CC0  500C               	movf	calibrate_white@w^0,w,c
  8967  003CC2  26D9               	addwf	fsr2l,f,c
  8968  003CC4  500D               	movf	(calibrate_white@w+1)^0,w,c
  8969  003CC6  22DA               	addwfc	fsr2h,f,c
  8970  003CC8  C005  FFDE         	movff	?_color_read_Green,postinc2
  8971  003CCC  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8972  003CD0  EC5E  F024         	call	_color_read_Blue	;wreg free
  8973  003CD4  EE20 F00A          	lfsr	2,10
  8974  003CD8  500C               	movf	calibrate_white@w^0,w,c
  8975  003CDA  26D9               	addwf	fsr2l,f,c
  8976  003CDC  500D               	movf	(calibrate_white@w+1)^0,w,c
  8977  003CDE  22DA               	addwfc	fsr2h,f,c
  8978  003CE0  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8979  003CE4  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8980                           
  8981                           ;color.c: 217:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8982  003CE8  0E09               	movlw	9
  8983  003CEA  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8984  003CEC  0E1E               	movlw	30
  8985  003CEE  6E0E               	movwf	??_calibrate_white^0,c
  8986  003CF0  0EE4               	movlw	228
  8987  003CF2                     u5267:
  8988  003CF2  2EE8               	decfsz	wreg,f,c
  8989  003CF4  D7FE               	bra	u5267
  8990  003CF6  2E0E               	decfsz	??_calibrate_white^0,f,c
  8991  003CF8  D7FC               	bra	u5267
  8992  003CFA  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8993  003CFC  D7FA               	bra	u5267
  8994  003CFE  D000               	nop2	
  8995  003D00                     
  8996                           ;color.c: 219:     LED_B();
  8997  003D00  ECAD  F026         	call	_LED_B	;wreg free
  8998  003D04                     
  8999                           ;color.c: 221:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue();
  9000  003D04  EC0E  F024         	call	_color_read_Red	;wreg free
  9001  003D08  EE20 F00C          	lfsr	2,12
  9002  003D0C  500C               	movf	calibrate_white@w^0,w,c
  9003  003D0E  26D9               	addwf	fsr2l,f,c
  9004  003D10  500D               	movf	(calibrate_white@w+1)^0,w,c
  9005  003D12  22DA               	addwfc	fsr2h,f,c
  9006  003D14  C005  FFDE         	movff	?_color_read_Red,postinc2
  9007  003D18  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9008  003D1C  EC36  F024         	call	_color_read_Green	;wreg free
  9009  003D20  EE20 F00E          	lfsr	2,14
  9010  003D24  500C               	movf	calibrate_white@w^0,w,c
  9011  003D26  26D9               	addwf	fsr2l,f,c
  9012  003D28  500D               	movf	(calibrate_white@w+1)^0,w,c
  9013  003D2A  22DA               	addwfc	fsr2h,f,c
  9014  003D2C  C005  FFDE         	movff	?_color_read_Green,postinc2
  9015  003D30  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9016  003D34  EC5E  F024         	call	_color_read_Blue	;wreg free
  9017  003D38  EE20 F010          	lfsr	2,16
  9018  003D3C  500C               	movf	calibrate_white@w^0,w,c
  9019  003D3E  26D9               	addwf	fsr2l,f,c
  9020  003D40  500D               	movf	(calibrate_white@w+1)^0,w,c
  9021  003D42  22DA               	addwfc	fsr2h,f,c
  9022  003D44  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9023  003D48  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9024  003D4C                     
  9025                           ;color.c: 222:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9026  003D4C  0E09               	movlw	9
  9027  003D4E  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9028  003D50  0E1E               	movlw	30
  9029  003D52  6E0E               	movwf	??_calibrate_white^0,c
  9030  003D54  0EE4               	movlw	228
  9031  003D56                     u5277:
  9032  003D56  2EE8               	decfsz	wreg,f,c
  9033  003D58  D7FE               	bra	u5277
  9034  003D5A  2E0E               	decfsz	??_calibrate_white^0,f,c
  9035  003D5C  D7FC               	bra	u5277
  9036  003D5E  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9037  003D60  D7FA               	bra	u5277
  9038  003D62  D000               	nop2	
  9039  003D64  0012               	return		;funcret
  9040  003D66                     __end_of_calibrate_white:
  9041                           	callstack 0
  9042                           
  9043 ;; *************** function _color_read_Red *****************
  9044 ;; Defined at:
  9045 ;;		line 36 in file "color.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;		None
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;  tmp             2    9[COMRAM] unsigned int 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  2    4[COMRAM] unsigned int 
  9052 ;; Registers used:
  9053 ;;		wreg, status,2, status,0, cstack
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9061 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9062 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9063 ;;Total ram usage:        7 bytes
  9064 ;; Hardware stack levels used: 1
  9065 ;; Hardware stack levels required when called: 2
  9066 ;; This function calls:
  9067 ;;		_I2C_2_Master_Read
  9068 ;;		_I2C_2_Master_RepStart
  9069 ;;		_I2C_2_Master_Start
  9070 ;;		_I2C_2_Master_Stop
  9071 ;;		_I2C_2_Master_Write
  9072 ;; This function is called by:
  9073 ;;		_read_color
  9074 ;;		_calibrate_white
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text41
  9079  00481C                     __ptext41:
  9080                           	callstack 0
  9081  00481C                     _color_read_Red:
  9082                           	callstack 26
  9083  00481C                     
  9084                           ;color.c: 38:  unsigned int tmp;;color.c: 39:  I2C_2_Master_Start();
  9085  00481C  ECFE  F026         	call	_I2C_2_Master_Start	;wreg free
  9086                           
  9087                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x00);
  9088  004820  0E52               	movlw	82
  9089  004822  ECF3  F026         	call	_I2C_2_Master_Write
  9090                           
  9091                           ;color.c: 41:  I2C_2_Master_Write(0xA0 | 0x16);
  9092  004826  0EB6               	movlw	182
  9093  004828  ECF3  F026         	call	_I2C_2_Master_Write
  9094                           
  9095                           ;color.c: 42:  I2C_2_Master_RepStart();
  9096  00482C  EC03  F027         	call	_I2C_2_Master_RepStart	;wreg free
  9097                           
  9098                           ;color.c: 43:  I2C_2_Master_Write(0x52 | 0x01);
  9099  004830  0E53               	movlw	83
  9100  004832  ECF3  F026         	call	_I2C_2_Master_Write
  9101                           
  9102                           ;color.c: 44:  tmp=I2C_2_Master_Read(1);
  9103  004836  0E01               	movlw	1
  9104  004838  ECEC  F024         	call	_I2C_2_Master_Read
  9105  00483C  6E07               	movwf	??_color_read_Red^0,c
  9106  00483E  5007               	movf	??_color_read_Red^0,w,c
  9107  004840  6E0A               	movwf	color_read_Red@tmp^0,c
  9108  004842  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  9109                           
  9110                           ;color.c: 45:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9111  004844  0E00               	movlw	0
  9112  004846  ECEC  F024         	call	_I2C_2_Master_Read
  9113  00484A  6E07               	movwf	??_color_read_Red^0,c
  9114  00484C  5007               	movf	??_color_read_Red^0,w,c
  9115  00484E  6E09               	movwf	(??_color_read_Red+2)^0,c
  9116  004850  6A08               	clrf	(??_color_read_Red+1)^0,c
  9117  004852  500A               	movf	color_read_Red@tmp^0,w,c
  9118  004854  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  9119  004856  6E0A               	movwf	color_read_Red@tmp^0,c
  9120  004858  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  9121  00485A  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  9122  00485C  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  9123                           
  9124                           ;color.c: 46:  I2C_2_Master_Stop();
  9125  00485E  ECF9  F026         	call	_I2C_2_Master_Stop	;wreg free
  9126  004862                     
  9127                           ;color.c: 47:  return tmp;
  9128  004862  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  9129  004866  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  9130  00486A  0012               	return		;funcret
  9131  00486C                     __end_of_color_read_Red:
  9132                           	callstack 0
  9133                           
  9134 ;; *************** function _color_read_Green *****************
  9135 ;; Defined at:
  9136 ;;		line 64 in file "color.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;		None
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;  tmp             2    9[COMRAM] unsigned int 
  9141 ;; Return value:  Size  Location     Type
  9142 ;;                  2    4[COMRAM] unsigned int 
  9143 ;; Registers used:
  9144 ;;		wreg, status,2, status,0, cstack
  9145 ;; Tracked objects:
  9146 ;;		On entry : 0/0
  9147 ;;		On exit  : 0/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9152 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9153 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9154 ;;Total ram usage:        7 bytes
  9155 ;; Hardware stack levels used: 1
  9156 ;; Hardware stack levels required when called: 2
  9157 ;; This function calls:
  9158 ;;		_I2C_2_Master_Read
  9159 ;;		_I2C_2_Master_RepStart
  9160 ;;		_I2C_2_Master_Start
  9161 ;;		_I2C_2_Master_Stop
  9162 ;;		_I2C_2_Master_Write
  9163 ;; This function is called by:
  9164 ;;		_read_color
  9165 ;;		_calibrate_white
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text42
  9170  00486C                     __ptext42:
  9171                           	callstack 0
  9172  00486C                     _color_read_Green:
  9173                           	callstack 26
  9174  00486C                     
  9175                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  9176  00486C  ECFE  F026         	call	_I2C_2_Master_Start	;wreg free
  9177                           
  9178                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  9179  004870  0E52               	movlw	82
  9180  004872  ECF3  F026         	call	_I2C_2_Master_Write
  9181                           
  9182                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x18);
  9183  004876  0EB8               	movlw	184
  9184  004878  ECF3  F026         	call	_I2C_2_Master_Write
  9185                           
  9186                           ;color.c: 70:  I2C_2_Master_RepStart();
  9187  00487C  EC03  F027         	call	_I2C_2_Master_RepStart	;wreg free
  9188                           
  9189                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  9190  004880  0E53               	movlw	83
  9191  004882  ECF3  F026         	call	_I2C_2_Master_Write
  9192                           
  9193                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  9194  004886  0E01               	movlw	1
  9195  004888  ECEC  F024         	call	_I2C_2_Master_Read
  9196  00488C  6E07               	movwf	??_color_read_Green^0,c
  9197  00488E  5007               	movf	??_color_read_Green^0,w,c
  9198  004890  6E0A               	movwf	color_read_Green@tmp^0,c
  9199  004892  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  9200                           
  9201                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9202  004894  0E00               	movlw	0
  9203  004896  ECEC  F024         	call	_I2C_2_Master_Read
  9204  00489A  6E07               	movwf	??_color_read_Green^0,c
  9205  00489C  5007               	movf	??_color_read_Green^0,w,c
  9206  00489E  6E09               	movwf	(??_color_read_Green+2)^0,c
  9207  0048A0  6A08               	clrf	(??_color_read_Green+1)^0,c
  9208  0048A2  500A               	movf	color_read_Green@tmp^0,w,c
  9209  0048A4  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  9210  0048A6  6E0A               	movwf	color_read_Green@tmp^0,c
  9211  0048A8  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  9212  0048AA  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  9213  0048AC  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  9214                           
  9215                           ;color.c: 74:  I2C_2_Master_Stop();
  9216  0048AE  ECF9  F026         	call	_I2C_2_Master_Stop	;wreg free
  9217  0048B2                     
  9218                           ;color.c: 75:  return tmp;
  9219  0048B2  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  9220  0048B6  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  9221  0048BA  0012               	return		;funcret
  9222  0048BC                     __end_of_color_read_Green:
  9223                           	callstack 0
  9224                           
  9225 ;; *************** function _color_read_Blue *****************
  9226 ;; Defined at:
  9227 ;;		line 50 in file "color.c"
  9228 ;; Parameters:    Size  Location     Type
  9229 ;;		None
  9230 ;; Auto vars:     Size  Location     Type
  9231 ;;  tmp             2    9[COMRAM] unsigned int 
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  2    4[COMRAM] unsigned int 
  9234 ;; Registers used:
  9235 ;;		wreg, status,2, status,0, cstack
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/0
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9242 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9243 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9244 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9245 ;;Total ram usage:        7 bytes
  9246 ;; Hardware stack levels used: 1
  9247 ;; Hardware stack levels required when called: 2
  9248 ;; This function calls:
  9249 ;;		_I2C_2_Master_Read
  9250 ;;		_I2C_2_Master_RepStart
  9251 ;;		_I2C_2_Master_Start
  9252 ;;		_I2C_2_Master_Stop
  9253 ;;		_I2C_2_Master_Write
  9254 ;; This function is called by:
  9255 ;;		_read_color
  9256 ;;		_calibrate_white
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text43
  9261  0048BC                     __ptext43:
  9262                           	callstack 0
  9263  0048BC                     _color_read_Blue:
  9264                           	callstack 26
  9265  0048BC                     
  9266                           ;color.c: 52:  unsigned int tmp;;color.c: 53:  I2C_2_Master_Start();
  9267  0048BC  ECFE  F026         	call	_I2C_2_Master_Start	;wreg free
  9268                           
  9269                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x00);
  9270  0048C0  0E52               	movlw	82
  9271  0048C2  ECF3  F026         	call	_I2C_2_Master_Write
  9272                           
  9273                           ;color.c: 55:  I2C_2_Master_Write(0xA0 | 0x1A);
  9274  0048C6  0EBA               	movlw	186
  9275  0048C8  ECF3  F026         	call	_I2C_2_Master_Write
  9276                           
  9277                           ;color.c: 56:  I2C_2_Master_RepStart();
  9278  0048CC  EC03  F027         	call	_I2C_2_Master_RepStart	;wreg free
  9279                           
  9280                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x01);
  9281  0048D0  0E53               	movlw	83
  9282  0048D2  ECF3  F026         	call	_I2C_2_Master_Write
  9283                           
  9284                           ;color.c: 58:  tmp=I2C_2_Master_Read(1);
  9285  0048D6  0E01               	movlw	1
  9286  0048D8  ECEC  F024         	call	_I2C_2_Master_Read
  9287  0048DC  6E07               	movwf	??_color_read_Blue^0,c
  9288  0048DE  5007               	movf	??_color_read_Blue^0,w,c
  9289  0048E0  6E0A               	movwf	color_read_Blue@tmp^0,c
  9290  0048E2  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  9291                           
  9292                           ;color.c: 59:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9293  0048E4  0E00               	movlw	0
  9294  0048E6  ECEC  F024         	call	_I2C_2_Master_Read
  9295  0048EA  6E07               	movwf	??_color_read_Blue^0,c
  9296  0048EC  5007               	movf	??_color_read_Blue^0,w,c
  9297  0048EE  6E09               	movwf	(??_color_read_Blue+2)^0,c
  9298  0048F0  6A08               	clrf	(??_color_read_Blue+1)^0,c
  9299  0048F2  500A               	movf	color_read_Blue@tmp^0,w,c
  9300  0048F4  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  9301  0048F6  6E0A               	movwf	color_read_Blue@tmp^0,c
  9302  0048F8  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  9303  0048FA  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  9304  0048FC  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  9305                           
  9306                           ;color.c: 60:  I2C_2_Master_Stop();
  9307  0048FE  ECF9  F026         	call	_I2C_2_Master_Stop	;wreg free
  9308  004902                     
  9309                           ;color.c: 61:  return tmp;
  9310  004902  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  9311  004906  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  9312  00490A  0012               	return		;funcret
  9313  00490C                     __end_of_color_read_Blue:
  9314                           	callstack 0
  9315                           
  9316 ;; *************** function _I2C_2_Master_Write *****************
  9317 ;; Defined at:
  9318 ;;		line 45 in file "i2c.c"
  9319 ;; Parameters:    Size  Location     Type
  9320 ;;  data_byte       1    wreg     unsigned char 
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;  data_byte       1    1[COMRAM] unsigned char 
  9323 ;; Return value:  Size  Location     Type
  9324 ;;                  1    wreg      void 
  9325 ;; Registers used:
  9326 ;;		wreg, status,2, status,0, cstack
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 0/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9336 ;;Total ram usage:        1 bytes
  9337 ;; Hardware stack levels used: 1
  9338 ;; Hardware stack levels required when called: 1
  9339 ;; This function calls:
  9340 ;;		_I2C_2_Master_Idle
  9341 ;; This function is called by:
  9342 ;;		_color_writetoaddr
  9343 ;;		_color_read_Red
  9344 ;;		_color_read_Blue
  9345 ;;		_color_read_Green
  9346 ;;		_color_read_Clear
  9347 ;; This function uses a non-reentrant model
  9348 ;;
  9349                           
  9350                           	psect	text44
  9351  004DE6                     __ptext44:
  9352                           	callstack 0
  9353  004DE6                     _I2C_2_Master_Write:
  9354                           	callstack 26
  9355                           
  9356                           ;incstack = 0
  9357                           ;I2C_2_Master_Write@data_byte stored from wreg
  9358  004DE6  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9359  004DE8                     
  9360                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9361  004DE8  EC46  F026         	call	_I2C_2_Master_Idle	;wreg free
  9362  004DEC                     
  9363                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9364  004DEC  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9365  004DF0  0012               	return		;funcret
  9366  004DF2                     __end_of_I2C_2_Master_Write:
  9367                           	callstack 0
  9368                           
  9369 ;; *************** function _I2C_2_Master_Stop *****************
  9370 ;; Defined at:
  9371 ;;		line 39 in file "i2c.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;		None
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;		None
  9376 ;; Return value:  Size  Location     Type
  9377 ;;                  1    wreg      void 
  9378 ;; Registers used:
  9379 ;;		wreg, status,2, status,0, cstack
  9380 ;; Tracked objects:
  9381 ;;		On entry : 0/0
  9382 ;;		On exit  : 0/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9389 ;;Total ram usage:        0 bytes
  9390 ;; Hardware stack levels used: 1
  9391 ;; Hardware stack levels required when called: 1
  9392 ;; This function calls:
  9393 ;;		_I2C_2_Master_Idle
  9394 ;; This function is called by:
  9395 ;;		_color_writetoaddr
  9396 ;;		_color_read_Red
  9397 ;;		_color_read_Blue
  9398 ;;		_color_read_Green
  9399 ;;		_color_read_Clear
  9400 ;; This function uses a non-reentrant model
  9401 ;;
  9402                           
  9403                           	psect	text45
  9404  004DF2                     __ptext45:
  9405                           	callstack 0
  9406  004DF2                     _I2C_2_Master_Stop:
  9407                           	callstack 26
  9408  004DF2                     
  9409                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9410  004DF2  EC46  F026         	call	_I2C_2_Master_Idle	;wreg free
  9411  004DF6                     
  9412                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9413  004DF6  010E               	movlb	14	; () banked
  9414  004DF8  85DA               	bsf	218,2,b	;volatile
  9415  004DFA                     
  9416                           ; BSR set to: 14
  9417  004DFA  0012               	return		;funcret
  9418  004DFC                     __end_of_I2C_2_Master_Stop:
  9419                           	callstack 0
  9420                           
  9421 ;; *************** function _I2C_2_Master_Start *****************
  9422 ;; Defined at:
  9423 ;;		line 27 in file "i2c.c"
  9424 ;; Parameters:    Size  Location     Type
  9425 ;;		None
  9426 ;; Auto vars:     Size  Location     Type
  9427 ;;		None
  9428 ;; Return value:  Size  Location     Type
  9429 ;;                  1    wreg      void 
  9430 ;; Registers used:
  9431 ;;		wreg, status,2, status,0, cstack
  9432 ;; Tracked objects:
  9433 ;;		On entry : 0/0
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9441 ;;Total ram usage:        0 bytes
  9442 ;; Hardware stack levels used: 1
  9443 ;; Hardware stack levels required when called: 1
  9444 ;; This function calls:
  9445 ;;		_I2C_2_Master_Idle
  9446 ;; This function is called by:
  9447 ;;		_color_writetoaddr
  9448 ;;		_color_read_Red
  9449 ;;		_color_read_Blue
  9450 ;;		_color_read_Green
  9451 ;;		_color_read_Clear
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           	psect	text46
  9456  004DFC                     __ptext46:
  9457                           	callstack 0
  9458  004DFC                     _I2C_2_Master_Start:
  9459                           	callstack 26
  9460  004DFC                     
  9461                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9462  004DFC  EC46  F026         	call	_I2C_2_Master_Idle	;wreg free
  9463  004E00                     
  9464                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9465  004E00  010E               	movlb	14	; () banked
  9466  004E02  81DA               	bsf	218,0,b	;volatile
  9467  004E04                     
  9468                           ; BSR set to: 14
  9469  004E04  0012               	return		;funcret
  9470  004E06                     __end_of_I2C_2_Master_Start:
  9471                           	callstack 0
  9472                           
  9473 ;; *************** function _I2C_2_Master_RepStart *****************
  9474 ;; Defined at:
  9475 ;;		line 33 in file "i2c.c"
  9476 ;; Parameters:    Size  Location     Type
  9477 ;;		None
  9478 ;; Auto vars:     Size  Location     Type
  9479 ;;		None
  9480 ;; Return value:  Size  Location     Type
  9481 ;;                  1    wreg      void 
  9482 ;; Registers used:
  9483 ;;		wreg, status,2, status,0, cstack
  9484 ;; Tracked objects:
  9485 ;;		On entry : 0/0
  9486 ;;		On exit  : 0/0
  9487 ;;		Unchanged: 0/0
  9488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9493 ;;Total ram usage:        0 bytes
  9494 ;; Hardware stack levels used: 1
  9495 ;; Hardware stack levels required when called: 1
  9496 ;; This function calls:
  9497 ;;		_I2C_2_Master_Idle
  9498 ;; This function is called by:
  9499 ;;		_color_read_Red
  9500 ;;		_color_read_Blue
  9501 ;;		_color_read_Green
  9502 ;;		_color_read_Clear
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           	psect	text47
  9507  004E06                     __ptext47:
  9508                           	callstack 0
  9509  004E06                     _I2C_2_Master_RepStart:
  9510                           	callstack 26
  9511  004E06                     
  9512                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9513  004E06  EC46  F026         	call	_I2C_2_Master_Idle	;wreg free
  9514  004E0A                     
  9515                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9516  004E0A  010E               	movlb	14	; () banked
  9517  004E0C  83DA               	bsf	218,1,b	;volatile
  9518  004E0E                     
  9519                           ; BSR set to: 14
  9520  004E0E  0012               	return		;funcret
  9521  004E10                     __end_of_I2C_2_Master_RepStart:
  9522                           	callstack 0
  9523                           
  9524 ;; *************** function _I2C_2_Master_Read *****************
  9525 ;; Defined at:
  9526 ;;		line 51 in file "i2c.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;  ack             1    wreg     unsigned char 
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;  ack             1    2[COMRAM] unsigned char 
  9531 ;;  tmp             1    3[COMRAM] unsigned char 
  9532 ;; Return value:  Size  Location     Type
  9533 ;;                  1    wreg      unsigned char 
  9534 ;; Registers used:
  9535 ;;		wreg, status,2, status,0, cstack
  9536 ;; Tracked objects:
  9537 ;;		On entry : 0/0
  9538 ;;		On exit  : 0/0
  9539 ;;		Unchanged: 0/0
  9540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9542 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9543 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9544 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9545 ;;Total ram usage:        3 bytes
  9546 ;; Hardware stack levels used: 1
  9547 ;; Hardware stack levels required when called: 1
  9548 ;; This function calls:
  9549 ;;		_I2C_2_Master_Idle
  9550 ;; This function is called by:
  9551 ;;		_color_read_Red
  9552 ;;		_color_read_Blue
  9553 ;;		_color_read_Green
  9554 ;;		_color_read_Clear
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text48
  9559  0049D8                     __ptext48:
  9560                           	callstack 0
  9561  0049D8                     _I2C_2_Master_Read:
  9562                           	callstack 26
  9563                           
  9564                           ; BSR set to: 14
  9565                           ;incstack = 0
  9566                           ;I2C_2_Master_Read@ack stored from wreg
  9567  0049D8  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  9568  0049DA                     
  9569                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  9570  0049DA  EC46  F026         	call	_I2C_2_Master_Idle	;wreg free
  9571  0049DE                     
  9572                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  9573  0049DE  010E               	movlb	14	; () banked
  9574  0049E0  87DA               	bsf	218,3,b	;volatile
  9575                           
  9576                           ;i2c.c: 56:   I2C_2_Master_Idle();
  9577  0049E2  EC46  F026         	call	_I2C_2_Master_Idle	;wreg free
  9578  0049E6                     
  9579                           ;i2c.c: 57:   tmp = SSP2BUF;
  9580  0049E6  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  9581                           
  9582                           ;i2c.c: 58:   I2C_2_Master_Idle();
  9583  0049EA  EC46  F026         	call	_I2C_2_Master_Idle	;wreg free
  9584  0049EE                     
  9585                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  9586  0049EE  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  9587  0049F0  B4D8               	btfsc	status,2,c
  9588  0049F2  EFFD  F024         	goto	u3521
  9589  0049F6  EF01  F025         	goto	u3520
  9590  0049FA                     u3521:
  9591  0049FA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  9592  0049FC  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  9593  0049FE  EF02  F025         	goto	u3538
  9594  004A02                     u3520:
  9595  004A02  6A02               	clrf	??_I2C_2_Master_Read^0,c
  9596  004A04                     u3538:
  9597  004A04  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  9598  004A06  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  9599  004A08  010E               	movlb	14	; () banked
  9600  004A0A  51DA               	movf	218,w,b	;volatile
  9601  004A0C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  9602  004A0E  0BDF               	andlw	-33
  9603  004A10  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  9604  004A12  6FDA               	movwf	218,b	;volatile
  9605  004A14                     
  9606                           ; BSR set to: 14
  9607                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  9608  004A14  89DA               	bsf	218,4,b	;volatile
  9609  004A16                     
  9610                           ; BSR set to: 14
  9611                           ;i2c.c: 61:   return tmp;
  9612  004A16  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  9613  004A18                     
  9614                           ; BSR set to: 14
  9615  004A18  0012               	return		;funcret
  9616  004A1A                     __end_of_I2C_2_Master_Read:
  9617                           	callstack 0
  9618                           
  9619 ;; *************** function _I2C_2_Master_Idle *****************
  9620 ;; Defined at:
  9621 ;;		line 22 in file "i2c.c"
  9622 ;; Parameters:    Size  Location     Type
  9623 ;;		None
  9624 ;; Auto vars:     Size  Location     Type
  9625 ;;		None
  9626 ;; Return value:  Size  Location     Type
  9627 ;;                  1    wreg      void 
  9628 ;; Registers used:
  9629 ;;		wreg, status,2, status,0
  9630 ;; Tracked objects:
  9631 ;;		On entry : 0/0
  9632 ;;		On exit  : 0/0
  9633 ;;		Unchanged: 0/0
  9634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9638 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9639 ;;Total ram usage:        1 bytes
  9640 ;; Hardware stack levels used: 1
  9641 ;; This function calls:
  9642 ;;		Nothing
  9643 ;; This function is called by:
  9644 ;;		_I2C_2_Master_Start
  9645 ;;		_I2C_2_Master_RepStart
  9646 ;;		_I2C_2_Master_Stop
  9647 ;;		_I2C_2_Master_Write
  9648 ;;		_I2C_2_Master_Read
  9649 ;; This function uses a non-reentrant model
  9650 ;;
  9651                           
  9652                           	psect	text49
  9653  004C8C                     __ptext49:
  9654                           	callstack 0
  9655  004C8C                     _I2C_2_Master_Idle:
  9656                           	callstack 26
  9657  004C8C                     l202:
  9658  004C8C  010E               	movlb	14	; () banked
  9659  004C8E  B5D8               	btfsc	216,2,b	;volatile
  9660  004C90  EF4C  F026         	goto	u3031
  9661  004C94  EF4E  F026         	goto	u3030
  9662  004C98                     u3031:
  9663  004C98  EF46  F026         	goto	l202
  9664  004C9C                     u3030:
  9665  004C9C                     
  9666                           ; BSR set to: 14
  9667  004C9C  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9668  004CA0  0E1F               	movlw	31
  9669  004CA2  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9670  004CA4  A4D8               	btfss	status,2,c
  9671  004CA6  EF57  F026         	goto	u3041
  9672  004CAA  EF59  F026         	goto	u3040
  9673  004CAE                     u3041:
  9674  004CAE  EF46  F026         	goto	l202
  9675  004CB2                     u3040:
  9676  004CB2                     
  9677                           ; BSR set to: 14
  9678  004CB2  0012               	return		;funcret
  9679  004CB4                     __end_of_I2C_2_Master_Idle:
  9680                           	callstack 0
  9681                           
  9682 ;; *************** function _LED_R *****************
  9683 ;; Defined at:
  9684 ;;		line 100 in file "color.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;		None
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;		None
  9689 ;; Return value:  Size  Location     Type
  9690 ;;                  1    wreg      void 
  9691 ;; Registers used:
  9692 ;;		wreg
  9693 ;; Tracked objects:
  9694 ;;		On entry : 0/0
  9695 ;;		On exit  : 0/0
  9696 ;;		Unchanged: 0/0
  9697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9700 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9701 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9702 ;;Total ram usage:        2 bytes
  9703 ;; Hardware stack levels used: 1
  9704 ;; This function calls:
  9705 ;;		Nothing
  9706 ;; This function is called by:
  9707 ;;		_color_data_collection
  9708 ;;		_calibrate_white
  9709 ;;		_detect_color
  9710 ;; This function uses a non-reentrant model
  9711 ;;
  9712                           
  9713                           	psect	text50
  9714  004D1A                     __ptext50:
  9715                           	callstack 0
  9716  004D1A                     _LED_R:
  9717                           	callstack 29
  9718  004D1A                     
  9719                           ;color.c: 102:     LATGbits.LATG1 = 1;
  9720  004D1A  827F               	bsf	127,1,c	;volatile
  9721                           
  9722                           ;color.c: 103:     LATFbits.LATF7 = 0;
  9723  004D1C  9E7E               	bcf	126,7,c	;volatile
  9724                           
  9725                           ;color.c: 104:     LATAbits.LATA4 = 0;
  9726  004D1E  9879               	bcf	121,4,c	;volatile
  9727  004D20                     
  9728                           ;color.c: 105:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9729  004D20  0E11               	movlw	17
  9730  004D22  6E02               	movwf	(??_LED_R+1)^0,c
  9731  004D24  0E3C               	movlw	60
  9732  004D26  6E01               	movwf	??_LED_R^0,c
  9733  004D28  0ECB               	movlw	203
  9734  004D2A                     u5287:
  9735  004D2A  2EE8               	decfsz	wreg,f,c
  9736  004D2C  D7FE               	bra	u5287
  9737  004D2E  2E01               	decfsz	??_LED_R^0,f,c
  9738  004D30  D7FC               	bra	u5287
  9739  004D32  2E02               	decfsz	(??_LED_R+1)^0,f,c
  9740  004D34  D7FA               	bra	u5287
  9741  004D36  F000               	nop	
  9742  004D38  0012               	return		;funcret
  9743  004D3A                     __end_of_LED_R:
  9744                           	callstack 0
  9745                           
  9746 ;; *************** function _LED_G *****************
  9747 ;; Defined at:
  9748 ;;		line 127 in file "color.c"
  9749 ;; Parameters:    Size  Location     Type
  9750 ;;		None
  9751 ;; Auto vars:     Size  Location     Type
  9752 ;;		None
  9753 ;; Return value:  Size  Location     Type
  9754 ;;                  1    wreg      void 
  9755 ;; Registers used:
  9756 ;;		wreg
  9757 ;; Tracked objects:
  9758 ;;		On entry : 0/0
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9764 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9766 ;;Total ram usage:        2 bytes
  9767 ;; Hardware stack levels used: 1
  9768 ;; This function calls:
  9769 ;;		Nothing
  9770 ;; This function is called by:
  9771 ;;		_color_data_collection
  9772 ;;		_calibrate_white
  9773 ;;		_detect_color
  9774 ;; This function uses a non-reentrant model
  9775 ;;
  9776                           
  9777                           	psect	text51
  9778  004D3A                     __ptext51:
  9779                           	callstack 0
  9780  004D3A                     _LED_G:
  9781                           	callstack 29
  9782  004D3A                     
  9783                           ;color.c: 129:     LATGbits.LATG1 = 0;
  9784  004D3A  927F               	bcf	127,1,c	;volatile
  9785                           
  9786                           ;color.c: 130:     LATFbits.LATF7 = 0;
  9787  004D3C  9E7E               	bcf	126,7,c	;volatile
  9788                           
  9789                           ;color.c: 131:     LATAbits.LATA4 = 1;
  9790  004D3E  8879               	bsf	121,4,c	;volatile
  9791  004D40                     
  9792                           ;color.c: 132:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9793  004D40  0E11               	movlw	17
  9794  004D42  6E02               	movwf	(??_LED_G+1)^0,c
  9795  004D44  0E3C               	movlw	60
  9796  004D46  6E01               	movwf	??_LED_G^0,c
  9797  004D48  0ECB               	movlw	203
  9798  004D4A                     u5297:
  9799  004D4A  2EE8               	decfsz	wreg,f,c
  9800  004D4C  D7FE               	bra	u5297
  9801  004D4E  2E01               	decfsz	??_LED_G^0,f,c
  9802  004D50  D7FC               	bra	u5297
  9803  004D52  2E02               	decfsz	(??_LED_G+1)^0,f,c
  9804  004D54  D7FA               	bra	u5297
  9805  004D56  F000               	nop	
  9806  004D58  0012               	return		;funcret
  9807  004D5A                     __end_of_LED_G:
  9808                           	callstack 0
  9809                           
  9810 ;; *************** function _LED_B *****************
  9811 ;; Defined at:
  9812 ;;		line 118 in file "color.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;		None
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;		None
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1    wreg      void 
  9819 ;; Registers used:
  9820 ;;		wreg
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9828 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9829 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9830 ;;Total ram usage:        2 bytes
  9831 ;; Hardware stack levels used: 1
  9832 ;; This function calls:
  9833 ;;		Nothing
  9834 ;; This function is called by:
  9835 ;;		_color_data_collection
  9836 ;;		_calibrate_white
  9837 ;;		_detect_color
  9838 ;; This function uses a non-reentrant model
  9839 ;;
  9840                           
  9841                           	psect	text52
  9842  004D5A                     __ptext52:
  9843                           	callstack 0
  9844  004D5A                     _LED_B:
  9845                           	callstack 29
  9846  004D5A                     
  9847                           ;color.c: 120:     LATGbits.LATG1 = 0;
  9848  004D5A  927F               	bcf	127,1,c	;volatile
  9849                           
  9850                           ;color.c: 121:     LATFbits.LATF7 = 1;
  9851  004D5C  8E7E               	bsf	126,7,c	;volatile
  9852                           
  9853                           ;color.c: 122:     LATAbits.LATA4 = 0;
  9854  004D5E  9879               	bcf	121,4,c	;volatile
  9855  004D60                     
  9856                           ;color.c: 123:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9857  004D60  0E11               	movlw	17
  9858  004D62  6E02               	movwf	(??_LED_B+1)^0,c
  9859  004D64  0E3C               	movlw	60
  9860  004D66  6E01               	movwf	??_LED_B^0,c
  9861  004D68  0ECB               	movlw	203
  9862  004D6A                     u5307:
  9863  004D6A  2EE8               	decfsz	wreg,f,c
  9864  004D6C  D7FE               	bra	u5307
  9865  004D6E  2E01               	decfsz	??_LED_B^0,f,c
  9866  004D70  D7FC               	bra	u5307
  9867  004D72  2E02               	decfsz	(??_LED_B+1)^0,f,c
  9868  004D74  D7FA               	bra	u5307
  9869  004D76  F000               	nop	
  9870  004D78  0012               	return		;funcret
  9871  004D7A                     __end_of_LED_B:
  9872                           	callstack 0
  9873                           
  9874 ;; *************** function _action *****************
  9875 ;; Defined at:
  9876 ;;		line 8 in file "movement.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  color           1    wreg     unsigned char 
  9879 ;;  mL              2   49[COMRAM] PTR struct DC_motor
  9880 ;;		 -> main@motorL(10), 
  9881 ;;  mR              2   51[COMRAM] PTR struct DC_motor
  9882 ;;		 -> main@motorR(10), 
  9883 ;; Auto vars:     Size  Location     Type
  9884 ;;  color           1   53[COMRAM] unsigned char 
  9885 ;; Return value:  Size  Location     Type
  9886 ;;                  1    wreg      void 
  9887 ;; Registers used:
  9888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9889 ;; Tracked objects:
  9890 ;;		On entry : 0/0
  9891 ;;		On exit  : 0/0
  9892 ;;		Unchanged: 0/0
  9893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9897 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9898 ;;Total ram usage:        5 bytes
  9899 ;; Hardware stack levels used: 1
  9900 ;; Hardware stack levels required when called: 5
  9901 ;; This function calls:
  9902 ;;		_fullSpeedAhead
  9903 ;;		_goback
  9904 ;;		_reverse_square
  9905 ;;		_short_reverse
  9906 ;;		_stop
  9907 ;;		_turnLeft
  9908 ;;		_turnRight
  9909 ;; This function is called by:
  9910 ;;		_main
  9911 ;; This function uses a non-reentrant model
  9912 ;;
  9913                           
  9914                           	psect	text53
  9915  002E00                     __ptext53:
  9916                           	callstack 0
  9917  002E00                     _action:
  9918                           	callstack 25
  9919                           
  9920                           ;incstack = 0
  9921                           ;action@color stored from wreg
  9922  002E00  6E36               	movwf	action@color^0,c
  9923  002E02                     
  9924                           ;movement.c: 8: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *m
      +                          R);movement.c: 9: { fullSpeedAhead(mL,mR);
  9925  002E02  C032  F01A         	movff	action@mL,fullSpeedAhead@mL
  9926  002E06  C033  F01B         	movff	action@mL+1,fullSpeedAhead@mL+1
  9927  002E0A  C034  F01C         	movff	action@mR,fullSpeedAhead@mR
  9928  002E0E  C035  F01D         	movff	action@mR+1,fullSpeedAhead@mR+1
  9929  002E12  ECDB  F022         	call	_fullSpeedAhead	;wreg free
  9930  002E16                     
  9931                           ;movement.c: 10:     if (color != 0){stop(mL,mR);
  9932  002E16  5036               	movf	action@color^0,w,c
  9933  002E18  B4D8               	btfsc	status,2,c
  9934  002E1A  EF11  F017         	goto	u4941
  9935  002E1E  EF13  F017         	goto	u4940
  9936  002E22                     u4941:
  9937  002E22  EF12  F018         	goto	l588
  9938  002E26                     u4940:
  9939  002E26  C032  F01A         	movff	action@mL,stop@mL
  9940  002E2A  C033  F01B         	movff	action@mL+1,stop@mL+1
  9941  002E2E  C034  F01C         	movff	action@mR,stop@mR
  9942  002E32  C035  F01D         	movff	action@mR+1,stop@mR+1
  9943  002E36  EC7D  F022         	call	_stop	;wreg free
  9944  002E3A                     
  9945                           ;movement.c: 11:         if (color == 1){
  9946  002E3A  0436               	decf	action@color^0,w,c
  9947  002E3C  A4D8               	btfss	status,2,c
  9948  002E3E  EF23  F017         	goto	u4951
  9949  002E42  EF25  F017         	goto	u4950
  9950  002E46                     u4951:
  9951  002E46  EF3B  F017         	goto	l4732
  9952  002E4A                     u4950:
  9953  002E4A                     
  9954                           ;movement.c: 12:             short_reverse(mL,mR);
  9955  002E4A  C032  F026         	movff	action@mL,short_reverse@mL
  9956  002E4E  C033  F027         	movff	action@mL+1,short_reverse@mL+1
  9957  002E52  C034  F028         	movff	action@mR,short_reverse@mR
  9958  002E56  C035  F029         	movff	action@mR+1,short_reverse@mR+1
  9959  002E5A  EC0D  F025         	call	_short_reverse	;wreg free
  9960                           
  9961                           ;movement.c: 13:             turnRight(mL,mR,90);
  9962  002E5E  C032  F020         	movff	action@mL,turnRight@mL
  9963  002E62  C033  F021         	movff	action@mL+1,turnRight@mL+1
  9964  002E66  C034  F022         	movff	action@mR,turnRight@mR
  9965  002E6A  C035  F023         	movff	action@mR+1,turnRight@mR+1
  9966  002E6E  0E5A               	movlw	90
  9967  002E70  6E24               	movwf	turnRight@angle_right^0,c
  9968  002E72  ECF2  F01C         	call	_turnRight	;wreg free
  9969  002E76                     l4732:
  9970                           
  9971                           ;movement.c: 15:         if (color == 2){
  9972  002E76  0E02               	movlw	2
  9973  002E78  1836               	xorwf	action@color^0,w,c
  9974  002E7A  A4D8               	btfss	status,2,c
  9975  002E7C  EF42  F017         	goto	u4961
  9976  002E80  EF44  F017         	goto	u4960
  9977  002E84                     u4961:
  9978  002E84  EF5A  F017         	goto	l4736
  9979  002E88                     u4960:
  9980  002E88                     
  9981                           ;movement.c: 16:             short_reverse(mL,mR);
  9982  002E88  C032  F026         	movff	action@mL,short_reverse@mL
  9983  002E8C  C033  F027         	movff	action@mL+1,short_reverse@mL+1
  9984  002E90  C034  F028         	movff	action@mR,short_reverse@mR
  9985  002E94  C035  F029         	movff	action@mR+1,short_reverse@mR+1
  9986  002E98  EC0D  F025         	call	_short_reverse	;wreg free
  9987                           
  9988                           ;movement.c: 17:             turnLeft(mL,mR,90);
  9989  002E9C  C032  F020         	movff	action@mL,turnLeft@mL
  9990  002EA0  C033  F021         	movff	action@mL+1,turnLeft@mL+1
  9991  002EA4  C034  F022         	movff	action@mR,turnLeft@mR
  9992  002EA8  C035  F023         	movff	action@mR+1,turnLeft@mR+1
  9993  002EAC  0E5A               	movlw	90
  9994  002EAE  6E24               	movwf	turnLeft@angle_left^0,c
  9995  002EB0  EC88  F01D         	call	_turnLeft	;wreg free
  9996  002EB4                     l4736:
  9997                           
  9998                           ;movement.c: 19:         if (color == 3){
  9999  002EB4  0E03               	movlw	3
 10000  002EB6  1836               	xorwf	action@color^0,w,c
 10001  002EB8  A4D8               	btfss	status,2,c
 10002  002EBA  EF61  F017         	goto	u4971
 10003  002EBE  EF63  F017         	goto	u4970
 10004  002EC2                     u4971:
 10005  002EC2  EF79  F017         	goto	l4740
 10006  002EC6                     u4970:
 10007  002EC6                     
 10008                           ;movement.c: 20:             short_reverse(mL,mR);
 10009  002EC6  C032  F026         	movff	action@mL,short_reverse@mL
 10010  002ECA  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 10011  002ECE  C034  F028         	movff	action@mR,short_reverse@mR
 10012  002ED2  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 10013  002ED6  EC0D  F025         	call	_short_reverse	;wreg free
 10014                           
 10015                           ;movement.c: 21:             turnLeft(mL,mR,180);
 10016  002EDA  C032  F020         	movff	action@mL,turnLeft@mL
 10017  002EDE  C033  F021         	movff	action@mL+1,turnLeft@mL+1
 10018  002EE2  C034  F022         	movff	action@mR,turnLeft@mR
 10019  002EE6  C035  F023         	movff	action@mR+1,turnLeft@mR+1
 10020  002EEA  0EB4               	movlw	180
 10021  002EEC  6E24               	movwf	turnLeft@angle_left^0,c
 10022  002EEE  EC88  F01D         	call	_turnLeft	;wreg free
 10023  002EF2                     l4740:
 10024                           
 10025                           ;movement.c: 23:         if (color == 4){
 10026  002EF2  0E04               	movlw	4
 10027  002EF4  1836               	xorwf	action@color^0,w,c
 10028  002EF6  A4D8               	btfss	status,2,c
 10029  002EF8  EF80  F017         	goto	u4981
 10030  002EFC  EF82  F017         	goto	u4980
 10031  002F00                     u4981:
 10032  002F00  EF98  F017         	goto	l4744
 10033  002F04                     u4980:
 10034  002F04                     
 10035                           ;movement.c: 24:             reverse_square(mL,mR);
 10036  002F04  C032  F026         	movff	action@mL,reverse_square@mL
 10037  002F08  C033  F027         	movff	action@mL+1,reverse_square@mL+1
 10038  002F0C  C034  F028         	movff	action@mR,reverse_square@mR
 10039  002F10  C035  F029         	movff	action@mR+1,reverse_square@mR+1
 10040  002F14  EC2E  F025         	call	_reverse_square	;wreg free
 10041                           
 10042                           ;movement.c: 25:             turnRight(mL,mR,90);
 10043  002F18  C032  F020         	movff	action@mL,turnRight@mL
 10044  002F1C  C033  F021         	movff	action@mL+1,turnRight@mL+1
 10045  002F20  C034  F022         	movff	action@mR,turnRight@mR
 10046  002F24  C035  F023         	movff	action@mR+1,turnRight@mR+1
 10047  002F28  0E5A               	movlw	90
 10048  002F2A  6E24               	movwf	turnRight@angle_right^0,c
 10049  002F2C  ECF2  F01C         	call	_turnRight	;wreg free
 10050  002F30                     l4744:
 10051                           
 10052                           ;movement.c: 27:         if (color == 5){
 10053  002F30  0E05               	movlw	5
 10054  002F32  1836               	xorwf	action@color^0,w,c
 10055  002F34  A4D8               	btfss	status,2,c
 10056  002F36  EF9F  F017         	goto	u4991
 10057  002F3A  EFA1  F017         	goto	u4990
 10058  002F3E                     u4991:
 10059  002F3E  EFB7  F017         	goto	l4748
 10060  002F42                     u4990:
 10061  002F42                     
 10062                           ;movement.c: 28:             reverse_square(mL,mR);
 10063  002F42  C032  F026         	movff	action@mL,reverse_square@mL
 10064  002F46  C033  F027         	movff	action@mL+1,reverse_square@mL+1
 10065  002F4A  C034  F028         	movff	action@mR,reverse_square@mR
 10066  002F4E  C035  F029         	movff	action@mR+1,reverse_square@mR+1
 10067  002F52  EC2E  F025         	call	_reverse_square	;wreg free
 10068                           
 10069                           ;movement.c: 29:             turnLeft(mL,mR,90);
 10070  002F56  C032  F020         	movff	action@mL,turnLeft@mL
 10071  002F5A  C033  F021         	movff	action@mL+1,turnLeft@mL+1
 10072  002F5E  C034  F022         	movff	action@mR,turnLeft@mR
 10073  002F62  C035  F023         	movff	action@mR+1,turnLeft@mR+1
 10074  002F66  0E5A               	movlw	90
 10075  002F68  6E24               	movwf	turnLeft@angle_left^0,c
 10076  002F6A  EC88  F01D         	call	_turnLeft	;wreg free
 10077  002F6E                     l4748:
 10078                           
 10079                           ;movement.c: 31:         if (color == 6){
 10080  002F6E  0E06               	movlw	6
 10081  002F70  1836               	xorwf	action@color^0,w,c
 10082  002F72  A4D8               	btfss	status,2,c
 10083  002F74  EFBE  F017         	goto	u5001
 10084  002F78  EFC0  F017         	goto	u5000
 10085  002F7C                     u5001:
 10086  002F7C  EFD6  F017         	goto	l4752
 10087  002F80                     u5000:
 10088  002F80                     
 10089                           ;movement.c: 32:             short_reverse(mL,mR);
 10090  002F80  C032  F026         	movff	action@mL,short_reverse@mL
 10091  002F84  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 10092  002F88  C034  F028         	movff	action@mR,short_reverse@mR
 10093  002F8C  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 10094  002F90  EC0D  F025         	call	_short_reverse	;wreg free
 10095                           
 10096                           ;movement.c: 33:             turnRight(mL,mR,135);
 10097  002F94  C032  F020         	movff	action@mL,turnRight@mL
 10098  002F98  C033  F021         	movff	action@mL+1,turnRight@mL+1
 10099  002F9C  C034  F022         	movff	action@mR,turnRight@mR
 10100  002FA0  C035  F023         	movff	action@mR+1,turnRight@mR+1
 10101  002FA4  0E87               	movlw	135
 10102  002FA6  6E24               	movwf	turnRight@angle_right^0,c
 10103  002FA8  ECF2  F01C         	call	_turnRight	;wreg free
 10104  002FAC                     l4752:
 10105                           
 10106                           ;movement.c: 35:         if (color == 7){
 10107  002FAC  0E07               	movlw	7
 10108  002FAE  1836               	xorwf	action@color^0,w,c
 10109  002FB0  A4D8               	btfss	status,2,c
 10110  002FB2  EFDD  F017         	goto	u5011
 10111  002FB6  EFDF  F017         	goto	u5010
 10112  002FBA                     u5011:
 10113  002FBA  EFF5  F017         	goto	l4756
 10114  002FBE                     u5010:
 10115  002FBE                     
 10116                           ;movement.c: 36:             short_reverse(mL,mR);
 10117  002FBE  C032  F026         	movff	action@mL,short_reverse@mL
 10118  002FC2  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 10119  002FC6  C034  F028         	movff	action@mR,short_reverse@mR
 10120  002FCA  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 10121  002FCE  EC0D  F025         	call	_short_reverse	;wreg free
 10122                           
 10123                           ;movement.c: 37:             turnLeft(mL,mR,135);
 10124  002FD2  C032  F020         	movff	action@mL,turnLeft@mL
 10125  002FD6  C033  F021         	movff	action@mL+1,turnLeft@mL+1
 10126  002FDA  C034  F022         	movff	action@mR,turnLeft@mR
 10127  002FDE  C035  F023         	movff	action@mR+1,turnLeft@mR+1
 10128  002FE2  0E87               	movlw	135
 10129  002FE4  6E24               	movwf	turnLeft@angle_left^0,c
 10130  002FE6  EC88  F01D         	call	_turnLeft	;wreg free
 10131  002FEA                     l4756:
 10132                           
 10133                           ;movement.c: 39:         if (color == 8){
 10134  002FEA  0E08               	movlw	8
 10135  002FEC  1836               	xorwf	action@color^0,w,c
 10136  002FEE  A4D8               	btfss	status,2,c
 10137  002FF0  EFFC  F017         	goto	u5021
 10138  002FF4  EFFE  F017         	goto	u5020
 10139  002FF8                     u5021:
 10140  002FF8  EF12  F018         	goto	l588
 10141  002FFC                     u5020:
 10142  002FFC                     
 10143                           ;movement.c: 40:             short_reverse(mL,mR);
 10144  002FFC  C032  F026         	movff	action@mL,short_reverse@mL
 10145  003000  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 10146  003004  C034  F028         	movff	action@mR,short_reverse@mR
 10147  003008  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 10148  00300C  EC0D  F025         	call	_short_reverse	;wreg free
 10149                           
 10150                           ;movement.c: 41:             goback(mL,mR);
 10151  003010  C032  F02E         	movff	action@mL,goback@mL
 10152  003014  C033  F02F         	movff	action@mL+1,goback@mL+1
 10153  003018  C034  F030         	movff	action@mR,goback@mR
 10154  00301C  C035  F031         	movff	action@mR+1,goback@mR+1
 10155  003020  ECDA  F026         	call	_goback	;wreg free
 10156  003024                     l588:
 10157  003024  0012               	return		;funcret
 10158  003026                     __end_of_action:
 10159                           	callstack 0
 10160                           
 10161 ;; *************** function _turnRight *****************
 10162 ;; Defined at:
 10163 ;;		line 120 in file "dc_motor.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10166 ;;		 -> main@motorL(10), 
 10167 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10168 ;;		 -> main@motorR(10), 
 10169 ;;  angle_right     1   35[COMRAM] unsigned char 
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;  i               2   41[COMRAM] unsigned int 
 10172 ;;  i               2   39[COMRAM] unsigned int 
 10173 ;;  delay           2   43[COMRAM] unsigned int 
 10174 ;;  delay_180       2   37[COMRAM] unsigned int 
 10175 ;; Return value:  Size  Location     Type
 10176 ;;                  1    wreg      void 
 10177 ;; Registers used:
 10178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10179 ;; Tracked objects:
 10180 ;;		On entry : 0/0
 10181 ;;		On exit  : 0/0
 10182 ;;		Unchanged: 0/0
 10183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10184 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10185 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10187 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10188 ;;Total ram usage:       14 bytes
 10189 ;; Hardware stack levels used: 1
 10190 ;; Hardware stack levels required when called: 3
 10191 ;; This function calls:
 10192 ;;		_setMotorPWM
 10193 ;;		_stop
 10194 ;; This function is called by:
 10195 ;;		_action
 10196 ;;		_movement
 10197 ;;		_test_action
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           	psect	text54
 10202  0039E4                     __ptext54:
 10203                           	callstack 0
 10204  0039E4                     _turnRight:
 10205                           	callstack 26
 10206  0039E4                     
 10207                           ;dc_motor.c: 120: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 121: {;dc_motor.c: 122:     mL->direction=1;
 10208  0039E4  EE20 F001          	lfsr	2,1
 10209  0039E8  5020               	movf	turnRight@mL^0,w,c
 10210  0039EA  26D9               	addwf	fsr2l,f,c
 10211  0039EC  5021               	movf	(turnRight@mL+1)^0,w,c
 10212  0039EE  22DA               	addwfc	fsr2h,f,c
 10213  0039F0  0E01               	movlw	1
 10214  0039F2  6EDF               	movwf	indf2,c
 10215                           
 10216                           ;dc_motor.c: 123:     mR->direction=1;
 10217  0039F4  EE20 F001          	lfsr	2,1
 10218  0039F8  5022               	movf	turnRight@mR^0,w,c
 10219  0039FA  26D9               	addwf	fsr2l,f,c
 10220  0039FC  5023               	movf	(turnRight@mR+1)^0,w,c
 10221  0039FE  22DA               	addwfc	fsr2h,f,c
 10222  003A00  0E01               	movlw	1
 10223  003A02  6EDF               	movwf	indf2,c
 10224                           
 10225                           ;dc_motor.c: 124:     while (mL->power <25){
 10226  003A04  EF23  F01D         	goto	l4174
 10227  003A08                     l4166:
 10228                           
 10229                           ;dc_motor.c: 125:         mL->power += 5;
 10230  003A08  C020  FFD9         	movff	turnRight@mL,fsr2l
 10231  003A0C  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10232  003A10  0E05               	movlw	5
 10233  003A12  26DF               	addwf	indf2,f,c
 10234                           
 10235                           ;dc_motor.c: 126:         mR->power = 0;
 10236  003A14  C022  FFD9         	movff	turnRight@mR,fsr2l
 10237  003A18  C023  FFDA         	movff	turnRight@mR+1,fsr2h
 10238  003A1C  0E00               	movlw	0
 10239  003A1E  6EDF               	movwf	indf2,c
 10240  003A20                     
 10241                           ;dc_motor.c: 127:         setMotorPWM(mL);
 10242  003A20  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
 10243  003A24  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
 10244  003A28  EC13  F018         	call	_setMotorPWM	;wreg free
 10245  003A2C                     
 10246                           ;dc_motor.c: 128:         setMotorPWM(mR);
 10247  003A2C  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
 10248  003A30  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
 10249  003A34  EC13  F018         	call	_setMotorPWM	;wreg free
 10250  003A38                     
 10251                           ;dc_motor.c: 129:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10252  003A38  0ED0               	movlw	208
 10253  003A3A  6E25               	movwf	??_turnRight^0,c
 10254  003A3C  0ECA               	movlw	202
 10255  003A3E                     u5317:
 10256  003A3E  2EE8               	decfsz	wreg,f,c
 10257  003A40  D7FE               	bra	u5317
 10258  003A42  2E25               	decfsz	??_turnRight^0,f,c
 10259  003A44  D7FC               	bra	u5317
 10260  003A46                     l4174:
 10261                           
 10262                           ;dc_motor.c: 124:     while (mL->power <25){
 10263  003A46  C020  FFD9         	movff	turnRight@mL,fsr2l
 10264  003A4A  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10265  003A4E  0E18               	movlw	24
 10266  003A50  64DF               	cpfsgt	indf2,c
 10267  003A52  EF2D  F01D         	goto	u4201
 10268  003A56  EF2F  F01D         	goto	u4200
 10269  003A5A                     u4201:
 10270  003A5A  EF04  F01D         	goto	l4166
 10271  003A5E                     u4200:
 10272  003A5E                     
 10273                           ;dc_motor.c: 131:     unsigned int delay = angle_right * SENSITIVITY;
 10274  003A5E  5024               	movf	turnRight@angle_right^0,w,c
 10275  003A60  0100               	movlb	0	; () banked
 10276  003A62  03F9               	mulwf	_SENSITIVITY& (0+255),b
 10277  003A64  CFF3 F02C          	movff	prodl,turnRight@delay
 10278  003A68  CFF4 F02D          	movff	prodh,turnRight@delay+1
 10279  003A6C                     
 10280                           ; BSR set to: 0
 10281                           ;dc_motor.c: 132:     unsigned int delay_180 = delay + CALIBRATION_180;
 10282  003A6C  0E28               	movlw	40
 10283  003A6E  242C               	addwf	turnRight@delay^0,w,c
 10284  003A70  6E26               	movwf	turnRight@delay_180^0,c
 10285  003A72  0E00               	movlw	0
 10286  003A74  202D               	addwfc	(turnRight@delay+1)^0,w,c
 10287  003A76  6E27               	movwf	(turnRight@delay_180+1)^0,c
 10288  003A78                     
 10289                           ; BSR set to: 0
 10290                           ;dc_motor.c: 133:     if (angle_right == 180){
 10291  003A78  0EB4               	movlw	180
 10292  003A7A  1824               	xorwf	turnRight@angle_right^0,w,c
 10293  003A7C  A4D8               	btfss	status,2,c
 10294  003A7E  EF43  F01D         	goto	u4211
 10295  003A82  EF45  F01D         	goto	u4210
 10296  003A86                     u4211:
 10297  003A86  EF62  F01D         	goto	l4188
 10298  003A8A                     u4210:
 10299  003A8A                     
 10300                           ; BSR set to: 0
 10301                           ;dc_motor.c: 134:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10302  003A8A  0E00               	movlw	0
 10303  003A8C  6E29               	movwf	(turnRight@i+1)^0,c
 10304  003A8E  0E00               	movlw	0
 10305  003A90  6E28               	movwf	turnRight@i^0,c
 10306  003A92  EF55  F01D         	goto	l330
 10307  003A96                     l4184:
 10308  003A96  0E15               	movlw	21
 10309  003A98  6E25               	movwf	??_turnRight^0,c
 10310  003A9A  0EC6               	movlw	198
 10311  003A9C                     u5327:
 10312  003A9C  2EE8               	decfsz	wreg,f,c
 10313  003A9E  D7FE               	bra	u5327
 10314  003AA0  2E25               	decfsz	??_turnRight^0,f,c
 10315  003AA2  D7FC               	bra	u5327
 10316  003AA4  D000               	nop2	
 10317  003AA6  4A28               	infsnz	turnRight@i^0,f,c
 10318  003AA8  2A29               	incf	(turnRight@i+1)^0,f,c
 10319  003AAA                     l330:
 10320  003AAA  5026               	movf	turnRight@delay_180^0,w,c
 10321  003AAC  5C28               	subwf	turnRight@i^0,w,c
 10322  003AAE  5027               	movf	(turnRight@delay_180+1)^0,w,c
 10323  003AB0  5829               	subwfb	(turnRight@i+1)^0,w,c
 10324  003AB2  A0D8               	btfss	status,0,c
 10325  003AB4  EF5E  F01D         	goto	u4221
 10326  003AB8  EF60  F01D         	goto	u4220
 10327  003ABC                     u4221:
 10328  003ABC  EF4B  F01D         	goto	l4184
 10329  003AC0                     u4220:
 10330  003AC0  EF7D  F01D         	goto	l4194
 10331  003AC4                     l4188:
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;dc_motor.c: 137:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 10335  003AC4  0E00               	movlw	0
 10336  003AC6  6E2B               	movwf	(turnRight@i_1202+1)^0,c
 10337  003AC8  0E00               	movlw	0
 10338  003ACA  6E2A               	movwf	turnRight@i_1202^0,c
 10339  003ACC  EF72  F01D         	goto	l334
 10340  003AD0                     l4190:
 10341  003AD0  0E15               	movlw	21
 10342  003AD2  6E25               	movwf	??_turnRight^0,c
 10343  003AD4  0EC6               	movlw	198
 10344  003AD6                     u5337:
 10345  003AD6  2EE8               	decfsz	wreg,f,c
 10346  003AD8  D7FE               	bra	u5337
 10347  003ADA  2E25               	decfsz	??_turnRight^0,f,c
 10348  003ADC  D7FC               	bra	u5337
 10349  003ADE  D000               	nop2	
 10350  003AE0  4A2A               	infsnz	turnRight@i_1202^0,f,c
 10351  003AE2  2A2B               	incf	(turnRight@i_1202+1)^0,f,c
 10352  003AE4                     l334:
 10353  003AE4  502C               	movf	turnRight@delay^0,w,c
 10354  003AE6  5C2A               	subwf	turnRight@i_1202^0,w,c
 10355  003AE8  502D               	movf	(turnRight@delay+1)^0,w,c
 10356  003AEA  582B               	subwfb	(turnRight@i_1202+1)^0,w,c
 10357  003AEC  A0D8               	btfss	status,0,c
 10358  003AEE  EF7B  F01D         	goto	u4231
 10359  003AF2  EF7D  F01D         	goto	u4230
 10360  003AF6                     u4231:
 10361  003AF6  EF68  F01D         	goto	l4190
 10362  003AFA                     u4230:
 10363  003AFA                     l4194:
 10364                           
 10365                           ;dc_motor.c: 139:     stop(mL,mR);
 10366  003AFA  C020  F01A         	movff	turnRight@mL,stop@mL
 10367  003AFE  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
 10368  003B02  C022  F01C         	movff	turnRight@mR,stop@mR
 10369  003B06  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
 10370  003B0A  EC7D  F022         	call	_stop	;wreg free
 10371  003B0E  0012               	return		;funcret
 10372  003B10                     __end_of_turnRight:
 10373                           	callstack 0
 10374                           
 10375 ;; *************** function _short_reverse *****************
 10376 ;; Defined at:
 10377 ;;		line 177 in file "dc_motor.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 10380 ;;		 -> main@motorL(10), 
 10381 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 10382 ;;		 -> main@motorR(10), 
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;		None
 10385 ;; Return value:  Size  Location     Type
 10386 ;;                  1    wreg      void 
 10387 ;; Registers used:
 10388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10389 ;; Tracked objects:
 10390 ;;		On entry : 0/0
 10391 ;;		On exit  : 0/0
 10392 ;;		Unchanged: 0/0
 10393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10396 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10397 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10398 ;;Total ram usage:        6 bytes
 10399 ;; Hardware stack levels used: 1
 10400 ;; Hardware stack levels required when called: 4
 10401 ;; This function calls:
 10402 ;;		_fullSpeedBack
 10403 ;;		_stop
 10404 ;; This function is called by:
 10405 ;;		_action
 10406 ;; This function uses a non-reentrant model
 10407 ;;
 10408                           
 10409                           	psect	text55
 10410  004A1A                     __ptext55:
 10411                           	callstack 0
 10412  004A1A                     _short_reverse:
 10413                           	callstack 25
 10414  004A1A                     
 10415                           ;dc_motor.c: 177: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 178: { fullSpeedBack(mL, mR);
 10416  004A1A  C026  F020         	movff	short_reverse@mL,fullSpeedBack@mL
 10417  004A1E  C027  F021         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 10418  004A22  C028  F022         	movff	short_reverse@mR,fullSpeedBack@mR
 10419  004A26  C029  F023         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 10420  004A2A  EC1D  F022         	call	_fullSpeedBack	;wreg free
 10421  004A2E                     
 10422                           ;dc_motor.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10423  004A2E  0E29               	movlw	41
 10424  004A30  6E2B               	movwf	(??_short_reverse+1)^0,c
 10425  004A32  0E96               	movlw	150
 10426  004A34  6E2A               	movwf	??_short_reverse^0,c
 10427  004A36  0E7F               	movlw	127
 10428  004A38                     u5347:
 10429  004A38  2EE8               	decfsz	wreg,f,c
 10430  004A3A  D7FE               	bra	u5347
 10431  004A3C  2E2A               	decfsz	??_short_reverse^0,f,c
 10432  004A3E  D7FC               	bra	u5347
 10433  004A40  2E2B               	decfsz	(??_short_reverse+1)^0,f,c
 10434  004A42  D7FA               	bra	u5347
 10435  004A44  F000               	nop	
 10436  004A46                     
 10437                           ;dc_motor.c: 180:     stop(mL,mR);
 10438  004A46  C026  F01A         	movff	short_reverse@mL,stop@mL
 10439  004A4A  C027  F01B         	movff	short_reverse@mL+1,stop@mL+1
 10440  004A4E  C028  F01C         	movff	short_reverse@mR,stop@mR
 10441  004A52  C029  F01D         	movff	short_reverse@mR+1,stop@mR+1
 10442  004A56  EC7D  F022         	call	_stop	;wreg free
 10443  004A5A  0012               	return		;funcret
 10444  004A5C                     __end_of_short_reverse:
 10445                           	callstack 0
 10446                           
 10447 ;; *************** function _reverse_square *****************
 10448 ;; Defined at:
 10449 ;;		line 183 in file "dc_motor.c"
 10450 ;; Parameters:    Size  Location     Type
 10451 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 10452 ;;		 -> main@motorL(10), 
 10453 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 10454 ;;		 -> main@motorR(10), 
 10455 ;; Auto vars:     Size  Location     Type
 10456 ;;		None
 10457 ;; Return value:  Size  Location     Type
 10458 ;;                  1    wreg      void 
 10459 ;; Registers used:
 10460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10461 ;; Tracked objects:
 10462 ;;		On entry : 0/0
 10463 ;;		On exit  : 0/0
 10464 ;;		Unchanged: 0/0
 10465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10466 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10468 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10469 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10470 ;;Total ram usage:        6 bytes
 10471 ;; Hardware stack levels used: 1
 10472 ;; Hardware stack levels required when called: 4
 10473 ;; This function calls:
 10474 ;;		_fullSpeedBack
 10475 ;;		_stop
 10476 ;; This function is called by:
 10477 ;;		_action
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           
 10481                           	psect	text56
 10482  004A5C                     __ptext56:
 10483                           	callstack 0
 10484  004A5C                     _reverse_square:
 10485                           	callstack 25
 10486  004A5C                     
 10487                           ;dc_motor.c: 183: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 184: { fullSpeedBack(mL, mR);
 10488  004A5C  C026  F020         	movff	reverse_square@mL,fullSpeedBack@mL
 10489  004A60  C027  F021         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 10490  004A64  C028  F022         	movff	reverse_square@mR,fullSpeedBack@mR
 10491  004A68  C029  F023         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 10492  004A6C  EC1D  F022         	call	_fullSpeedBack	;wreg free
 10493  004A70                     
 10494                           ;dc_motor.c: 185:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 10495  004A70  0E52               	movlw	82
 10496  004A72  6E2B               	movwf	(??_reverse_square+1)^0,c
 10497  004A74  0E2B               	movlw	43
 10498  004A76  6E2A               	movwf	??_reverse_square^0,c
 10499  004A78  0E00               	movlw	0
 10500  004A7A                     u5357:
 10501  004A7A  2EE8               	decfsz	wreg,f,c
 10502  004A7C  D7FE               	bra	u5357
 10503  004A7E  2E2A               	decfsz	??_reverse_square^0,f,c
 10504  004A80  D7FC               	bra	u5357
 10505  004A82  2E2B               	decfsz	(??_reverse_square+1)^0,f,c
 10506  004A84  D7FA               	bra	u5357
 10507  004A86  D000               	nop2	
 10508  004A88                     
 10509                           ;dc_motor.c: 186:     stop(mL,mR);
 10510  004A88  C026  F01A         	movff	reverse_square@mL,stop@mL
 10511  004A8C  C027  F01B         	movff	reverse_square@mL+1,stop@mL+1
 10512  004A90  C028  F01C         	movff	reverse_square@mR,stop@mR
 10513  004A94  C029  F01D         	movff	reverse_square@mR+1,stop@mR+1
 10514  004A98  EC7D  F022         	call	_stop	;wreg free
 10515  004A9C  0012               	return		;funcret
 10516  004A9E                     __end_of_reverse_square:
 10517                           	callstack 0
 10518                           
 10519 ;; *************** function _fullSpeedBack *****************
 10520 ;; Defined at:
 10521 ;;		line 162 in file "dc_motor.c"
 10522 ;; Parameters:    Size  Location     Type
 10523 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10524 ;;		 -> main@motorL(10), 
 10525 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10526 ;;		 -> main@motorR(10), 
 10527 ;; Auto vars:     Size  Location     Type
 10528 ;;		None
 10529 ;; Return value:  Size  Location     Type
 10530 ;;                  1    wreg      void 
 10531 ;; Registers used:
 10532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10533 ;; Tracked objects:
 10534 ;;		On entry : 0/0
 10535 ;;		On exit  : 0/0
 10536 ;;		Unchanged: 0/0
 10537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10538 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10540 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10541 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10542 ;;Total ram usage:        6 bytes
 10543 ;; Hardware stack levels used: 1
 10544 ;; Hardware stack levels required when called: 3
 10545 ;; This function calls:
 10546 ;;		_setMotorPWM
 10547 ;;		_stop
 10548 ;; This function is called by:
 10549 ;;		_short_reverse
 10550 ;;		_reverse_square
 10551 ;; This function uses a non-reentrant model
 10552 ;;
 10553                           
 10554                           	psect	text57
 10555  00443A                     __ptext57:
 10556                           	callstack 0
 10557  00443A                     _fullSpeedBack:
 10558                           	callstack 25
 10559  00443A                     
 10560                           ;dc_motor.c: 162: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 163: {;dc_motor.c: 164:     mL->direction=0;
 10561  00443A  EE20 F001          	lfsr	2,1
 10562  00443E  5020               	movf	fullSpeedBack@mL^0,w,c
 10563  004440  26D9               	addwf	fsr2l,f,c
 10564  004442  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
 10565  004444  22DA               	addwfc	fsr2h,f,c
 10566  004446  0E00               	movlw	0
 10567  004448  6EDF               	movwf	indf2,c
 10568                           
 10569                           ;dc_motor.c: 165:     mR->direction=0;
 10570  00444A  EE20 F001          	lfsr	2,1
 10571  00444E  5022               	movf	fullSpeedBack@mR^0,w,c
 10572  004450  26D9               	addwf	fsr2l,f,c
 10573  004452  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
 10574  004454  22DA               	addwfc	fsr2h,f,c
 10575  004456  0E00               	movlw	0
 10576  004458  6EDF               	movwf	indf2,c
 10577                           
 10578                           ;dc_motor.c: 166:     while (mL->power<50 && mR->power<50){
 10579  00445A  EF4E  F022         	goto	l3984
 10580  00445E                     l3976:
 10581                           
 10582                           ;dc_motor.c: 167:         mL->power += 10;
 10583  00445E  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10584  004462  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10585  004466  0E0A               	movlw	10
 10586  004468  26DF               	addwf	indf2,f,c
 10587                           
 10588                           ;dc_motor.c: 168:         mR->power += 10;
 10589  00446A  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10590  00446E  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10591  004472  0E0A               	movlw	10
 10592  004474  26DF               	addwf	indf2,f,c
 10593  004476                     
 10594                           ;dc_motor.c: 169:         setMotorPWM(mL);
 10595  004476  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 10596  00447A  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 10597  00447E  EC13  F018         	call	_setMotorPWM	;wreg free
 10598  004482                     
 10599                           ;dc_motor.c: 170:         setMotorPWM(mR);
 10600  004482  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 10601  004486  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 10602  00448A  EC13  F018         	call	_setMotorPWM	;wreg free
 10603  00448E                     
 10604                           ;dc_motor.c: 171:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10605  00448E  0ED0               	movlw	208
 10606  004490  6E24               	movwf	??_fullSpeedBack^0,c
 10607  004492  0ECA               	movlw	202
 10608  004494                     u5367:
 10609  004494  2EE8               	decfsz	wreg,f,c
 10610  004496  D7FE               	bra	u5367
 10611  004498  2E24               	decfsz	??_fullSpeedBack^0,f,c
 10612  00449A  D7FC               	bra	u5367
 10613  00449C                     l3984:
 10614                           
 10615                           ;dc_motor.c: 166:     while (mL->power<50 && mR->power<50){
 10616  00449C  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10617  0044A0  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10618  0044A4  0E32               	movlw	50
 10619  0044A6  60DF               	cpfslt	indf2,c
 10620  0044A8  EF58  F022         	goto	u3901
 10621  0044AC  EF5A  F022         	goto	u3900
 10622  0044B0                     u3901:
 10623  0044B0  EF66  F022         	goto	l3988
 10624  0044B4                     u3900:
 10625  0044B4  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10626  0044B8  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10627  0044BC  0E31               	movlw	49
 10628  0044BE  64DF               	cpfsgt	indf2,c
 10629  0044C0  EF64  F022         	goto	u3911
 10630  0044C4  EF66  F022         	goto	u3910
 10631  0044C8                     u3911:
 10632  0044C8  EF2F  F022         	goto	l3976
 10633  0044CC                     u3910:
 10634  0044CC                     l3988:
 10635                           
 10636                           ;dc_motor.c: 173:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10637  0044CC  0E29               	movlw	41
 10638  0044CE  6E25               	movwf	(??_fullSpeedBack+1)^0,c
 10639  0044D0  0E96               	movlw	150
 10640  0044D2  6E24               	movwf	??_fullSpeedBack^0,c
 10641  0044D4  0E7F               	movlw	127
 10642  0044D6                     u5377:
 10643  0044D6  2EE8               	decfsz	wreg,f,c
 10644  0044D8  D7FE               	bra	u5377
 10645  0044DA  2E24               	decfsz	??_fullSpeedBack^0,f,c
 10646  0044DC  D7FC               	bra	u5377
 10647  0044DE  2E25               	decfsz	(??_fullSpeedBack+1)^0,f,c
 10648  0044E0  D7FA               	bra	u5377
 10649  0044E2  F000               	nop	
 10650  0044E4                     
 10651                           ;dc_motor.c: 174:     stop(mL,mR);
 10652  0044E4  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
 10653  0044E8  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
 10654  0044EC  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
 10655  0044F0  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
 10656  0044F4  EC7D  F022         	call	_stop	;wreg free
 10657  0044F8  0012               	return		;funcret
 10658  0044FA                     __end_of_fullSpeedBack:
 10659                           	callstack 0
 10660                           
 10661 ;; *************** function _goback *****************
 10662 ;; Defined at:
 10663 ;;		line 75 in file "movement.c"
 10664 ;; Parameters:    Size  Location     Type
 10665 ;;  mL              2   45[COMRAM] PTR struct DC_motor
 10666 ;;		 -> main@motorL(10), 
 10667 ;;  mR              2   47[COMRAM] PTR struct DC_motor
 10668 ;;		 -> main@motorR(10), 
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;		None
 10671 ;; Return value:  Size  Location     Type
 10672 ;;                  1    wreg      void 
 10673 ;; Registers used:
 10674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10675 ;; Tracked objects:
 10676 ;;		On entry : 0/0
 10677 ;;		On exit  : 0/0
 10678 ;;		Unchanged: 0/0
 10679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10683 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10684 ;;Total ram usage:        4 bytes
 10685 ;; Hardware stack levels used: 1
 10686 ;; Hardware stack levels required when called: 4
 10687 ;; This function calls:
 10688 ;;		_turnLeft
 10689 ;; This function is called by:
 10690 ;;		_action
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694                           	psect	text58
 10695  004DB4                     __ptext58:
 10696                           	callstack 0
 10697  004DB4                     _goback:
 10698                           	callstack 25
 10699  004DB4                     
 10700                           ;movement.c: 75: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 76: {
      +                          ;movement.c: 77:     turnLeft(mL, mR, 180);
 10701  004DB4  C02E  F020         	movff	goback@mL,turnLeft@mL
 10702  004DB8  C02F  F021         	movff	goback@mL+1,turnLeft@mL+1
 10703  004DBC  C030  F022         	movff	goback@mR,turnLeft@mR
 10704  004DC0  C031  F023         	movff	goback@mR+1,turnLeft@mR+1
 10705  004DC4  0EB4               	movlw	180
 10706  004DC6  6E24               	movwf	turnLeft@angle_left^0,c
 10707  004DC8  EC88  F01D         	call	_turnLeft	;wreg free
 10708  004DCC  0012               	return		;funcret
 10709  004DCE                     __end_of_goback:
 10710                           	callstack 0
 10711                           
 10712 ;; *************** function _turnLeft *****************
 10713 ;; Defined at:
 10714 ;;		line 97 in file "dc_motor.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10717 ;;		 -> main@motorL(10), 
 10718 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10719 ;;		 -> main@motorR(10), 
 10720 ;;  angle_left      1   35[COMRAM] unsigned char 
 10721 ;; Auto vars:     Size  Location     Type
 10722 ;;  i               2   41[COMRAM] unsigned int 
 10723 ;;  i               2   39[COMRAM] unsigned int 
 10724 ;;  delay           2   43[COMRAM] unsigned int 
 10725 ;;  delay_180       2   37[COMRAM] unsigned int 
 10726 ;; Return value:  Size  Location     Type
 10727 ;;                  1    wreg      void 
 10728 ;; Registers used:
 10729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10730 ;; Tracked objects:
 10731 ;;		On entry : 0/0
 10732 ;;		On exit  : 0/0
 10733 ;;		Unchanged: 0/0
 10734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10735 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10736 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10737 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10738 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10739 ;;Total ram usage:       14 bytes
 10740 ;; Hardware stack levels used: 1
 10741 ;; Hardware stack levels required when called: 3
 10742 ;; This function calls:
 10743 ;;		_setMotorPWM
 10744 ;;		_stop
 10745 ;; This function is called by:
 10746 ;;		_action
 10747 ;;		_goback
 10748 ;;		_test_action
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752                           	psect	text59
 10753  003B10                     __ptext59:
 10754                           	callstack 0
 10755  003B10                     _turnLeft:
 10756                           	callstack 26
 10757  003B10                     
 10758                           ;dc_motor.c: 97: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 98: {;dc_motor.c: 99:       mL->direction=1;
 10759  003B10  EE20 F001          	lfsr	2,1
 10760  003B14  5020               	movf	turnLeft@mL^0,w,c
 10761  003B16  26D9               	addwf	fsr2l,f,c
 10762  003B18  5021               	movf	(turnLeft@mL+1)^0,w,c
 10763  003B1A  22DA               	addwfc	fsr2h,f,c
 10764  003B1C  0E01               	movlw	1
 10765  003B1E  6EDF               	movwf	indf2,c
 10766                           
 10767                           ;dc_motor.c: 100:       mR->direction=1;
 10768  003B20  EE20 F001          	lfsr	2,1
 10769  003B24  5022               	movf	turnLeft@mR^0,w,c
 10770  003B26  26D9               	addwf	fsr2l,f,c
 10771  003B28  5023               	movf	(turnLeft@mR+1)^0,w,c
 10772  003B2A  22DA               	addwfc	fsr2h,f,c
 10773  003B2C  0E01               	movlw	1
 10774  003B2E  6EDF               	movwf	indf2,c
 10775                           
 10776                           ;dc_motor.c: 101:       while (mR->power <25){
 10777  003B30  EFB9  F01D         	goto	l3952
 10778  003B34                     l3944:
 10779                           
 10780                           ;dc_motor.c: 102:         mR->power += 5;
 10781  003B34  C022  FFD9         	movff	turnLeft@mR,fsr2l
 10782  003B38  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 10783  003B3C  0E05               	movlw	5
 10784  003B3E  26DF               	addwf	indf2,f,c
 10785                           
 10786                           ;dc_motor.c: 103:         mL->power = 0;
 10787  003B40  C020  FFD9         	movff	turnLeft@mL,fsr2l
 10788  003B44  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
 10789  003B48  0E00               	movlw	0
 10790  003B4A  6EDF               	movwf	indf2,c
 10791  003B4C                     
 10792                           ;dc_motor.c: 104:         setMotorPWM(mL);
 10793  003B4C  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
 10794  003B50  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10795  003B54  EC13  F018         	call	_setMotorPWM	;wreg free
 10796  003B58                     
 10797                           ;dc_motor.c: 105:         setMotorPWM(mR);
 10798  003B58  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
 10799  003B5C  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10800  003B60  EC13  F018         	call	_setMotorPWM	;wreg free
 10801  003B64                     
 10802                           ;dc_motor.c: 106:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10803  003B64  0ED0               	movlw	208
 10804  003B66  6E25               	movwf	??_turnLeft^0,c
 10805  003B68  0ECA               	movlw	202
 10806  003B6A                     u5387:
 10807  003B6A  2EE8               	decfsz	wreg,f,c
 10808  003B6C  D7FE               	bra	u5387
 10809  003B6E  2E25               	decfsz	??_turnLeft^0,f,c
 10810  003B70  D7FC               	bra	u5387
 10811  003B72                     l3952:
 10812                           
 10813                           ;dc_motor.c: 101:       while (mR->power <25){
 10814  003B72  C022  FFD9         	movff	turnLeft@mR,fsr2l
 10815  003B76  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 10816  003B7A  0E18               	movlw	24
 10817  003B7C  64DF               	cpfsgt	indf2,c
 10818  003B7E  EFC3  F01D         	goto	u3861
 10819  003B82  EFC5  F01D         	goto	u3860
 10820  003B86                     u3861:
 10821  003B86  EF9A  F01D         	goto	l3944
 10822  003B8A                     u3860:
 10823  003B8A                     
 10824                           ;dc_motor.c: 108:     unsigned int delay = angle_left * SENSITIVITY;
 10825  003B8A  5024               	movf	turnLeft@angle_left^0,w,c
 10826  003B8C  0100               	movlb	0	; () banked
 10827  003B8E  03F9               	mulwf	_SENSITIVITY& (0+255),b
 10828  003B90  CFF3 F02C          	movff	prodl,turnLeft@delay
 10829  003B94  CFF4 F02D          	movff	prodh,turnLeft@delay+1
 10830  003B98                     
 10831                           ; BSR set to: 0
 10832                           ;dc_motor.c: 109:     unsigned int delay_180 = delay + CALIBRATION_180;
 10833  003B98  0E28               	movlw	40
 10834  003B9A  242C               	addwf	turnLeft@delay^0,w,c
 10835  003B9C  6E26               	movwf	turnLeft@delay_180^0,c
 10836  003B9E  0E00               	movlw	0
 10837  003BA0  202D               	addwfc	(turnLeft@delay+1)^0,w,c
 10838  003BA2  6E27               	movwf	(turnLeft@delay_180+1)^0,c
 10839  003BA4                     
 10840                           ; BSR set to: 0
 10841                           ;dc_motor.c: 110:     if (angle_left == 180){
 10842  003BA4  0EB4               	movlw	180
 10843  003BA6  1824               	xorwf	turnLeft@angle_left^0,w,c
 10844  003BA8  A4D8               	btfss	status,2,c
 10845  003BAA  EFD9  F01D         	goto	u3871
 10846  003BAE  EFDB  F01D         	goto	u3870
 10847  003BB2                     u3871:
 10848  003BB2  EFF8  F01D         	goto	l3966
 10849  003BB6                     u3870:
 10850  003BB6                     
 10851                           ; BSR set to: 0
 10852                           ;dc_motor.c: 111:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10853  003BB6  0E00               	movlw	0
 10854  003BB8  6E29               	movwf	(turnLeft@i+1)^0,c
 10855  003BBA  0E00               	movlw	0
 10856  003BBC  6E28               	movwf	turnLeft@i^0,c
 10857  003BBE  EFEB  F01D         	goto	l316
 10858  003BC2                     l3962:
 10859  003BC2  0E15               	movlw	21
 10860  003BC4  6E25               	movwf	??_turnLeft^0,c
 10861  003BC6  0EC6               	movlw	198
 10862  003BC8                     u5397:
 10863  003BC8  2EE8               	decfsz	wreg,f,c
 10864  003BCA  D7FE               	bra	u5397
 10865  003BCC  2E25               	decfsz	??_turnLeft^0,f,c
 10866  003BCE  D7FC               	bra	u5397
 10867  003BD0  D000               	nop2	
 10868  003BD2  4A28               	infsnz	turnLeft@i^0,f,c
 10869  003BD4  2A29               	incf	(turnLeft@i+1)^0,f,c
 10870  003BD6                     l316:
 10871  003BD6  5026               	movf	turnLeft@delay_180^0,w,c
 10872  003BD8  5C28               	subwf	turnLeft@i^0,w,c
 10873  003BDA  5027               	movf	(turnLeft@delay_180+1)^0,w,c
 10874  003BDC  5829               	subwfb	(turnLeft@i+1)^0,w,c
 10875  003BDE  A0D8               	btfss	status,0,c
 10876  003BE0  EFF4  F01D         	goto	u3881
 10877  003BE4  EFF6  F01D         	goto	u3880
 10878  003BE8                     u3881:
 10879  003BE8  EFE1  F01D         	goto	l3962
 10880  003BEC                     u3880:
 10881  003BEC  EF13  F01E         	goto	l3972
 10882  003BF0                     l3966:
 10883                           
 10884                           ; BSR set to: 0
 10885                           ;dc_motor.c: 114:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 10886  003BF0  0E00               	movlw	0
 10887  003BF2  6E2B               	movwf	(turnLeft@i_1179+1)^0,c
 10888  003BF4  0E00               	movlw	0
 10889  003BF6  6E2A               	movwf	turnLeft@i_1179^0,c
 10890  003BF8  EF08  F01E         	goto	l320
 10891  003BFC                     l3968:
 10892  003BFC  0E15               	movlw	21
 10893  003BFE  6E25               	movwf	??_turnLeft^0,c
 10894  003C00  0EC6               	movlw	198
 10895  003C02                     u5407:
 10896  003C02  2EE8               	decfsz	wreg,f,c
 10897  003C04  D7FE               	bra	u5407
 10898  003C06  2E25               	decfsz	??_turnLeft^0,f,c
 10899  003C08  D7FC               	bra	u5407
 10900  003C0A  D000               	nop2	
 10901  003C0C  4A2A               	infsnz	turnLeft@i_1179^0,f,c
 10902  003C0E  2A2B               	incf	(turnLeft@i_1179+1)^0,f,c
 10903  003C10                     l320:
 10904  003C10  502C               	movf	turnLeft@delay^0,w,c
 10905  003C12  5C2A               	subwf	turnLeft@i_1179^0,w,c
 10906  003C14  502D               	movf	(turnLeft@delay+1)^0,w,c
 10907  003C16  582B               	subwfb	(turnLeft@i_1179+1)^0,w,c
 10908  003C18  A0D8               	btfss	status,0,c
 10909  003C1A  EF11  F01E         	goto	u3891
 10910  003C1E  EF13  F01E         	goto	u3890
 10911  003C22                     u3891:
 10912  003C22  EFFE  F01D         	goto	l3968
 10913  003C26                     u3890:
 10914  003C26                     l3972:
 10915                           
 10916                           ;dc_motor.c: 116:     stop(mL,mR);
 10917  003C26  C020  F01A         	movff	turnLeft@mL,stop@mL
 10918  003C2A  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
 10919  003C2E  C022  F01C         	movff	turnLeft@mR,stop@mR
 10920  003C32  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
 10921  003C36  EC7D  F022         	call	_stop	;wreg free
 10922  003C3A  0012               	return		;funcret
 10923  003C3C                     __end_of_turnLeft:
 10924                           	callstack 0
 10925                           
 10926 ;; *************** function _stop *****************
 10927 ;; Defined at:
 10928 ;;		line 84 in file "dc_motor.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10931 ;;		 -> main@motorL(10), 
 10932 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10933 ;;		 -> main@motorR(10), 
 10934 ;; Auto vars:     Size  Location     Type
 10935 ;;		None
 10936 ;; Return value:  Size  Location     Type
 10937 ;;                  1    wreg      void 
 10938 ;; Registers used:
 10939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10940 ;; Tracked objects:
 10941 ;;		On entry : 0/0
 10942 ;;		On exit  : 0/0
 10943 ;;		Unchanged: 0/0
 10944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10948 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10949 ;;Total ram usage:        6 bytes
 10950 ;; Hardware stack levels used: 1
 10951 ;; Hardware stack levels required when called: 2
 10952 ;; This function calls:
 10953 ;;		_setMotorPWM
 10954 ;; This function is called by:
 10955 ;;		_turnLeft
 10956 ;;		_turnRight
 10957 ;;		_fullSpeedBack
 10958 ;;		_short_reverse
 10959 ;;		_reverse_square
 10960 ;;		_action
 10961 ;;		_fullSpeedAhead_test
 10962 ;; This function uses a non-reentrant model
 10963 ;;
 10964                           
 10965                           	psect	text60
 10966  0044FA                     __ptext60:
 10967                           	callstack 0
 10968  0044FA                     _stop:
 10969                           	callstack 26
 10970  0044FA                     
 10971                           ;dc_motor.c: 84: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 85: {;d
      +                          c_motor.c: 86:     while (mL->power >0 || mR->power >0){
 10972  0044FA  EFB6  F022         	goto	l3714
 10973  0044FE                     l3700:
 10974                           
 10975                           ;dc_motor.c: 87:         if (mL->power !=0){mL->power -= 5;}
 10976  0044FE  C01A  FFD9         	movff	stop@mL,fsr2l
 10977  004502  C01B  FFDA         	movff	stop@mL+1,fsr2h
 10978  004506  50DF               	movf	indf2,w,c
 10979  004508  B4D8               	btfsc	status,2,c
 10980  00450A  EF89  F022         	goto	u3541
 10981  00450E  EF8B  F022         	goto	u3540
 10982  004512                     u3541:
 10983  004512  EF91  F022         	goto	l3704
 10984  004516                     u3540:
 10985  004516  C01A  FFD9         	movff	stop@mL,fsr2l
 10986  00451A  C01B  FFDA         	movff	stop@mL+1,fsr2h
 10987  00451E  0E05               	movlw	5
 10988  004520  5EDF               	subwf	indf2,f,c
 10989  004522                     l3704:
 10990                           
 10991                           ;dc_motor.c: 88:         if (mR->power !=0){mR->power -= 5;}
 10992  004522  C01C  FFD9         	movff	stop@mR,fsr2l
 10993  004526  C01D  FFDA         	movff	stop@mR+1,fsr2h
 10994  00452A  50DF               	movf	indf2,w,c
 10995  00452C  B4D8               	btfsc	status,2,c
 10996  00452E  EF9B  F022         	goto	u3551
 10997  004532  EF9D  F022         	goto	u3550
 10998  004536                     u3551:
 10999  004536  EFA3  F022         	goto	l3708
 11000  00453A                     u3550:
 11001  00453A  C01C  FFD9         	movff	stop@mR,fsr2l
 11002  00453E  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11003  004542  0E05               	movlw	5
 11004  004544  5EDF               	subwf	indf2,f,c
 11005  004546                     l3708:
 11006                           
 11007                           ;dc_motor.c: 89:         setMotorPWM(mL);
 11008  004546  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 11009  00454A  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 11010  00454E  EC13  F018         	call	_setMotorPWM	;wreg free
 11011  004552                     
 11012                           ;dc_motor.c: 90:         setMotorPWM(mR);
 11013  004552  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 11014  004556  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 11015  00455A  EC13  F018         	call	_setMotorPWM	;wreg free
 11016  00455E                     
 11017                           ;dc_motor.c: 91:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11018  00455E  0ED0               	movlw	208
 11019  004560  6E1E               	movwf	??_stop^0,c
 11020  004562  0ECA               	movlw	202
 11021  004564                     u5417:
 11022  004564  2EE8               	decfsz	wreg,f,c
 11023  004566  D7FE               	bra	u5417
 11024  004568  2E1E               	decfsz	??_stop^0,f,c
 11025  00456A  D7FC               	bra	u5417
 11026  00456C                     l3714:
 11027                           
 11028                           ;dc_motor.c: 86:     while (mL->power >0 || mR->power >0){
 11029  00456C  C01A  FFD9         	movff	stop@mL,fsr2l
 11030  004570  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11031  004574  50DF               	movf	indf2,w,c
 11032  004576  A4D8               	btfss	status,2,c
 11033  004578  EFC0  F022         	goto	u3561
 11034  00457C  EFC2  F022         	goto	u3560
 11035  004580                     u3561:
 11036  004580  EF7F  F022         	goto	l3700
 11037  004584                     u3560:
 11038  004584  C01C  FFD9         	movff	stop@mR,fsr2l
 11039  004588  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11040  00458C  50DF               	movf	indf2,w,c
 11041  00458E  A4D8               	btfss	status,2,c
 11042  004590  EFCC  F022         	goto	u3571
 11043  004594  EFCE  F022         	goto	u3570
 11044  004598                     u3571:
 11045  004598  EF7F  F022         	goto	l3700
 11046  00459C                     u3570:
 11047  00459C                     
 11048                           ;dc_motor.c: 93:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 11049  00459C  0E52               	movlw	82
 11050  00459E  6E1F               	movwf	(??_stop+1)^0,c
 11051  0045A0  0E2B               	movlw	43
 11052  0045A2  6E1E               	movwf	??_stop^0,c
 11053  0045A4  0E00               	movlw	0
 11054  0045A6                     u5427:
 11055  0045A6  2EE8               	decfsz	wreg,f,c
 11056  0045A8  D7FE               	bra	u5427
 11057  0045AA  2E1E               	decfsz	??_stop^0,f,c
 11058  0045AC  D7FC               	bra	u5427
 11059  0045AE  2E1F               	decfsz	(??_stop+1)^0,f,c
 11060  0045B0  D7FA               	bra	u5427
 11061  0045B2  D000               	nop2	
 11062  0045B4  0012               	return		;funcret
 11063  0045B6                     __end_of_stop:
 11064                           	callstack 0
 11065                           
 11066 ;; *************** function _fullSpeedAhead *****************
 11067 ;; Defined at:
 11068 ;;		line 143 in file "dc_motor.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11071 ;;		 -> main@motorL(10), 
 11072 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11073 ;;		 -> main@motorR(10), 
 11074 ;; Auto vars:     Size  Location     Type
 11075 ;;		None
 11076 ;; Return value:  Size  Location     Type
 11077 ;;                  1    wreg      void 
 11078 ;; Registers used:
 11079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11080 ;; Tracked objects:
 11081 ;;		On entry : 0/0
 11082 ;;		On exit  : 0/0
 11083 ;;		Unchanged: 0/0
 11084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11088 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11089 ;;Total ram usage:        5 bytes
 11090 ;; Hardware stack levels used: 1
 11091 ;; Hardware stack levels required when called: 2
 11092 ;; This function calls:
 11093 ;;		_setMotorPWM
 11094 ;; This function is called by:
 11095 ;;		_action
 11096 ;;		_fullSpeedAhead_test
 11097 ;; This function uses a non-reentrant model
 11098 ;;
 11099                           
 11100                           	psect	text61
 11101  0045B6                     __ptext61:
 11102                           	callstack 0
 11103  0045B6                     _fullSpeedAhead:
 11104                           	callstack 27
 11105  0045B6                     
 11106                           ;dc_motor.c: 143: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 144: {;dc_motor.c: 145:     mL->direction=1;
 11107  0045B6  EE20 F001          	lfsr	2,1
 11108  0045BA  501A               	movf	fullSpeedAhead@mL^0,w,c
 11109  0045BC  26D9               	addwf	fsr2l,f,c
 11110  0045BE  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11111  0045C0  22DA               	addwfc	fsr2h,f,c
 11112  0045C2  0E01               	movlw	1
 11113  0045C4  6EDF               	movwf	indf2,c
 11114                           
 11115                           ;dc_motor.c: 146:     mR->direction=1;
 11116  0045C6  EE20 F001          	lfsr	2,1
 11117  0045CA  501C               	movf	fullSpeedAhead@mR^0,w,c
 11118  0045CC  26D9               	addwf	fsr2l,f,c
 11119  0045CE  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11120  0045D0  22DA               	addwfc	fsr2h,f,c
 11121  0045D2  0E01               	movlw	1
 11122  0045D4  6EDF               	movwf	indf2,c
 11123                           
 11124                           ;dc_motor.c: 147:     while (mL->power<40 && mR->power<40){
 11125  0045D6  EF0C  F023         	goto	l4206
 11126  0045DA                     l4198:
 11127                           
 11128                           ;dc_motor.c: 148:         mL->power += 10;
 11129  0045DA  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11130  0045DE  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11131  0045E2  0E0A               	movlw	10
 11132  0045E4  26DF               	addwf	indf2,f,c
 11133                           
 11134                           ;dc_motor.c: 149:         mR->power += 10;
 11135  0045E6  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11136  0045EA  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11137  0045EE  0E0A               	movlw	10
 11138  0045F0  26DF               	addwf	indf2,f,c
 11139  0045F2                     
 11140                           ;dc_motor.c: 150:         setMotorPWM(mL);
 11141  0045F2  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11142  0045F6  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11143  0045FA  EC13  F018         	call	_setMotorPWM	;wreg free
 11144  0045FE                     
 11145                           ;dc_motor.c: 151:         setMotorPWM(mR);
 11146  0045FE  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11147  004602  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11148  004606  EC13  F018         	call	_setMotorPWM	;wreg free
 11149  00460A                     
 11150                           ;dc_motor.c: 152:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11151  00460A  0ED0               	movlw	208
 11152  00460C  6E1E               	movwf	??_fullSpeedAhead^0,c
 11153  00460E  0ECA               	movlw	202
 11154  004610                     u5437:
 11155  004610  2EE8               	decfsz	wreg,f,c
 11156  004612  D7FE               	bra	u5437
 11157  004614  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
 11158  004616  D7FC               	bra	u5437
 11159  004618                     l4206:
 11160                           
 11161                           ;dc_motor.c: 147:     while (mL->power<40 && mR->power<40){
 11162  004618  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11163  00461C  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11164  004620  0E28               	movlw	40
 11165  004622  60DF               	cpfslt	indf2,c
 11166  004624  EF16  F023         	goto	u4241
 11167  004628  EF18  F023         	goto	u4240
 11168  00462C                     u4241:
 11169  00462C  EF24  F023         	goto	l345
 11170  004630                     u4240:
 11171  004630  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11172  004634  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11173  004638  0E27               	movlw	39
 11174  00463A  64DF               	cpfsgt	indf2,c
 11175  00463C  EF22  F023         	goto	u4251
 11176  004640  EF24  F023         	goto	u4250
 11177  004644                     u4251:
 11178  004644  EFED  F022         	goto	l4198
 11179  004648                     u4250:
 11180  004648                     l345:
 11181  004648  0012               	return		;funcret
 11182  00464A                     __end_of_fullSpeedAhead:
 11183                           	callstack 0
 11184                           
 11185 ;; *************** function _setMotorPWM *****************
 11186 ;; Defined at:
 11187 ;;		line 61 in file "dc_motor.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;  m               2   14[COMRAM] PTR struct DC_motor
 11190 ;;		 -> main@motorR(10), main@motorL(10), 
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;  PWMduty         2   23[COMRAM] int 
 11193 ;; Return value:  Size  Location     Type
 11194 ;;                  1    wreg      void 
 11195 ;; Registers used:
 11196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11197 ;; Tracked objects:
 11198 ;;		On entry : 0/0
 11199 ;;		On exit  : 0/0
 11200 ;;		Unchanged: 0/0
 11201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11203 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11204 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11205 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11206 ;;Total ram usage:       11 bytes
 11207 ;; Hardware stack levels used: 1
 11208 ;; Hardware stack levels required when called: 1
 11209 ;; This function calls:
 11210 ;;		___awdiv
 11211 ;;		___wmul
 11212 ;; This function is called by:
 11213 ;;		_stop
 11214 ;;		_turnLeft
 11215 ;;		_turnRight
 11216 ;;		_fullSpeedAhead
 11217 ;;		_fullSpeedBack
 11218 ;; This function uses a non-reentrant model
 11219 ;;
 11220                           
 11221                           	psect	text62
 11222  003026                     __ptext62:
 11223                           	callstack 0
 11224  003026                     _setMotorPWM:
 11225                           	callstack 26
 11226  003026                     
 11227                           ;dc_motor.c: 61: void setMotorPWM(struct DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63: 
      +                           int PWMduty;;dc_motor.c: 65:  if (m->direction){
 11228  003026  EE20 F001          	lfsr	2,1
 11229  00302A  500F               	movf	setMotorPWM@m^0,w,c
 11230  00302C  26D9               	addwf	fsr2l,f,c
 11231  00302E  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11232  003030  22DA               	addwfc	fsr2h,f,c
 11233  003032  50DF               	movf	indf2,w,c
 11234  003034  B4D8               	btfsc	status,2,c
 11235  003036  EF1F  F018         	goto	u3051
 11236  00303A  EF21  F018         	goto	u3050
 11237  00303E                     u3051:
 11238  00303E  EF52  F018         	goto	l3414
 11239  003042                     u3050:
 11240  003042                     
 11241                           ;dc_motor.c: 67:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 11242  003042  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11243  003046  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11244  00304A  50DF               	movf	indf2,w,c
 11245  00304C  6E11               	movwf	??_setMotorPWM^0,c
 11246  00304E  5011               	movf	??_setMotorPWM^0,w,c
 11247  003050  6E01               	movwf	___wmul@multiplier^0,c
 11248  003052  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11249  003054  EE20 F007          	lfsr	2,7
 11250  003058  500F               	movf	setMotorPWM@m^0,w,c
 11251  00305A  26D9               	addwf	fsr2l,f,c
 11252  00305C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11253  00305E  22DA               	addwfc	fsr2h,f,c
 11254  003060  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11255  003064  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11256  003068  EC5A  F026         	call	___wmul	;wreg free
 11257  00306C  C001  F007         	movff	?___wmul,___awdiv@dividend
 11258  003070  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11259  003074  0E00               	movlw	0
 11260  003076  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11261  003078  0E64               	movlw	100
 11262  00307A  6E09               	movwf	___awdiv@divisor^0,c
 11263  00307C  ECBB  F021         	call	___awdiv	;wreg free
 11264  003080  EE20 F007          	lfsr	2,7
 11265  003084  500F               	movf	setMotorPWM@m^0,w,c
 11266  003086  26D9               	addwf	fsr2l,f,c
 11267  003088  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11268  00308A  22DA               	addwfc	fsr2h,f,c
 11269  00308C  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 11270  003090  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 11271  003094  5007               	movf	?___awdiv^0,w,c
 11272  003096  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 11273  003098  6E18               	movwf	setMotorPWM@PWMduty^0,c
 11274  00309A  5008               	movf	(?___awdiv+1)^0,w,c
 11275  00309C  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 11276  00309E  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 11277                           
 11278                           ;dc_motor.c: 68:  }
 11279  0030A0  EF75  F018         	goto	l3416
 11280  0030A4                     l3414:
 11281                           
 11282                           ;dc_motor.c: 71:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 11283  0030A4  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11284  0030A8  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11285  0030AC  50DF               	movf	indf2,w,c
 11286  0030AE  6E11               	movwf	??_setMotorPWM^0,c
 11287  0030B0  5011               	movf	??_setMotorPWM^0,w,c
 11288  0030B2  6E01               	movwf	___wmul@multiplier^0,c
 11289  0030B4  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11290  0030B6  EE20 F007          	lfsr	2,7
 11291  0030BA  500F               	movf	setMotorPWM@m^0,w,c
 11292  0030BC  26D9               	addwf	fsr2l,f,c
 11293  0030BE  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11294  0030C0  22DA               	addwfc	fsr2h,f,c
 11295  0030C2  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11296  0030C6  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11297  0030CA  EC5A  F026         	call	___wmul	;wreg free
 11298  0030CE  C001  F007         	movff	?___wmul,___awdiv@dividend
 11299  0030D2  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11300  0030D6  0E00               	movlw	0
 11301  0030D8  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11302  0030DA  0E64               	movlw	100
 11303  0030DC  6E09               	movwf	___awdiv@divisor^0,c
 11304  0030DE  ECBB  F021         	call	___awdiv	;wreg free
 11305  0030E2  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 11306  0030E6  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 11307  0030EA                     l3416:
 11308                           
 11309                           ;dc_motor.c: 74:  *(m->dutyHighByte) = PWMduty;
 11310  0030EA  EE20 F002          	lfsr	2,2
 11311  0030EE  500F               	movf	setMotorPWM@m^0,w,c
 11312  0030F0  26D9               	addwf	fsr2l,f,c
 11313  0030F2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11314  0030F4  22DA               	addwfc	fsr2h,f,c
 11315  0030F6  CFDE F011          	movff	postinc2,??_setMotorPWM
 11316  0030FA  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11317  0030FE  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11318  003102  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11319  003106  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 11320  00310A                     
 11321                           ;dc_motor.c: 76:  if (m->direction){
 11322  00310A  EE20 F001          	lfsr	2,1
 11323  00310E  500F               	movf	setMotorPWM@m^0,w,c
 11324  003110  26D9               	addwf	fsr2l,f,c
 11325  003112  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11326  003114  22DA               	addwfc	fsr2h,f,c
 11327  003116  50DF               	movf	indf2,w,c
 11328  003118  B4D8               	btfsc	status,2,c
 11329  00311A  EF91  F018         	goto	u3061
 11330  00311E  EF93  F018         	goto	u3060
 11331  003122                     u3061:
 11332  003122  EFC8  F018         	goto	l3422
 11333  003126                     u3060:
 11334  003126                     
 11335                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 11336  003126  EE20 F004          	lfsr	2,4
 11337  00312A  500F               	movf	setMotorPWM@m^0,w,c
 11338  00312C  26D9               	addwf	fsr2l,f,c
 11339  00312E  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11340  003130  22DA               	addwfc	fsr2h,f,c
 11341  003132  CFDE F011          	movff	postinc2,??_setMotorPWM
 11342  003136  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11343  00313A  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11344  00313E  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11345  003142  EE10 F004          	lfsr	1,4
 11346  003146  500F               	movf	setMotorPWM@m^0,w,c
 11347  003148  26E1               	addwf	fsr1l,f,c
 11348  00314A  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11349  00314C  22E2               	addwfc	fsr1h,f,c
 11350  00314E  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11351  003152  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11352  003156  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11353  00315A  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11354  00315E  50E7               	movf	indf1,w,c
 11355  003160  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11356  003162  EE10 F006          	lfsr	1,6
 11357  003166  500F               	movf	setMotorPWM@m^0,w,c
 11358  003168  26E1               	addwf	fsr1l,f,c
 11359  00316A  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11360  00316C  22E2               	addwfc	fsr1h,f,c
 11361  00316E  50E7               	movf	indf1,w,c
 11362  003170  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11363  003172  0E01               	movlw	1
 11364  003174  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11365  003176  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11366  003178  EFC0  F018         	goto	u3074
 11367  00317C                     u3075:
 11368  00317C  90D8               	bcf	status,0,c
 11369  00317E  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11370  003180                     u3074:
 11371  003180  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11372  003182  EFBE  F018         	goto	u3075
 11373  003186  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11374  003188  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 11375  00318A  6EDF               	movwf	indf2,c
 11376                           
 11377                           ;dc_motor.c: 78:  } else {
 11378  00318C  EFFC  F018         	goto	l301
 11379  003190                     l3422:
 11380                           
 11381                           ;dc_motor.c: 79:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 11382  003190  EE20 F004          	lfsr	2,4
 11383  003194  500F               	movf	setMotorPWM@m^0,w,c
 11384  003196  26D9               	addwf	fsr2l,f,c
 11385  003198  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11386  00319A  22DA               	addwfc	fsr2h,f,c
 11387  00319C  CFDE F011          	movff	postinc2,??_setMotorPWM
 11388  0031A0  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11389  0031A4  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11390  0031A8  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11391  0031AC  EE10 F004          	lfsr	1,4
 11392  0031B0  500F               	movf	setMotorPWM@m^0,w,c
 11393  0031B2  26E1               	addwf	fsr1l,f,c
 11394  0031B4  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11395  0031B6  22E2               	addwfc	fsr1h,f,c
 11396  0031B8  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11397  0031BC  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11398  0031C0  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11399  0031C4  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11400  0031C8  50E7               	movf	indf1,w,c
 11401  0031CA  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11402  0031CC  EE10 F006          	lfsr	1,6
 11403  0031D0  500F               	movf	setMotorPWM@m^0,w,c
 11404  0031D2  26E1               	addwf	fsr1l,f,c
 11405  0031D4  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11406  0031D6  22E2               	addwfc	fsr1h,f,c
 11407  0031D8  50E7               	movf	indf1,w,c
 11408  0031DA  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11409  0031DC  0E01               	movlw	1
 11410  0031DE  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11411  0031E0  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11412  0031E2  EFF5  F018         	goto	u3084
 11413  0031E6                     u3085:
 11414  0031E6  90D8               	bcf	status,0,c
 11415  0031E8  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11416  0031EA                     u3084:
 11417  0031EA  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11418  0031EC  EFF3  F018         	goto	u3085
 11419  0031F0  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11420  0031F2  0AFF               	xorlw	255
 11421  0031F4  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 11422  0031F6  6EDF               	movwf	indf2,c
 11423  0031F8                     l301:
 11424  0031F8  0012               	return		;funcret
 11425  0031FA                     __end_of_setMotorPWM:
 11426                           	callstack 0
 11427                           
 11428 ;; *************** function ___wmul *****************
 11429 ;; Defined at:
 11430 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  multiplier      2    0[COMRAM] unsigned int 
 11433 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11434 ;; Auto vars:     Size  Location     Type
 11435 ;;  product         2    4[COMRAM] unsigned int 
 11436 ;; Return value:  Size  Location     Type
 11437 ;;                  2    0[COMRAM] unsigned int 
 11438 ;; Registers used:
 11439 ;;		wreg, status,2, status,0, prodl, prodh
 11440 ;; Tracked objects:
 11441 ;;		On entry : 0/0
 11442 ;;		On exit  : 0/0
 11443 ;;		Unchanged: 0/0
 11444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11448 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11449 ;;Total ram usage:        6 bytes
 11450 ;; Hardware stack levels used: 1
 11451 ;; This function calls:
 11452 ;;		Nothing
 11453 ;; This function is called by:
 11454 ;;		_setMotorPWM
 11455 ;; This function uses a non-reentrant model
 11456 ;;
 11457                           
 11458                           	psect	text63
 11459  004CB4                     __ptext63:
 11460                           	callstack 0
 11461  004CB4                     ___wmul:
 11462                           	callstack 26
 11463  004CB4  5001               	movf	___wmul@multiplier^0,w,c
 11464  004CB6  0203               	mulwf	___wmul@multiplicand^0,c
 11465  004CB8  CFF3 F005          	movff	prodl,___wmul@product
 11466  004CBC  CFF4 F006          	movff	prodh,___wmul@product+1
 11467  004CC0  5001               	movf	___wmul@multiplier^0,w,c
 11468  004CC2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11469  004CC4  50F3               	movf	243,w,c
 11470  004CC6  2606               	addwf	(___wmul@product+1)^0,f,c
 11471  004CC8  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11472  004CCA  0203               	mulwf	___wmul@multiplicand^0,c
 11473  004CCC  50F3               	movf	243,w,c
 11474  004CCE  2606               	addwf	(___wmul@product+1)^0,f,c
 11475  004CD0  C005  F001         	movff	___wmul@product,?___wmul
 11476  004CD4  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11477  004CD8  0012               	return		;funcret
 11478  004CDA                     __end_of___wmul:
 11479                           	callstack 0
 11480                           
 11481 ;; *************** function ___awdiv *****************
 11482 ;; Defined at:
 11483 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;  dividend        2    6[COMRAM] int 
 11486 ;;  divisor         2    8[COMRAM] int 
 11487 ;; Auto vars:     Size  Location     Type
 11488 ;;  quotient        2   12[COMRAM] int 
 11489 ;;  sign            1   11[COMRAM] unsigned char 
 11490 ;;  counter         1   10[COMRAM] unsigned char 
 11491 ;; Return value:  Size  Location     Type
 11492 ;;                  2    6[COMRAM] int 
 11493 ;; Registers used:
 11494 ;;		wreg, status,2, status,0
 11495 ;; Tracked objects:
 11496 ;;		On entry : 0/0
 11497 ;;		On exit  : 0/0
 11498 ;;		Unchanged: 0/0
 11499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11501 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11503 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11504 ;;Total ram usage:        8 bytes
 11505 ;; Hardware stack levels used: 1
 11506 ;; This function calls:
 11507 ;;		Nothing
 11508 ;; This function is called by:
 11509 ;;		_setMotorPWM
 11510 ;; This function uses a non-reentrant model
 11511 ;;
 11512                           
 11513                           	psect	text64
 11514  004376                     __ptext64:
 11515                           	callstack 0
 11516  004376                     ___awdiv:
 11517                           	callstack 26
 11518  004376  0E00               	movlw	0
 11519  004378  6E0C               	movwf	___awdiv@sign^0,c
 11520  00437A  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 11521  00437C  EFC4  F021         	goto	u2820
 11522  004380  EFC2  F021         	goto	u2821
 11523  004384                     u2821:
 11524  004384  EFCA  F021         	goto	l3308
 11525  004388                     u2820:
 11526  004388  6C09               	negf	___awdiv@divisor^0,c
 11527  00438A  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 11528  00438C  B0D8               	btfsc	status,0,c
 11529  00438E  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 11530  004390  0E01               	movlw	1
 11531  004392  6E0C               	movwf	___awdiv@sign^0,c
 11532  004394                     l3308:
 11533  004394  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 11534  004396  EFD1  F021         	goto	u2830
 11535  00439A  EFCF  F021         	goto	u2831
 11536  00439E                     u2831:
 11537  00439E  EFD7  F021         	goto	l3314
 11538  0043A2                     u2830:
 11539  0043A2  6C07               	negf	___awdiv@dividend^0,c
 11540  0043A4  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 11541  0043A6  B0D8               	btfsc	status,0,c
 11542  0043A8  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 11543  0043AA  0E01               	movlw	1
 11544  0043AC  1A0C               	xorwf	___awdiv@sign^0,f,c
 11545  0043AE                     l3314:
 11546  0043AE  0E00               	movlw	0
 11547  0043B0  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 11548  0043B2  0E00               	movlw	0
 11549  0043B4  6E0D               	movwf	___awdiv@quotient^0,c
 11550  0043B6  5009               	movf	___awdiv@divisor^0,w,c
 11551  0043B8  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 11552  0043BA  B4D8               	btfsc	status,2,c
 11553  0043BC  EFE2  F021         	goto	u2841
 11554  0043C0  EFE4  F021         	goto	u2840
 11555  0043C4                     u2841:
 11556  0043C4  EF0C  F022         	goto	l3336
 11557  0043C8                     u2840:
 11558  0043C8  0E01               	movlw	1
 11559  0043CA  6E0B               	movwf	___awdiv@counter^0,c
 11560  0043CC  EFEC  F021         	goto	l3322
 11561  0043D0                     l3320:
 11562  0043D0  90D8               	bcf	status,0,c
 11563  0043D2  3609               	rlcf	___awdiv@divisor^0,f,c
 11564  0043D4  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 11565  0043D6  2A0B               	incf	___awdiv@counter^0,f,c
 11566  0043D8                     l3322:
 11567  0043D8  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 11568  0043DA  EFF1  F021         	goto	u2851
 11569  0043DE  EFF3  F021         	goto	u2850
 11570  0043E2                     u2851:
 11571  0043E2  EFE8  F021         	goto	l3320
 11572  0043E6                     u2850:
 11573  0043E6                     l3324:
 11574  0043E6  90D8               	bcf	status,0,c
 11575  0043E8  360D               	rlcf	___awdiv@quotient^0,f,c
 11576  0043EA  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 11577  0043EC  5009               	movf	___awdiv@divisor^0,w,c
 11578  0043EE  5C07               	subwf	___awdiv@dividend^0,w,c
 11579  0043F0  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11580  0043F2  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 11581  0043F4  A0D8               	btfss	status,0,c
 11582  0043F6  EFFF  F021         	goto	u2861
 11583  0043FA  EF01  F022         	goto	u2860
 11584  0043FE                     u2861:
 11585  0043FE  EF06  F022         	goto	l3332
 11586  004402                     u2860:
 11587  004402  5009               	movf	___awdiv@divisor^0,w,c
 11588  004404  5E07               	subwf	___awdiv@dividend^0,f,c
 11589  004406  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11590  004408  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 11591  00440A  800D               	bsf	___awdiv@quotient^0,0,c
 11592  00440C                     l3332:
 11593  00440C  90D8               	bcf	status,0,c
 11594  00440E  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 11595  004410  3209               	rrcf	___awdiv@divisor^0,f,c
 11596  004412  2E0B               	decfsz	___awdiv@counter^0,f,c
 11597  004414  EFF3  F021         	goto	l3324
 11598  004418                     l3336:
 11599  004418  500C               	movf	___awdiv@sign^0,w,c
 11600  00441A  B4D8               	btfsc	status,2,c
 11601  00441C  EF12  F022         	goto	u2871
 11602  004420  EF14  F022         	goto	u2870
 11603  004424                     u2871:
 11604  004424  EF18  F022         	goto	l3340
 11605  004428                     u2870:
 11606  004428  6C0D               	negf	___awdiv@quotient^0,c
 11607  00442A  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 11608  00442C  B0D8               	btfsc	status,0,c
 11609  00442E  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 11610  004430                     l3340:
 11611  004430  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 11612  004434  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 11613  004438  0012               	return		;funcret
 11614  00443A                     __end_of___awdiv:
 11615                           	callstack 0
 11616                           
 11617                           	psect	rparam
 11618  0000                     
 11619                           	psect	idloc
 11620                           
 11621                           ;Config register IDLOC0 @ 0x200000
 11622                           ;	unspecified, using default values
 11623  200000                     	org	2097152
 11624  200000  0FFF               	dw	4095
 11625                           
 11626                           ;Config register IDLOC1 @ 0x200002
 11627                           ;	unspecified, using default values
 11628  200002                     	org	2097154
 11629  200002  0FFF               	dw	4095
 11630                           
 11631                           ;Config register IDLOC2 @ 0x200004
 11632                           ;	unspecified, using default values
 11633  200004                     	org	2097156
 11634  200004  0FFF               	dw	4095
 11635                           
 11636                           ;Config register IDLOC3 @ 0x200006
 11637                           ;	unspecified, using default values
 11638  200006                     	org	2097158
 11639  200006  0FFF               	dw	4095
 11640                           
 11641                           ;Config register IDLOC4 @ 0x200008
 11642                           ;	unspecified, using default values
 11643  200008                     	org	2097160
 11644  200008  0FFF               	dw	4095
 11645                           
 11646                           ;Config register IDLOC5 @ 0x20000A
 11647                           ;	unspecified, using default values
 11648  20000A                     	org	2097162
 11649  20000A  0FFF               	dw	4095
 11650                           
 11651                           ;Config register IDLOC6 @ 0x20000C
 11652                           ;	unspecified, using default values
 11653  20000C                     	org	2097164
 11654  20000C  0FFF               	dw	4095
 11655                           
 11656                           ;Config register IDLOC7 @ 0x20000E
 11657                           ;	unspecified, using default values
 11658  20000E                     	org	2097166
 11659  20000E  0FFF               	dw	4095
 11660                           
 11661                           	psect	config
 11662                           
 11663                           ;Config register CONFIG1L @ 0x300000
 11664                           ;	External Oscillator mode Selection bits
 11665                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11666                           ;	Power-up default value for COSC bits
 11667                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11668  300000                     	org	3145728
 11669  300000  AA                 	db	170
 11670                           
 11671                           ;Config register CONFIG1H @ 0x300001
 11672                           ;	unspecified, using default values
 11673                           ;	Clock Out Enable bit
 11674                           ;	CLKOUTEN = 0x1, unprogrammed default
 11675                           ;	Clock Switch Enable bit
 11676                           ;	CSWEN = 0x1, unprogrammed default
 11677                           ;	Fail-Safe Clock Monitor Enable bit
 11678                           ;	FCMEN = 0x1, unprogrammed default
 11679  300001                     	org	3145729
 11680  300001  FF                 	db	255
 11681                           
 11682                           ;Config register CONFIG2L @ 0x300002
 11683                           ;	unspecified, using default values
 11684                           ;	Master Clear Enable bit
 11685                           ;	MCLRE = 0x1, unprogrammed default
 11686                           ;	Power-up Timer Enable bit
 11687                           ;	PWRTE = 0x1, unprogrammed default
 11688                           ;	Low-power BOR enable bit
 11689                           ;	LPBOREN = 0x1, unprogrammed default
 11690                           ;	Brown-out Reset Enable bits
 11691                           ;	BOREN = 0x3, unprogrammed default
 11692  300002                     	org	3145730
 11693  300002  FF                 	db	255
 11694                           
 11695                           ;Config register CONFIG2H @ 0x300003
 11696                           ;	unspecified, using default values
 11697                           ;	Brown Out Reset Voltage selection bits
 11698                           ;	BORV = 0x3, unprogrammed default
 11699                           ;	ZCD Disable bit
 11700                           ;	ZCD = 0x1, unprogrammed default
 11701                           ;	PPSLOCK bit One-Way Set Enable bit
 11702                           ;	PPS1WAY = 0x1, unprogrammed default
 11703                           ;	Stack Full/Underflow Reset Enable bit
 11704                           ;	STVREN = 0x1, unprogrammed default
 11705                           ;	Debugger Enable bit
 11706                           ;	DEBUG = 0x1, unprogrammed default
 11707                           ;	Extended Instruction Set Enable bit
 11708                           ;	XINST = 0x1, unprogrammed default
 11709  300003                     	org	3145731
 11710  300003  FF                 	db	255
 11711                           
 11712                           ;Config register CONFIG3L @ 0x300004
 11713                           ;	WDT Period Select bits
 11714                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11715                           ;	WDT operating mode
 11716                           ;	WDTE = OFF, WDT Disabled
 11717  300004                     	org	3145732
 11718  300004  9F                 	db	159
 11719                           
 11720                           ;Config register CONFIG3H @ 0x300005
 11721                           ;	unspecified, using default values
 11722                           ;	WDT Window Select bits
 11723                           ;	WDTCWS = 0x7, unprogrammed default
 11724                           ;	WDT input clock selector
 11725                           ;	WDTCCS = 0x7, unprogrammed default
 11726  300005                     	org	3145733
 11727  300005  FF                 	db	255
 11728                           
 11729                           ;Config register CONFIG4L @ 0x300006
 11730                           ;	unspecified, using default values
 11731                           ;	Write Protection Block 0
 11732                           ;	WRT0 = 0x1, unprogrammed default
 11733                           ;	Write Protection Block 1
 11734                           ;	WRT1 = 0x1, unprogrammed default
 11735                           ;	Write Protection Block 2
 11736                           ;	WRT2 = 0x1, unprogrammed default
 11737                           ;	Write Protection Block 3
 11738                           ;	WRT3 = 0x1, unprogrammed default
 11739                           ;	Write Protection Block 3
 11740                           ;	WRT4 = 0x1, unprogrammed default
 11741                           ;	Write Protection Block 3
 11742                           ;	WRT5 = 0x1, unprogrammed default
 11743                           ;	Write Protection Block 3
 11744                           ;	WRT6 = 0x1, unprogrammed default
 11745                           ;	Write Protection Block 3
 11746                           ;	WRT7 = 0x1, unprogrammed default
 11747  300006                     	org	3145734
 11748  300006  FF                 	db	255
 11749                           
 11750                           ;Config register CONFIG4H @ 0x300007
 11751                           ;	unspecified, using default values
 11752                           ;	Configuration Register Write Protection bit
 11753                           ;	WRTC = 0x1, unprogrammed default
 11754                           ;	Boot Block Write Protection bit
 11755                           ;	WRTB = 0x1, unprogrammed default
 11756                           ;	Data EEPROM Write Protection bit
 11757                           ;	WRTD = 0x1, unprogrammed default
 11758                           ;	Scanner Enable bit
 11759                           ;	SCANE = 0x1, unprogrammed default
 11760                           ;	Low Voltage Programming Enable bit
 11761                           ;	LVP = 0x1, unprogrammed default
 11762  300007                     	org	3145735
 11763  300007  FF                 	db	255
 11764                           
 11765                           ;Config register CONFIG5L @ 0x300008
 11766                           ;	unspecified, using default values
 11767                           ;	UserNVM Program Memory Code Protection bit
 11768                           ;	CP = 0x1, unprogrammed default
 11769                           ;	DataNVM Memory Code Protection bit
 11770                           ;	CPD = 0x1, unprogrammed default
 11771  300008                     	org	3145736
 11772  300008  FF                 	db	255
 11773                           
 11774                           ;Config register CONFIG5H @ 0x300009
 11775                           ;	unspecified, using default values
 11776  300009                     	org	3145737
 11777  300009  FF                 	db	255
 11778                           
 11779                           ;Config register CONFIG6L @ 0x30000A
 11780                           ;	unspecified, using default values
 11781                           ;	Table Read Protection Block 0
 11782                           ;	EBTR0 = 0x1, unprogrammed default
 11783                           ;	Table Read Protection Block 1
 11784                           ;	EBTR1 = 0x1, unprogrammed default
 11785                           ;	Table Read Protection Block 2
 11786                           ;	EBTR2 = 0x1, unprogrammed default
 11787                           ;	Table Read Protection Block 3
 11788                           ;	EBTR3 = 0x1, unprogrammed default
 11789                           ;	Table Read Protection Block 4
 11790                           ;	EBTR4 = 0x1, unprogrammed default
 11791                           ;	Table Read Protection Block 5
 11792                           ;	EBTR5 = 0x1, unprogrammed default
 11793                           ;	Table Read Protection Block 6
 11794                           ;	EBTR6 = 0x1, unprogrammed default
 11795                           ;	Table Read Protection Block 7
 11796                           ;	EBTR7 = 0x1, unprogrammed default
 11797  30000A                     	org	3145738
 11798  30000A  FF                 	db	255
 11799                           
 11800                           ;Config register CONFIG6H @ 0x30000B
 11801                           ;	unspecified, using default values
 11802                           ;	Boot Block Table Read Protection bit
 11803                           ;	EBTRB = 0x1, unprogrammed default
 11804  30000B                     	org	3145739
 11805  30000B  FF                 	db	255
 11806                           tosu	equ	0xFFF
 11807                           tosh	equ	0xFFE
 11808                           tosl	equ	0xFFD
 11809                           stkptr	equ	0xFFC
 11810                           pclatu	equ	0xFFB
 11811                           pclath	equ	0xFFA
 11812                           pcl	equ	0xFF9
 11813                           tblptru	equ	0xFF8
 11814                           tblptrh	equ	0xFF7
 11815                           tblptrl	equ	0xFF6
 11816                           tablat	equ	0xFF5
 11817                           prodh	equ	0xFF4
 11818                           prodl	equ	0xFF3
 11819                           indf0	equ	0xFEF
 11820                           postinc0	equ	0xFEE
 11821                           postdec0	equ	0xFED
 11822                           preinc0	equ	0xFEC
 11823                           plusw0	equ	0xFEB
 11824                           fsr0h	equ	0xFEA
 11825                           fsr0l	equ	0xFE9
 11826                           wreg	equ	0xFE8
 11827                           indf1	equ	0xFE7
 11828                           postinc1	equ	0xFE6
 11829                           postdec1	equ	0xFE5
 11830                           preinc1	equ	0xFE4
 11831                           plusw1	equ	0xFE3
 11832                           fsr1h	equ	0xFE2
 11833                           fsr1l	equ	0xFE1
 11834                           bsr	equ	0xFE0
 11835                           indf2	equ	0xFDF
 11836                           postinc2	equ	0xFDE
 11837                           postdec2	equ	0xFDD
 11838                           preinc2	equ	0xFDC
 11839                           plusw2	equ	0xFDB
 11840                           fsr2h	equ	0xFDA
 11841                           fsr2l	equ	0xFD9
 11842                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    4
    Data        2
    BSS         149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    136     154
    BANK1           256     46     179
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2300$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2300$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    voltage_display@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_display@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    voltage_read@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_read@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), main@motorL(BANK1[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    S224DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S224DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 18
		 -> main@white(BANK1[18]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 18
		 -> main@white(BANK1[18]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _detect_color->_compare
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    ___fldiv->___xxtofl
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _color_read_Clear->_I2C_2_Master_Read
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _action->_goback
    _turnRight->_stop
    _short_reverse->_fullSpeedBack
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _goback->_turnLeft
    _turnLeft->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_color_data_collection
    _detect_color->_compare
    _lroundf->___fltol
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                49    49      0  100020
                                            134 BANK0      2     2      0
                                              0 BANK1     46    46      0
                  _I2C_2_Master_Init
                             _action
                    _calibrate_white
                   _color_click_init
              _color_data_collection
                      _color_predict
                       _detect_color
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        37    33      4   25108
                                             16 BANK0     37    33      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
 ---------------------------------------------------------------------------------
 (2) _lroundf                                              4     0      4   12618
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (3) _roundf                                              26    22      4   11379
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3082
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _compare                                              7     1      6    2392
                                             94 COMRAM     1     1      0
                                             10 BANK0      6     0      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1660
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2585
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_data_collection                               12    10      2   16822
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (2) _read_color                                           2     0      2    1072
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_predict                                      102   102      0    7585
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7725
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    6912
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     371
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate_white                                      4     2      2     613
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_G
                              _LED_R
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _action                                               5     1      4   48758
                                             49 COMRAM     5     1      4
                     _fullSpeedAhead
                             _goback
                     _reverse_square
                      _short_reverse
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     9      5    7036
                                             31 COMRAM    14     9      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   10109
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4    9501
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    5834
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                               4     0      4    7688
                                             45 COMRAM     4     0      4
                           _turnLeft
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     9      5    7492
                                             31 COMRAM    14     9      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3275
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    2515
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _action
     _fullSpeedAhead
       _setMotorPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _goback
       _turnLeft
         _setMotorPWM
         _stop
           _setMotorPWM
     _reverse_square
       _fullSpeedBack
         _setMotorPWM
         _stop
       _stop
     _short_reverse
       _fullSpeedBack
       _stop
     _stop
     _turnLeft
     _turnRight
       _setMotorPWM
       _stop
   _calibrate_white
     _LED_B
     _LED_G
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_data_collection
     _LED_B
     _LED_C
     _LED_G
     _LED_R
     _color_display
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _color_predict
       _sendStringSerial4
       _sprintf
     _read_color
       _color_read_Blue
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
       _color_read_Red
   _color_predict
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           _roundf (ARG)
             ___fladd
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2E      B3       7       69.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      9A       5       96.2%
BITBIGSFRllhhl      6E      0       0      44        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllllh     32      0       0      49        0.0%
BITBIGSFRlllllh     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      47        0.0%
BITBIGSFRhhhlh      17      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      41        0.0%
BITBIGSFRhhhlll     11      0       0      35        0.0%
BITBIGSFRlllllh      F      0       0      55        0.0%
BITBIGSFRllllhl      C      0       0      48        0.0%
BITBIGSFRlllllh      9      0       0      54        0.0%
BITBIGSFRllhlll      8      0       0      45        0.0%
BITBIGSFRllhhhl      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRlllllh      6      0       0      52        0.0%
BITBIGSFRhhhlll      6      0       0      36        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRllhhhh      3      0       0      42        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRhlh         1      0       0      37        0.0%
BITBIGSFRhhhllh      1      0       0      34        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BITBIGSFRhll         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AC      58        0.0%
DATA                 0      0     1AC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Mar 10 10:57:25 2022

                ?_short_reverse 0026                  _color_read_Red 481C                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 48BC  
                 _color_predict 3F72                              l51 4C30                              l60 490A  
                            l54 4D18                              l63 48BA                              l72 4D38  
                            l81 4D58                              l57 486A                              l66 481A  
                            l75 4CF8                              l92 36F6                              l69 4778  
                            l78 4D78                              l95 46B8                    ___awdiv@sign 000C  
           ___wmul@multiplicand 0003                _color_read_Clear 47CC                _color_read_Green 486C  
                           l111 404E                             l202 4C8C                             l114 3D64  
                           l211 4E0E                             l220 4A18                             l301 31F8  
                           l205 4CB2                             l214 4DFA                             l320 3C10  
                           l208 4E04                             l217 4DF0                             l161 1AE8  
                           l330 3AAA                             l323 3C3A                             l155 1AE6  
                           l316 3BD6                             l164 4B8C                             l309 45B4  
                           l165 4B8E                             l334 3AE4                             l414 4D96  
                           l423 4DD0                             l600 4CD8                             l432 4C60  
                           l345 4648                             l337 3B0E                             l362 4A9C  
                           l426 4DE4                             l291 49D6                             l356 44F8  
                           l294 4120                             l359 4A5A                             l199 4C8A  
                           l714 387E                             l831 4438                             l727 39E2  
                           l594 4DB2                             l588 3024                             l597 4DCC  
                           l870 3F70                             l865 3F2A                             l874 4BC6  
                           l897 3E6C                ?_calibrate_white 000C                             _abs 4A9E  
                           _pad 41EC                             wreg 000FE8                    ___flmul@aexp 0039  
                  ___flmul@bexp 003A                    ___flmul@sign 0034                    ___flmul@temp 003F  
                  ___flmul@prod 003B                    ___fltol@exp1 0065                            l1130 1C8C  
                          ?_abs 0013                            l1221 2264                            l1310 4232  
                          l1214 206E                            l1231 2394                            l1223 22DC  
                          l1224 22CA                            l1128 1CD8                            l1313 4274  
                          l1321 2BBC                            l1145 1DF2                            l1137 1FA8  
                          l1129 1CC6                            l1218 23D2                            l1154 1EC2  
                          l1170 4950                            l1315 42B0                            l1323 2BC4  
                          l1155 1EB0                            l1341 2DFE                            l1406 4BFC  
                          l1182 2B1A                            l1262 32E8                            l1255 3250  
                          l3200 375C                            l1184 297A                            l4000 3DBC  
                          l1193 29C0                            l3210 37A6                            l3202 3760  
                          l1362 4ADC                            l1354 4712                            l1258 33AC  
                          l4002 3DBE                            l1355 471A                            l1283 47CA  
                          l1195 2A38                            l1187 293E                            l3300 4376  
                          l4100 4D40                            l3220 3816                            l3212 37B4  
                          l3204 376C                            l1348 3560                            l1196 2A26  
                          l4004 3DCE                            l1276 4B54                            l1269 3344  
                          l3310 43A2                            l3302 437A                            l3222 3828  
                          l3214 37C6                            l3206 378A                            l1374 41EA  
                          l1382 4994                            l4102 464A                            l4110 3F88  
                          l4030 3E4C                            l4014 3DF8                            l4006 3DD2  
                          l1359 4AD4                            l3320 43D0                            l3312 43AA  
                          l3304 4388                            l4200 45F2                            l3216 37F4  
                          l3208 3792                            l3224 382E                            l3240 38B6  
                          l3232 3880                            l3160 4146                            l3400 2DC6  
                          l4104 46AC                            l4120 3FBC                            l4112 3F98  
                          l4032 3E5C                            l4024 3E20                            l4016 3E02  
                          l4008 3DE0                            l4040 243C                            l1385 4E12  
                          l1393 2780                            l3330 440A                            l3322 43D8  
                          l3314 43AE                            l3306 4390                            l3410 3026  
                          l4202 45FE                            l4210 4A1A                            l3226 383E  
                          l3218 3814                            l3250 391E                            l3242 38C4  
                          l3234 3884                            l3162 4150                            l3170 4952  
                          l3402 2DD6                            l4130 3FE0                            l4122 3FBC  
                          l4114 3F98                            l4106 3F76                            l4026 3E2C  
                          l4018 3E0C                            l4042 2450                            l3340 4430  
                          l3332 440C                            l3324 43E6                            l3316 43B6  
                          l3308 4394                            l3420 3126                            l3412 3042  
                          l4204 460A                            l4220 4A88                            l4212 4A2E  
                          l3228 385E                            l3252 392C                            l3260 3992  
                          l3244 38E4                            l3236 3892                            l3164 416E  
                          l3156 4122                            l3172 495E                            l3180 4BD4  
                          l4140 4016                            l4132 3FF2                            l4124 3FCE  
                          l4116 3FAA                            l4108 3F88                            l4300 2948  
                          l4028 3E3C                            l3500 1C26                            l4060 26DC  
                          l4052 2504                            l4044 248C                            l4036 23D4  
                          l3334 4412                            l3326 43EC                            l3318 43C8  
                          l3422 3190                            l3414 30A4                            l4206 4618  
                          l4222 4DB4                            l4214 4A46                            l3406 4C8C  
                          l4070 4C62                            l3190 36FC                            l3262 39A2  
                          l3254 395A                            l3246 3902                            l3238 38B2  
                          l3166 41A4                            l3158 4134                            l3174 4970  
                          l3182 4BD8                            l3270 41FC                            l3350 2B84  
                          l4142 4016                            l4134 3FF2                            l4126 3FCE  
                          l4118 3FAA                            l4310 29A0                            l4302 2966  
                          l4230 279E                            l3510 1C84                            l3502 1C2A  
                          l3430 1B06                            l4062 2710                            l4054 25D2  
                          l4046 24B0                            l4038 23F4                            l4150 4B1C  
                          l3328 4402                            l3336 4418                            l3416 30EA  
                          l4208 4630                            l4216 4A5C                            l3408 4C9C  
                          l4080 4C78                            l4072 4C6C                            l3192 370A  
                          l3264 39C2                            l3256 397A                            l3248 390A  
                          l3176 4974                            l3184 4BF0                            l3280 4252  
                          l3272 4210                            l3360 2BDE                            l3352 2B94  
                          l3344 2B1C                            l4144 4028                            l4136 4004  
                          l4128 3FE0                            l4320 29DE                            l4312 29A6  
                          l4304 2968                            l4232 27AE                            l4240 27D8  
                          l4224 2782                            l4400 338C                            l4160 4B88  
                          l3600 1F26                            l3520 1CBA                            l3512 1C9A  
                          l3504 1C2E                            l3432 1B16                            l3440 1B40  
                          l3424 1AEA                            l4064 274C                            l4056 263E  
                          l4048 24CC                            l3338 4428                            l3418 310A  
                          l4218 4A70                            l4170 3A2C                            l4074 4C72  
                          l4082 4CFC                            l4410 4C02                            l4090 4CDA  
                          l3194 372A                            l3258 398C                            l3290 4A9E  
                          l3178 4BC8                            l3282 4256                            l3274 421E  
                          l3370 2C0A                            l3362 2BEC                            l3354 2B96  
                          l3346 2B3C                            l4146 4028                            l4138 4004  
                          l4330 2A48                            l4322 29E2                            l4314 29B0  
                          l4306 2978                            l4250 2804                            l4242 27E8  
                          l4234 27BE                            l4226 278E                            l4402 339A  
                          l4154 4B56                            l3610 1F6C                            l3602 1F28  
                          l3530 1D0A                            l3522 1CC4                            l3514 1CA6  
                          l3506 1C58                            l3450 1B70                            l3442 1B50  
                          l3434 1B26                            l3426 1AF6                            l4066 2770  
                          l4058 2670                            l3700 44FE                            l4180 3A78  
                          l4172 3A38                            l4164 39E4                            l4500 3C6C  
                          l4076 4C74                            l4412 4C0C                            l4092 4CE0  
                          l3196 372E                            l3188 36F8                            l3292 4AB8  
                          l3284 4284                            l3276 422A                            l3268 41EC  
                          l3380 2D16                            l3372 2C8C                            l3364 2BF2  
                          l3356 2BB0                            l3348 2B64                            l4148 4042  
                          l4084 471C                            l4340 2AAA                            l4332 2A54  
                          l4324 29F0                            l4316 29BE                            l4308 298A  
                          l4252 2814                            l4260 283E                            l4244 27EE  
                          l4236 27CE                            l4228 279C                            l4404 339C  
                          l4156 4B5A                            l3620 1F96                            l3612 1F7A  
                          l3604 1F38                            l3540 1D46                            l3532 1D1A  
                          l3524 1CE6                            l3516 1CAA                            l3508 1C74  
                          l3460 1BB0                            l3452 1B7E                            l3444 1B56  
                          l3436 1B36                            l3428 1B04                            l3294 4CB4  
                          l3710 4552                            l3702 4516                            l4190 3AD0  
                          l4182 3A8A                            l4166 3A08                            l4174 3A46  
                          l4094 4D5A                            l4086 4D1A                            l4510 3CD0  
                          l4502 3C84                            l4078 4C76                            l4414 4C1C  
                          l3198 373C                            l3286 4298                            l3278 423E  
                          l3390 2D8A                            l3382 2D34                            l3374 2C92  
                          l3366 2BFA                            l3358 2BCC                            l3630 33E0  
                          l4430 35A0                            l4350 2B08                            l4342 2AC0  
                          l4334 2A62                            l4326 2A1E                            l4318 29D0  
                          l4270 2880                            l4262 284E                            l4254 2824  
                          l4246 27F4                            l4238 27D0                            l4158 4B72  
                          l3622 1F98                            l3614 1F80                            l3606 1F48  
                          l3550 1D8C                            l3542 1D54                            l3534 1D28  
                          l3526 1CF6                            l3518 1CB8                            l3470 1BEA  
                          l3462 1BB2                            l3454 1B80                            l3446 1B68  
                          l3438 1B38                            l3296 4CD0                            l3712 455E  
                          l3704 4522                            l4192 3AE0                            l4184 3A96  
                          l4176 3A5E                            l4168 3A20                            l4096 4D60  
                          l4088 4D20                            l4520 3D4C                            l4512 3D00  
                          l4504 3C9C                            l4416 4C26                            l4408 4BFE  
                          l3720 4DD0                            l3392 2D9A                            l3384 2D4E  
                          l3376 2C98                            l3368 2C04                            l3640 3486  
                          l3632 33F2                            l4432 35B8                            l4424 3584  
                          l4352 2B0E                            l4344 2ADA                            l4336 2A8C  
                          l4264 2864                            l4256 2834                            l4248 2802  
                          l3800 21E8                            l3616 1F82                            l3608 1F68  
                          l3560 1E08                            l3552 1DC0                            l3544 1D56  
                          l3536 1D36                            l3480 1BFE                            l3472 1BEE  
                          l3456 1B90                            l3464 1BBA                            l3448 1B6A  
                          l4600 182A                            l3706 453A                            l3714 456C  
                          l4194 3AFA                            l4186 3AA6                            l4178 3A6C  
                          l4098 4D3A                            l4514 3D04                            l4506 3CA0  
                          l3722 4DE0                            l3394 2DA0                            l3386 2D68  
                          l3378 2CFC                            l3650 3504                            l3634 33F6  
                          l3626 33AE                            l4450 3614                            l4442 35E0  
                          l4434 35BE                            l4426 3588                            l4418 3562  
                          l4354 2B10                            l4346 2AF6                            l4338 2A90  
                          l4290 2902                            l4282 28B8                            l4266 2874  
                          l4274 2894                            l4258 2836                            l4370 3276  
                          l4362 31FC                            l3810 2262                            l3802 221E  
                          l3730 1FC6                            l3618 1F88                            l3570 1E44  
                          l3562 1E18                            l3554 1DC2                            l3546 1D60  
                          l3538 1D42                            l3490 1C12                            l3482 1C02  
                          l3474 1BF2                            l3466 1BCA                            l3458 1BA0  
                          l4610 1882                            l4602 1834                            l4530 0F5E  
                          l4522 0E54                            l4196 45B6                            l3716 4584  
                          l3708 4546                            l4188 3AC4                            l3900 4862  
                          l4516 3D1C                            l4508 3CB8                            l3396 2DB2  
                          l3388 2D78                            l3644 34BE                            l3636 341A  
                          l3628 33D2                            l3660 352A                            l4460 363C  
                          l4452 361A                            l4444 35E4                            l4436 35D8  
                          l4428 3594                            l4348 2AFA                            l4292 290A  
                          l4284 28D2                            l4276 28A4                            l4268 287C  
                          l4380 32D0                            l4364 320C                            l3820 22C2  
                          l3812 2274                            l3804 222C                            l3740 200C  
                          l3732 1FD6                            l3724 1FAA                            l3580 1E70  
                          l3572 1E46                            l3556 1DD2                            l3548 1D66  
                          l3492 1C16                            l3484 1C06                            l3476 1BF6  
                          l3468 1BDC                            l4612 189A                            l4604 1862  
                          l4620 18D4                            l4540 10F2                            l4532 0F7A  
                          l4524 0EB2                            l4198 45DA                            l3718 459C  
                          l3670 4E00                            l3910 486C                            l4518 3D34  
                          l3398 2DBE                            l3662 354E                            l3646 34E2  
                          l3654 3510                            l3638 343E                            l4470 3676  
                          l4462 3640                            l4454 3634                            l4446 35F0  
                          l4294 291A                            l4286 28E2                            l4278 28A4  
                          l4390 3334                            l4382 32D2                            l4374 328A  
                          l4366 321A                            l3830 2330                            l3814 2282  
                          l3806 224A                            l3750 2038                            l3742 2012  
                          l3734 1FE6                            l3726 1FB6                            l3590 1EA8  
                          l3574 1E54                            l3566 1E2C                            l3582 1E72  
                          l3558 1DE2                            l3494 1C1A                            l3486 1C0A  
                          l3478 1BFA                            l4630 1990                            l4622 1900  
                          l4614 18A2                            l4606 187A                            l4550 1140  
                          l4542 110A                            l4534 1022                            l4526 0EB6  
                          l4710 4D90                            ?_pad 0011                            l3680 4E06  
                          l3672 4DE8                            l3904 48BC                            l3912 48B2  
                          l3656 351E                            l3648 34F0                            l4480 369C  
                          l4472 3690                            l4464 364C                            l4448 35FC  
                          l4296 292E                            l4288 28F2                            l4392 3352  
                          l4384 32DE                            l4376 3292                            l4368 3260  
                          l3840 2398                            l3824 22EC                            l3832 2334  
                          l3816 2286                            l3808 2254                            l3760 208E  
                          l3752 2048                            l3744 2018                            l3736 1FF6  
                          l3728 1FC4                            l3576 1E5C                            l3568 1E36  
                          l3584 1E80                            l3496 1C1E                            l3488 1C0E  
                          l4640 19E8                            l4632 1996                            l4624 192E  
                          l4616 18CE                            l4560 1368                            l4552 11E0  
                          l4544 110E                            l4536 1036                            l4528 0EC2  
                          l4712 4D92                            l4704 4D7A                            l4720 4D98  
                          l4730 2E4A                            l4722 2E02                            l3690 49EE  
                          l3682 4E0A                            l3674 4DEC                            l3906 4902  
                          l3930 47B8                            l3922 477A                            l4490 36EC  
                          l4482 36A8                            l4466 3658                            l4298 293C  
                          l4394 3354                            l4386 331A                            l4378 329E  
                          l3850 23C2                            l3842 23A8                            l3834 234E  
                          l3826 22F8                            l3818 2294                            l3770 20CE  
                          l3754 2058                            l3746 2026                            l3738 1FFC  
                          l3594 1ED2                            l3586 1E84                            l3578 1E60  
                          l3498 1C22                            l4650 1A3A                            l4642 19EC  
                          l4634 19AA                            l4626 1934                            l4570 1446  
                          l4562 137C                            l4554 11FC                            l4546 111A  
                          l4538 10DE                            l4714 4D94                            l4706 4D84  
                          l4740 2EF2                            l4732 2E76                            l4724 2E16  
                          l3692 4A14                            l3684 49DA                            l3668 4DFC  
                          l3676 4DF2                            l3940 4C48                            l3924 478C  
                          l3916 47CC                            l4492 36F2                            l4484 36B4  
                          l4468 3670                            l4396 3358                            l4388 3326  
                          l3860 3E6E                            l3844 23B6                            l3836 2362  
                          l3828 2306                            l3780 2118                            l3772 20DA  
                          l3764 20A2                            l3756 205E                            l3748 2028  
                          l3596 1EDE                            l3588 1E92                            l4660 1A8E  
                          l4652 1A3E                            l4644 19FC                            l4636 19BC  
                          l4628 1962                            l4580 15EA                            l4572 1462  
                          l4564 1394                            l4556 12A4                            l4548 112A  
                          l4708 4D86                            l3950 3B64                            l3942 3B10  
                          l4750 2F80                            l4742 2F04                            l4734 2E88  
                          l4726 2E26                            l3694 4A16                            l3686 49DE  
                          l3678 4DF6                            l4494 3C3C                            l3934 4C32  
                          l3926 4794                            l3918 4812                            l4486 36CC  
                          l4478 3698                            l4398 337C                            l3870 3EF8  
                          l3862 3E9C                            l3846 23B8                            l3838 237C  
                          l3790 216A                            l3782 2124                            l3774 20F2  
                          l3766 20AE                            l3758 207E                            l3598 1EEC  
                          l3854 490C                            l4670 1AE2                            l4662 1A92  
                          l4654 1A50                            l4646 1A0E                            l4638 19D2  
                          l4590 1712                            l4582 1602                            l4574 150A  
                          l4566 1398                            l4558 12C0                            l3960 3BB6  
                          l3944 3B34                            l3952 3B72                            l4752 2FAC  
                          l4744 2F30                            l4736 2EB4                            l4728 2E3A  
                          l3688 49E6                            l4496 3C40                            l3936 4C36  
                          l3928 479C                            l4488 36D2                            l3872 3F0A  
                          l3864 3EAC                            l3848 23BE                            l3792 217A  
                          l3784 2134                            l3776 20FE                            l3768 20B8  
                          l3856 491C                            l4664 1AA4                            l4656 1A62  
                          l4648 1A24                            l4592 1740                            l4584 1630  
                          l4576 1526                            l4568 13A4                            l4680 49D2  
                          l4840 42B6                            l3698 44FA                            l3970 3C0C  
                          l3962 3BC2                            l3954 3B8A                            l3946 3B4C  
                          l4754 2FBE                            l4746 2F42                            l4738 2EC6  
                          l4498 3C54                            l3938 4C44                            l3890 46BA  
                          l3874 3F18                            l3866 3EDA                            l3794 2196  
                          l3786 2140                            l3778 210A                            l3882 4B90  
                          l4666 1AB6                            l4658 1A78                            l4594 1800  
                          l4586 16FE                            l4578 15CE                            l4682 49D4  
                          l4674 4996                            l4690 4080                            l4850 42E2  
                          l4842 42BA                            l3972 3C26                            l3964 3BD2  
                          l3956 3B98                            l3948 3B58                            l3980 4482  
                          l4756 2FEA                            l4748 2F6E                            l3892 46C2  
                          l3876 3F68                            l3868 3EEA                            l3796 21A2  
                          l3788 2150                            l3884 4BA6                            l4668 1ACC  
                          l4596 1818                            l4588 1708                            l4676 49A6  
                          l4692 4094                            l4684 4050                            l4860 4338  
                          l4852 42FA                            l4844 42C6                            l3966 3BF0  
                          l3958 3BA4                            l3990 44E4                            l3982 448E  
                          l3974 443A                            l4758 2FFC                            l3894 46D0  
                          l3878 3F6E                            l3798 21BE                            l3886 4BB6  
                          l4598 1820                            l4678 49BE                            l4694 40A4  
                          l4686 405C                            l4862 433E                            l4854 4306  
                          l4846 42CA                            l4838 42B2                            l3968 3BFC  
                          l3976 445E                            l3984 449C                            l3896 46F6  
                          l3992 3D66                            l4696 40B8                            l4688 406C  
                          l4864 4356                            l4856 431E                            l4848 42DE  
                          l3986 44B4                            l3978 4476                            l3898 481C  
                          l3994 3D7E                            l4858 431E                            l3988 44CC  
                          l3998 3D92             detect_color@GC_REAL 008C                            STR_1 0E05  
                          STR_3 0E3E                            STR_4 0E4E                            STR_5 0E38  
                          STR_6 0E44                            STR_7 0E25                            STR_8 0E49  
                          STR_9 0E1E                            u3000 2D8A                            u3001 2D86  
                          u3010 2D9A                            u3011 2D96                            u3020 2DB2  
                          u3100 1B16                            u3021 2DAE                            u3101 1B12  
                          u3030 4C9C                            u3110 1B26                            u3031 4C98  
                          u3111 1B22                            u3040 4CB2                            u3200 1C72  
                          u3120 1B68                            u4000 243C                    _BAUD4CONbits 000EE9  
                          u3041 4CAE                            u3121 1B64                            u4001 2438  
                          _LATE 000F7D                            u3050 3042                            u3210 1C9A  
                          u3130 1B7E                            u4010 2470                            u3051 303E  
                          u3211 1C96                            u3131 1B7A                            _LATG 000F7F  
                          u3060 3126                            u4100 3FAA                            u3300 1DD2  
                          u3220 1CB8                            u3140 1B90                            u4020 248C  
                          u3061 3122                            u4101 3FA6                            u3301 1DCE  
                          u3221 1CB4                            u3141 1B8C                            u4021 2488  
                          u4110 3FBC                            u3310 1E08                            u3230 1CD8  
                          u3150 1BA0                            u4030 24CC                            u4111 3FB8  
                          u3311 1E04                            u3231 1CD4                            u3151 1B9C  
                          u4031 24C8                            u4015 2466                            u4200 3A5E  
                          u5000 2F80                            u2600 416E                            u4120 3FCE  
                          u3400 1ED2                            u3320 1E18                            u3240 1CE6  
                          u3160 1BDC                            u4040 25D2                            u4201 3A5A  
                          u5001 2F7C                            u2601 416A                            u4121 3FCA  
                          u3401 1ECE                            u3321 1E14                            u3241 1CE2  
                          u3161 1BD8                            u4041 25CE                            u3074 3180  
                          u4210 3A8A                            u5010 2FBE                            u2610 41A4  
                          u4130 3FE0                            u3410 1EEC                            u3330 1E44  
                          u3250 1CF6                            u3170 1BEA                            u3090 1B04  
                          u4050 2670                            _T2PR 000FBC                            u3075 317C  
                          u4211 3A86                            u5011 2FBA                            u2611 41A0  
                          u4131 3FDC                            u3411 1EE8                            u3331 1E40  
                          u3251 1CF2                            u3171 1BE6                            u3091 1B00  
                          u4051 266C                            u3084 31EA                            u4220 3AC0  
                          u5020 2FFC                            u2700 383E                            u2620 4994  
                          u3500 343E                            u4140 3FF2                            u4300 2814  
                          u3420 1F26                            u3340 1E54                            u3260 1D28  
                          u3180 1C58                            u4060 2730                            u3085 31E6  
                          u4221 3ABC                            u5021 2FF8                            u2701 383A  
                          u2621 4990                            u3501 343A                            u4141 3FEE  
                          u4301 2810                            u3421 1F22                            u3341 1E50  
                          u3261 1D24                            u3181 1C54                            u4230 3AFA  
                          u2710 3892                            u2630 4BF0                            u3510 34E2  
                          u4150 4004                            u4310 2824                            u3430 1F38  
                          u3350 1E70                            u3270 1D36                            u3190 1C70  
                          u4070 274C                            u4231 3AF6                            u2711 388E  
                          u2631 4BEC                            u3511 34DE                            u4151 4000  
                          u4311 2820                            u3431 1F34                            u3351 1E6C  
                          u3271 1D32                            u3191 1C6A                            u4071 2748  
                          u4240 4630                            u3520 4A02                            u2640 370A  
                          u2720 38C4                            u2800 4284                            u4160 4016  
                          u4080 3F88                            u4400 29DE                            u4320 2864  
                          u3600 1FD6                            u3440 1F48                            u3360 1E80  
                          u3280 1D54                            u4241 462C                            u3521 49FA  
                          u2641 3706                            u2721 38C0                            u2801 4280  
                          u4161 4012                            u4081 3F84                            u4401 29DA  
                          u4321 2860                            u3601 1FD2                            u3441 1F44  
                          u3361 1E7C                            u3281 1D50                            u4065 2726  
                          u4250 4648                            u2650 373C                            u2730 3902  
                          u2810 4AB8                            u4170 4028                            u4090 3F98  
                          u4410 29F0                            u4330 28A4                            u3610 1FE6  
                          u3450 1F68                            u3370 1E92                            u3290 1D8C  
                          u4251 4644                            u2651 3738                            u2731 38FE  
                          u2811 4AB4                            u4171 4024                            u4091 3F94  
                          u4411 29EC                            u4331 28A0                            u3611 1FE2  
                          u3451 1F64                            u3371 1E8E                            u3291 1D88  
                          u2820 4388                            u3540 4516                            u2740 392C  
                          u2580 4134                            u2900 2B64                            u4420 2A1E  
                          u4340 291A                            u4260 279C                            u4500 321A  
                          u4180 4B72                            u3700 2294                            u3620 2026  
                          u3460 1F7A                            u3380 1EA8                            u2821 4384  
                          u3541 4512                            u2661 3766                            u2741 3928  
                          u2581 4130                            u2901 2B60                            u4421 2A1A  
                          u4341 2916                            u4261 2798                            u4501 3216  
                          u4181 4B6E                            u3701 2290                            u3621 2022  
                          u3461 1F76                            u3381 1EA4                            u2830 43A2  
                          u3550 453A                            u2670 378A                            u2750 395A  
                          u2590 4146                            u2910 2B94                            u4430 2A34  
                          u4350 293C                            u4270 27AE                            u4510 3276  
                          u4190 4B88                            u3710 22C2                            u3630 2038  
                          u3470 1F96                            u3390 1EBE                            u2831 439E  
                          u3551 4536                            u2671 3786                            u2751 3956  
                          u2591 4142                            u2911 2B90                            u5207 3606  
                          u4431 2A30                            u4351 2938                            u4271 27AA  
                          u4511 3272                            u4191 4B84                            u3711 22BE  
                          u3631 2034                            u3471 1F92                            u3391 1EBA  
                          u2840 43C8                            u3560 4584                            u2680 37B4  
                          u2760 39A2                            u2920 2BB0                            u3480 33D2  
                          u4600 3634                            u4440 2A48                            u4360 2966  
                          u4280 27BE                            u4520 32CC                            u3800 3EF8  
                          u3720 22D8                            u3640 2048                            u2841 43C4  
                          u3561 4580                            u2681 37B0                            u2761 399E  
                          u2921 2BAC                            u3481 33CE                            u5217 3662  
                          u4601 3630                            u4441 2A44                            u4361 2962  
                          u4281 27BA                            u4521 32C8                            u3801 3EF4  
                          u3721 22D4                            u3641 2044                            u5137 42EE  
                          u2850 43E6                            u3570 459C                            u3538 4A04  
                          u2690 37F4                            u2770 41FC                            u2930 2BDE  
                          u3490 341A                            u4610 3690                            u4450 2A62  
                          u4370 298A                            u4290 2802                            u4530 3316  
                          u3810 3F18                            u3730 22EC                            u3650 207E  
                          u2851 43E2                            u3571 4598                            u5307 4D6A  
                          u2691 37F0                            u2771 41F8                            u2931 2BDA  
                          u3491 3416                            u5227 36BE                            u4611 368C  
                          u4451 2A5E                            u4371 2986                            u4291 27FE  
                          u4531 3312                            u3811 3F14                            u3731 22E8  
                          u3651 207A                            u5147 4312                            u2860 4402  
                          u3900 44B4                            u3580 4DE0                            u2780 421E  
                          u2940 2BEC                            u4620 36EC                            u4460 2AAA  
                          u4380 29A0                            u4540 3334                            u3820 3F68  
                          u3740 2306                            u3660 208E                            u4700 189A  
                          u2861 43FE                            u3901 44B0                            u5317 3A3E  
                          u5237 4CEA                            u3581 4DDC                            u2781 421A  
                          u2941 2BE8                            u4621 36E8                            u4461 2AA6  
                          u4381 299C                            u4541 3330                            u3821 3F64  
                          u3741 2302                            u3661 208A                            u4701 1896  
                          u5157 434A                            u2870 4428                            u3910 44CC  
                          u2790 4274                            u2950 2D16                            u4470 2ADA  
                          u4390 29BE                            u4550 3344                            u3750 234E  
                          u3670 2208                            u3590 1FC4                            u3830 4BA6  
                          u4710 18CE                            u4630 1630                            u2871 4424  
                          u5407 3C02                            u3911 44C8                            u5327 3A9C  
                          u5247 4C12                            u2791 4270                            u2951 2D12  
                          u4471 2AD6                            u4391 29BA                            u4551 3340  
                          u3751 234A                            u3591 1FC0                            u3831 4BA2  
                          u4711 18CA                            u4631 162C                            u5167 10FE  
                          u2960 2D34                            u2880 2B4C                            u3840 4712  
                          u4480 2B08                            u4560 3352                            u3920 3D7E  
                          u3760 237C                            u3680 2262                            u4800 19FC  
                          u4720 1900                            u4640 16FE                            u5417 4564  
                          u5337 3AD6                            u5257 3C8E                            u2961 2D30  
                          u2881 2B46                            u3841 470E                            u4481 2B04  
                          u4561 334E                            u3921 3D7A                            u3761 2378  
                          u3681 225E                            u4801 19F8                            u4721 18FC  
                          u4641 16FA                            u5177 1388                            u3850 4C60  
                          u2970 2D4E                            u2890 2B4E                            u4570 338C  
                          u4490 320C                            u3930 3DB2                            u3770 23B6  
                          u3690 2282                            u4810 1A0E                            u4730 192E  
                          u4650 1740                            u5427 45A6                            u5347 4A38  
                          u5267 3CF2                            u3851 4C5C                            u2971 2D4A  
                          u4571 3388                            u4491 3208                            u3771 23B2  
                          u3691 227E                            u3675 21FE                            u4811 1A0A  
                          u4731 192A                            u4651 173C                            u5187 15F6  
                          u3860 3B8A                            u2980 2D68                            u4580 339A  
                          u3940 3DE0                            u3780 3E9C                            u4900 1ACC  
                          u4820 1A24                            u4740 1962                            u4660 1800  
                          u5437 4610                            u3861 3B86                            u5357 4A7A  
                          u5277 3D56                            u2981 2D64                            u5197 35AA  
                          u4581 3396                            u3941 3DDC                            u3781 3E98  
                          u4901 1AC8                            u4821 1A20                            u4741 195E  
                          u4661 17FC                            u3870 3BB6                            u2990 2D78  
                          u4590 35D8                            u3950 3DF4                            u3790 3EDA  
                          u4910 1AE2                            u4830 1A3A                            u4750 1990  
                          u4670 1818                            u3871 3BB2                            u5367 4494  
                          u5287 4D2A                            u2991 2D74                            u4591 35D4  
                          u3951 3DF0                            u3935 3DA8                            u3791 3ED6  
                          u4911 1ADE                            u4831 1A36                            u4751 198C  
                          u4671 1814                            u3880 3BEC                            u3960 3E1C  
                          u4840 1A50                            u4760 19AA                            u4680 1862  
                          u3881 3BE8                            u5377 44D6                            u5297 4D4A  
                          u3961 3E18                            u4841 1A4C                            u4761 19A6  
                          u4681 185E                            u3890 3C26                            u3970 3E3C  
                          u4850 1A62                            u4770 19BC                            u4690 187A  
                          u3891 3C22                            u5387 3B6A                            u3971 3E38  
                          u4851 1A5E                            u4771 19B8                            u4691 1876  
                          u4940 2E26                            u3980 3E4C                            u4860 1A78  
                          u4780 19D2                            u5397 3BC8                            u4941 2E22  
                          u3981 3E48                            u4861 1A74                            u4781 19CE  
                          u4950 2E4A                            u3990 2414                            u4870 1A8E  
                          u4790 19E8                            u4951 2E46                            u4871 1A8A  
                          u4791 19E4                            u4960 2E88                            u4880 1AA4  
                          u4961 2E84                            u4881 1AA0                            u4970 2EC6  
                          u4890 1AB6                            u4971 2EC2                            u3995 240A  
                          u4891 1AB2                            u4980 2F04                            u4981 2F00  
                          u4990 2F42                            u4991 2F3E                            abs@a 0013  
           detect_color@GR_REAL 008A                            _dbuf 0165                            _main 42B2  
                          _dtoa 2B1C                            _prec 00F0                            _nout 00EC  
                          pad@i 0018                            pad@p 0015                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                          _stop 44FA                            prodh 000FF4                            prodl 000FF3  
                          start 0000                  ?_color_display 0058                 ___fldiv@new_exp 0020  
        __end_of_color_read_Red 486C                    ___param_bank 000000                  ?_color_predict 0001  
                         ??_abs 0015                           ??_pad 0017                   ___fltol@sign1 0064  
               __end_of___aodiv 3880                 __end_of___fladd 1FAA                           ?_main 0001  
                         ?_dtoa 001C                 __end_of___aomod 39E4                           _ADPCH 000F5F  
               __end_of___fldiv 2B1C                 __end_of___awdiv 443A                 __end_of___flneg 4BC8  
                         STR_10 0E13                           STR_11 0E2C                           STR_12 0E32  
                         STR_13 0E0D                 __end_of___flmul 23D4                 __end_of___flsub 4952  
               __end_of___fltol 3E6E                           ?_stop 001A                 ___awdiv@divisor 0009  
                         _LED_B 4D5A                           _LED_C 4CDA                           _LED_G 4D3A  
                         _LED_R 4D1A                 ___awdiv@counter 000B                    vfpfcnvrt@fmt 0042  
       __end_of_sendCharSerial4 4DE6      __end_of_I2C_2_Master_Start 4E06         ??_color_data_collection 005C  
    __end_of_I2C_2_Master_Write 4DF2                 __end_of_compare 4B90                    compare@lower 006A  
                         _flags 00F2                           _color 0164                    compare@upper 006E  
                         _fputc 4122                           _fputs 4952                           pad@fp 0011  
                         _width 00EE                           _putch 4E12                           _toint 0E01  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
                         tablat 000FF5                 __end_of_lroundf 4B56                           status 000FD8  
               __end_of_sprintf 47CC                color_display@buf 0079         __end_of_color_read_Blue 490C  
         _I2C_2_Master_RepStart 4E06                 ??_short_reverse 002A                 ?_color_read_Red 0005  
               __initialization 4ADE                    __end_of_main 4376                    __end_of_dtoa 2E00  
          __end_of_detect_color 1AEA                    __end_of_stop 45B6          color_data_collection@i 00DE  
        color_data_collection@j 00E0          color_data_collection@k 00E2          color_data_collection@m 005A  
        color_data_collection@x 00E4                          ??_main 00E6                          ??_dtoa 0026  
                        ??_stop 001E                   __activetblptr 000001                          ?_LED_B 0001  
                        ?_LED_C 0001                          ?_LED_G 0001                          ?_LED_R 0001  
        _initDCmotors_parameter 4050                    ?_setMotorPWM 000F                          ?_fputc 0001  
                        ?_fputs 000A                          _ADRESH 000F64                ___awdiv@dividend 0007  
                        ?_putch 0001                          _RC0PPS 000E62                          _RC4REG 000EE3  
                        _RE2PPS 000E74                          _RD5PPS 000E6F                          _RC7PPS 000E69  
                        _RD6PPS 000E70              turnLeft@angle_left 0024        __end_of_color_click_init 4C32  
                        _RX4PPS 000E15                          _TX4REG 000EE4                 ??_color_display 005A  
              __end_of___xxtofl 33AE                 ??_color_predict 0058                    vfprintf@cfmt 0056  
                        ___flge 3E6E                       ??___aodiv 0011                       ??___fladd 0009  
                     ??___aomod 0011                          ___wmul 4CB4                       ??___fldiv 0017  
                     ??___awdiv 000B                       ??___flneg 0005                       ??___flmul 0030  
                        _action 2E00                       ??___flsub 0019                       ??___fltol 0060  
                        _goback 4DB4                   compare@result 005F                          clear_0 4AFC  
                        clear_1 4B08                ___awdiv@quotient 000D                          _motorL 015A  
                        _motorR 0150                          isa$std 000001                          pad@buf 0013  
                        _roundf 23D4                          dtoa@fp 001C                          _strlen 4BC8  
                     ??_compare 005F                __end_of_pin_init 4DB4                          fputc@c 0001  
                        fputs@c 000E                          fputs@i 000F                          fputs@s 000A  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                ?_sendCharSerial4 0001                       ??_lroundf 005F  
                   read_color@m 000C                          putch@c 0001                __end_of_vfprintf 471C  
                        stop@mL 001A                          stop@mR 001C               ??_initDCmotorsPWM 0003  
                     ??_sprintf 0058                __end_of_turnLeft 3C3C                      ___flge@ff1 0001  
                    ___flge@ff2 0005                    ___xxtofl@arg 000B                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                calibrate_white@w 000C                 fullSpeedBack@mL 0020  
               fullSpeedBack@mR 0022                      __accesstop 0060         __end_of__initialization 4B0E  
      __end_of_color_read_Clear 481C                      ___flneg@f1 0001        __end_of_color_read_Green 48BC  
        ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD    initDCmotors_parameter@motorL 0001  
  initDCmotors_parameter@motorR 0003                   ___rparam_used 000001                      ___fltol@f1 005B  
                 __end_of_LED_B 4D7A                   __end_of_LED_C 4CFA                   __end_of_LED_G 4D5A  
                 __end_of_LED_R 4D3A                ?_color_read_Blue 0005                  __pcstackCOMRAM 0001  
                 _fullSpeedBack 443A                    __pidataBANK0 4E10            turnRight@angle_right 0024  
                 __end_of_fputc 41EC               detect_color@color 0090                   __end_of_fputs 4996  
                 __end_of_putch 4E14                   __end_of_toint 0E05                         ??_LED_B 0001  
                       ??_LED_C 0001                         ??_LED_G 0001                         ??_LED_R 0001  
                       ??_fputc 0005                         ??_fputs 000E                         ??_putch 0001  
                    __pbssBANK0 00E8                      __pbssBANK1 0100                color_predict@buf 0079  
             _color_writetoaddr 4CFA                    _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020  
                       ?___flge 0001              ?_color_writetoaddr 0003                         ?___wmul 0001  
                       ?_action 0032                         ?_goback 002E                         ?_roundf 0041  
           ??_color_writetoaddr 0004                         ?_strlen 0001                       ?___xxtofl 0001  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
                  _detect_color 0E54   __end_of_color_data_collection 36F8          color_writetoaddr@value 0003  
              ??_color_read_Red 0007       __end_of_color_writetoaddr 4D1A                       _ADREFbits 000F58  
            _I2C_2_Master_Start 4DFC                      _initUSART4 4D7A              _I2C_2_Master_Write 4DE6  
                     ?_pin_init 0001                         __Hparam 0000                         __Lparam 0000  
             color_read_Red@tmp 000A         sendStringSerial4@string 0002                         ___aodiv 36F8  
                       ___fladd 1AEA                         ___aomod 3880                         ___fldiv 2782  
                       ___awdiv 4376                         ___flneg 4B90                         ___flmul 1FAA  
                       ___flsub 490C                         ___fltol 3D66             ?_I2C_2_Master_Start 0001  
           ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050                    __psmallconst 0E00  
                       __pcinit 4ADE                         __ramtop 0E00                      _read_color 471C  
                     ?_turnLeft 0020                         __ptext0 42B2                         __ptext1 4D98  
                       __ptext2 4D7A                         __ptext3 4050                         __ptext4 4996  
                       __ptext5 0E54                         __ptext6 4B1C                         __ptext7 23D4  
                       __ptext8 490C                         __ptext9 1AEA                         _compare 4B56  
       ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD                      ??___xxtofl 0005  
                     _T2HLTbits 000FBE                         _lroundf 4B1C                   _RxBufWriteCnt 00F7  
                       _sprintf 477A                         main@rgb 0185            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization 4B0E              setMotorPWM@PWMduty 0018  
               _CALIBRATION_180 00F8                         fputc@fp 0003                         fputs@fp 000C  
             ?_color_click_init 0001                 ??_fullSpeedBack 0024                      ??_pin_init 0001  
            ??_color_click_init 0005               __end_of_vfpfcnvrt 3562           __end_of_short_reverse 4A5C  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                         roundf@e 004D  
                       roundf@u 0053                         roundf@x 0041                         roundf@y 0057  
                    ??_vfprintf 0056                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 4996                      ??_turnLeft 0025  __end_of_initDCmotors_parameter 4122  
                     _PORTFbits 000F8E               __end_of_turnRight 3B10                     ___fladd@grs 0010  
                 ___xxtofl@sign 0009                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
              fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C        color_writetoaddr@address 0004  
       ??_I2C_2_Master_RepStart 0002                     ___flmul@grs 0035               ?_color_read_Clear 0005  
                  _EUSART4RXbuf 013C                    _EUSART4TXbuf 0100               ?_color_read_Green 0005  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0001           __end_of_color_display 46BA  
                    main@motorL 019F                      main@motorR 01A9               ??_calibrate_white 000E  
            ??_color_read_Clear 0007                  color_display@m 0058              ??_color_read_Green 0007  
                detect_color@BB 0086                  detect_color@BC 0078                  detect_color@BG 008E  
                detect_color@GB 007E                  detect_color@GG 0082                  detect_color@BR 0088  
                detect_color@GR 0080                  detect_color@RB 007C                  detect_color@RG 007A  
                detect_color@RR 0084           __end_of_color_predict 4050                  __end_of___flge 3F72  
                _fullSpeedAhead 45B6                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                  __end_of___wmul 4CDA                  __end_of_action 3026  
                   ?_read_color 000C                  __end_of_goback 4DCE                  __end_of_roundf 2782  
            turnRight@delay_180 0026                  __end_of_strlen 4BFE             color_read_Clear@tmp 000A  
           start_initialization 4ADE                     __end_of_abs 4ADE                     __end_of_pad 42B2  
                 _TxBufWriteCnt 00F5               turnLeft@delay_180 0026             color_read_Green@tmp 000A  
                _reverse_square 4A5C         __end_of_initDCmotorsPWM 49D8                     vfprintf@fmt 0052  
        __end_of_fullSpeedAhead 464A                        ??___flge 0009                        ??___wmul 0005  
                      ??_action 0036                        ??_goback 0032                 short_reverse@mL 0026  
               short_reverse@mR 0028                     __pdataBANK0 00F8                        ??_roundf 0045  
                      ??_strlen 0003                       ___fladd@a 0005                       ___fladd@b 0001  
                     ___fldiv@a 0013                       ___fldiv@b 000F                       ___flmul@a 002C  
                     ___flmul@b 0028                       ___flsub@a 0015                       ___flsub@b 0011  
                 __pcstackBANK0 0060                   __pcstackBANK1 0185                ___aodiv@dividend 0001  
        __end_of_reverse_square 4A9E                       _dtoa$2382 002E                 ?_fullSpeedAhead 001A  
                      ?___aodiv 0001                        ?___fladd 0001                        ?___aomod 0001  
                      ?___fldiv 000F                        ?___awdiv 0007                ___aodiv@quotient 0013  
                      ?___flneg 0001                        ?___flmul 0028                        ?___flsub 0011  
                      ?___fltol 005B                 turnRight@i_1202 002A                  turnLeft@i_1179 002A  
          I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004                        ?_compare 006A  
                   __smallconst 0E00               _I2C_2_Master_Idle 4C8C               _I2C_2_Master_Init 4C62  
             _I2C_2_Master_Read 49D8               _I2C_2_Master_Stop 4DF2                    _RxBufReadCnt 00F6  
                      ?_lroundf 0066              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001  
      initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060               _sendStringSerial4 4C32  
         _color_data_collection 3562             ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001  
           ??_I2C_2_Master_Read 0002                  ___wmul@product 0005                        _LATAbits 000F79  
           ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F                 ?_reverse_square 0026  
            ?_sendStringSerial4 0002                        _PIE4bits 000E2D                     turnRight@mL 0020  
                   turnRight@mR 0022                        _PIR4bits 000E37                ?_initDCmotorsPWM 0001  
             ??_sendCharSerial4 0001                        _SSP2CON2 000EDA             ??_sendStringSerial4 0004  
                      _SSP2STAT 000ED8                       _vfpfcnvrt 33AE                      _ADCON0bits 000F60  
     __end_of_I2C_2_Master_Idle 4CB4       __end_of_I2C_2_Master_Init 4C8C       __end_of_I2C_2_Master_Read 4A1A  
             ___wmul@multiplier 0001       __end_of_I2C_2_Master_Stop 4DFC                    setMotorPWM@m 000F  
   I2C_2_Master_Write@data_byte 0002                       main@white 018D               ??_color_read_Blue 0007  
                 detect_color@m 0070                   detect_color@w 0072                    _TxBufReadCnt 00F4  
                     _turnRight 39E4                 _calibrate_white 3C3C       __end_of_sendStringSerial4 4C62  
 __end_of_I2C_2_Master_RepStart 4E10              color_read_Blue@tmp 000A             __end_of_setMotorPWM 31FA  
                    roundf@F527 00E8                    ??_initUSART4 0001                        __Hrparam 0000  
                    vfprintf@ap 0054                        __Lrparam 0000                      vfprintf@fp 0050  
         __end_of_fullSpeedBack 44FA                    __Lsmallconst 0E00            compare@value2compare 006C  
                    ?_vfpfcnvrt 0040                    ??_read_color 000E                 ___aodiv@divisor 0009  
               ___aodiv@counter 0011                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                   action@color 0036                      sprintf@fmt 0062                        ___xxtofl 31FA  
            __end_of_initUSART4 4D98                      ?_turnRight 0020                        __ptext10 4B90  
                      __ptext11 1FAA                        __ptext20 3F72                        __ptext12 3E6E  
                      __ptext21 464A                        __ptext13 3D66                        __ptext30 4E12  
                      __ptext22 477A                        __ptext14 4B56                        __ptext31 4A9E  
                      __ptext23 46BA                        __ptext15 31FA                        __ptext40 3C3C  
                      __ptext32 3880                        __ptext24 33AE                        __ptext16 2782  
                      __ptext41 481C                        __ptext33 36F8                        __ptext25 2B1C  
                      __ptext17 3562                        __ptext50 4D1A                        __ptext42 486C  
                      __ptext34 4C32                        __ptext26 41EC                        __ptext18 471C  
                      __ptext51 4D3A                        __ptext43 48BC                        __ptext35 4DCE  
                      __ptext27 4BC8                        __ptext19 47CC                        __ptext60 44FA  
                      __ptext52 4D5A                        __ptext44 4DE6                        __ptext36 4CDA  
                      __ptext28 4952                        __ptext61 45B6                        __ptext53 2E00  
                      __ptext45 4DF2                        __ptext37 4BFE                        __ptext29 4122  
                      __ptext62 3026                        __ptext54 39E4                        __ptext46 4DFC  
                      __ptext38 4CFA                        __ptext63 4CB4                        __ptext55 4A1A  
                      __ptext47 4E06                        __ptext39 4C62                        __ptext64 4376  
                      __ptext56 4A5C                        __ptext48 49D8                        __ptext57 443A  
                      __ptext49 4C8C                        __ptext58 4DB4                        __ptext59 3B10  
                  _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA          ?_color_data_collection 005A  
                turnRight@delay 002C                   turnLeft@delay 002C                        action@mL 0032  
                      action@mR 0034                      turnLeft@mL 0020                      turnLeft@mR 0022  
            __end_of_read_color 477A                        _pin_init 4D98                      turnRight@i 0028  
                      isa$xinst 000000                      _RC4STAbits 000EE7                     _SENSITIVITY 00F9  
                      goback@mL 002E                        goback@mR 0030                        _vfprintf 46BA  
                      _turnLeft 3B10                ___aomod@dividend 0001         __end_of_calibrate_white 3D66  
                   _setMotorPWM 3026                   ?_detect_color 0070                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                       sprintf@ap 006C                ??_fullSpeedAhead 001E  
                     turnLeft@i 0028                reverse_square@mL 0026                reverse_square@mR 0028  
                      lroundf@x 0066        ??_initDCmotors_parameter 0005                   _short_reverse 4A1A  
               ___aomod@divisor 0009                     ??_vfpfcnvrt 0046                 ___aomod@counter 0011  
              _color_click_init 4BFE                        sprintf@f 006E                        sprintf@s 0060  
             _detect_color$2740 0091                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
                ??_detect_color 0074                     ??_turnRight 0025                   ___fladd@signs 000D  
              ??_reverse_square 002A                      _TX4STAbits 000EE8                    ___aodiv@sign 0012  
               _sendCharSerial4 4DCE                    ___fladd@aexp 000E                    ___fladd@bexp 000F  
                  ___aomod@sign 0012                     _roundf$2741 004F                     _roundf$2742 0049  
                 _color_display 464A  
