

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Mar 16 21:24:10 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    93  0000                     
    94                           ; Version 2.35
    95                           ; Generated 05/05/2021 GMT
    96                           ; 
    97                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F67K40 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	idataBANK1
   131  006038                     __pidataBANK1:
   132                           	callstack 0
   133                           
   134                           ;initializer for _SENSITIVITY
   135  006038  0096               	dw	150
   136                           
   137                           	psect	smallconst
   138  000E00                     __psmallconst:
   139                           	callstack 0
   140  000E00  00                 	db	0
   141  000E01  0000               	dw	0
   142  000E03  4B00               	dw	19200
   143  000E05                     __end_of_toint:
   144                           	callstack 0
   145  0000                     _TX4REG	set	3812
   146  0000                     _RC4STAbits	set	3815
   147  0000                     _SP4BRGH	set	3814
   148  0000                     _LATEbits	set	3965
   149  0000                     _TRISEbits	set	3973
   150  0000                     _LATHbits	set	3968
   151  0000                     _SSP2CON2bits	set	3802
   152  0000                     _LATG	set	3967
   153  0000                     _LATE	set	3965
   154  0000                     _RX4PPS	set	3605
   155  0000                     _SSP2CLKPPS	set	3612
   156  0000                     _SSP2DATPPS	set	3613
   157  0000                     _ANSELDbits	set	3751
   158  0000                     _ANSELFbits	set	3764
   159  0000                     _TRISFbits	set	3974
   160  0000                     _PORTFbits	set	3982
   161  0000                     _T2PR	set	4028
   162  0000                     _T2CONbits	set	4029
   163  0000                     _TRISHbits	set	3976
   164  0000                     _TRISGbits	set	3975
   165  0000                     _PWM7DCH	set	4000
   166  0000                     _PWM6DCH	set	4003
   167  0000                     _SSP2BUF	set	3797
   168  0000                     _SSP2ADD	set	3798
   169  0000                     _SSP2CON1bits	set	3801
   170  0000                     _LATAbits	set	3961
   171  0000                     _LATFbits	set	3966
   172  0000                     _LATGbits	set	3967
   173  0000                     _TRISAbits	set	3969
   174  0000                     _TRISCbits	set	3971
   175  0000                     _TRISDbits	set	3972
   176  0000                     _LATCbits	set	3963
   177  0000                     _LATDbits	set	3964
   178  0000                     _RC4REG	set	3811
   179  0000                     _SP4BRGL	set	3813
   180  0000                     _TX4STAbits	set	3816
   181  0000                     _BAUD4CONbits	set	3817
   182  0000                     _SSP2CON2	set	3802
   183  0000                     _SSP2STAT	set	3800
   184  0000                     _PIE0bits	set	3625
   185  0000                     _PIR4bits	set	3639
   186  0000                     _RC0PPS	set	3682
   187  0000                     _RC7PPS	set	3689
   188  0000                     _RD5PPS	set	3695
   189  0000                     _RE2PPS	set	3700
   190  0000                     _RD6PPS	set	3696
   191  0000                     _TMR0L	set	4051
   192  0000                     _TMR0H	set	4052
   193  0000                     _T0CON0bits	set	4053
   194  0000                     _T2CLKCONbits	set	4031
   195  0000                     _T2HLTbits	set	4030
   196  0000                     _PWM6CONbits	set	4004
   197  0000                     _PWM7CONbits	set	4001
   198  0000                     _T0CON1bits	set	4054
   199  0000                     _INTCONbits	set	4082
   200  0000                     _PIR0bits	set	3635
   201  000E05                     STR_1:
   202                           
   203                           ; BSR set to: 14
   204  000E05  25                 	db	37
   205  000E06  64                 	db	100	;'d'
   206  000E07  09                 	db	9
   207  000E08  25                 	db	37
   208  000E09  64                 	db	100	;'d'
   209  000E0A  09                 	db	9
   210  000E0B  25                 	db	37
   211  000E0C  64                 	db	100	;'d'
   212  000E0D  09                 	db	9
   213  000E0E  25                 	db	37
   214  000E0F  64                 	db	100	;'d'
   215  000E10  0D                 	db	13
   216  000E11  0A                 	db	10
   217  000E12  00                 	db	0
   218  000E13  00                 	db	0	; dummy byte at the end
   219  0000                     
   220                           ; #config settings
   221                           
   222                           	psect	cinit
   223  005D44                     __pcinit:
   224                           	callstack 0
   225  005D44                     start_initialization:
   226                           	callstack 0
   227  005D44                     __initialization:
   228                           	callstack 0
   229                           
   230                           ; Initialize objects allocated to BANK1 (2 bytes)
   231                           ; load TBLPTR registers with __pidataBANK1
   232  005D44  0E38               	movlw	low __pidataBANK1
   233  005D46  6EF6               	movwf	tblptrl,c
   234  005D48  0E60               	movlw	high __pidataBANK1
   235  005D4A  6EF7               	movwf	tblptrh,c
   236  005D4C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   237  005D4E  6EF8               	movwf	tblptru,c
   238  005D50  0009               	tblrd		*+	;fetch initializer
   239  005D52  CFF5 F1C2          	movff	tablat,__pdataBANK1
   240  005D56  0009               	tblrd		*+	;fetch initializer
   241  005D58  CFF5 F1C3          	movff	tablat,__pdataBANK1+1
   242                           
   243                           ; Clear objects allocated to BANK1 (106 bytes)
   244  005D5C  EE01  F000         	lfsr	0,__pbssBANK1
   245  005D60  0E6A               	movlw	106
   246  005D62                     clear_0:
   247  005D62  6AEE               	clrf	postinc0,c
   248  005D64  06E8               	decf	wreg,f,c
   249  005D66  E1FD               	bnz	clear_0
   250  005D68                     end_of_initialization:
   251                           	callstack 0
   252  005D68                     __end_of__initialization:
   253                           	callstack 0
   254  005D68  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   255  005D6A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   256  005D6C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   257  005D6E  6EF8               	movwf	tblptru,c
   258  005D70  0E0E               	movlw	high __Lsmallconst
   259  005D72  6EF7               	movwf	tblptrh,c
   260  005D74  0100               	movlb	0
   261  005D76  EF90  F01C         	goto	_main	;jump to C main() function
   262                           
   263                           	psect	bssBANK1
   264  000100                     __pbssBANK1:
   265                           	callstack 0
   266  000100                     _memory:
   267                           	callstack 0
   268  000100                     	ds	40
   269  000128                     _motorR:
   270                           	callstack 0
   271  000128                     	ds	9
   272  000131                     _motorL:
   273                           	callstack 0
   274  000131                     	ds	9
   275  00013A                     roundf@F527:
   276                           	callstack 0
   277  00013A                     	ds	4
   278  00013E                     _nout:
   279                           	callstack 0
   280  00013E                     	ds	2
   281  000140                     _width:
   282                           	callstack 0
   283  000140                     	ds	2
   284  000142                     _prec:
   285                           	callstack 0
   286  000142                     	ds	2
   287  000144                     _flags:
   288                           	callstack 0
   289  000144                     	ds	2
   290  000146                     _centisecond:
   291                           	callstack 0
   292  000146                     	ds	2
   293  000148                     _color:
   294                           	callstack 0
   295  000148                     	ds	1
   296  000149                     _array_index:
   297                           	callstack 0
   298  000149                     	ds	1
   299  00014A                     _dbuf:
   300                           	callstack 0
   301  00014A                     	ds	32
   302                           
   303                           	psect	dataBANK1
   304  0001C2                     __pdataBANK1:
   305                           	callstack 0
   306  0001C2                     _SENSITIVITY:
   307                           	callstack 0
   308  0001C2                     	ds	2
   309                           
   310                           	psect	cstackBANK1
   311  00016A                     __pcstackBANK1:
   312                           	callstack 0
   313  00016A                     verify_color@m:
   314                           	callstack 0
   315  00016A                     test_function@m:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x0
   319  00016A                     	ds	2
   320  00016C                     verify_color@w:
   321                           	callstack 0
   322  00016C                     test_function@w:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x2
   326  00016C                     	ds	2
   327  00016E                     verify_color@color2:
   328                           	callstack 0
   329  00016E                     test_function@mL:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x4
   333  00016E                     	ds	2
   334  000170                     verify_color@color:
   335                           	callstack 0
   336  000170                     test_function@mR:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x6
   340  000170                     	ds	2
   341  000172                     test_function@amb_light:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x8
   345  000172                     	ds	2
   346  000174                     test_function@complete:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0xA
   350  000174                     	ds	1
   351  000175                     test_function@color:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0xB
   355  000175                     	ds	1
   356  000176                     test_function@stop_signal:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0xC
   360  000176                     	ds	1
   361  000177                     test_function@test_code:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0xD
   365  000177                     	ds	1
   366  000178                     ??_main:
   367                           
   368                           ; 1 bytes @ 0xE
   369  000178                     	ds	4
   370  00017C                     main@amb:
   371                           	callstack 0
   372                           
   373                           ; 8 bytes @ 0x12
   374  00017C                     	ds	8
   375  000184                     main@amb_light:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x1A
   379  000184                     	ds	2
   380  000186                     main@stop_signal:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x1C
   384  000186                     	ds	1
   385  000187                     main@start_time:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x1D
   389  000187                     	ds	2
   390  000189                     main@stop_time:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x1F
   394  000189                     	ds	2
   395  00018B                     main@accident:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x21
   399  00018B                     	ds	1
   400  00018C                     main@rgb:
   401                           	callstack 0
   402                           
   403                           ; 8 bytes @ 0x22
   404  00018C                     	ds	8
   405  000194                     main@white:
   406                           	callstack 0
   407                           
   408                           ; 28 bytes @ 0x2A
   409  000194                     	ds	28
   410  0001B0                     main@motorL:
   411                           	callstack 0
   412                           
   413                           ; 9 bytes @ 0x46
   414  0001B0                     	ds	9
   415  0001B9                     main@motorR:
   416                           	callstack 0
   417                           
   418                           ; 9 bytes @ 0x4F
   419  0001B9                     	ds	9
   420                           
   421                           	psect	cstackBANK0
   422  000060                     __pcstackBANK0:
   423                           	callstack 0
   424  000060                     ??___fltol:
   425  000060                     ?_sprintf:
   426                           	callstack 0
   427  000060                     sprintf@s:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x0
   431  000060                     	ds	2
   432  000062                     sprintf@fmt:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x2
   436  000062                     	ds	2
   437  000064                     ___fltol@sign1:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x4
   441  000064                     	ds	1
   442  000065                     ___fltol@exp1:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x5
   446  000065                     	ds	1
   447  000066                     ?_lroundf:
   448                           	callstack 0
   449  000066                     lroundf@x:
   450                           	callstack 0
   451                           
   452                           ; 4 bytes @ 0x6
   453  000066                     	ds	4
   454  00006A                     ?_amb_light_measure:
   455                           	callstack 0
   456  00006A                     compare@lower:
   457                           	callstack 0
   458  00006A                     amb_light_measure@amb:
   459                           	callstack 0
   460  00006A                     detect_wall@mL:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0xA
   464  00006A                     	ds	2
   465  00006C                     ??_amb_light_measure:
   466  00006C                     compare@value2compare:
   467                           	callstack 0
   468  00006C                     detect_wall@mR:
   469                           	callstack 0
   470  00006C                     sprintf@ap:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xC
   474  00006C                     	ds	2
   475  00006E                     compare@upper:
   476                           	callstack 0
   477  00006E                     amb_light_measure@upper_bound:
   478                           	callstack 0
   479  00006E                     detect_wall@amb_light:
   480                           	callstack 0
   481  00006E                     sprintf@f:
   482                           	callstack 0
   483                           
   484                           ; 11 bytes @ 0xE
   485  00006E                     	ds	2
   486  000070                     ??_detect_wall:
   487  000070                     compare@result:
   488                           	callstack 0
   489  000070                     amb_light_measure@CC_amb_ave:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x10
   493  000070                     	ds	2
   494  000072                     amb_light_measure@CC_amb_1:
   495                           	callstack 0
   496  000072                     detect_wall@CG_amb:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x12
   500  000072                     	ds	2
   501  000074                     amb_light_measure@CC_amb_2:
   502                           	callstack 0
   503  000074                     _detect_wall$2949:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x14
   507  000074                     	ds	2
   508  000076                     amb_light_measure@CC_amb_3:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x16
   512  000076                     	ds	2
   513  000078                     ?_setup:
   514                           	callstack 0
   515  000078                     detect_wall@CC_amb:
   516                           	callstack 0
   517  000078                     setup@white:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x18
   521  000078                     	ds	1
   522  000079                     detect_color@m:
   523                           	callstack 0
   524  000079                     color_display@buf:
   525                           	callstack 0
   526  000079                     color_predict@buf:
   527                           	callstack 0
   528                           
   529                           ; 100 bytes @ 0x19
   530  000079                     	ds	1
   531  00007A                     detect_wall@threshold:
   532                           	callstack 0
   533  00007A                     setup@amb:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x1A
   537  00007A                     	ds	1
   538  00007B                     detect_color@w:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x1B
   542  00007B                     	ds	1
   543  00007C                     detect_wall@stop:
   544                           	callstack 0
   545  00007C                     setup@mL:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x1C
   549  00007C                     	ds	1
   550  00007D                     ??_detect_color:
   551                           
   552                           ; 1 bytes @ 0x1D
   553  00007D                     	ds	1
   554  00007E                     setup@mR:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x1E
   558  00007E                     	ds	2
   559  000080                     ??_setup:
   560                           
   561                           ; 1 bytes @ 0x20
   562  000080                     	ds	1
   563  000081                     detect_color@buf:
   564                           	callstack 0
   565                           
   566                           ; 100 bytes @ 0x21
   567  000081                     	ds	1
   568  000082                     setup@amb_light:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x22
   572  000082                     	ds	91
   573  0000DD                     color_predict@color:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x7D
   577  0000DD                     	ds	1
   578  0000DE                     color_data_collection@i:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x7E
   582  0000DE                     	ds	2
   583  0000E0                     color_data_collection@j:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x80
   587  0000E0                     	ds	2
   588  0000E2                     color_data_collection@k:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x82
   592  0000E2                     	ds	2
   593  0000E4                     color_data_collection@x:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x84
   597  0000E4                     	ds	1
   598  0000E5                     detect_color@BC:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x85
   602  0000E5                     	ds	2
   603  0000E7                     detect_color@RG:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x87
   607  0000E7                     	ds	2
   608  0000E9                     detect_color@BR:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x89
   612  0000E9                     	ds	2
   613  0000EB                     detect_color@GR:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x8B
   617  0000EB                     	ds	2
   618  0000ED                     detect_color@RB:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x8D
   622  0000ED                     	ds	2
   623  0000EF                     detect_color@BB:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x8F
   627  0000EF                     	ds	2
   628  0000F1                     detect_color@GB:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x91
   632  0000F1                     	ds	2
   633  0000F3                     detect_color@GG:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x93
   637  0000F3                     	ds	2
   638  0000F5                     detect_color@color:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x95
   642  0000F5                     	ds	1
   643  0000F6                     detect_color@BG:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x96
   647  0000F6                     	ds	2
   648  0000F8                     detect_color@RR:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x98
   652  0000F8                     	ds	2
   653  0000FA                     _detect_color$2948:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x9A
   657  0000FA                     	ds	4
   658  0000FE                     ??_test_function:
   659  0000FE                     ??_verify_color:
   660                           
   661                           ; 1 bytes @ 0x9E
   662  0000FE                     	ds	2
   663                           
   664                           	psect	cstackCOMRAM
   665  000001                     __pcstackCOMRAM:
   666                           	callstack 0
   667  000001                     ??_LED_OFF:
   668  000001                     ??_LED_R:
   669  000001                     ??_LED_C:
   670  000001                     ??_LED_B:
   671  000001                     ??_LED_G:
   672  000001                     ??_I2C_2_Master_Idle:
   673  000001                     ?_strlen:
   674                           	callstack 0
   675  000001                     ?___wmul:
   676                           	callstack 0
   677  000001                     ?___fladd:
   678                           	callstack 0
   679  000001                     ?___flneg:
   680                           	callstack 0
   681  000001                     ?___xxtofl:
   682                           	callstack 0
   683  000001                     ?___aodiv:
   684                           	callstack 0
   685  000001                     ?___aomod:
   686                           	callstack 0
   687  000001                     toggle_light@toggletime:
   688                           	callstack 0
   689  000001                     sendCharSerial4@charToSend:
   690                           	callstack 0
   691  000001                     initDCmotorsPWM@PWMperiod:
   692                           	callstack 0
   693  000001                     initDCmotors_parameter@motorL:
   694                           	callstack 0
   695  000001                     ___wmul@multiplier:
   696                           	callstack 0
   697  000001                     fputc@c:
   698                           	callstack 0
   699  000001                     strlen@s:
   700                           	callstack 0
   701  000001                     ___flge@ff1:
   702                           	callstack 0
   703  000001                     ___flneg@f1:
   704                           	callstack 0
   705  000001                     ___fladd@b:
   706                           	callstack 0
   707  000001                     ___xxtofl@val:
   708                           	callstack 0
   709  000001                     ___aodiv@dividend:
   710                           	callstack 0
   711  000001                     ___aomod@dividend:
   712                           	callstack 0
   713                           
   714                           ; 8 bytes @ 0x0
   715  000001                     	ds	1
   716  000002                     ??_I2C_2_Master_Read:
   717  000002                     ??_toggle_light:
   718  000002                     I2C_2_Master_Write@data_byte:
   719                           	callstack 0
   720  000002                     sendStringSerial4@string:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x1
   724  000002                     	ds	1
   725  000003                     color_writetoaddr@value:
   726                           	callstack 0
   727  000003                     I2C_2_Master_Read@ack:
   728                           	callstack 0
   729  000003                     initDCmotors_parameter@motorR:
   730                           	callstack 0
   731  000003                     ___wmul@multiplicand:
   732                           	callstack 0
   733  000003                     fputc@fp:
   734                           	callstack 0
   735  000003                     strlen@a:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x2
   739  000003                     	ds	1
   740  000004                     toggle_light@i:
   741                           	callstack 0
   742  000004                     color_writetoaddr@address:
   743                           	callstack 0
   744  000004                     I2C_2_Master_Read@tmp:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0x3
   748  000004                     	ds	1
   749  000005                     ??_fputc:
   750  000005                     ??_color_click_init:
   751  000005                     ??___xxtofl:
   752  000005                     ?_color_read_Red:
   753                           	callstack 0
   754  000005                     ?_color_read_Blue:
   755                           	callstack 0
   756  000005                     ?_color_read_Green:
   757                           	callstack 0
   758  000005                     ?_color_read_Clear:
   759                           	callstack 0
   760  000005                     toggle_light@lightnumber:
   761                           	callstack 0
   762  000005                     ___wmul@product:
   763                           	callstack 0
   764  000005                     ___flge@ff2:
   765                           	callstack 0
   766  000005                     ___fladd@a:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x4
   770  000005                     	ds	2
   771  000007                     ??_color_read_Red:
   772  000007                     ??_color_read_Blue:
   773  000007                     ??_color_read_Green:
   774  000007                     ??_color_read_Clear:
   775  000007                     ?___awdiv:
   776                           	callstack 0
   777  000007                     ___awdiv@dividend:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x6
   781  000007                     	ds	2
   782  000009                     ??___fladd:
   783  000009                     ??___flge:
   784  000009                     ___xxtofl@sign:
   785                           	callstack 0
   786  000009                     ___awdiv@divisor:
   787                           	callstack 0
   788  000009                     ___aodiv@divisor:
   789                           	callstack 0
   790  000009                     ___aomod@divisor:
   791                           	callstack 0
   792                           
   793                           ; 8 bytes @ 0x8
   794  000009                     	ds	1
   795  00000A                     ___xxtofl@exp:
   796                           	callstack 0
   797  00000A                     color_read_Red@tmp:
   798                           	callstack 0
   799  00000A                     color_read_Blue@tmp:
   800                           	callstack 0
   801  00000A                     color_read_Green@tmp:
   802                           	callstack 0
   803  00000A                     color_read_Clear@tmp:
   804                           	callstack 0
   805  00000A                     fputs@s:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x9
   809  00000A                     	ds	1
   810  00000B                     ___awdiv@counter:
   811                           	callstack 0
   812  00000B                     ___xxtofl@arg:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0xA
   816  00000B                     	ds	1
   817  00000C                     ___awdiv@sign:
   818                           	callstack 0
   819  00000C                     read_color@m:
   820                           	callstack 0
   821  00000C                     calibrate_white@w:
   822                           	callstack 0
   823  00000C                     fputs@fp:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0xB
   827  00000C                     	ds	1
   828  00000D                     ___fladd@signs:
   829                           	callstack 0
   830  00000D                     ___awdiv@quotient:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0xC
   834  00000D                     	ds	1
   835  00000E                     ??_calibrate_white:
   836  00000E                     ___fladd@aexp:
   837                           	callstack 0
   838  00000E                     fputs@c:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0xD
   842  00000E                     	ds	1
   843  00000F                     ?___fldiv:
   844                           	callstack 0
   845  00000F                     ___fladd@bexp:
   846                           	callstack 0
   847  00000F                     setMotorPWM@m:
   848                           	callstack 0
   849  00000F                     fputs@i:
   850                           	callstack 0
   851  00000F                     ___fldiv@b:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0xE
   855  00000F                     	ds	1
   856  000010                     ___fladd@grs:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0xF
   860  000010                     	ds	1
   861  000011                     ??_setMotorPWM:
   862  000011                     ?_pad:
   863                           	callstack 0
   864  000011                     ?___flsub:
   865                           	callstack 0
   866  000011                     ___aodiv@counter:
   867                           	callstack 0
   868  000011                     ___aomod@counter:
   869                           	callstack 0
   870  000011                     pad@fp:
   871                           	callstack 0
   872  000011                     ___flsub@b:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0x10
   876  000011                     	ds	1
   877  000012                     ___aodiv@sign:
   878                           	callstack 0
   879  000012                     ___aomod@sign:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x11
   883  000012                     	ds	1
   884  000013                     ?_abs:
   885                           	callstack 0
   886  000013                     pad@buf:
   887                           	callstack 0
   888  000013                     abs@a:
   889                           	callstack 0
   890  000013                     ___fldiv@a:
   891                           	callstack 0
   892  000013                     ___aodiv@quotient:
   893                           	callstack 0
   894                           
   895                           ; 8 bytes @ 0x12
   896  000013                     	ds	2
   897  000015                     ??_abs:
   898  000015                     pad@p:
   899                           	callstack 0
   900  000015                     ___flsub@a:
   901                           	callstack 0
   902                           
   903                           ; 4 bytes @ 0x14
   904  000015                     	ds	2
   905  000017                     ??___fldiv:
   906  000017                     ??_pad:
   907                           
   908                           ; 1 bytes @ 0x16
   909  000017                     	ds	1
   910  000018                     setMotorPWM@PWMduty:
   911                           	callstack 0
   912  000018                     pad@i:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x17
   916  000018                     	ds	1
   917  000019                     
   918                           ; 1 bytes @ 0x18
   919  000019                     	ds	1
   920  00001A                     stop@mL:
   921                           	callstack 0
   922  00001A                     fullSpeedAhead@mL:
   923                           	callstack 0
   924  00001A                     pad@w:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x19
   928  00001A                     	ds	1
   929  00001B                     ___fldiv@rem:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x1A
   933  00001B                     	ds	1
   934  00001C                     ?_dtoa:
   935                           	callstack 0
   936  00001C                     stop@mR:
   937                           	callstack 0
   938  00001C                     fullSpeedAhead@mR:
   939                           	callstack 0
   940  00001C                     dtoa@fp:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x1B
   944  00001C                     	ds	2
   945  00001E                     ??_stop:
   946  00001E                     ??_fullSpeedAhead:
   947  00001E                     dtoa@d:
   948                           	callstack 0
   949                           
   950                           ; 8 bytes @ 0x1D
   951  00001E                     	ds	1
   952  00001F                     ___fldiv@sign:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x1E
   956  00001F                     	ds	1
   957  000020                     turn45@mL:
   958                           	callstack 0
   959  000020                     fullSpeedBack@mL:
   960                           	callstack 0
   961  000020                     short_burst@mL:
   962                           	callstack 0
   963  000020                     ___fldiv@new_exp:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x1F
   967  000020                     	ds	2
   968  000022                     turn45@mR:
   969                           	callstack 0
   970  000022                     fullSpeedBack@mR:
   971                           	callstack 0
   972  000022                     short_burst@mR:
   973                           	callstack 0
   974  000022                     ___fldiv@grs:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x21
   978  000022                     	ds	2
   979  000024                     ??_short_burst:
   980  000024                     turn45@turn_time:
   981                           	callstack 0
   982  000024                     fullSpeedBack@instruction:
   983                           	callstack 0
   984                           
   985                           ; 1 bytes @ 0x23
   986  000024                     	ds	1
   987  000025                     ??_fullSpeedBack:
   988  000025                     turn45@direction:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x24
   992  000025                     	ds	1
   993  000026                     ??_turn45:
   994  000026                     ??_dtoa:
   995  000026                     ___fldiv@bexp:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x25
   999  000026                     	ds	1
  1000  000027                     ___fldiv@aexp:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x26
  1004  000027                     	ds	1
  1005  000028                     ?___flmul:
  1006                           	callstack 0
  1007  000028                     turn45@i_1335:
  1008                           	callstack 0
  1009  000028                     ___flmul@b:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x27
  1013  000028                     	ds	2
  1014  00002A                     turn45@i_1337:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x29
  1018  00002A                     	ds	2
  1019  00002C                     turn45@i:
  1020                           	callstack 0
  1021  00002C                     ___flmul@a:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x2B
  1025  00002C                     	ds	1
  1026  00002D                     goback@mL:
  1027                           	callstack 0
  1028  00002D                     test_action@mL:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x2C
  1032  00002D                     	ds	1
  1033  00002E                     _dtoa$2620:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x2D
  1037  00002E                     	ds	1
  1038  00002F                     goback@mR:
  1039                           	callstack 0
  1040  00002F                     test_action@mR:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x2E
  1044  00002F                     	ds	1
  1045  000030                     ??___flmul:
  1046  000030                     dtoa@p:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x2F
  1050  000030                     	ds	1
  1051  000031                     ??_goback:
  1052  000031                     ??_test_action:
  1053                           
  1054                           ; 1 bytes @ 0x30
  1055  000031                     	ds	1
  1056  000032                     dtoa@w:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x31
  1060  000032                     	ds	1
  1061  000033                     goback@i:
  1062                           	callstack 0
  1063  000033                     calibration_motor@mL:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x32
  1067  000033                     	ds	1
  1068  000034                     ___flmul@sign:
  1069                           	callstack 0
  1070  000034                     dtoa@s:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x33
  1074  000034                     	ds	1
  1075  000035                     turning_action@mL:
  1076                           	callstack 0
  1077  000035                     calibration_motor@mR:
  1078                           	callstack 0
  1079  000035                     ___flmul@grs:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x34
  1083  000035                     	ds	1
  1084  000036                     dtoa@n:
  1085                           	callstack 0
  1086                           
  1087                           ; 8 bytes @ 0x35
  1088  000036                     	ds	1
  1089  000037                     ??_calibration_motor:
  1090  000037                     turning_action@mR:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x36
  1094  000037                     	ds	2
  1095  000039                     turning_action@color:
  1096                           	callstack 0
  1097  000039                     ___flmul@aexp:
  1098                           	callstack 0
  1099                           
  1100                           ; 1 bytes @ 0x38
  1101  000039                     	ds	1
  1102  00003A                     ___flmul@bexp:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x39
  1106  00003A                     	ds	1
  1107  00003B                     ___flmul@prod:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x3A
  1111  00003B                     	ds	3
  1112  00003E                     dtoa@i:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x3D
  1116  00003E                     	ds	1
  1117  00003F                     ___flmul@temp:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x3E
  1121  00003F                     	ds	1
  1122  000040                     ?_vfpfcnvrt:
  1123                           	callstack 0
  1124  000040                     vfpfcnvrt@fp:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x3F
  1128  000040                     	ds	1
  1129  000041                     ?_roundf:
  1130                           	callstack 0
  1131  000041                     roundf@x:
  1132                           	callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x40
  1135  000041                     	ds	1
  1136  000042                     vfpfcnvrt@fmt:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x41
  1140  000042                     	ds	2
  1141  000044                     vfpfcnvrt@ap:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x43
  1145  000044                     	ds	1
  1146  000045                     ??_roundf:
  1147                           
  1148                           ; 1 bytes @ 0x44
  1149  000045                     	ds	1
  1150  000046                     ??_vfpfcnvrt:
  1151                           
  1152                           ; 1 bytes @ 0x45
  1153  000046                     	ds	2
  1154  000048                     vfpfcnvrt@ll:
  1155                           	callstack 0
  1156                           
  1157                           ; 8 bytes @ 0x47
  1158  000048                     	ds	1
  1159  000049                     _roundf$2951:
  1160                           	callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x48
  1163  000049                     	ds	4
  1164  00004D                     roundf@e:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x4C
  1168  00004D                     	ds	2
  1169  00004F                     _roundf$2950:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x4E
  1173  00004F                     	ds	1
  1174  000050                     ?_vfprintf:
  1175                           	callstack 0
  1176  000050                     vfprintf@fp:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x4F
  1180  000050                     	ds	2
  1181  000052                     vfprintf@fmt:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x51
  1185  000052                     	ds	1
  1186  000053                     roundf@u:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x52
  1190  000053                     	ds	1
  1191  000054                     vfprintf@ap:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x53
  1195  000054                     	ds	2
  1196  000056                     vfprintf@cfmt:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x55
  1200  000056                     	ds	1
  1201  000057                     roundf@y:
  1202                           	callstack 0
  1203                           
  1204                           ; 4 bytes @ 0x56
  1205  000057                     	ds	1
  1206  000058                     color_display@m:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x57
  1210  000058                     	ds	2
  1211  00005A                     color_data_collection@m:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x59
  1215  00005A                     	ds	1
  1216  00005B                     ?___fltol:
  1217                           	callstack 0
  1218  00005B                     ___fltol@f1:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x5A
  1222  00005B                     	ds	1
  1223  00005C                     ??_color_data_collection:
  1224                           
  1225                           ; 1 bytes @ 0x5B
  1226  00005C                     	ds	3
  1227  00005F                     
  1228                           ; 1 bytes @ 0x5E
  1229 ;;
  1230 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1231 ;;
  1232 ;; *************** function _main *****************
  1233 ;; Defined at:
  1234 ;;		line 27 in file "main.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  white          28   42[BANK1 ] struct white_card
  1239 ;;  motorR          9   79[BANK1 ] struct DC_motor
  1240 ;;  motorL          9   70[BANK1 ] struct DC_motor
  1241 ;;  rgb             8   34[BANK1 ] struct color_rgb
  1242 ;;  amb             8   18[BANK1 ] struct color_rgb
  1243 ;;  stop_time       2   31[BANK1 ] unsigned int 
  1244 ;;  start_time      2   29[BANK1 ] unsigned int 
  1245 ;;  amb_light       2   26[BANK1 ] unsigned int 
  1246 ;;  accident        1   33[BANK1 ] unsigned char 
  1247 ;;  stop_signal     1   28[BANK1 ] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1258 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1259 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1260 ;;      Totals:         0       0      74       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1261 ;;Total ram usage:       74 bytes
  1262 ;; Hardware stack levels required when called: 12
  1263 ;; This function calls:
  1264 ;;		_Interrupts_init
  1265 ;;		_Timer0_init
  1266 ;;		_color_click_init
  1267 ;;		_color_predict
  1268 ;;		_detect_color
  1269 ;;		_detect_wall
  1270 ;;		_fullSpeedAhead
  1271 ;;		_goback
  1272 ;;		_initDCmotorsPWM
  1273 ;;		_initDCmotors_parameter
  1274 ;;		_initUSART4
  1275 ;;		_pin_init
  1276 ;;		_setup
  1277 ;;		_short_burst
  1278 ;;		_stop
  1279 ;;		_test_function
  1280 ;;		_turning_action
  1281 ;;		_verify_color
  1282 ;; This function is called by:
  1283 ;;		Startup code after reset
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text0
  1288  003920                     __ptext0:
  1289                           	callstack 0
  1290  003920                     _main:
  1291                           	callstack 19
  1292  003920                     
  1293                           ;main.c: 29:     struct color_rgb rgb, amb;;main.c: 30:     struct white_card white;;mai
      +                          n.c: 31:     struct DC_motor motorL, motorR;;main.c: 35:     color_click_init();
  1294  003920  ECF2  F02E         	call	_color_click_init	;wreg free
  1295  003924                     
  1296                           ;main.c: 36:     pin_init();
  1297  003924  ECD8  F02E         	call	_pin_init	;wreg free
  1298  003928                     
  1299                           ;main.c: 37:     initDCmotorsPWM(199);
  1300  003928  0E00               	movlw	0
  1301  00392A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1302  00392C  0EC7               	movlw	199
  1303  00392E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1304  003930  EC0B  F02E         	call	_initDCmotorsPWM	;wreg free
  1305  003934                     
  1306                           ;main.c: 38:     initDCmotors_parameter(&motorL, &motorR);
  1307  003934  0EB0               	movlw	low main@motorL
  1308  003936  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1309  003938  0E01               	movlw	high main@motorL
  1310  00393A  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1311  00393C  0EB9               	movlw	low main@motorR
  1312  00393E  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1313  003940  0E01               	movlw	high main@motorR
  1314  003942  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1315  003944  EC27  F029         	call	_initDCmotors_parameter	;wreg free
  1316  003948                     
  1317                           ;main.c: 39:     initUSART4();
  1318  003948  ECD7  F02F         	call	_initUSART4	;wreg free
  1319  00394C                     
  1320                           ;main.c: 40:     Timer0_init();
  1321  00394C  ECE6  F02F         	call	_Timer0_init	;wreg free
  1322  003950                     
  1323                           ;main.c: 41:     Interrupts_init();
  1324  003950  EC07  F030         	call	_Interrupts_init	;wreg free
  1325  003954                     
  1326                           ;main.c: 43:     unsigned char stop_signal = 0;
  1327  003954  0E00               	movlw	0
  1328  003956  0101               	movlb	1	; () banked
  1329  003958  6F86               	movwf	main@stop_signal& (0+255),b
  1330  00395A                     
  1331                           ; BSR set to: 1
  1332                           ;main.c: 45:     unsigned char accident = 0;
  1333  00395A  0E00               	movlw	0
  1334  00395C  6F8B               	movwf	main@accident& (0+255),b
  1335  00395E                     
  1336                           ; BSR set to: 1
  1337                           ;main.c: 50:         amb_light = setup(&white, &amb, &motorL, &motorR);
  1338  00395E  0E94               	movlw	low main@white
  1339  003960  0100               	movlb	0	; () banked
  1340  003962  6F78               	movwf	setup@white& (0+255),b
  1341  003964  0E01               	movlw	high main@white
  1342  003966  6F79               	movwf	(setup@white+1)& (0+255),b
  1343  003968  0E7C               	movlw	low main@amb
  1344  00396A  6F7A               	movwf	setup@amb& (0+255),b
  1345  00396C  0E01               	movlw	high main@amb
  1346  00396E  6F7B               	movwf	(setup@amb+1)& (0+255),b
  1347  003970  0EB0               	movlw	low main@motorL
  1348  003972  6F7C               	movwf	setup@mL& (0+255),b
  1349  003974  0E01               	movlw	high main@motorL
  1350  003976  6F7D               	movwf	(setup@mL+1)& (0+255),b
  1351  003978  0EB9               	movlw	low main@motorR
  1352  00397A  6F7E               	movwf	setup@mR& (0+255),b
  1353  00397C  0E01               	movlw	high main@motorR
  1354  00397E  6F7F               	movwf	(setup@mR+1)& (0+255),b
  1355  003980  EC29  F025         	call	_setup	;wreg free
  1356  003984  C078  F184         	movff	?_setup,main@amb_light
  1357  003988  C079  F185         	movff	?_setup+1,main@amb_light+1
  1358  00398C                     l5404:
  1359                           
  1360                           ;main.c: 56:             T0CON0bits.T0EN=1;
  1361  00398C  8ED5               	bsf	213,7,c	;volatile
  1362  00398E                     
  1363                           ;main.c: 57:             start_time = centisecond;
  1364  00398E  C146  F187         	movff	_centisecond,main@start_time
  1365  003992  C147  F188         	movff	_centisecond+1,main@start_time+1
  1366                           
  1367                           ;main.c: 58:             while (stop_signal == 0){
  1368  003996  EFE8  F01C         	goto	l5412
  1369  00399A                     l5408:
  1370                           
  1371                           ; BSR set to: 1
  1372                           ;main.c: 59:                 fullSpeedAhead(&motorL, &motorR);
  1373  00399A  0EB0               	movlw	low main@motorL
  1374  00399C  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1375  00399E  0E01               	movlw	high main@motorL
  1376  0039A0  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1377  0039A2  0EB9               	movlw	low main@motorR
  1378  0039A4  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1379  0039A6  0E01               	movlw	high main@motorR
  1380  0039A8  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1381  0039AA  ECBB  F02A         	call	_fullSpeedAhead	;wreg free
  1382  0039AE                     
  1383                           ;main.c: 60:                 stop_signal = detect_wall(&motorL, &motorR, amb_light);
  1384  0039AE  0EB0               	movlw	low main@motorL
  1385  0039B0  0100               	movlb	0	; () banked
  1386  0039B2  6F6A               	movwf	detect_wall@mL& (0+255),b
  1387  0039B4  0E01               	movlw	high main@motorL
  1388  0039B6  6F6B               	movwf	(detect_wall@mL+1)& (0+255),b
  1389  0039B8  0EB9               	movlw	low main@motorR
  1390  0039BA  6F6C               	movwf	detect_wall@mR& (0+255),b
  1391  0039BC  0E01               	movlw	high main@motorR
  1392  0039BE  6F6D               	movwf	(detect_wall@mR+1)& (0+255),b
  1393  0039C0  C184  F06E         	movff	main@amb_light,detect_wall@amb_light
  1394  0039C4  C185  F06F         	movff	main@amb_light+1,detect_wall@amb_light+1
  1395  0039C8  ECF5  F029         	call	_detect_wall	;wreg free
  1396  0039CC  0101               	movlb	1	; () banked
  1397  0039CE  6F86               	movwf	main@stop_signal& (0+255),b
  1398  0039D0                     l5412:
  1399                           
  1400                           ;main.c: 58:             while (stop_signal == 0){
  1401  0039D0  0101               	movlb	1	; () banked
  1402  0039D2  5186               	movf	main@stop_signal& (0+255),w,b
  1403  0039D4  B4D8               	btfsc	status,2,c
  1404  0039D6  EFEF  F01C         	goto	u5851
  1405  0039DA  EFF1  F01C         	goto	u5850
  1406  0039DE                     u5851:
  1407  0039DE  EFCD  F01C         	goto	l5408
  1408  0039E2                     u5850:
  1409  0039E2                     
  1410                           ; BSR set to: 1
  1411                           ;main.c: 62:             T0CON0bits.T0EN=0;
  1412  0039E2  9ED5               	bcf	213,7,c	;volatile
  1413                           
  1414                           ;main.c: 63:             stop_time = centisecond;
  1415  0039E4  C146  F189         	movff	_centisecond,main@stop_time
  1416  0039E8  C147  F18A         	movff	_centisecond+1,main@stop_time+1
  1417  0039EC                     
  1418                           ; BSR set to: 1
  1419                           ;main.c: 64:             if ((stop_time-start_time)>10){
  1420  0039EC  5187               	movf	main@start_time& (0+255),w,b
  1421  0039EE  5D89               	subwf	main@stop_time& (0+255),w,b
  1422  0039F0  6F78               	movwf	??_main& (0+255),b
  1423  0039F2  5188               	movf	(main@start_time+1)& (0+255),w,b
  1424  0039F4  598A               	subwfb	(main@stop_time+1)& (0+255),w,b
  1425  0039F6  6F79               	movwf	(??_main+1)& (0+255),b
  1426  0039F8  5179               	movf	(??_main+1)& (0+255),w,b
  1427  0039FA  E109               	bnz	u5860
  1428  0039FC  0E0B               	movlw	11
  1429  0039FE  5D78               	subwf	??_main& (0+255),w,b
  1430  003A00  A0D8               	btfss	status,0,c
  1431  003A02  EF05  F01D         	goto	u5861
  1432  003A06  EF07  F01D         	goto	u5860
  1433  003A0A                     u5861:
  1434  003A0A  EF24  F01D         	goto	l5420
  1435  003A0E                     u5860:
  1436  003A0E                     
  1437                           ; BSR set to: 1
  1438                           ;main.c: 65:                 memory[array_index] = (stop_time-start_time-3);
  1439  003A0E  0EFD               	movlw	253
  1440  003A10  6F78               	movwf	??_main& (0+255),b
  1441  003A12  0EFF               	movlw	255
  1442  003A14  6F79               	movwf	(??_main+1)& (0+255),b
  1443  003A16  5187               	movf	main@start_time& (0+255),w,b
  1444  003A18  5D89               	subwf	main@stop_time& (0+255),w,b
  1445  003A1A  6F7A               	movwf	(??_main+2)& (0+255),b
  1446  003A1C  5188               	movf	(main@start_time+1)& (0+255),w,b
  1447  003A1E  598A               	subwfb	(main@stop_time+1)& (0+255),w,b
  1448  003A20  6F7B               	movwf	(??_main+3)& (0+255),b
  1449  003A22  5178               	movf	??_main& (0+255),w,b
  1450  003A24  277A               	addwf	(??_main+2)& (0+255),f,b
  1451  003A26  5179               	movf	(??_main+1)& (0+255),w,b
  1452  003A28  237B               	addwfc	(??_main+3)& (0+255),f,b
  1453  003A2A  5149               	movf	_array_index& (0+255),w,b
  1454  003A2C  0D02               	mullw	2
  1455  003A2E  0E00               	movlw	low _memory
  1456  003A30  24F3               	addwf	243,w,c
  1457  003A32  6ED9               	movwf	fsr2l,c
  1458  003A34  0E01               	movlw	high _memory
  1459  003A36  20F4               	addwfc	prodh,w,c
  1460  003A38  6EDA               	movwf	fsr2h,c
  1461  003A3A  C17A  FFDE         	movff	??_main+2,postinc2
  1462  003A3E  C17B  FFDD         	movff	??_main+3,postdec2
  1463  003A42                     
  1464                           ; BSR set to: 1
  1465                           ;main.c: 66:                 array_index++;
  1466  003A42  2B49               	incf	_array_index& (0+255),f,b
  1467                           
  1468                           ;main.c: 67:             }
  1469  003A44  EF3E  F01D         	goto	l5430
  1470  003A48                     l5420:
  1471                           
  1472                           ; BSR set to: 1
  1473                           ;main.c: 69:                 accident++;
  1474  003A48  2B8B               	incf	main@accident& (0+255),f,b
  1475  003A4A                     
  1476                           ; BSR set to: 1
  1477                           ;main.c: 70:                 color_predict(accident);
  1478  003A4A  518B               	movf	main@accident& (0+255),w,b
  1479  003A4C  EC24  F02F         	call	_color_predict
  1480  003A50                     
  1481                           ;main.c: 71:                 if (accident >= 5){
  1482  003A50  0E04               	movlw	4
  1483  003A52  0101               	movlb	1	; () banked
  1484  003A54  658B               	cpfsgt	main@accident& (0+255),b
  1485  003A56  EF2F  F01D         	goto	u5871
  1486  003A5A  EF31  F01D         	goto	u5870
  1487  003A5E                     u5871:
  1488  003A5E  EF3E  F01D         	goto	l5430
  1489  003A62                     u5870:
  1490  003A62                     
  1491                           ; BSR set to: 1
  1492                           ;main.c: 72:                     goback(&motorL, &motorR);
  1493  003A62  0EB0               	movlw	low main@motorL
  1494  003A64  6E2D               	movwf	goback@mL^0,c
  1495  003A66  0E01               	movlw	high main@motorL
  1496  003A68  6E2E               	movwf	(goback@mL+1)^0,c
  1497  003A6A  0EB9               	movlw	low main@motorR
  1498  003A6C  6E2F               	movwf	goback@mR^0,c
  1499  003A6E  0E01               	movlw	high main@motorR
  1500  003A70  6E30               	movwf	(goback@mR+1)^0,c
  1501  003A72  ECB2  F014         	call	_goback	;wreg free
  1502  003A76                     
  1503                           ;main.c: 73:                     accident = 0;
  1504  003A76  0E00               	movlw	0
  1505  003A78  0101               	movlb	1	; () banked
  1506  003A7A  6F8B               	movwf	main@accident& (0+255),b
  1507  003A7C                     l5430:
  1508                           
  1509                           ; BSR set to: 1
  1510                           ;main.c: 76:             stop(&motorL, &motorR);
  1511  003A7C  0EB0               	movlw	low main@motorL
  1512  003A7E  6E1A               	movwf	stop@mL^0,c
  1513  003A80  0E01               	movlw	high main@motorL
  1514  003A82  6E1B               	movwf	(stop@mL+1)^0,c
  1515  003A84  0EB9               	movlw	low main@motorR
  1516  003A86  6E1C               	movwf	stop@mR^0,c
  1517  003A88  0E01               	movlw	high main@motorR
  1518  003A8A  6E1D               	movwf	(stop@mR+1)^0,c
  1519  003A8C  EC7F  F02B         	call	_stop	;wreg free
  1520  003A90                     
  1521                           ;main.c: 77:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1522  003A90  0E52               	movlw	82
  1523  003A92  0101               	movlb	1	; () banked
  1524  003A94  6F79               	movwf	(??_main+1)& (0+255),b
  1525  003A96  0E2B               	movlw	43
  1526  003A98  6F78               	movwf	??_main& (0+255),b
  1527  003A9A  0E00               	movlw	0
  1528  003A9C                     u5907:
  1529  003A9C  2EE8               	decfsz	wreg,f,c
  1530  003A9E  D7FE               	bra	u5907
  1531  003AA0  2F78               	decfsz	??_main& (0+255),f,b
  1532  003AA2  D7FC               	bra	u5907
  1533  003AA4  2F79               	decfsz	(??_main+1)& (0+255),f,b
  1534  003AA6  D7FA               	bra	u5907
  1535  003AA8  F000               	nop	
  1536  003AAA                     
  1537                           ;main.c: 78:             short_burst(&motorL, &motorR);
  1538  003AAA  0EB0               	movlw	low main@motorL
  1539  003AAC  6E20               	movwf	short_burst@mL^0,c
  1540  003AAE  0E01               	movlw	high main@motorL
  1541  003AB0  6E21               	movwf	(short_burst@mL+1)^0,c
  1542  003AB2  0EB9               	movlw	low main@motorR
  1543  003AB4  6E22               	movwf	short_burst@mR^0,c
  1544  003AB6  0E01               	movlw	high main@motorR
  1545  003AB8  6E23               	movwf	(short_burst@mR+1)^0,c
  1546  003ABA  ECC9  F02D         	call	_short_burst	;wreg free
  1547  003ABE                     
  1548                           ;main.c: 79:             color = detect_color(&rgb, &white);
  1549  003ABE  0E8C               	movlw	low main@rgb
  1550  003AC0  0100               	movlb	0	; () banked
  1551  003AC2  6F79               	movwf	detect_color@m& (0+255),b
  1552  003AC4  0E01               	movlw	high main@rgb
  1553  003AC6  6F7A               	movwf	(detect_color@m+1)& (0+255),b
  1554  003AC8  0E94               	movlw	low main@white
  1555  003ACA  6F7B               	movwf	detect_color@w& (0+255),b
  1556  003ACC  0E01               	movlw	high main@white
  1557  003ACE  6F7C               	movwf	(detect_color@w+1)& (0+255),b
  1558  003AD0  EC0A  F007         	call	_detect_color	;wreg free
  1559  003AD4  0101               	movlb	1	; () banked
  1560  003AD6  6F48               	movwf	_color& (0+255),b
  1561  003AD8                     
  1562                           ; BSR set to: 1
  1563                           ;main.c: 80:             color = verify_color(color, &rgb, &white);
  1564  003AD8  0E8C               	movlw	low main@rgb
  1565  003ADA  6F6A               	movwf	verify_color@m& (0+255),b
  1566  003ADC  0E01               	movlw	high main@rgb
  1567  003ADE  6F6B               	movwf	(verify_color@m+1)& (0+255),b
  1568  003AE0  0E94               	movlw	low main@white
  1569  003AE2  6F6C               	movwf	verify_color@w& (0+255),b
  1570  003AE4  0E01               	movlw	high main@white
  1571  003AE6  6F6D               	movwf	(verify_color@w+1)& (0+255),b
  1572  003AE8  5148               	movf	_color& (0+255),w,b
  1573  003AEA  ECDE  F02B         	call	_verify_color
  1574  003AEE  0101               	movlb	1	; () banked
  1575  003AF0  6F48               	movwf	_color& (0+255),b
  1576  003AF2                     
  1577                           ; BSR set to: 1
  1578                           ;main.c: 81:             if (color!= 0){turning_action(color, &motorL, &motorR); color =
      +                           0;}
  1579  003AF2  5148               	movf	_color& (0+255),w,b
  1580  003AF4  B4D8               	btfsc	status,2,c
  1581  003AF6  EF7F  F01D         	goto	u5881
  1582  003AFA  EF81  F01D         	goto	u5880
  1583  003AFE                     u5881:
  1584  003AFE  EF8F  F01D         	goto	l5446
  1585  003B02                     u5880:
  1586  003B02                     
  1587                           ; BSR set to: 1
  1588  003B02  0EB0               	movlw	low main@motorL
  1589  003B04  6E35               	movwf	turning_action@mL^0,c
  1590  003B06  0E01               	movlw	high main@motorL
  1591  003B08  6E36               	movwf	(turning_action@mL+1)^0,c
  1592  003B0A  0EB9               	movlw	low main@motorR
  1593  003B0C  6E37               	movwf	turning_action@mR^0,c
  1594  003B0E  0E01               	movlw	high main@motorR
  1595  003B10  6E38               	movwf	(turning_action@mR+1)^0,c
  1596  003B12  5148               	movf	_color& (0+255),w,b
  1597  003B14  EC51  F018         	call	_turning_action
  1598  003B18  0E00               	movlw	0
  1599  003B1A  0101               	movlb	1	; () banked
  1600  003B1C  6F48               	movwf	_color& (0+255),b
  1601  003B1E                     l5446:
  1602                           
  1603                           ; BSR set to: 1
  1604                           ;main.c: 82:             stop_signal = 0;
  1605  003B1E  0E00               	movlw	0
  1606  003B20  6F86               	movwf	main@stop_signal& (0+255),b
  1607  003B22  EFC6  F01C         	goto	l5404
  1608  003B26  EF18  F000         	goto	start
  1609  003B2A                     __end_of_main:
  1610                           	callstack 0
  1611                           
  1612 ;; *************** function _verify_color *****************
  1613 ;; Defined at:
  1614 ;;		line 346 in file "color.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  color           1    wreg     unsigned char 
  1617 ;;  m               2    0[BANK1 ] PTR struct color_rgb
  1618 ;;		 -> main@rgb(8), 
  1619 ;;  w               2    2[BANK1 ] PTR struct white_card
  1620 ;;		 -> main@white(28), 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  color           1    6[BANK1 ] unsigned char 
  1623 ;;  color2          2    4[BANK1 ] unsigned int 
  1624 ;;  color3          2    0        unsigned int 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      unsigned char 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1634 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1635 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1636 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1637 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1638 ;;Total ram usage:        9 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; Hardware stack levels required when called: 10
  1641 ;; This function calls:
  1642 ;;		_detect_color
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text1
  1649  0057BC                     __ptext1:
  1650                           	callstack 0
  1651  0057BC                     _verify_color:
  1652                           	callstack 20
  1653                           
  1654                           ; BSR set to: 1
  1655                           ;incstack = 0
  1656                           ;verify_color@color stored from wreg
  1657  0057BC  0101               	movlb	1	; () banked
  1658  0057BE  6F70               	movwf	verify_color@color& (0+255),b
  1659  0057C0                     
  1660                           ;color.c: 346: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 347: {;color.c: 348:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1661  0057C0  0E05               	movlw	5
  1662  0057C2  0100               	movlb	0	; () banked
  1663  0057C4  6FFF               	movwf	(??_verify_color+1)& (0+255),b
  1664  0057C6  0E0F               	movlw	15
  1665  0057C8  6FFE               	movwf	??_verify_color& (0+255),b
  1666  0057CA  0EF1               	movlw	241
  1667  0057CC                     u5917:
  1668  0057CC  2EE8               	decfsz	wreg,f,c
  1669  0057CE  D7FE               	bra	u5917
  1670  0057D0  2FFE               	decfsz	??_verify_color& (0+255),f,b
  1671  0057D2  D7FC               	bra	u5917
  1672  0057D4  2FFF               	decfsz	(??_verify_color+1)& (0+255),f,b
  1673  0057D6  D7FA               	bra	u5917
  1674  0057D8                     
  1675                           ;color.c: 349:     unsigned int color2, color3;;color.c: 350:     color2 = detect_color(
      +                          m,w);
  1676  0057D8  C16A  F079         	movff	verify_color@m,detect_color@m
  1677  0057DC  C16B  F07A         	movff	verify_color@m+1,detect_color@m+1
  1678  0057E0  C16C  F07B         	movff	verify_color@w,detect_color@w
  1679  0057E4  C16D  F07C         	movff	verify_color@w+1,detect_color@w+1
  1680  0057E8  EC0A  F007         	call	_detect_color	;wreg free
  1681  0057EC  0100               	movlb	0	; () banked
  1682  0057EE  6FFE               	movwf	??_verify_color& (0+255),b
  1683  0057F0  51FE               	movf	??_verify_color& (0+255),w,b
  1684  0057F2  0101               	movlb	1	; () banked
  1685  0057F4  6F6E               	movwf	verify_color@color2& (0+255),b
  1686  0057F6  6B6F               	clrf	(verify_color@color2+1)& (0+255),b
  1687  0057F8                     
  1688                           ; BSR set to: 1
  1689                           ;color.c: 351:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1690  0057F8  0E05               	movlw	5
  1691  0057FA  0100               	movlb	0	; () banked
  1692  0057FC  6FFF               	movwf	(??_verify_color+1)& (0+255),b
  1693  0057FE  0E0F               	movlw	15
  1694  005800  6FFE               	movwf	??_verify_color& (0+255),b
  1695  005802  0EF1               	movlw	241
  1696  005804                     u5927:
  1697  005804  2EE8               	decfsz	wreg,f,c
  1698  005806  D7FE               	bra	u5927
  1699  005808  2FFE               	decfsz	??_verify_color& (0+255),f,b
  1700  00580A  D7FC               	bra	u5927
  1701  00580C  2FFF               	decfsz	(??_verify_color+1)& (0+255),f,b
  1702  00580E  D7FA               	bra	u5927
  1703  005810                     
  1704                           ;color.c: 353:     if (color == color2){return color;}
  1705  005810  0101               	movlb	1	; () banked
  1706  005812  5170               	movf	verify_color@color& (0+255),w,b
  1707  005814  0100               	movlb	0	; () banked
  1708  005816  6FFE               	movwf	??_verify_color& (0+255),b
  1709  005818  6BFF               	clrf	(??_verify_color+1)& (0+255),b
  1710  00581A  0101               	movlb	1	; () banked
  1711  00581C  516E               	movf	verify_color@color2& (0+255),w,b
  1712  00581E  0100               	movlb	0	; () banked
  1713  005820  19FE               	xorwf	??_verify_color& (0+255),w,b
  1714  005822  E109               	bnz	u5561
  1715  005824  0101               	movlb	1	; () banked
  1716  005826  516F               	movf	(verify_color@color2+1)& (0+255),w,b
  1717  005828  0100               	movlb	0	; () banked
  1718  00582A  19FF               	xorwf	(??_verify_color+1)& (0+255),w,b
  1719  00582C  A4D8               	btfss	status,2,c
  1720  00582E  EF1B  F02C         	goto	u5561
  1721  005832  EF1D  F02C         	goto	u5560
  1722  005836                     u5561:
  1723  005836  EF21  F02C         	goto	l5162
  1724  00583A                     u5560:
  1725  00583A                     
  1726                           ; BSR set to: 0
  1727  00583A  0101               	movlb	1	; () banked
  1728  00583C  5170               	movf	verify_color@color& (0+255),w,b
  1729  00583E  EF22  F02C         	goto	l141
  1730  005842                     l5162:
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;color.c: 356:         return color;}
  1734  005842  0E00               	movlw	0
  1735  005844                     l141:
  1736  005844  0012               	return		;funcret
  1737  005846                     __end_of_verify_color:
  1738                           	callstack 0
  1739                           
  1740 ;; *************** function _turning_action *****************
  1741 ;; Defined at:
  1742 ;;		line 14 in file "movement.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  color           1    wreg     unsigned char 
  1745 ;;  mL              2   52[COMRAM] PTR struct DC_motor
  1746 ;;		 -> main@motorL(9), 
  1747 ;;  mR              2   54[COMRAM] PTR struct DC_motor
  1748 ;;		 -> main@motorR(9), 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  color           1   56[COMRAM] unsigned char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1761 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1763 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1764 ;;Total ram usage:        5 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 6
  1767 ;; This function calls:
  1768 ;;		_fullSpeedBack
  1769 ;;		_goback
  1770 ;;		_toggle_light
  1771 ;;		_turn45
  1772 ;; This function is called by:
  1773 ;;		_main
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text2
  1778  0030A2                     __ptext2:
  1779                           	callstack 0
  1780  0030A2                     _turning_action:
  1781                           	callstack 24
  1782                           
  1783                           ;incstack = 0
  1784                           ;turning_action@color stored from wreg
  1785  0030A2  6E39               	movwf	turning_action@color^0,c
  1786  0030A4                     
  1787                           ;movement.c: 14: void turning_action(unsigned char color, struct DC_motor *mL, struct DC
      +                          _motor *mR);movement.c: 15: { if (color != 0){
  1788  0030A4  5039               	movf	turning_action@color^0,w,c
  1789  0030A6  B4D8               	btfsc	status,2,c
  1790  0030A8  EF58  F018         	goto	u5761
  1791  0030AC  EF5A  F018         	goto	u5760
  1792  0030B0                     u5761:
  1793  0030B0  EFC8  F019         	goto	l452
  1794  0030B4                     u5760:
  1795  0030B4                     
  1796                           ;movement.c: 16:         if (color == 1){
  1797  0030B4  0439               	decf	turning_action@color^0,w,c
  1798  0030B6  A4D8               	btfss	status,2,c
  1799  0030B8  EF60  F018         	goto	u5771
  1800  0030BC  EF62  F018         	goto	u5770
  1801  0030C0                     u5771:
  1802  0030C0  EF8A  F018         	goto	l5322
  1803  0030C4                     u5770:
  1804  0030C4                     
  1805                           ;movement.c: 17:             fullSpeedBack(mL,mR,1);
  1806  0030C4  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1807  0030C8  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1808  0030CC  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1809  0030D0  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1810  0030D4  0E01               	movlw	1
  1811  0030D6  6E24               	movwf	fullSpeedBack@instruction^0,c
  1812  0030D8  ECD5  F025         	call	_fullSpeedBack	;wreg free
  1813                           
  1814                           ;movement.c: 18:             turn45(mL,mR,2,2);
  1815  0030DC  C035  F020         	movff	turning_action@mL,turn45@mL
  1816  0030E0  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1817  0030E4  C037  F022         	movff	turning_action@mR,turn45@mR
  1818  0030E8  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1819  0030EC  0E02               	movlw	2
  1820  0030EE  6E24               	movwf	turn45@turn_time^0,c
  1821  0030F0  0E02               	movlw	2
  1822  0030F2  6E25               	movwf	turn45@direction^0,c
  1823  0030F4  EC10  F022         	call	_turn45	;wreg free
  1824  0030F8                     
  1825                           ;movement.c: 19:             memory[array_index] = 1;
  1826  0030F8  0101               	movlb	1	; () banked
  1827  0030FA  5149               	movf	_array_index& (0+255),w,b
  1828  0030FC  0D02               	mullw	2
  1829  0030FE  0E00               	movlw	low _memory
  1830  003100  24F3               	addwf	243,w,c
  1831  003102  6ED9               	movwf	fsr2l,c
  1832  003104  0E01               	movlw	high _memory
  1833  003106  20F4               	addwfc	prodh,w,c
  1834  003108  6EDA               	movwf	fsr2h,c
  1835  00310A  0E01               	movlw	1
  1836  00310C  6EDE               	movwf	postinc2,c
  1837  00310E  0E00               	movlw	0
  1838  003110  6EDD               	movwf	postdec2,c
  1839  003112                     
  1840                           ; BSR set to: 1
  1841                           ;movement.c: 20:             array_index++;
  1842  003112  2B49               	incf	_array_index& (0+255),f,b
  1843  003114                     l5322:
  1844                           
  1845                           ;movement.c: 22:         if (color == 2){
  1846  003114  0E02               	movlw	2
  1847  003116  1839               	xorwf	turning_action@color^0,w,c
  1848  003118  A4D8               	btfss	status,2,c
  1849  00311A  EF91  F018         	goto	u5781
  1850  00311E  EF93  F018         	goto	u5780
  1851  003122                     u5781:
  1852  003122  EFBB  F018         	goto	l5330
  1853  003126                     u5780:
  1854  003126                     
  1855                           ;movement.c: 23:             fullSpeedBack(mL,mR,1);
  1856  003126  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1857  00312A  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1858  00312E  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1859  003132  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1860  003136  0E01               	movlw	1
  1861  003138  6E24               	movwf	fullSpeedBack@instruction^0,c
  1862  00313A  ECD5  F025         	call	_fullSpeedBack	;wreg free
  1863                           
  1864                           ;movement.c: 24:             turn45(mL,mR,2,1);
  1865  00313E  C035  F020         	movff	turning_action@mL,turn45@mL
  1866  003142  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1867  003146  C037  F022         	movff	turning_action@mR,turn45@mR
  1868  00314A  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1869  00314E  0E02               	movlw	2
  1870  003150  6E24               	movwf	turn45@turn_time^0,c
  1871  003152  0E01               	movlw	1
  1872  003154  6E25               	movwf	turn45@direction^0,c
  1873  003156  EC10  F022         	call	_turn45	;wreg free
  1874  00315A                     
  1875                           ;movement.c: 25:             memory[array_index] = 2;
  1876  00315A  0101               	movlb	1	; () banked
  1877  00315C  5149               	movf	_array_index& (0+255),w,b
  1878  00315E  0D02               	mullw	2
  1879  003160  0E00               	movlw	low _memory
  1880  003162  24F3               	addwf	243,w,c
  1881  003164  6ED9               	movwf	fsr2l,c
  1882  003166  0E01               	movlw	high _memory
  1883  003168  20F4               	addwfc	prodh,w,c
  1884  00316A  6EDA               	movwf	fsr2h,c
  1885  00316C  0E02               	movlw	2
  1886  00316E  6EDE               	movwf	postinc2,c
  1887  003170  0E00               	movlw	0
  1888  003172  6EDD               	movwf	postdec2,c
  1889  003174                     
  1890                           ; BSR set to: 1
  1891                           ;movement.c: 26:             array_index++;
  1892  003174  2B49               	incf	_array_index& (0+255),f,b
  1893  003176                     l5330:
  1894                           
  1895                           ;movement.c: 28:         if (color == 3){
  1896  003176  0E03               	movlw	3
  1897  003178  1839               	xorwf	turning_action@color^0,w,c
  1898  00317A  A4D8               	btfss	status,2,c
  1899  00317C  EFC2  F018         	goto	u5791
  1900  003180  EFC4  F018         	goto	u5790
  1901  003184                     u5791:
  1902  003184  EFEC  F018         	goto	l5338
  1903  003188                     u5790:
  1904  003188                     
  1905                           ;movement.c: 29:             fullSpeedBack(mL,mR,1);
  1906  003188  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1907  00318C  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1908  003190  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1909  003194  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1910  003198  0E01               	movlw	1
  1911  00319A  6E24               	movwf	fullSpeedBack@instruction^0,c
  1912  00319C  ECD5  F025         	call	_fullSpeedBack	;wreg free
  1913                           
  1914                           ;movement.c: 30:             turn45(mL,mR,4,1);
  1915  0031A0  C035  F020         	movff	turning_action@mL,turn45@mL
  1916  0031A4  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1917  0031A8  C037  F022         	movff	turning_action@mR,turn45@mR
  1918  0031AC  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1919  0031B0  0E04               	movlw	4
  1920  0031B2  6E24               	movwf	turn45@turn_time^0,c
  1921  0031B4  0E01               	movlw	1
  1922  0031B6  6E25               	movwf	turn45@direction^0,c
  1923  0031B8  EC10  F022         	call	_turn45	;wreg free
  1924  0031BC                     
  1925                           ;movement.c: 31:             memory[array_index] = 3;
  1926  0031BC  0101               	movlb	1	; () banked
  1927  0031BE  5149               	movf	_array_index& (0+255),w,b
  1928  0031C0  0D02               	mullw	2
  1929  0031C2  0E00               	movlw	low _memory
  1930  0031C4  24F3               	addwf	243,w,c
  1931  0031C6  6ED9               	movwf	fsr2l,c
  1932  0031C8  0E01               	movlw	high _memory
  1933  0031CA  20F4               	addwfc	prodh,w,c
  1934  0031CC  6EDA               	movwf	fsr2h,c
  1935  0031CE  0E03               	movlw	3
  1936  0031D0  6EDE               	movwf	postinc2,c
  1937  0031D2  0E00               	movlw	0
  1938  0031D4  6EDD               	movwf	postdec2,c
  1939  0031D6                     
  1940                           ; BSR set to: 1
  1941                           ;movement.c: 32:             array_index++;
  1942  0031D6  2B49               	incf	_array_index& (0+255),f,b
  1943  0031D8                     l5338:
  1944                           
  1945                           ;movement.c: 34:         if (color == 4){
  1946  0031D8  0E04               	movlw	4
  1947  0031DA  1839               	xorwf	turning_action@color^0,w,c
  1948  0031DC  A4D8               	btfss	status,2,c
  1949  0031DE  EFF3  F018         	goto	u5801
  1950  0031E2  EFF5  F018         	goto	u5800
  1951  0031E6                     u5801:
  1952  0031E6  EF1D  F019         	goto	l5346
  1953  0031EA                     u5800:
  1954  0031EA                     
  1955                           ;movement.c: 35:             fullSpeedBack(mL,mR,3);
  1956  0031EA  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1957  0031EE  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1958  0031F2  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1959  0031F6  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1960  0031FA  0E03               	movlw	3
  1961  0031FC  6E24               	movwf	fullSpeedBack@instruction^0,c
  1962  0031FE  ECD5  F025         	call	_fullSpeedBack	;wreg free
  1963                           
  1964                           ;movement.c: 36:             turn45(mL,mR,2,2);
  1965  003202  C035  F020         	movff	turning_action@mL,turn45@mL
  1966  003206  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1967  00320A  C037  F022         	movff	turning_action@mR,turn45@mR
  1968  00320E  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1969  003212  0E02               	movlw	2
  1970  003214  6E24               	movwf	turn45@turn_time^0,c
  1971  003216  0E02               	movlw	2
  1972  003218  6E25               	movwf	turn45@direction^0,c
  1973  00321A  EC10  F022         	call	_turn45	;wreg free
  1974  00321E                     
  1975                           ;movement.c: 37:             memory[array_index] = 4;
  1976  00321E  0101               	movlb	1	; () banked
  1977  003220  5149               	movf	_array_index& (0+255),w,b
  1978  003222  0D02               	mullw	2
  1979  003224  0E00               	movlw	low _memory
  1980  003226  24F3               	addwf	243,w,c
  1981  003228  6ED9               	movwf	fsr2l,c
  1982  00322A  0E01               	movlw	high _memory
  1983  00322C  20F4               	addwfc	prodh,w,c
  1984  00322E  6EDA               	movwf	fsr2h,c
  1985  003230  0E04               	movlw	4
  1986  003232  6EDE               	movwf	postinc2,c
  1987  003234  0E00               	movlw	0
  1988  003236  6EDD               	movwf	postdec2,c
  1989  003238                     
  1990                           ; BSR set to: 1
  1991                           ;movement.c: 38:             array_index++;
  1992  003238  2B49               	incf	_array_index& (0+255),f,b
  1993  00323A                     l5346:
  1994                           
  1995                           ;movement.c: 40:         if (color == 5){
  1996  00323A  0E05               	movlw	5
  1997  00323C  1839               	xorwf	turning_action@color^0,w,c
  1998  00323E  A4D8               	btfss	status,2,c
  1999  003240  EF24  F019         	goto	u5811
  2000  003244  EF26  F019         	goto	u5810
  2001  003248                     u5811:
  2002  003248  EF4E  F019         	goto	l5354
  2003  00324C                     u5810:
  2004  00324C                     
  2005                           ;movement.c: 41:             fullSpeedBack(mL,mR,3);
  2006  00324C  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2007  003250  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2008  003254  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2009  003258  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2010  00325C  0E03               	movlw	3
  2011  00325E  6E24               	movwf	fullSpeedBack@instruction^0,c
  2012  003260  ECD5  F025         	call	_fullSpeedBack	;wreg free
  2013                           
  2014                           ;movement.c: 42:             turn45(mL,mR,2,1);
  2015  003264  C035  F020         	movff	turning_action@mL,turn45@mL
  2016  003268  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  2017  00326C  C037  F022         	movff	turning_action@mR,turn45@mR
  2018  003270  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  2019  003274  0E02               	movlw	2
  2020  003276  6E24               	movwf	turn45@turn_time^0,c
  2021  003278  0E01               	movlw	1
  2022  00327A  6E25               	movwf	turn45@direction^0,c
  2023  00327C  EC10  F022         	call	_turn45	;wreg free
  2024  003280                     
  2025                           ;movement.c: 43:             memory[array_index] = 5;
  2026  003280  0101               	movlb	1	; () banked
  2027  003282  5149               	movf	_array_index& (0+255),w,b
  2028  003284  0D02               	mullw	2
  2029  003286  0E00               	movlw	low _memory
  2030  003288  24F3               	addwf	243,w,c
  2031  00328A  6ED9               	movwf	fsr2l,c
  2032  00328C  0E01               	movlw	high _memory
  2033  00328E  20F4               	addwfc	prodh,w,c
  2034  003290  6EDA               	movwf	fsr2h,c
  2035  003292  0E05               	movlw	5
  2036  003294  6EDE               	movwf	postinc2,c
  2037  003296  0E00               	movlw	0
  2038  003298  6EDD               	movwf	postdec2,c
  2039  00329A                     
  2040                           ; BSR set to: 1
  2041                           ;movement.c: 44:             array_index++;
  2042  00329A  2B49               	incf	_array_index& (0+255),f,b
  2043  00329C                     l5354:
  2044                           
  2045                           ;movement.c: 46:         if (color == 6){
  2046  00329C  0E06               	movlw	6
  2047  00329E  1839               	xorwf	turning_action@color^0,w,c
  2048  0032A0  A4D8               	btfss	status,2,c
  2049  0032A2  EF55  F019         	goto	u5821
  2050  0032A6  EF57  F019         	goto	u5820
  2051  0032AA                     u5821:
  2052  0032AA  EF7F  F019         	goto	l5362
  2053  0032AE                     u5820:
  2054  0032AE                     
  2055                           ;movement.c: 47:             fullSpeedBack(mL,mR,1);
  2056  0032AE  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2057  0032B2  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2058  0032B6  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2059  0032BA  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2060  0032BE  0E01               	movlw	1
  2061  0032C0  6E24               	movwf	fullSpeedBack@instruction^0,c
  2062  0032C2  ECD5  F025         	call	_fullSpeedBack	;wreg free
  2063                           
  2064                           ;movement.c: 48:             turn45(mL,mR,3,2);
  2065  0032C6  C035  F020         	movff	turning_action@mL,turn45@mL
  2066  0032CA  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  2067  0032CE  C037  F022         	movff	turning_action@mR,turn45@mR
  2068  0032D2  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  2069  0032D6  0E03               	movlw	3
  2070  0032D8  6E24               	movwf	turn45@turn_time^0,c
  2071  0032DA  0E02               	movlw	2
  2072  0032DC  6E25               	movwf	turn45@direction^0,c
  2073  0032DE  EC10  F022         	call	_turn45	;wreg free
  2074  0032E2                     
  2075                           ;movement.c: 49:             memory[array_index] = 6;
  2076  0032E2  0101               	movlb	1	; () banked
  2077  0032E4  5149               	movf	_array_index& (0+255),w,b
  2078  0032E6  0D02               	mullw	2
  2079  0032E8  0E00               	movlw	low _memory
  2080  0032EA  24F3               	addwf	243,w,c
  2081  0032EC  6ED9               	movwf	fsr2l,c
  2082  0032EE  0E01               	movlw	high _memory
  2083  0032F0  20F4               	addwfc	prodh,w,c
  2084  0032F2  6EDA               	movwf	fsr2h,c
  2085  0032F4  0E06               	movlw	6
  2086  0032F6  6EDE               	movwf	postinc2,c
  2087  0032F8  0E00               	movlw	0
  2088  0032FA  6EDD               	movwf	postdec2,c
  2089  0032FC                     
  2090                           ; BSR set to: 1
  2091                           ;movement.c: 50:             array_index++;
  2092  0032FC  2B49               	incf	_array_index& (0+255),f,b
  2093  0032FE                     l5362:
  2094                           
  2095                           ;movement.c: 52:         if (color == 7){
  2096  0032FE  0E07               	movlw	7
  2097  003300  1839               	xorwf	turning_action@color^0,w,c
  2098  003302  A4D8               	btfss	status,2,c
  2099  003304  EF86  F019         	goto	u5831
  2100  003308  EF88  F019         	goto	u5830
  2101  00330C                     u5831:
  2102  00330C  EFB0  F019         	goto	l5370
  2103  003310                     u5830:
  2104  003310                     
  2105                           ;movement.c: 53:             fullSpeedBack(mL,mR,1);
  2106  003310  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2107  003314  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2108  003318  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2109  00331C  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2110  003320  0E01               	movlw	1
  2111  003322  6E24               	movwf	fullSpeedBack@instruction^0,c
  2112  003324  ECD5  F025         	call	_fullSpeedBack	;wreg free
  2113                           
  2114                           ;movement.c: 54:             turn45(mL,mR,3,1);
  2115  003328  C035  F020         	movff	turning_action@mL,turn45@mL
  2116  00332C  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  2117  003330  C037  F022         	movff	turning_action@mR,turn45@mR
  2118  003334  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  2119  003338  0E03               	movlw	3
  2120  00333A  6E24               	movwf	turn45@turn_time^0,c
  2121  00333C  0E01               	movlw	1
  2122  00333E  6E25               	movwf	turn45@direction^0,c
  2123  003340  EC10  F022         	call	_turn45	;wreg free
  2124  003344                     
  2125                           ;movement.c: 55:             memory[array_index] = 7;
  2126  003344  0101               	movlb	1	; () banked
  2127  003346  5149               	movf	_array_index& (0+255),w,b
  2128  003348  0D02               	mullw	2
  2129  00334A  0E00               	movlw	low _memory
  2130  00334C  24F3               	addwf	243,w,c
  2131  00334E  6ED9               	movwf	fsr2l,c
  2132  003350  0E01               	movlw	high _memory
  2133  003352  20F4               	addwfc	prodh,w,c
  2134  003354  6EDA               	movwf	fsr2h,c
  2135  003356  0E07               	movlw	7
  2136  003358  6EDE               	movwf	postinc2,c
  2137  00335A  0E00               	movlw	0
  2138  00335C  6EDD               	movwf	postdec2,c
  2139  00335E                     
  2140                           ; BSR set to: 1
  2141                           ;movement.c: 56:             array_index++;
  2142  00335E  2B49               	incf	_array_index& (0+255),f,b
  2143  003360                     l5370:
  2144                           
  2145                           ;movement.c: 58:         if (color == 8){
  2146  003360  0E08               	movlw	8
  2147  003362  1839               	xorwf	turning_action@color^0,w,c
  2148  003364  A4D8               	btfss	status,2,c
  2149  003366  EFB7  F019         	goto	u5841
  2150  00336A  EFB9  F019         	goto	u5840
  2151  00336E                     u5841:
  2152  00336E  EFC8  F019         	goto	l452
  2153  003372                     u5840:
  2154  003372                     
  2155                           ;movement.c: 59:             toggle_light(2,1);
  2156  003372  0E01               	movlw	1
  2157  003374  6E01               	movwf	toggle_light@toggletime^0,c
  2158  003376  0E02               	movlw	2
  2159  003378  EC3A  F01B         	call	_toggle_light
  2160  00337C                     
  2161                           ;movement.c: 60:             goback(mL,mR);
  2162  00337C  C035  F02D         	movff	turning_action@mL,goback@mL
  2163  003380  C036  F02E         	movff	turning_action@mL+1,goback@mL+1
  2164  003384  C037  F02F         	movff	turning_action@mR,goback@mR
  2165  003388  C038  F030         	movff	turning_action@mR+1,goback@mR+1
  2166  00338C  ECB2  F014         	call	_goback	;wreg free
  2167  003390                     l452:
  2168  003390  0012               	return		;funcret
  2169  003392                     __end_of_turning_action:
  2170                           	callstack 0
  2171                           
  2172 ;; *************** function _goback *****************
  2173 ;; Defined at:
  2174 ;;		line 65 in file "movement.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  2177 ;;		 -> main@motorL(9), 
  2178 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  2179 ;;		 -> main@motorR(9), 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  i               2   50[COMRAM] unsigned int 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2191 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2193 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2194 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2195 ;;Total ram usage:        8 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; Hardware stack levels required when called: 5
  2198 ;; This function calls:
  2199 ;;		_fullSpeedAhead
  2200 ;;		_fullSpeedBack
  2201 ;;		_stop
  2202 ;;		_turn45
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;;		_turning_action
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text3
  2210  002964                     __ptext3:
  2211                           	callstack 0
  2212  002964                     _goback:
  2213                           	callstack 24
  2214  002964                     
  2215                           ;movement.c: 65: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 66: {
      +                           fullSpeedBack(mL,mR,1);
  2216  002964  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2217  002968  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2218  00296C  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2219  002970  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2220  002974  0E01               	movlw	1
  2221  002976  6E24               	movwf	fullSpeedBack@instruction^0,c
  2222  002978  ECD5  F025         	call	_fullSpeedBack	;wreg free
  2223                           
  2224                           ;movement.c: 67:     turn45(mL,mR,4,1);
  2225  00297C  C02D  F020         	movff	goback@mL,turn45@mL
  2226  002980  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2227  002984  C02F  F022         	movff	goback@mR,turn45@mR
  2228  002988  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2229  00298C  0E04               	movlw	4
  2230  00298E  6E24               	movwf	turn45@turn_time^0,c
  2231  002990  0E01               	movlw	1
  2232  002992  6E25               	movwf	turn45@direction^0,c
  2233  002994  EC10  F022         	call	_turn45	;wreg free
  2234                           
  2235                           ;movement.c: 68:     fullSpeedBack(mL,mR,2);
  2236  002998  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2237  00299C  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2238  0029A0  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2239  0029A4  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2240  0029A8  0E02               	movlw	2
  2241  0029AA  6E24               	movwf	fullSpeedBack@instruction^0,c
  2242  0029AC  ECD5  F025         	call	_fullSpeedBack	;wreg free
  2243  0029B0                     l4964:
  2244                           
  2245                           ;movement.c: 69:     array_index--;
  2246  0029B0  0101               	movlb	1	; () banked
  2247  0029B2  0749               	decf	_array_index& (0+255),f,b
  2248  0029B4                     l4966:
  2249                           
  2250                           ; BSR set to: 1
  2251                           ;movement.c: 71:         fullSpeedAhead(mL,mR);
  2252  0029B4  C02D  F01A         	movff	goback@mL,fullSpeedAhead@mL
  2253  0029B8  C02E  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
  2254  0029BC  C02F  F01C         	movff	goback@mR,fullSpeedAhead@mR
  2255  0029C0  C030  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
  2256  0029C4  ECBB  F02A         	call	_fullSpeedAhead	;wreg free
  2257  0029C8                     
  2258                           ;movement.c: 72:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((uns
      +                          igned long)((100)*(64000000/4000.0)));}
  2259  0029C8  0E00               	movlw	0
  2260  0029CA  6E34               	movwf	(goback@i+1)^0,c
  2261  0029CC  0E00               	movlw	0
  2262  0029CE  6E33               	movwf	goback@i^0,c
  2263  0029D0  EFF8  F014         	goto	l4974
  2264  0029D4                     l4970:
  2265                           
  2266                           ; BSR set to: 1
  2267  0029D4  0E09               	movlw	9
  2268  0029D6  6E32               	movwf	(??_goback+1)^0,c
  2269  0029D8  0E1E               	movlw	30
  2270  0029DA  6E31               	movwf	??_goback^0,c
  2271  0029DC  0EE4               	movlw	228
  2272  0029DE                     u5937:
  2273  0029DE  2EE8               	decfsz	wreg,f,c
  2274  0029E0  D7FE               	bra	u5937
  2275  0029E2  2E31               	decfsz	??_goback^0,f,c
  2276  0029E4  D7FC               	bra	u5937
  2277  0029E6  2E32               	decfsz	(??_goback+1)^0,f,c
  2278  0029E8  D7FA               	bra	u5937
  2279  0029EA  D000               	nop2	
  2280  0029EC  4A33               	infsnz	goback@i^0,f,c
  2281  0029EE  2A34               	incf	(goback@i+1)^0,f,c
  2282  0029F0                     l4974:
  2283  0029F0  0101               	movlb	1	; () banked
  2284  0029F2  5149               	movf	_array_index& (0+255),w,b
  2285  0029F4  0D02               	mullw	2
  2286  0029F6  0E00               	movlw	low _memory
  2287  0029F8  24F3               	addwf	243,w,c
  2288  0029FA  6ED9               	movwf	fsr2l,c
  2289  0029FC  0E01               	movlw	high _memory
  2290  0029FE  20F4               	addwfc	prodh,w,c
  2291  002A00  6EDA               	movwf	fsr2h,c
  2292  002A02  50DE               	movf	postinc2,w,c
  2293  002A04  5C33               	subwf	goback@i^0,w,c
  2294  002A06  50DE               	movf	postinc2,w,c
  2295  002A08  5834               	subwfb	(goback@i+1)^0,w,c
  2296  002A0A  A0D8               	btfss	status,0,c
  2297  002A0C  EF0A  F015         	goto	u5351
  2298  002A10  EF0C  F015         	goto	u5350
  2299  002A14                     u5351:
  2300  002A14  EFEA  F014         	goto	l4970
  2301  002A18                     u5350:
  2302  002A18                     
  2303                           ; BSR set to: 1
  2304                           ;movement.c: 73:         stop(mL,mR);
  2305  002A18  C02D  F01A         	movff	goback@mL,stop@mL
  2306  002A1C  C02E  F01B         	movff	goback@mL+1,stop@mL+1
  2307  002A20  C02F  F01C         	movff	goback@mR,stop@mR
  2308  002A24  C030  F01D         	movff	goback@mR+1,stop@mR+1
  2309  002A28  EC7F  F02B         	call	_stop	;wreg free
  2310  002A2C                     
  2311                           ;movement.c: 74:         if (array_index == 0){break;}
  2312  002A2C  0101               	movlb	1	; () banked
  2313  002A2E  5149               	movf	_array_index& (0+255),w,b
  2314  002A30  A4D8               	btfss	status,2,c
  2315  002A32  EF1D  F015         	goto	u5361
  2316  002A36  EF1F  F015         	goto	u5360
  2317  002A3A                     u5361:
  2318  002A3A  EF21  F015         	goto	l4982
  2319  002A3E                     u5360:
  2320  002A3E  EF65  F016         	goto	l461
  2321  002A42                     l4982:
  2322                           
  2323                           ; BSR set to: 1
  2324                           ;movement.c: 75:         array_index--;
  2325  002A42  0749               	decf	_array_index& (0+255),f,b
  2326  002A44                     
  2327                           ; BSR set to: 1
  2328                           ;movement.c: 76:         if (memory[array_index] == 1){turn45(mL,mR,2,1);fullSpeedBack(m
      +                          L,mR,2);array_index--;}
  2329  002A44  5149               	movf	_array_index& (0+255),w,b
  2330  002A46  0D02               	mullw	2
  2331  002A48  0E00               	movlw	low _memory
  2332  002A4A  24F3               	addwf	243,w,c
  2333  002A4C  6ED9               	movwf	fsr2l,c
  2334  002A4E  0E01               	movlw	high _memory
  2335  002A50  20F4               	addwfc	prodh,w,c
  2336  002A52  6EDA               	movwf	fsr2h,c
  2337  002A54  04DE               	decf	postinc2,w,c
  2338  002A56  10DE               	iorwf	postinc2,w,c
  2339  002A58  A4D8               	btfss	status,2,c
  2340  002A5A  EF31  F015         	goto	u5371
  2341  002A5E  EF33  F015         	goto	u5370
  2342  002A62                     u5371:
  2343  002A62  EF4F  F015         	goto	l4990
  2344  002A66                     u5370:
  2345  002A66                     
  2346                           ; BSR set to: 1
  2347  002A66  C02D  F020         	movff	goback@mL,turn45@mL
  2348  002A6A  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2349  002A6E  C02F  F022         	movff	goback@mR,turn45@mR
  2350  002A72  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2351  002A76  0E02               	movlw	2
  2352  002A78  6E24               	movwf	turn45@turn_time^0,c
  2353  002A7A  0E01               	movlw	1
  2354  002A7C  6E25               	movwf	turn45@direction^0,c
  2355  002A7E  EC10  F022         	call	_turn45	;wreg free
  2356  002A82  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2357  002A86  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2358  002A8A  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2359  002A8E  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2360  002A92  0E02               	movlw	2
  2361  002A94  6E24               	movwf	fullSpeedBack@instruction^0,c
  2362  002A96  ECD5  F025         	call	_fullSpeedBack	;wreg free
  2363  002A9A  EFD8  F014         	goto	l4964
  2364  002A9E                     l4990:
  2365                           
  2366                           ; BSR set to: 1
  2367  002A9E  5149               	movf	_array_index& (0+255),w,b
  2368  002AA0  0D02               	mullw	2
  2369  002AA2  0E00               	movlw	low _memory
  2370  002AA4  24F3               	addwf	243,w,c
  2371  002AA6  6ED9               	movwf	fsr2l,c
  2372  002AA8  0E01               	movlw	high _memory
  2373  002AAA  20F4               	addwfc	prodh,w,c
  2374  002AAC  6EDA               	movwf	fsr2h,c
  2375  002AAE  0E02               	movlw	2
  2376  002AB0  18DE               	xorwf	postinc2,w,c
  2377  002AB2  10DE               	iorwf	postinc2,w,c
  2378  002AB4  A4D8               	btfss	status,2,c
  2379  002AB6  EF5F  F015         	goto	u5381
  2380  002ABA  EF61  F015         	goto	u5380
  2381  002ABE                     u5381:
  2382  002ABE  EF7D  F015         	goto	l4996
  2383  002AC2                     u5380:
  2384  002AC2                     
  2385                           ; BSR set to: 1
  2386  002AC2  C02D  F020         	movff	goback@mL,turn45@mL
  2387  002AC6  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2388  002ACA  C02F  F022         	movff	goback@mR,turn45@mR
  2389  002ACE  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2390  002AD2  0E02               	movlw	2
  2391  002AD4  6E24               	movwf	turn45@turn_time^0,c
  2392  002AD6  0E02               	movlw	2
  2393  002AD8  6E25               	movwf	turn45@direction^0,c
  2394  002ADA  EC10  F022         	call	_turn45	;wreg free
  2395  002ADE  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2396  002AE2  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2397  002AE6  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2398  002AEA  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2399  002AEE  0E02               	movlw	2
  2400  002AF0  6E24               	movwf	fullSpeedBack@instruction^0,c
  2401  002AF2  ECD5  F025         	call	_fullSpeedBack	;wreg free
  2402  002AF6  EFD8  F014         	goto	l4964
  2403  002AFA                     l4996:
  2404                           
  2405                           ; BSR set to: 1
  2406  002AFA  5149               	movf	_array_index& (0+255),w,b
  2407  002AFC  0D02               	mullw	2
  2408  002AFE  0E00               	movlw	low _memory
  2409  002B00  24F3               	addwf	243,w,c
  2410  002B02  6ED9               	movwf	fsr2l,c
  2411  002B04  0E01               	movlw	high _memory
  2412  002B06  20F4               	addwfc	prodh,w,c
  2413  002B08  6EDA               	movwf	fsr2h,c
  2414  002B0A  0E03               	movlw	3
  2415  002B0C  18DE               	xorwf	postinc2,w,c
  2416  002B0E  10DE               	iorwf	postinc2,w,c
  2417  002B10  A4D8               	btfss	status,2,c
  2418  002B12  EF8D  F015         	goto	u5391
  2419  002B16  EF8F  F015         	goto	u5390
  2420  002B1A                     u5391:
  2421  002B1A  EFAB  F015         	goto	l5002
  2422  002B1E                     u5390:
  2423  002B1E                     
  2424                           ; BSR set to: 1
  2425  002B1E  C02D  F020         	movff	goback@mL,turn45@mL
  2426  002B22  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2427  002B26  C02F  F022         	movff	goback@mR,turn45@mR
  2428  002B2A  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2429  002B2E  0E04               	movlw	4
  2430  002B30  6E24               	movwf	turn45@turn_time^0,c
  2431  002B32  0E02               	movlw	2
  2432  002B34  6E25               	movwf	turn45@direction^0,c
  2433  002B36  EC10  F022         	call	_turn45	;wreg free
  2434  002B3A  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2435  002B3E  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2436  002B42  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2437  002B46  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2438  002B4A  0E02               	movlw	2
  2439  002B4C  6E24               	movwf	fullSpeedBack@instruction^0,c
  2440  002B4E  ECD5  F025         	call	_fullSpeedBack	;wreg free
  2441  002B52  EFD8  F014         	goto	l4964
  2442  002B56                     l5002:
  2443                           
  2444                           ; BSR set to: 1
  2445  002B56  5149               	movf	_array_index& (0+255),w,b
  2446  002B58  0D02               	mullw	2
  2447  002B5A  0E00               	movlw	low _memory
  2448  002B5C  24F3               	addwf	243,w,c
  2449  002B5E  6ED9               	movwf	fsr2l,c
  2450  002B60  0E01               	movlw	high _memory
  2451  002B62  20F4               	addwfc	prodh,w,c
  2452  002B64  6EDA               	movwf	fsr2h,c
  2453  002B66  0E04               	movlw	4
  2454  002B68  18DE               	xorwf	postinc2,w,c
  2455  002B6A  10DE               	iorwf	postinc2,w,c
  2456  002B6C  A4D8               	btfss	status,2,c
  2457  002B6E  EFBB  F015         	goto	u5401
  2458  002B72  EFBD  F015         	goto	u5400
  2459  002B76                     u5401:
  2460  002B76  EFD9  F015         	goto	l5008
  2461  002B7A                     u5400:
  2462  002B7A                     
  2463                           ; BSR set to: 1
  2464  002B7A  C02D  F020         	movff	goback@mL,turn45@mL
  2465  002B7E  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2466  002B82  C02F  F022         	movff	goback@mR,turn45@mR
  2467  002B86  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2468  002B8A  0E02               	movlw	2
  2469  002B8C  6E24               	movwf	turn45@turn_time^0,c
  2470  002B8E  0E01               	movlw	1
  2471  002B90  6E25               	movwf	turn45@direction^0,c
  2472  002B92  EC10  F022         	call	_turn45	;wreg free
  2473  002B96  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2474  002B9A  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2475  002B9E  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2476  002BA2  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2477  002BA6  0E03               	movlw	3
  2478  002BA8  6E24               	movwf	fullSpeedBack@instruction^0,c
  2479  002BAA  ECD5  F025         	call	_fullSpeedBack	;wreg free
  2480  002BAE  EFD8  F014         	goto	l4964
  2481  002BB2                     l5008:
  2482                           
  2483                           ; BSR set to: 1
  2484  002BB2  5149               	movf	_array_index& (0+255),w,b
  2485  002BB4  0D02               	mullw	2
  2486  002BB6  0E00               	movlw	low _memory
  2487  002BB8  24F3               	addwf	243,w,c
  2488  002BBA  6ED9               	movwf	fsr2l,c
  2489  002BBC  0E01               	movlw	high _memory
  2490  002BBE  20F4               	addwfc	prodh,w,c
  2491  002BC0  6EDA               	movwf	fsr2h,c
  2492  002BC2  0E05               	movlw	5
  2493  002BC4  18DE               	xorwf	postinc2,w,c
  2494  002BC6  10DE               	iorwf	postinc2,w,c
  2495  002BC8  A4D8               	btfss	status,2,c
  2496  002BCA  EFE9  F015         	goto	u5411
  2497  002BCE  EFEB  F015         	goto	u5410
  2498  002BD2                     u5411:
  2499  002BD2  EF07  F016         	goto	l5014
  2500  002BD6                     u5410:
  2501  002BD6                     
  2502                           ; BSR set to: 1
  2503  002BD6  C02D  F020         	movff	goback@mL,turn45@mL
  2504  002BDA  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2505  002BDE  C02F  F022         	movff	goback@mR,turn45@mR
  2506  002BE2  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2507  002BE6  0E02               	movlw	2
  2508  002BE8  6E24               	movwf	turn45@turn_time^0,c
  2509  002BEA  0E02               	movlw	2
  2510  002BEC  6E25               	movwf	turn45@direction^0,c
  2511  002BEE  EC10  F022         	call	_turn45	;wreg free
  2512  002BF2  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2513  002BF6  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2514  002BFA  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2515  002BFE  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2516  002C02  0E03               	movlw	3
  2517  002C04  6E24               	movwf	fullSpeedBack@instruction^0,c
  2518  002C06  ECD5  F025         	call	_fullSpeedBack	;wreg free
  2519  002C0A  EFD8  F014         	goto	l4964
  2520  002C0E                     l5014:
  2521                           
  2522                           ; BSR set to: 1
  2523  002C0E  5149               	movf	_array_index& (0+255),w,b
  2524  002C10  0D02               	mullw	2
  2525  002C12  0E00               	movlw	low _memory
  2526  002C14  24F3               	addwf	243,w,c
  2527  002C16  6ED9               	movwf	fsr2l,c
  2528  002C18  0E01               	movlw	high _memory
  2529  002C1A  20F4               	addwfc	prodh,w,c
  2530  002C1C  6EDA               	movwf	fsr2h,c
  2531  002C1E  0E06               	movlw	6
  2532  002C20  18DE               	xorwf	postinc2,w,c
  2533  002C22  10DE               	iorwf	postinc2,w,c
  2534  002C24  A4D8               	btfss	status,2,c
  2535  002C26  EF17  F016         	goto	u5421
  2536  002C2A  EF19  F016         	goto	u5420
  2537  002C2E                     u5421:
  2538  002C2E  EF35  F016         	goto	l5020
  2539  002C32                     u5420:
  2540  002C32                     
  2541                           ; BSR set to: 1
  2542  002C32  C02D  F020         	movff	goback@mL,turn45@mL
  2543  002C36  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2544  002C3A  C02F  F022         	movff	goback@mR,turn45@mR
  2545  002C3E  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2546  002C42  0E03               	movlw	3
  2547  002C44  6E24               	movwf	turn45@turn_time^0,c
  2548  002C46  0E01               	movlw	1
  2549  002C48  6E25               	movwf	turn45@direction^0,c
  2550  002C4A  EC10  F022         	call	_turn45	;wreg free
  2551  002C4E  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2552  002C52  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2553  002C56  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2554  002C5A  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2555  002C5E  0E02               	movlw	2
  2556  002C60  6E24               	movwf	fullSpeedBack@instruction^0,c
  2557  002C62  ECD5  F025         	call	_fullSpeedBack	;wreg free
  2558  002C66  EFD8  F014         	goto	l4964
  2559  002C6A                     l5020:
  2560                           
  2561                           ; BSR set to: 1
  2562  002C6A  5149               	movf	_array_index& (0+255),w,b
  2563  002C6C  0D02               	mullw	2
  2564  002C6E  0E00               	movlw	low _memory
  2565  002C70  24F3               	addwf	243,w,c
  2566  002C72  6ED9               	movwf	fsr2l,c
  2567  002C74  0E01               	movlw	high _memory
  2568  002C76  20F4               	addwfc	prodh,w,c
  2569  002C78  6EDA               	movwf	fsr2h,c
  2570  002C7A  0E07               	movlw	7
  2571  002C7C  18DE               	xorwf	postinc2,w,c
  2572  002C7E  10DE               	iorwf	postinc2,w,c
  2573  002C80  A4D8               	btfss	status,2,c
  2574  002C82  EF45  F016         	goto	u5431
  2575  002C86  EF47  F016         	goto	u5430
  2576  002C8A                     u5431:
  2577  002C8A  EF63  F016         	goto	l469
  2578  002C8E                     u5430:
  2579  002C8E                     
  2580                           ; BSR set to: 1
  2581  002C8E  C02D  F020         	movff	goback@mL,turn45@mL
  2582  002C92  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2583  002C96  C02F  F022         	movff	goback@mR,turn45@mR
  2584  002C9A  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2585  002C9E  0E03               	movlw	3
  2586  002CA0  6E24               	movwf	turn45@turn_time^0,c
  2587  002CA2  0E02               	movlw	2
  2588  002CA4  6E25               	movwf	turn45@direction^0,c
  2589  002CA6  EC10  F022         	call	_turn45	;wreg free
  2590  002CAA  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2591  002CAE  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2592  002CB2  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2593  002CB6  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2594  002CBA  0E02               	movlw	2
  2595  002CBC  6E24               	movwf	fullSpeedBack@instruction^0,c
  2596  002CBE  ECD5  F025         	call	_fullSpeedBack	;wreg free
  2597  002CC2  EFD8  F014         	goto	l4964
  2598  002CC6                     l469:
  2599                           
  2600                           ; BSR set to: 1
  2601  002CC6  EFDA  F014         	goto	l4966
  2602  002CCA                     l461:
  2603                           
  2604                           ; BSR set to: 1
  2605                           ;movement.c: 84:     LATDbits.LATD7 = 1;
  2606  002CCA  8E7C               	bsf	124,7,c	;volatile
  2607                           
  2608                           ;movement.c: 85:     while(PORTFbits.RF2){
  2609  002CCC  EF7C  F016         	goto	l475
  2610  002CD0                     l5026:
  2611                           
  2612                           ;movement.c: 86:         stop(mL,mR);
  2613  002CD0  C02D  F01A         	movff	goback@mL,stop@mL
  2614  002CD4  C02E  F01B         	movff	goback@mL+1,stop@mL+1
  2615  002CD8  C02F  F01C         	movff	goback@mR,stop@mR
  2616  002CDC  C030  F01D         	movff	goback@mR+1,stop@mR+1
  2617  002CE0  EC7F  F02B         	call	_stop	;wreg free
  2618  002CE4                     
  2619                           ;movement.c: 87:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0;break;}
  2620  002CE4  B48E               	btfsc	142,2,c	;volatile
  2621  002CE6  EF77  F016         	goto	u5441
  2622  002CEA  EF79  F016         	goto	u5440
  2623  002CEE                     u5441:
  2624  002CEE  EF7C  F016         	goto	l475
  2625  002CF2                     u5440:
  2626  002CF2  9E7C               	bcf	124,7,c	;volatile
  2627  002CF4  EF83  F016         	goto	l479
  2628  002CF8                     l475:
  2629                           
  2630                           ;movement.c: 85:     while(PORTFbits.RF2){
  2631  002CF8  B48E               	btfsc	142,2,c	;volatile
  2632  002CFA  EF81  F016         	goto	u5451
  2633  002CFE  EF83  F016         	goto	u5450
  2634  002D02                     u5451:
  2635  002D02  EF68  F016         	goto	l5026
  2636  002D06                     u5450:
  2637  002D06                     l479:
  2638  002D06  0012               	return		;funcret
  2639  002D08                     __end_of_goback:
  2640                           	callstack 0
  2641                           
  2642 ;; *************** function _fullSpeedBack *****************
  2643 ;; Defined at:
  2644 ;;		line 136 in file "dc_motor.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2647 ;;		 -> main@motorL(9), 
  2648 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2649 ;;		 -> main@motorR(9), 
  2650 ;;  instruction     1   35[COMRAM] unsigned char 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2662 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2665 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2666 ;;Total ram usage:        7 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 4
  2669 ;; This function calls:
  2670 ;;		_setMotorPWM
  2671 ;;		_stop
  2672 ;; This function is called by:
  2673 ;;		_turning_action
  2674 ;;		_goback
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text4
  2679  004BAA                     __ptext4:
  2680                           	callstack 0
  2681  004BAA                     _fullSpeedBack:
  2682                           	callstack 24
  2683  004BAA                     
  2684                           ;dc_motor.c: 136: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR, unsigned 
      +                          char instruction);dc_motor.c: 137: {;dc_motor.c: 138:     mL->direction=0;
  2685  004BAA  EE20 F001          	lfsr	2,1
  2686  004BAE  5020               	movf	fullSpeedBack@mL^0,w,c
  2687  004BB0  26D9               	addwf	fsr2l,f,c
  2688  004BB2  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
  2689  004BB4  22DA               	addwfc	fsr2h,f,c
  2690  004BB6  0E00               	movlw	0
  2691  004BB8  6EDF               	movwf	indf2,c
  2692                           
  2693                           ;dc_motor.c: 139:     mR->direction=0;
  2694  004BBA  EE20 F001          	lfsr	2,1
  2695  004BBE  5022               	movf	fullSpeedBack@mR^0,w,c
  2696  004BC0  26D9               	addwf	fsr2l,f,c
  2697  004BC2  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
  2698  004BC4  22DA               	addwfc	fsr2h,f,c
  2699  004BC6  0E00               	movlw	0
  2700  004BC8  6EDF               	movwf	indf2,c
  2701                           
  2702                           ;dc_motor.c: 140:     while (mL->power<44 || mR->power<44){
  2703  004BCA  EF1F  F026         	goto	l4488
  2704  004BCE                     l4474:
  2705                           
  2706                           ;dc_motor.c: 141:         if (mL->power<44) {mL->power += 2;}
  2707  004BCE  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2708  004BD2  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2709  004BD6  0E2C               	movlw	44
  2710  004BD8  60DF               	cpfslt	indf2,c
  2711  004BDA  EFF1  F025         	goto	u4791
  2712  004BDE  EFF3  F025         	goto	u4790
  2713  004BE2                     u4791:
  2714  004BE2  EFF9  F025         	goto	l4478
  2715  004BE6                     u4790:
  2716  004BE6  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2717  004BEA  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2718  004BEE  0E02               	movlw	2
  2719  004BF0  26DF               	addwf	indf2,f,c
  2720  004BF2                     l4478:
  2721                           
  2722                           ;dc_motor.c: 142:         if (mR->power<44) {mR->power += 2;}
  2723  004BF2  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2724  004BF6  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2725  004BFA  0E2C               	movlw	44
  2726  004BFC  60DF               	cpfslt	indf2,c
  2727  004BFE  EF03  F026         	goto	u4801
  2728  004C02  EF05  F026         	goto	u4800
  2729  004C06                     u4801:
  2730  004C06  EF0B  F026         	goto	l4482
  2731  004C0A                     u4800:
  2732  004C0A  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2733  004C0E  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2734  004C12  0E02               	movlw	2
  2735  004C14  26DF               	addwf	indf2,f,c
  2736  004C16                     l4482:
  2737                           
  2738                           ;dc_motor.c: 143:         setMotorPWM(mL);
  2739  004C16  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
  2740  004C1A  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  2741  004C1E  EC9A  F01E         	call	_setMotorPWM	;wreg free
  2742  004C22                     
  2743                           ;dc_motor.c: 144:         setMotorPWM(mR);
  2744  004C22  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
  2745  004C26  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  2746  004C2A  EC9A  F01E         	call	_setMotorPWM	;wreg free
  2747  004C2E                     
  2748                           ;dc_motor.c: 145:         _delay((unsigned long)((5)*(64000000/4000.0)));
  2749  004C2E  0E68               	movlw	104
  2750  004C30  6E25               	movwf	??_fullSpeedBack^0,c
  2751  004C32  0EE4               	movlw	228
  2752  004C34                     u5947:
  2753  004C34  2EE8               	decfsz	wreg,f,c
  2754  004C36  D7FE               	bra	u5947
  2755  004C38  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2756  004C3A  D7FC               	bra	u5947
  2757  004C3C  D000               	nop2	
  2758  004C3E                     l4488:
  2759                           
  2760                           ;dc_motor.c: 140:     while (mL->power<44 || mR->power<44){
  2761  004C3E  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2762  004C42  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2763  004C46  0E2B               	movlw	43
  2764  004C48  64DF               	cpfsgt	indf2,c
  2765  004C4A  EF29  F026         	goto	u4811
  2766  004C4E  EF2B  F026         	goto	u4810
  2767  004C52                     u4811:
  2768  004C52  EFE7  F025         	goto	l4474
  2769  004C56                     u4810:
  2770  004C56  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2771  004C5A  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2772  004C5E  0E2B               	movlw	43
  2773  004C60  64DF               	cpfsgt	indf2,c
  2774  004C62  EF35  F026         	goto	u4821
  2775  004C66  EF37  F026         	goto	u4820
  2776  004C6A                     u4821:
  2777  004C6A  EFE7  F025         	goto	l4474
  2778  004C6E                     u4820:
  2779  004C6E                     
  2780                           ;dc_motor.c: 148:     if (instruction == 1) {_delay((unsigned long)((600)*(64000000/4000
      +                          .0)));}
  2781  004C6E  0424               	decf	fullSpeedBack@instruction^0,w,c
  2782  004C70  A4D8               	btfss	status,2,c
  2783  004C72  EF3D  F026         	goto	u4831
  2784  004C76  EF3F  F026         	goto	u4830
  2785  004C7A                     u4831:
  2786  004C7A  EF4A  F026         	goto	l4496
  2787  004C7E                     u4830:
  2788  004C7E  0E31               	movlw	49
  2789  004C80  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2790  004C82  0EB4               	movlw	180
  2791  004C84  6E25               	movwf	??_fullSpeedBack^0,c
  2792  004C86  0E66               	movlw	102
  2793  004C88                     u5957:
  2794  004C88  2EE8               	decfsz	wreg,f,c
  2795  004C8A  D7FE               	bra	u5957
  2796  004C8C  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2797  004C8E  D7FC               	bra	u5957
  2798  004C90  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2799  004C92  D7FA               	bra	u5957
  2800  004C94                     l4496:
  2801                           
  2802                           ;dc_motor.c: 149:     if (instruction == 2) {_delay((unsigned long)((1000)*(64000000/400
      +                          0.0)));}
  2803  004C94  0E02               	movlw	2
  2804  004C96  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2805  004C98  A4D8               	btfss	status,2,c
  2806  004C9A  EF51  F026         	goto	u4841
  2807  004C9E  EF53  F026         	goto	u4840
  2808  004CA2                     u4841:
  2809  004CA2  EF5F  F026         	goto	l4500
  2810  004CA6                     u4840:
  2811  004CA6  0E52               	movlw	82
  2812  004CA8  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2813  004CAA  0E2B               	movlw	43
  2814  004CAC  6E25               	movwf	??_fullSpeedBack^0,c
  2815  004CAE  0E00               	movlw	0
  2816  004CB0                     u5967:
  2817  004CB0  2EE8               	decfsz	wreg,f,c
  2818  004CB2  D7FE               	bra	u5967
  2819  004CB4  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2820  004CB6  D7FC               	bra	u5967
  2821  004CB8  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2822  004CBA  D7FA               	bra	u5967
  2823  004CBC  D000               	nop2	
  2824  004CBE                     l4500:
  2825                           
  2826                           ;dc_motor.c: 150:     if (instruction == 3) {_delay((unsigned long)((2000)*(64000000/400
      +                          0.0)));}
  2827  004CBE  0E03               	movlw	3
  2828  004CC0  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2829  004CC2  A4D8               	btfss	status,2,c
  2830  004CC4  EF66  F026         	goto	u4851
  2831  004CC8  EF68  F026         	goto	u4850
  2832  004CCC                     u4851:
  2833  004CCC  EF74  F026         	goto	l4504
  2834  004CD0                     u4850:
  2835  004CD0  0EA3               	movlw	163
  2836  004CD2  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2837  004CD4  0E57               	movlw	87
  2838  004CD6  6E25               	movwf	??_fullSpeedBack^0,c
  2839  004CD8  0E02               	movlw	2
  2840  004CDA                     u5977:
  2841  004CDA  2EE8               	decfsz	wreg,f,c
  2842  004CDC  D7FE               	bra	u5977
  2843  004CDE  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2844  004CE0  D7FC               	bra	u5977
  2845  004CE2  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2846  004CE4  D7FA               	bra	u5977
  2847  004CE6  D000               	nop2	
  2848  004CE8                     l4504:
  2849                           
  2850                           ;dc_motor.c: 151:     stop(mL,mR);
  2851  004CE8  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
  2852  004CEC  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
  2853  004CF0  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
  2854  004CF4  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
  2855  004CF8  EC7F  F02B         	call	_stop	;wreg free
  2856  004CFC  0012               	return		;funcret
  2857  004CFE                     __end_of_fullSpeedBack:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _test_function *****************
  2861 ;; Defined at:
  2862 ;;		line 81 in file "test_and_calibration.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  test_code       1    wreg     unsigned char 
  2865 ;;  m               2    0[BANK1 ] PTR struct color_rgb
  2866 ;;		 -> main@rgb(8), 
  2867 ;;  w               2    2[BANK1 ] PTR struct white_card
  2868 ;;		 -> main@white(28), 
  2869 ;;  mL              2    4[BANK1 ] PTR struct DC_motor
  2870 ;;		 -> main@motorL(9), 
  2871 ;;  mR              2    6[BANK1 ] PTR struct DC_motor
  2872 ;;		 -> main@motorR(9), 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  test_code       1   13[BANK1 ] unsigned char 
  2875 ;;  amb_light       2    8[BANK1 ] unsigned int 
  2876 ;;  stop_signal     1   12[BANK1 ] unsigned char 
  2877 ;;  color           1   11[BANK1 ] unsigned char 
  2878 ;;  complete        1   10[BANK1 ] unsigned char 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2888 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2891 ;;      Totals:         0       2      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2892 ;;Total ram usage:       16 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 11
  2895 ;; This function calls:
  2896 ;;		_LED_C
  2897 ;;		_amb_light_measure
  2898 ;;		_calibrate_white
  2899 ;;		_color_data_collection
  2900 ;;		_color_display
  2901 ;;		_color_predict
  2902 ;;		_detect_color
  2903 ;;		_detect_wall
  2904 ;;		_fullSpeedAhead
  2905 ;;		_read_color
  2906 ;;		_stop
  2907 ;;		_test_action
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text5
  2914  004270                     __ptext5:
  2915                           	callstack 0
  2916  004270                     _test_function:
  2917                           	callstack 19
  2918                           
  2919                           ;incstack = 0
  2920                           ;test_function@test_code stored from wreg
  2921  004270  0101               	movlb	1	; () banked
  2922  004272  6F77               	movwf	test_function@test_code& (0+255),b
  2923  004274                     
  2924                           ;test_and_calibration.c: 81: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 82: {;test_and_calibration.c: 83:     unsigned char complete = 0;
  2925  004274  0E00               	movlw	0
  2926  004276  0101               	movlb	1	; () banked
  2927  004278  6F74               	movwf	test_function@complete& (0+255),b
  2928                           
  2929                           ;test_and_calibration.c: 85:     unsigned char stop_signal = 0;
  2930  00427A  0E00               	movlw	0
  2931  00427C  6F76               	movwf	test_function@stop_signal& (0+255),b
  2932                           
  2933                           ;test_and_calibration.c: 86:     unsigned int amb_light = 0;
  2934  00427E  0E00               	movlw	0
  2935  004280  6F73               	movwf	(test_function@amb_light+1)& (0+255),b
  2936  004282  0E00               	movlw	0
  2937  004284  6F72               	movwf	test_function@amb_light& (0+255),b
  2938  004286                     
  2939                           ; BSR set to: 1
  2940                           ;test_and_calibration.c: 88:     if (test_code == 2){calibrate_white(w);}
  2941  004286  0E02               	movlw	2
  2942  004288  1977               	xorwf	test_function@test_code& (0+255),w,b
  2943  00428A  A4D8               	btfss	status,2,c
  2944  00428C  EF4A  F021         	goto	u5671
  2945  004290  EF4C  F021         	goto	u5670
  2946  004294                     u5671:
  2947  004294  EF52  F021         	goto	l5258
  2948  004298                     u5670:
  2949  004298                     
  2950                           ; BSR set to: 1
  2951  004298  C16C  F00C         	movff	test_function@w,calibrate_white@w
  2952  00429C  C16D  F00D         	movff	test_function@w+1,calibrate_white@w+1
  2953  0042A0  EC95  F01D         	call	_calibrate_white	;wreg free
  2954  0042A4                     l5258:
  2955                           
  2956                           ;test_and_calibration.c: 89:     if (test_code == 4){amb_light = amb_light_measure(m);}
  2957  0042A4  0E04               	movlw	4
  2958  0042A6  0101               	movlb	1	; () banked
  2959  0042A8  1977               	xorwf	test_function@test_code& (0+255),w,b
  2960  0042AA  A4D8               	btfss	status,2,c
  2961  0042AC  EF5A  F021         	goto	u5681
  2962  0042B0  EF5C  F021         	goto	u5680
  2963  0042B4                     u5681:
  2964  0042B4  EF66  F021         	goto	l5262
  2965  0042B8                     u5680:
  2966  0042B8                     
  2967                           ; BSR set to: 1
  2968  0042B8  C16A  F06A         	movff	test_function@m,amb_light_measure@amb
  2969  0042BC  C16B  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  2970  0042C0  EC16  F027         	call	_amb_light_measure	;wreg free
  2971  0042C4  C06A  F172         	movff	?_amb_light_measure,test_function@amb_light
  2972  0042C8  C06B  F173         	movff	?_amb_light_measure+1,test_function@amb_light+1
  2973  0042CC                     l5262:
  2974                           
  2975                           ;test_and_calibration.c: 93:         if (test_code == 1){
  2976  0042CC  0101               	movlb	1	; () banked
  2977  0042CE  0577               	decf	test_function@test_code& (0+255),w,b
  2978  0042D0  A4D8               	btfss	status,2,c
  2979  0042D2  EF6D  F021         	goto	u5691
  2980  0042D6  EF6F  F021         	goto	u5690
  2981  0042DA                     u5691:
  2982  0042DA  EF7D  F021         	goto	l5270
  2983  0042DE                     u5690:
  2984  0042DE                     
  2985                           ; BSR set to: 1
  2986                           ;test_and_calibration.c: 94:             LED_C();
  2987  0042DE  ECB7  F02F         	call	_LED_C	;wreg free
  2988  0042E2                     
  2989                           ;test_and_calibration.c: 95:             read_color(m);
  2990  0042E2  C16A  F00C         	movff	test_function@m,read_color@m
  2991  0042E6  C16B  F00D         	movff	test_function@m+1,read_color@m+1
  2992  0042EA  EC8C  F02C         	call	_read_color	;wreg free
  2993  0042EE                     
  2994                           ;test_and_calibration.c: 96:             color_display(m);
  2995  0042EE  C16A  F058         	movff	test_function@m,color_display@m
  2996  0042F2  C16B  F059         	movff	test_function@m+1,color_display@m+1
  2997  0042F6  EC23  F02C         	call	_color_display	;wreg free
  2998  0042FA                     l5270:
  2999                           
  3000                           ;test_and_calibration.c: 99:         if (test_code == 2){
  3001  0042FA  0E02               	movlw	2
  3002  0042FC  0101               	movlb	1	; () banked
  3003  0042FE  1977               	xorwf	test_function@test_code& (0+255),w,b
  3004  004300  A4D8               	btfss	status,2,c
  3005  004302  EF85  F021         	goto	u5701
  3006  004306  EF87  F021         	goto	u5700
  3007  00430A                     u5701:
  3008  00430A  EF96  F021         	goto	l5276
  3009  00430E                     u5700:
  3010  00430E                     
  3011                           ; BSR set to: 1
  3012                           ;test_and_calibration.c: 100:             color = detect_color(m,w);
  3013  00430E  C16A  F079         	movff	test_function@m,detect_color@m
  3014  004312  C16B  F07A         	movff	test_function@m+1,detect_color@m+1
  3015  004316  C16C  F07B         	movff	test_function@w,detect_color@w
  3016  00431A  C16D  F07C         	movff	test_function@w+1,detect_color@w+1
  3017  00431E  EC0A  F007         	call	_detect_color	;wreg free
  3018  004322  0101               	movlb	1	; () banked
  3019  004324  6F75               	movwf	test_function@color& (0+255),b
  3020  004326                     
  3021                           ; BSR set to: 1
  3022                           ;test_and_calibration.c: 102:             color_predict(color);
  3023  004326  5175               	movf	test_function@color& (0+255),w,b
  3024  004328  EC24  F02F         	call	_color_predict
  3025  00432C                     l5276:
  3026                           
  3027                           ;test_and_calibration.c: 105:         if (test_code == 3){
  3028  00432C  0E03               	movlw	3
  3029  00432E  0101               	movlb	1	; () banked
  3030  004330  1977               	xorwf	test_function@test_code& (0+255),w,b
  3031  004332  A4D8               	btfss	status,2,c
  3032  004334  EF9E  F021         	goto	u5711
  3033  004338  EFA0  F021         	goto	u5710
  3034  00433C                     u5711:
  3035  00433C  EFB3  F021         	goto	l5286
  3036  004340                     u5710:
  3037  004340  EFAB  F021         	goto	l5284
  3038  004344                     l5280:
  3039                           
  3040                           ; BSR set to: 1
  3041                           ;test_and_calibration.c: 107:                 color_data_collection(m);
  3042  004344  C16A  F05A         	movff	test_function@m,color_data_collection@m
  3043  004348  C16B  F05B         	movff	test_function@m+1,color_data_collection@m+1
  3044  00434C  ECE8  F022         	call	_color_data_collection	;wreg free
  3045  004350                     
  3046                           ;test_and_calibration.c: 108:                 complete = 1;
  3047  004350  0E01               	movlw	1
  3048  004352  0101               	movlb	1	; () banked
  3049  004354  6F74               	movwf	test_function@complete& (0+255),b
  3050  004356                     l5284:
  3051                           
  3052                           ; BSR set to: 1
  3053                           ;test_and_calibration.c: 106:             while (complete == 0){
  3054  004356  5174               	movf	test_function@complete& (0+255),w,b
  3055  004358  B4D8               	btfsc	status,2,c
  3056  00435A  EFB1  F021         	goto	u5721
  3057  00435E  EFB3  F021         	goto	u5720
  3058  004362                     u5721:
  3059  004362  EFA2  F021         	goto	l5280
  3060  004366                     u5720:
  3061  004366                     l5286:
  3062                           
  3063                           ; BSR set to: 1
  3064                           ;test_and_calibration.c: 112:         if (test_code == 4){
  3065  004366  0E04               	movlw	4
  3066  004368  1977               	xorwf	test_function@test_code& (0+255),w,b
  3067  00436A  A4D8               	btfss	status,2,c
  3068  00436C  EFBA  F021         	goto	u5731
  3069  004370  EFBC  F021         	goto	u5730
  3070  004374                     u5731:
  3071  004374  EFFA  F021         	goto	l5302
  3072  004378                     u5730:
  3073  004378  EFD8  F021         	goto	l5294
  3074  00437C                     l5290:
  3075                           
  3076                           ; BSR set to: 1
  3077                           ;test_and_calibration.c: 114:                 fullSpeedAhead(mL, mR);
  3078  00437C  C16E  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  3079  004380  C16F  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  3080  004384  C170  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  3081  004388  C171  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  3082  00438C  ECBB  F02A         	call	_fullSpeedAhead	;wreg free
  3083  004390                     
  3084                           ;test_and_calibration.c: 115:                 stop_signal = detect_wall(mL, mR, amb_ligh
      +                          t);
  3085  004390  C16E  F06A         	movff	test_function@mL,detect_wall@mL
  3086  004394  C16F  F06B         	movff	test_function@mL+1,detect_wall@mL+1
  3087  004398  C170  F06C         	movff	test_function@mR,detect_wall@mR
  3088  00439C  C171  F06D         	movff	test_function@mR+1,detect_wall@mR+1
  3089  0043A0  C172  F06E         	movff	test_function@amb_light,detect_wall@amb_light
  3090  0043A4  C173  F06F         	movff	test_function@amb_light+1,detect_wall@amb_light+1
  3091  0043A8  ECF5  F029         	call	_detect_wall	;wreg free
  3092  0043AC  0101               	movlb	1	; () banked
  3093  0043AE  6F76               	movwf	test_function@stop_signal& (0+255),b
  3094  0043B0                     l5294:
  3095                           
  3096                           ; BSR set to: 1
  3097                           ;test_and_calibration.c: 113:             while (stop_signal == 0){
  3098  0043B0  5176               	movf	test_function@stop_signal& (0+255),w,b
  3099  0043B2  B4D8               	btfsc	status,2,c
  3100  0043B4  EFDE  F021         	goto	u5741
  3101  0043B8  EFE0  F021         	goto	u5740
  3102  0043BC                     u5741:
  3103  0043BC  EFBE  F021         	goto	l5290
  3104  0043C0                     u5740:
  3105  0043C0                     
  3106                           ; BSR set to: 1
  3107                           ;test_and_calibration.c: 117:             stop(mL, mR);
  3108  0043C0  C16E  F01A         	movff	test_function@mL,stop@mL
  3109  0043C4  C16F  F01B         	movff	test_function@mL+1,stop@mL+1
  3110  0043C8  C170  F01C         	movff	test_function@mR,stop@mR
  3111  0043CC  C171  F01D         	movff	test_function@mR+1,stop@mR+1
  3112  0043D0  EC7F  F02B         	call	_stop	;wreg free
  3113  0043D4                     
  3114                           ;test_and_calibration.c: 118:             _delay((unsigned long)((1000)*(64000000/4000.0
      +                          )));
  3115  0043D4  0E52               	movlw	82
  3116  0043D6  0100               	movlb	0	; () banked
  3117  0043D8  6FFF               	movwf	(??_test_function+1)& (0+255),b
  3118  0043DA  0E2B               	movlw	43
  3119  0043DC  6FFE               	movwf	??_test_function& (0+255),b
  3120  0043DE  0E00               	movlw	0
  3121  0043E0                     u5987:
  3122  0043E0  2EE8               	decfsz	wreg,f,c
  3123  0043E2  D7FE               	bra	u5987
  3124  0043E4  2FFE               	decfsz	??_test_function& (0+255),f,b
  3125  0043E6  D7FC               	bra	u5987
  3126  0043E8  2FFF               	decfsz	(??_test_function+1)& (0+255),f,b
  3127  0043EA  D7FA               	bra	u5987
  3128  0043EC  F000               	nop	
  3129  0043EE                     
  3130                           ;test_and_calibration.c: 119:             stop_signal = 0;
  3131  0043EE  0E00               	movlw	0
  3132  0043F0  0101               	movlb	1	; () banked
  3133  0043F2  6F76               	movwf	test_function@stop_signal& (0+255),b
  3134  0043F4                     l5302:
  3135                           
  3136                           ; BSR set to: 1
  3137                           ;test_and_calibration.c: 122:         if (test_code == 5){
  3138  0043F4  0E05               	movlw	5
  3139  0043F6  1977               	xorwf	test_function@test_code& (0+255),w,b
  3140  0043F8  A4D8               	btfss	status,2,c
  3141  0043FA  EF01  F022         	goto	u5751
  3142  0043FE  EF03  F022         	goto	u5750
  3143  004402                     u5751:
  3144  004402  EF66  F021         	goto	l5262
  3145  004406                     u5750:
  3146  004406                     
  3147                           ; BSR set to: 1
  3148                           ;test_and_calibration.c: 123:             test_action(mL,mR);
  3149  004406  C16E  F02D         	movff	test_function@mL,test_action@mL
  3150  00440A  C16F  F02E         	movff	test_function@mL+1,test_action@mL+1
  3151  00440E  C170  F02F         	movff	test_function@mR,test_action@mR
  3152  004412  C171  F030         	movff	test_function@mR+1,test_action@mR+1
  3153  004416  EC7F  F026         	call	_test_action	;wreg free
  3154  00441A  EF66  F021         	goto	l5262
  3155  00441E  0012               	return		;funcret
  3156  004420                     __end_of_test_function:
  3157                           	callstack 0
  3158                           
  3159 ;; *************** function _detect_wall *****************
  3160 ;; Defined at:
  3161 ;;		line 382 in file "color.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  3164 ;;		 -> main@motorL(9), 
  3165 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  3166 ;;		 -> main@motorR(9), 
  3167 ;;  amb_light       2   14[BANK0 ] unsigned int 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  threshold       2   26[BANK0 ] unsigned int 
  3170 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  3171 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  3172 ;;  stop            1   28[BANK0 ] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      unsigned char 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3182 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3183 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3184 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3185 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3186 ;;Total ram usage:       19 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; Hardware stack levels required when called: 5
  3189 ;; This function calls:
  3190 ;;		_LED_C
  3191 ;;		___flmul
  3192 ;;		___xxtofl
  3193 ;;		_color_read_Clear
  3194 ;;		_color_read_Green
  3195 ;;		_lroundf
  3196 ;; This function is called by:
  3197 ;;		_main
  3198 ;;		_test_function
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text6
  3203  0053EA                     __ptext6:
  3204                           	callstack 0
  3205  0053EA                     _detect_wall:
  3206                           	callstack 24
  3207  0053EA  0E00               	movlw	0
  3208  0053EC  0100               	movlb	0	; () banked
  3209  0053EE  6F73               	movwf	(detect_wall@CG_amb+1)& (0+255),b
  3210  0053F0  0E00               	movlw	0
  3211  0053F2  6F72               	movwf	detect_wall@CG_amb& (0+255),b
  3212                           
  3213                           ;color.c: 385:     unsigned char stop = 0;
  3214  0053F4  0E00               	movlw	0
  3215  0053F6  6F7C               	movwf	detect_wall@stop& (0+255),b
  3216                           
  3217                           ;color.c: 386:     unsigned int threshold = 0;
  3218  0053F8  0E00               	movlw	0
  3219  0053FA  6F7B               	movwf	(detect_wall@threshold+1)& (0+255),b
  3220  0053FC  0E00               	movlw	0
  3221  0053FE  6F7A               	movwf	detect_wall@threshold& (0+255),b
  3222  005400                     
  3223                           ; BSR set to: 0
  3224                           ;color.c: 387:     LED_C();
  3225  005400  ECB7  F02F         	call	_LED_C	;wreg free
  3226  005404                     
  3227                           ;color.c: 388:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3228  005404  0E09               	movlw	9
  3229  005406  0100               	movlb	0	; () banked
  3230  005408  6F71               	movwf	(??_detect_wall+1)& (0+255),b
  3231  00540A  0E1E               	movlw	30
  3232  00540C  6F70               	movwf	??_detect_wall& (0+255),b
  3233  00540E  0EE4               	movlw	228
  3234  005410                     u5997:
  3235  005410  2EE8               	decfsz	wreg,f,c
  3236  005412  D7FE               	bra	u5997
  3237  005414  2F70               	decfsz	??_detect_wall& (0+255),f,b
  3238  005416  D7FC               	bra	u5997
  3239  005418  2F71               	decfsz	(??_detect_wall+1)& (0+255),f,b
  3240  00541A  D7FA               	bra	u5997
  3241  00541C  F000               	nop	
  3242  00541E                     
  3243                           ;color.c: 389:     CC_amb = color_read_Clear();
  3244  00541E  EC5C  F02D         	call	_color_read_Clear	;wreg free
  3245  005422  C005  F078         	movff	?_color_read_Clear,detect_wall@CC_amb
  3246  005426  C006  F079         	movff	?_color_read_Clear+1,detect_wall@CC_amb+1
  3247  00542A  EC0C  F02D         	call	_color_read_Green	;wreg free
  3248  00542E                     
  3249                           ;color.c: 391:     threshold = lroundf((float)amb_light * 1.1);
  3250  00542E  C06E  F001         	movff	detect_wall@amb_light,___xxtofl@val
  3251  005432  C06F  F002         	movff	detect_wall@amb_light+1,___xxtofl@val+1
  3252  005436  6A03               	clrf	(___xxtofl@val+2)^0,c
  3253  005438  6A04               	clrf	(___xxtofl@val+3)^0,c
  3254  00543A  0E00               	movlw	0
  3255  00543C  EC5E  F020         	call	___xxtofl
  3256  005440  C001  F028         	movff	?___xxtofl,___flmul@b
  3257  005444  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  3258  005448  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  3259  00544C  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  3260  005450  0ECD               	movlw	205
  3261  005452  6E2C               	movwf	___flmul@a^0,c
  3262  005454  0ECC               	movlw	204
  3263  005456  6E2D               	movwf	(___flmul@a+1)^0,c
  3264  005458  0E8C               	movlw	140
  3265  00545A  6E2E               	movwf	(___flmul@a+2)^0,c
  3266  00545C  0E3F               	movlw	63
  3267  00545E  6E2F               	movwf	(___flmul@a+3)^0,c
  3268  005460  ECC6  F010         	call	___flmul	;wreg free
  3269  005464  C028  F074         	movff	?___flmul,_detect_wall$2949
  3270  005468  C029  F075         	movff	?___flmul+1,_detect_wall$2949+1
  3271  00546C  C02A  F076         	movff	?___flmul+2,_detect_wall$2949+2
  3272  005470  C02B  F077         	movff	?___flmul+3,_detect_wall$2949+3
  3273  005474                     
  3274                           ;color.c: 391:     threshold = lroundf((float)amb_light * 1.1);
  3275  005474  C074  F066         	movff	_detect_wall$2949,lroundf@x
  3276  005478  C075  F067         	movff	_detect_wall$2949+1,lroundf@x+1
  3277  00547C  C076  F068         	movff	_detect_wall$2949+2,lroundf@x+2
  3278  005480  C077  F069         	movff	_detect_wall$2949+3,lroundf@x+3
  3279  005484  EC69  F02E         	call	_lroundf	;wreg free
  3280  005488  C066  F07A         	movff	?_lroundf,detect_wall@threshold
  3281  00548C  C067  F07B         	movff	?_lroundf+1,detect_wall@threshold+1
  3282  005490                     
  3283                           ;color.c: 394:     if (CC_amb >= threshold){stop = 1;}
  3284  005490  0100               	movlb	0	; () banked
  3285  005492  517A               	movf	detect_wall@threshold& (0+255),w,b
  3286  005494  5D78               	subwf	detect_wall@CC_amb& (0+255),w,b
  3287  005496  517B               	movf	(detect_wall@threshold+1)& (0+255),w,b
  3288  005498  5979               	subwfb	(detect_wall@CC_amb+1)& (0+255),w,b
  3289  00549A  A0D8               	btfss	status,0,c
  3290  00549C  EF52  F02A         	goto	u5341
  3291  0054A0  EF54  F02A         	goto	u5340
  3292  0054A4                     u5341:
  3293  0054A4  EF56  F02A         	goto	l148
  3294  0054A8                     u5340:
  3295  0054A8                     
  3296                           ; BSR set to: 0
  3297  0054A8  0E01               	movlw	1
  3298  0054AA  6F7C               	movwf	detect_wall@stop& (0+255),b
  3299  0054AC                     l148:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;color.c: 395:     return stop;
  3303  0054AC  517C               	movf	detect_wall@stop& (0+255),w,b
  3304  0054AE                     
  3305                           ; BSR set to: 0
  3306  0054AE  0012               	return		;funcret
  3307  0054B0                     __end_of_detect_wall:
  3308                           	callstack 0
  3309                           
  3310 ;; *************** function _detect_color *****************
  3311 ;; Defined at:
  3312 ;;		line 270 in file "color.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  m               2   25[BANK0 ] PTR struct color_rgb
  3315 ;;		 -> main@rgb(8), 
  3316 ;;  w               2   27[BANK0 ] PTR struct white_card
  3317 ;;		 -> main@white(28), 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  buf           100   33[BANK0 ] unsigned char [100]
  3320 ;;  RR              2  152[BANK0 ] unsigned int 
  3321 ;;  BG              2  150[BANK0 ] unsigned int 
  3322 ;;  GG              2  147[BANK0 ] unsigned int 
  3323 ;;  GB              2  145[BANK0 ] unsigned int 
  3324 ;;  BB              2  143[BANK0 ] unsigned int 
  3325 ;;  RB              2  141[BANK0 ] unsigned int 
  3326 ;;  GR              2  139[BANK0 ] unsigned int 
  3327 ;;  BR              2  137[BANK0 ] unsigned int 
  3328 ;;  RG              2  135[BANK0 ] unsigned int 
  3329 ;;  BC              2  133[BANK0 ] unsigned int 
  3330 ;;  color           1  149[BANK0 ] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      unsigned char 
  3333 ;; Registers used:
  3334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3340 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3341 ;;      Locals:         0     125       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3342 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3343 ;;      Totals:         0     133       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3344 ;;Total ram usage:      133 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; Hardware stack levels required when called: 9
  3347 ;; This function calls:
  3348 ;;		_LED_B
  3349 ;;		_LED_G
  3350 ;;		_LED_R
  3351 ;;		___fldiv
  3352 ;;		___flmul
  3353 ;;		___fltol
  3354 ;;		___xxtofl
  3355 ;;		_compare
  3356 ;;		_lroundf
  3357 ;;		_read_color
  3358 ;;		_sendStringSerial4
  3359 ;;		_sprintf
  3360 ;;		_toggle_light
  3361 ;; This function is called by:
  3362 ;;		_verify_color
  3363 ;;		_main
  3364 ;;		_test_function
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text7
  3369  000E14                     __ptext7:
  3370                           	callstack 0
  3371  000E14                     _detect_color:
  3372                           	callstack 20
  3373  000E14  0E00               	movlw	0
  3374  000E16  0100               	movlb	0	; () banked
  3375  000E18  6FE8               	movwf	(detect_color@RG+1)& (0+255),b
  3376  000E1A  0E00               	movlw	0
  3377  000E1C  6FE7               	movwf	detect_color@RG& (0+255),b
  3378  000E1E  0E00               	movlw	0
  3379  000E20  6FEE               	movwf	(detect_color@RB+1)& (0+255),b
  3380  000E22  0E00               	movlw	0
  3381  000E24  6FED               	movwf	detect_color@RB& (0+255),b
  3382  000E26  0E00               	movlw	0
  3383  000E28  6FEC               	movwf	(detect_color@GR+1)& (0+255),b
  3384  000E2A  0E00               	movlw	0
  3385  000E2C  6FEB               	movwf	detect_color@GR& (0+255),b
  3386  000E2E  0E00               	movlw	0
  3387  000E30  6FF4               	movwf	(detect_color@GG+1)& (0+255),b
  3388  000E32  0E00               	movlw	0
  3389  000E34  6FF3               	movwf	detect_color@GG& (0+255),b
  3390  000E36  0E00               	movlw	0
  3391  000E38  6FF2               	movwf	(detect_color@GB+1)& (0+255),b
  3392  000E3A  0E00               	movlw	0
  3393  000E3C  6FF1               	movwf	detect_color@GB& (0+255),b
  3394  000E3E  0E00               	movlw	0
  3395  000E40  6FEA               	movwf	(detect_color@BR+1)& (0+255),b
  3396  000E42  0E00               	movlw	0
  3397  000E44  6FE9               	movwf	detect_color@BR& (0+255),b
  3398  000E46  0E00               	movlw	0
  3399  000E48  6FF7               	movwf	(detect_color@BG+1)& (0+255),b
  3400  000E4A  0E00               	movlw	0
  3401  000E4C  6FF6               	movwf	detect_color@BG& (0+255),b
  3402  000E4E  0E00               	movlw	0
  3403  000E50  6FF0               	movwf	(detect_color@BB+1)& (0+255),b
  3404  000E52  0E00               	movlw	0
  3405  000E54  6FEF               	movwf	detect_color@BB& (0+255),b
  3406  000E56  0E00               	movlw	0
  3407  000E58  6FE6               	movwf	(detect_color@BC+1)& (0+255),b
  3408  000E5A  0E00               	movlw	0
  3409  000E5C  6FE5               	movwf	detect_color@BC& (0+255),b
  3410                           
  3411                           ;color.c: 276:     unsigned char color = 0;
  3412  000E5E  0E00               	movlw	0
  3413  000E60  6FF5               	movwf	detect_color@color& (0+255),b
  3414  000E62                     
  3415                           ; BSR set to: 0
  3416                           ;color.c: 278:     LED_R();
  3417  000E62  EC77  F02F         	call	_LED_R	;wreg free
  3418  000E66                     
  3419                           ;color.c: 279:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3420  000E66  0E09               	movlw	9
  3421  000E68  0100               	movlb	0	; () banked
  3422  000E6A  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  3423  000E6C  0E1E               	movlw	30
  3424  000E6E  6F7D               	movwf	??_detect_color& (0+255),b
  3425  000E70  0EE4               	movlw	228
  3426  000E72                     u6007:
  3427  000E72  2EE8               	decfsz	wreg,f,c
  3428  000E74  D7FE               	bra	u6007
  3429  000E76  2F7D               	decfsz	??_detect_color& (0+255),f,b
  3430  000E78  D7FC               	bra	u6007
  3431  000E7A  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  3432  000E7C  D7FA               	bra	u6007
  3433  000E7E  F000               	nop	
  3434  000E80                     
  3435                           ;color.c: 280:     read_color(m);
  3436  000E80  C079  F00C         	movff	detect_color@m,read_color@m
  3437  000E84  C07A  F00D         	movff	detect_color@m+1,read_color@m+1
  3438  000E88  EC8C  F02C         	call	_read_color	;wreg free
  3439  000E8C                     
  3440                           ;color.c: 282:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3441  000E8C  C07B  FFD9         	movff	detect_color@w,fsr2l
  3442  000E90  C07C  FFDA         	movff	detect_color@w+1,fsr2h
  3443  000E94  CFDE F07D          	movff	postinc2,??_detect_color
  3444  000E98  CFDD F07E          	movff	postdec2,??_detect_color+1
  3445  000E9C  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3446  000EA0  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3447  000EA4  6A03               	clrf	(___xxtofl@val+2)^0,c
  3448  000EA6  6A04               	clrf	(___xxtofl@val+3)^0,c
  3449  000EA8  0E00               	movlw	0
  3450  000EAA  EC5E  F020         	call	___xxtofl
  3451  000EAE  C001  F013         	movff	?___xxtofl,___fldiv@a
  3452  000EB2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3453  000EB6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3454  000EBA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3455  000EBE  C079  FFD9         	movff	detect_color@m,fsr2l
  3456  000EC2  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  3457  000EC6  CFDE F07F          	movff	postinc2,??_detect_color+2
  3458  000ECA  CFDD F080          	movff	postdec2,??_detect_color+3
  3459  000ECE  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3460  000ED2  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3461  000ED6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3462  000ED8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3463  000EDA  0E00               	movlw	0
  3464  000EDC  EC5E  F020         	call	___xxtofl
  3465  000EE0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3466  000EE4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3467  000EE8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3468  000EEC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3469  000EF0  EC84  F016         	call	___fldiv	;wreg free
  3470  000EF4  C00F  F028         	movff	?___fldiv,___flmul@b
  3471  000EF8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3472  000EFC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3473  000F00  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3474  000F04  0E00               	movlw	0
  3475  000F06  6E2C               	movwf	___flmul@a^0,c
  3476  000F08  0E00               	movlw	0
  3477  000F0A  6E2D               	movwf	(___flmul@a+1)^0,c
  3478  000F0C  0EC8               	movlw	200
  3479  000F0E  6E2E               	movwf	(___flmul@a+2)^0,c
  3480  000F10  0E42               	movlw	66
  3481  000F12  6E2F               	movwf	(___flmul@a+3)^0,c
  3482  000F14  ECC6  F010         	call	___flmul	;wreg free
  3483  000F18  C028  F0FA         	movff	?___flmul,_detect_color$2948
  3484  000F1C  C029  F0FB         	movff	?___flmul+1,_detect_color$2948+1
  3485  000F20  C02A  F0FC         	movff	?___flmul+2,_detect_color$2948+2
  3486  000F24  C02B  F0FD         	movff	?___flmul+3,_detect_color$2948+3
  3487  000F28                     
  3488                           ;color.c: 282:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3489  000F28  C0FA  F066         	movff	_detect_color$2948,lroundf@x
  3490  000F2C  C0FB  F067         	movff	_detect_color$2948+1,lroundf@x+1
  3491  000F30  C0FC  F068         	movff	_detect_color$2948+2,lroundf@x+2
  3492  000F34  C0FD  F069         	movff	_detect_color$2948+3,lroundf@x+3
  3493  000F38  EC69  F02E         	call	_lroundf	;wreg free
  3494  000F3C  C066  F0F8         	movff	?_lroundf,detect_color@RR
  3495  000F40  C067  F0F9         	movff	?_lroundf+1,detect_color@RR+1
  3496  000F44  0100               	movlb	0	; () banked
  3497  000F46  EE20 F002          	lfsr	2,2
  3498  000F4A  517B               	movf	detect_color@w& (0+255),w,b
  3499  000F4C  26D9               	addwf	fsr2l,f,c
  3500  000F4E  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3501  000F50  22DA               	addwfc	fsr2h,f,c
  3502  000F52  CFDE F07D          	movff	postinc2,??_detect_color
  3503  000F56  CFDD F07E          	movff	postdec2,??_detect_color+1
  3504  000F5A  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3505  000F5E  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3506  000F62  6A03               	clrf	(___xxtofl@val+2)^0,c
  3507  000F64  6A04               	clrf	(___xxtofl@val+3)^0,c
  3508  000F66  0E00               	movlw	0
  3509  000F68  EC5E  F020         	call	___xxtofl
  3510  000F6C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3511  000F70  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3512  000F74  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3513  000F78  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3514  000F7C  0100               	movlb	0	; () banked
  3515  000F7E  EE20 F002          	lfsr	2,2
  3516  000F82  5179               	movf	detect_color@m& (0+255),w,b
  3517  000F84  26D9               	addwf	fsr2l,f,c
  3518  000F86  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3519  000F88  22DA               	addwfc	fsr2h,f,c
  3520  000F8A  CFDE F07F          	movff	postinc2,??_detect_color+2
  3521  000F8E  CFDD F080          	movff	postdec2,??_detect_color+3
  3522  000F92  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3523  000F96  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3524  000F9A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3525  000F9C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3526  000F9E  0E00               	movlw	0
  3527  000FA0  EC5E  F020         	call	___xxtofl
  3528  000FA4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3529  000FA8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3530  000FAC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3531  000FB0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3532  000FB4  EC84  F016         	call	___fldiv	;wreg free
  3533  000FB8  C00F  F028         	movff	?___fldiv,___flmul@b
  3534  000FBC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3535  000FC0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3536  000FC4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3537  000FC8  0E00               	movlw	0
  3538  000FCA  6E2C               	movwf	___flmul@a^0,c
  3539  000FCC  0E00               	movlw	0
  3540  000FCE  6E2D               	movwf	(___flmul@a+1)^0,c
  3541  000FD0  0EC8               	movlw	200
  3542  000FD2  6E2E               	movwf	(___flmul@a+2)^0,c
  3543  000FD4  0E42               	movlw	66
  3544  000FD6  6E2F               	movwf	(___flmul@a+3)^0,c
  3545  000FD8  ECC6  F010         	call	___flmul	;wreg free
  3546  000FDC  C028  F0FA         	movff	?___flmul,_detect_color$2948
  3547  000FE0  C029  F0FB         	movff	?___flmul+1,_detect_color$2948+1
  3548  000FE4  C02A  F0FC         	movff	?___flmul+2,_detect_color$2948+2
  3549  000FE8  C02B  F0FD         	movff	?___flmul+3,_detect_color$2948+3
  3550  000FEC  C0FA  F066         	movff	_detect_color$2948,lroundf@x
  3551  000FF0  C0FB  F067         	movff	_detect_color$2948+1,lroundf@x+1
  3552  000FF4  C0FC  F068         	movff	_detect_color$2948+2,lroundf@x+2
  3553  000FF8  C0FD  F069         	movff	_detect_color$2948+3,lroundf@x+3
  3554  000FFC  EC69  F02E         	call	_lroundf	;wreg free
  3555  001000  C066  F0E7         	movff	?_lroundf,detect_color@RG
  3556  001004  C067  F0E8         	movff	?_lroundf+1,detect_color@RG+1
  3557  001008  0100               	movlb	0	; () banked
  3558  00100A  EE20 F004          	lfsr	2,4
  3559  00100E  517B               	movf	detect_color@w& (0+255),w,b
  3560  001010  26D9               	addwf	fsr2l,f,c
  3561  001012  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3562  001014  22DA               	addwfc	fsr2h,f,c
  3563  001016  CFDE F07D          	movff	postinc2,??_detect_color
  3564  00101A  CFDD F07E          	movff	postdec2,??_detect_color+1
  3565  00101E  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3566  001022  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3567  001026  6A03               	clrf	(___xxtofl@val+2)^0,c
  3568  001028  6A04               	clrf	(___xxtofl@val+3)^0,c
  3569  00102A  0E00               	movlw	0
  3570  00102C  EC5E  F020         	call	___xxtofl
  3571  001030  C001  F013         	movff	?___xxtofl,___fldiv@a
  3572  001034  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3573  001038  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3574  00103C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3575  001040  0100               	movlb	0	; () banked
  3576  001042  EE20 F004          	lfsr	2,4
  3577  001046  5179               	movf	detect_color@m& (0+255),w,b
  3578  001048  26D9               	addwf	fsr2l,f,c
  3579  00104A  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3580  00104C  22DA               	addwfc	fsr2h,f,c
  3581  00104E  CFDE F07F          	movff	postinc2,??_detect_color+2
  3582  001052  CFDD F080          	movff	postdec2,??_detect_color+3
  3583  001056  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3584  00105A  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3585  00105E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3586  001060  6A04               	clrf	(___xxtofl@val+3)^0,c
  3587  001062  0E00               	movlw	0
  3588  001064  EC5E  F020         	call	___xxtofl
  3589  001068  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3590  00106C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3591  001070  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3592  001074  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3593  001078  EC84  F016         	call	___fldiv	;wreg free
  3594  00107C  C00F  F028         	movff	?___fldiv,___flmul@b
  3595  001080  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3596  001084  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3597  001088  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3598  00108C  0E00               	movlw	0
  3599  00108E  6E2C               	movwf	___flmul@a^0,c
  3600  001090  0E00               	movlw	0
  3601  001092  6E2D               	movwf	(___flmul@a+1)^0,c
  3602  001094  0EC8               	movlw	200
  3603  001096  6E2E               	movwf	(___flmul@a+2)^0,c
  3604  001098  0E42               	movlw	66
  3605  00109A  6E2F               	movwf	(___flmul@a+3)^0,c
  3606  00109C  ECC6  F010         	call	___flmul	;wreg free
  3607  0010A0  C028  F0FA         	movff	?___flmul,_detect_color$2948
  3608  0010A4  C029  F0FB         	movff	?___flmul+1,_detect_color$2948+1
  3609  0010A8  C02A  F0FC         	movff	?___flmul+2,_detect_color$2948+2
  3610  0010AC  C02B  F0FD         	movff	?___flmul+3,_detect_color$2948+3
  3611  0010B0  C0FA  F066         	movff	_detect_color$2948,lroundf@x
  3612  0010B4  C0FB  F067         	movff	_detect_color$2948+1,lroundf@x+1
  3613  0010B8  C0FC  F068         	movff	_detect_color$2948+2,lroundf@x+2
  3614  0010BC  C0FD  F069         	movff	_detect_color$2948+3,lroundf@x+3
  3615  0010C0  EC69  F02E         	call	_lroundf	;wreg free
  3616  0010C4  C066  F0ED         	movff	?_lroundf,detect_color@RB
  3617  0010C8  C067  F0EE         	movff	?_lroundf+1,detect_color@RB+1
  3618  0010CC                     
  3619                           ;color.c: 283:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3620  0010CC  0E05               	movlw	5
  3621  0010CE  0100               	movlb	0	; () banked
  3622  0010D0  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  3623  0010D2  0E0F               	movlw	15
  3624  0010D4  6F7D               	movwf	??_detect_color& (0+255),b
  3625  0010D6  0EF1               	movlw	241
  3626  0010D8                     u6017:
  3627  0010D8  2EE8               	decfsz	wreg,f,c
  3628  0010DA  D7FE               	bra	u6017
  3629  0010DC  2F7D               	decfsz	??_detect_color& (0+255),f,b
  3630  0010DE  D7FC               	bra	u6017
  3631  0010E0  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  3632  0010E2  D7FA               	bra	u6017
  3633  0010E4                     
  3634                           ;color.c: 285:     char buf[100];;color.c: 286:     sprintf(buf,"%d\t%d\t%d\r\n", RR, RG
      +                          , RB);
  3635  0010E4  0E81               	movlw	low detect_color@buf
  3636  0010E6  0100               	movlb	0	; () banked
  3637  0010E8  6F60               	movwf	sprintf@s& (0+255),b
  3638  0010EA  0E00               	movlw	high detect_color@buf
  3639  0010EC  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3640  0010EE  0E08               	movlw	low (STR_1+3)
  3641  0010F0  6F62               	movwf	sprintf@fmt& (0+255),b
  3642  0010F2  0E0E               	movlw	high (STR_1+3)
  3643  0010F4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3644  0010F6  C0F8  F064         	movff	detect_color@RR,?_sprintf+4
  3645  0010FA  C0F9  F065         	movff	detect_color@RR+1,?_sprintf+5
  3646  0010FE  C0E7  F066         	movff	detect_color@RG,?_sprintf+6
  3647  001102  C0E8  F067         	movff	detect_color@RG+1,?_sprintf+7
  3648  001106  C0ED  F068         	movff	detect_color@RB,?_sprintf+8
  3649  00110A  C0EE  F069         	movff	detect_color@RB+1,?_sprintf+9
  3650  00110E  ECBB  F02C         	call	_sprintf	;wreg free
  3651  001112                     
  3652                           ;color.c: 287:     sendStringSerial4(buf);
  3653  001112  0E81               	movlw	low detect_color@buf
  3654  001114  6E02               	movwf	sendStringSerial4@string^0,c
  3655  001116  0E00               	movlw	high detect_color@buf
  3656  001118  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  3657  00111A  EC0C  F02F         	call	_sendStringSerial4	;wreg free
  3658  00111E                     
  3659                           ;color.c: 289:     LED_G();
  3660  00111E  EC97  F02F         	call	_LED_G	;wreg free
  3661  001122                     
  3662                           ;color.c: 290:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3663  001122  0E09               	movlw	9
  3664  001124  0100               	movlb	0	; () banked
  3665  001126  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  3666  001128  0E1E               	movlw	30
  3667  00112A  6F7D               	movwf	??_detect_color& (0+255),b
  3668  00112C  0EE4               	movlw	228
  3669  00112E                     u6027:
  3670  00112E  2EE8               	decfsz	wreg,f,c
  3671  001130  D7FE               	bra	u6027
  3672  001132  2F7D               	decfsz	??_detect_color& (0+255),f,b
  3673  001134  D7FC               	bra	u6027
  3674  001136  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  3675  001138  D7FA               	bra	u6027
  3676  00113A  F000               	nop	
  3677  00113C                     
  3678                           ;color.c: 291:     read_color(m);
  3679  00113C  C079  F00C         	movff	detect_color@m,read_color@m
  3680  001140  C07A  F00D         	movff	detect_color@m+1,read_color@m+1
  3681  001144  EC8C  F02C         	call	_read_color	;wreg free
  3682  001148  0E00               	movlw	0
  3683  00114A  6E2C               	movwf	___flmul@a^0,c
  3684  00114C  0E00               	movlw	0
  3685  00114E  6E2D               	movwf	(___flmul@a+1)^0,c
  3686  001150  0EC8               	movlw	200
  3687  001152  6E2E               	movwf	(___flmul@a+2)^0,c
  3688  001154  0E42               	movlw	66
  3689  001156  6E2F               	movwf	(___flmul@a+3)^0,c
  3690  001158  0100               	movlb	0	; () banked
  3691  00115A  EE20 F006          	lfsr	2,6
  3692  00115E  517B               	movf	detect_color@w& (0+255),w,b
  3693  001160  26D9               	addwf	fsr2l,f,c
  3694  001162  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3695  001164  22DA               	addwfc	fsr2h,f,c
  3696  001166  CFDE F07D          	movff	postinc2,??_detect_color
  3697  00116A  CFDD F07E          	movff	postdec2,??_detect_color+1
  3698  00116E  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3699  001172  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3700  001176  6A03               	clrf	(___xxtofl@val+2)^0,c
  3701  001178  6A04               	clrf	(___xxtofl@val+3)^0,c
  3702  00117A  0E00               	movlw	0
  3703  00117C  EC5E  F020         	call	___xxtofl
  3704  001180  C001  F013         	movff	?___xxtofl,___fldiv@a
  3705  001184  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3706  001188  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3707  00118C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3708  001190  C079  FFD9         	movff	detect_color@m,fsr2l
  3709  001194  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  3710  001198  CFDE F07F          	movff	postinc2,??_detect_color+2
  3711  00119C  CFDD F080          	movff	postdec2,??_detect_color+3
  3712  0011A0  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3713  0011A4  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3714  0011A8  6A03               	clrf	(___xxtofl@val+2)^0,c
  3715  0011AA  6A04               	clrf	(___xxtofl@val+3)^0,c
  3716  0011AC  0E00               	movlw	0
  3717  0011AE  EC5E  F020         	call	___xxtofl
  3718  0011B2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3719  0011B6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3720  0011BA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3721  0011BE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3722  0011C2  EC84  F016         	call	___fldiv	;wreg free
  3723  0011C6  C00F  F028         	movff	?___fldiv,___flmul@b
  3724  0011CA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3725  0011CE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3726  0011D2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3727  0011D6  ECC6  F010         	call	___flmul	;wreg free
  3728  0011DA  C028  F05B         	movff	?___flmul,___fltol@f1
  3729  0011DE  C029  F05C         	movff	?___flmul+1,___fltol@f1+1
  3730  0011E2  C02A  F05D         	movff	?___flmul+2,___fltol@f1+2
  3731  0011E6  C02B  F05E         	movff	?___flmul+3,___fltol@f1+3
  3732  0011EA  ECAA  F027         	call	___fltol	;wreg free
  3733  0011EE  0E00               	movlw	0
  3734  0011F0  6E2C               	movwf	___flmul@a^0,c
  3735  0011F2  0E00               	movlw	0
  3736  0011F4  6E2D               	movwf	(___flmul@a+1)^0,c
  3737  0011F6  0EC8               	movlw	200
  3738  0011F8  6E2E               	movwf	(___flmul@a+2)^0,c
  3739  0011FA  0E42               	movlw	66
  3740  0011FC  6E2F               	movwf	(___flmul@a+3)^0,c
  3741  0011FE  0100               	movlb	0	; () banked
  3742  001200  EE20 F008          	lfsr	2,8
  3743  001204  517B               	movf	detect_color@w& (0+255),w,b
  3744  001206  26D9               	addwf	fsr2l,f,c
  3745  001208  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3746  00120A  22DA               	addwfc	fsr2h,f,c
  3747  00120C  CFDE F07D          	movff	postinc2,??_detect_color
  3748  001210  CFDD F07E          	movff	postdec2,??_detect_color+1
  3749  001214  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3750  001218  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3751  00121C  6A03               	clrf	(___xxtofl@val+2)^0,c
  3752  00121E  6A04               	clrf	(___xxtofl@val+3)^0,c
  3753  001220  0E00               	movlw	0
  3754  001222  EC5E  F020         	call	___xxtofl
  3755  001226  C001  F013         	movff	?___xxtofl,___fldiv@a
  3756  00122A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3757  00122E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3758  001232  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3759  001236  0100               	movlb	0	; () banked
  3760  001238  EE20 F002          	lfsr	2,2
  3761  00123C  5179               	movf	detect_color@m& (0+255),w,b
  3762  00123E  26D9               	addwf	fsr2l,f,c
  3763  001240  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3764  001242  22DA               	addwfc	fsr2h,f,c
  3765  001244  CFDE F07F          	movff	postinc2,??_detect_color+2
  3766  001248  CFDD F080          	movff	postdec2,??_detect_color+3
  3767  00124C  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3768  001250  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3769  001254  6A03               	clrf	(___xxtofl@val+2)^0,c
  3770  001256  6A04               	clrf	(___xxtofl@val+3)^0,c
  3771  001258  0E00               	movlw	0
  3772  00125A  EC5E  F020         	call	___xxtofl
  3773  00125E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3774  001262  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3775  001266  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3776  00126A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3777  00126E  EC84  F016         	call	___fldiv	;wreg free
  3778  001272  C00F  F028         	movff	?___fldiv,___flmul@b
  3779  001276  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3780  00127A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3781  00127E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3782  001282  ECC6  F010         	call	___flmul	;wreg free
  3783  001286  C028  F05B         	movff	?___flmul,___fltol@f1
  3784  00128A  C029  F05C         	movff	?___flmul+1,___fltol@f1+1
  3785  00128E  C02A  F05D         	movff	?___flmul+2,___fltol@f1+2
  3786  001292  C02B  F05E         	movff	?___flmul+3,___fltol@f1+3
  3787  001296  ECAA  F027         	call	___fltol	;wreg free
  3788  00129A  0E00               	movlw	0
  3789  00129C  6E2C               	movwf	___flmul@a^0,c
  3790  00129E  0E00               	movlw	0
  3791  0012A0  6E2D               	movwf	(___flmul@a+1)^0,c
  3792  0012A2  0EC8               	movlw	200
  3793  0012A4  6E2E               	movwf	(___flmul@a+2)^0,c
  3794  0012A6  0E42               	movlw	66
  3795  0012A8  6E2F               	movwf	(___flmul@a+3)^0,c
  3796  0012AA  0100               	movlb	0	; () banked
  3797  0012AC  EE20 F00A          	lfsr	2,10
  3798  0012B0  517B               	movf	detect_color@w& (0+255),w,b
  3799  0012B2  26D9               	addwf	fsr2l,f,c
  3800  0012B4  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3801  0012B6  22DA               	addwfc	fsr2h,f,c
  3802  0012B8  CFDE F07D          	movff	postinc2,??_detect_color
  3803  0012BC  CFDD F07E          	movff	postdec2,??_detect_color+1
  3804  0012C0  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3805  0012C4  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3806  0012C8  6A03               	clrf	(___xxtofl@val+2)^0,c
  3807  0012CA  6A04               	clrf	(___xxtofl@val+3)^0,c
  3808  0012CC  0E00               	movlw	0
  3809  0012CE  EC5E  F020         	call	___xxtofl
  3810  0012D2  C001  F013         	movff	?___xxtofl,___fldiv@a
  3811  0012D6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3812  0012DA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3813  0012DE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3814  0012E2  0100               	movlb	0	; () banked
  3815  0012E4  EE20 F004          	lfsr	2,4
  3816  0012E8  5179               	movf	detect_color@m& (0+255),w,b
  3817  0012EA  26D9               	addwf	fsr2l,f,c
  3818  0012EC  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3819  0012EE  22DA               	addwfc	fsr2h,f,c
  3820  0012F0  CFDE F07F          	movff	postinc2,??_detect_color+2
  3821  0012F4  CFDD F080          	movff	postdec2,??_detect_color+3
  3822  0012F8  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3823  0012FC  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3824  001300  6A03               	clrf	(___xxtofl@val+2)^0,c
  3825  001302  6A04               	clrf	(___xxtofl@val+3)^0,c
  3826  001304  0E00               	movlw	0
  3827  001306  EC5E  F020         	call	___xxtofl
  3828  00130A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3829  00130E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3830  001312  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3831  001316  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3832  00131A  EC84  F016         	call	___fldiv	;wreg free
  3833  00131E  C00F  F028         	movff	?___fldiv,___flmul@b
  3834  001322  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3835  001326  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3836  00132A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3837  00132E  ECC6  F010         	call	___flmul	;wreg free
  3838  001332  C028  F05B         	movff	?___flmul,___fltol@f1
  3839  001336  C029  F05C         	movff	?___flmul+1,___fltol@f1+1
  3840  00133A  C02A  F05D         	movff	?___flmul+2,___fltol@f1+2
  3841  00133E  C02B  F05E         	movff	?___flmul+3,___fltol@f1+3
  3842  001342  ECAA  F027         	call	___fltol	;wreg free
  3843  001346                     
  3844                           ;color.c: 294:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3845  001346  0100               	movlb	0	; () banked
  3846  001348  EE20 F006          	lfsr	2,6
  3847  00134C  517B               	movf	detect_color@w& (0+255),w,b
  3848  00134E  26D9               	addwf	fsr2l,f,c
  3849  001350  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3850  001352  22DA               	addwfc	fsr2h,f,c
  3851  001354  CFDE F07D          	movff	postinc2,??_detect_color
  3852  001358  CFDD F07E          	movff	postdec2,??_detect_color+1
  3853  00135C  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3854  001360  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3855  001364  6A03               	clrf	(___xxtofl@val+2)^0,c
  3856  001366  6A04               	clrf	(___xxtofl@val+3)^0,c
  3857  001368  0E00               	movlw	0
  3858  00136A  EC5E  F020         	call	___xxtofl
  3859  00136E  C001  F013         	movff	?___xxtofl,___fldiv@a
  3860  001372  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3861  001376  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3862  00137A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3863  00137E  C079  FFD9         	movff	detect_color@m,fsr2l
  3864  001382  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  3865  001386  CFDE F07F          	movff	postinc2,??_detect_color+2
  3866  00138A  CFDD F080          	movff	postdec2,??_detect_color+3
  3867  00138E  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3868  001392  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3869  001396  6A03               	clrf	(___xxtofl@val+2)^0,c
  3870  001398  6A04               	clrf	(___xxtofl@val+3)^0,c
  3871  00139A  0E00               	movlw	0
  3872  00139C  EC5E  F020         	call	___xxtofl
  3873  0013A0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3874  0013A4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3875  0013A8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3876  0013AC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3877  0013B0  EC84  F016         	call	___fldiv	;wreg free
  3878  0013B4  C00F  F028         	movff	?___fldiv,___flmul@b
  3879  0013B8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3880  0013BC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3881  0013C0  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3882  0013C4  0E00               	movlw	0
  3883  0013C6  6E2C               	movwf	___flmul@a^0,c
  3884  0013C8  0E00               	movlw	0
  3885  0013CA  6E2D               	movwf	(___flmul@a+1)^0,c
  3886  0013CC  0EC8               	movlw	200
  3887  0013CE  6E2E               	movwf	(___flmul@a+2)^0,c
  3888  0013D0  0E42               	movlw	66
  3889  0013D2  6E2F               	movwf	(___flmul@a+3)^0,c
  3890  0013D4  ECC6  F010         	call	___flmul	;wreg free
  3891  0013D8  C028  F0FA         	movff	?___flmul,_detect_color$2948
  3892  0013DC  C029  F0FB         	movff	?___flmul+1,_detect_color$2948+1
  3893  0013E0  C02A  F0FC         	movff	?___flmul+2,_detect_color$2948+2
  3894  0013E4  C02B  F0FD         	movff	?___flmul+3,_detect_color$2948+3
  3895  0013E8                     
  3896                           ;color.c: 294:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3897  0013E8  C0FA  F066         	movff	_detect_color$2948,lroundf@x
  3898  0013EC  C0FB  F067         	movff	_detect_color$2948+1,lroundf@x+1
  3899  0013F0  C0FC  F068         	movff	_detect_color$2948+2,lroundf@x+2
  3900  0013F4  C0FD  F069         	movff	_detect_color$2948+3,lroundf@x+3
  3901  0013F8  EC69  F02E         	call	_lroundf	;wreg free
  3902  0013FC  C066  F0EB         	movff	?_lroundf,detect_color@GR
  3903  001400  C067  F0EC         	movff	?_lroundf+1,detect_color@GR+1
  3904  001404  0100               	movlb	0	; () banked
  3905  001406  EE20 F008          	lfsr	2,8
  3906  00140A  517B               	movf	detect_color@w& (0+255),w,b
  3907  00140C  26D9               	addwf	fsr2l,f,c
  3908  00140E  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3909  001410  22DA               	addwfc	fsr2h,f,c
  3910  001412  CFDE F07D          	movff	postinc2,??_detect_color
  3911  001416  CFDD F07E          	movff	postdec2,??_detect_color+1
  3912  00141A  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3913  00141E  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3914  001422  6A03               	clrf	(___xxtofl@val+2)^0,c
  3915  001424  6A04               	clrf	(___xxtofl@val+3)^0,c
  3916  001426  0E00               	movlw	0
  3917  001428  EC5E  F020         	call	___xxtofl
  3918  00142C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3919  001430  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3920  001434  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3921  001438  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3922  00143C  0100               	movlb	0	; () banked
  3923  00143E  EE20 F002          	lfsr	2,2
  3924  001442  5179               	movf	detect_color@m& (0+255),w,b
  3925  001444  26D9               	addwf	fsr2l,f,c
  3926  001446  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3927  001448  22DA               	addwfc	fsr2h,f,c
  3928  00144A  CFDE F07F          	movff	postinc2,??_detect_color+2
  3929  00144E  CFDD F080          	movff	postdec2,??_detect_color+3
  3930  001452  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3931  001456  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3932  00145A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3933  00145C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3934  00145E  0E00               	movlw	0
  3935  001460  EC5E  F020         	call	___xxtofl
  3936  001464  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3937  001468  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3938  00146C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3939  001470  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3940  001474  EC84  F016         	call	___fldiv	;wreg free
  3941  001478  C00F  F028         	movff	?___fldiv,___flmul@b
  3942  00147C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3943  001480  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3944  001484  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3945  001488  0E00               	movlw	0
  3946  00148A  6E2C               	movwf	___flmul@a^0,c
  3947  00148C  0E00               	movlw	0
  3948  00148E  6E2D               	movwf	(___flmul@a+1)^0,c
  3949  001490  0EC8               	movlw	200
  3950  001492  6E2E               	movwf	(___flmul@a+2)^0,c
  3951  001494  0E42               	movlw	66
  3952  001496  6E2F               	movwf	(___flmul@a+3)^0,c
  3953  001498  ECC6  F010         	call	___flmul	;wreg free
  3954  00149C  C028  F0FA         	movff	?___flmul,_detect_color$2948
  3955  0014A0  C029  F0FB         	movff	?___flmul+1,_detect_color$2948+1
  3956  0014A4  C02A  F0FC         	movff	?___flmul+2,_detect_color$2948+2
  3957  0014A8  C02B  F0FD         	movff	?___flmul+3,_detect_color$2948+3
  3958  0014AC  C0FA  F066         	movff	_detect_color$2948,lroundf@x
  3959  0014B0  C0FB  F067         	movff	_detect_color$2948+1,lroundf@x+1
  3960  0014B4  C0FC  F068         	movff	_detect_color$2948+2,lroundf@x+2
  3961  0014B8  C0FD  F069         	movff	_detect_color$2948+3,lroundf@x+3
  3962  0014BC  EC69  F02E         	call	_lroundf	;wreg free
  3963  0014C0  C066  F0F3         	movff	?_lroundf,detect_color@GG
  3964  0014C4  C067  F0F4         	movff	?_lroundf+1,detect_color@GG+1
  3965  0014C8  0100               	movlb	0	; () banked
  3966  0014CA  EE20 F00A          	lfsr	2,10
  3967  0014CE  517B               	movf	detect_color@w& (0+255),w,b
  3968  0014D0  26D9               	addwf	fsr2l,f,c
  3969  0014D2  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3970  0014D4  22DA               	addwfc	fsr2h,f,c
  3971  0014D6  CFDE F07D          	movff	postinc2,??_detect_color
  3972  0014DA  CFDD F07E          	movff	postdec2,??_detect_color+1
  3973  0014DE  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3974  0014E2  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3975  0014E6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3976  0014E8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3977  0014EA  0E00               	movlw	0
  3978  0014EC  EC5E  F020         	call	___xxtofl
  3979  0014F0  C001  F013         	movff	?___xxtofl,___fldiv@a
  3980  0014F4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3981  0014F8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3982  0014FC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3983  001500  0100               	movlb	0	; () banked
  3984  001502  EE20 F004          	lfsr	2,4
  3985  001506  5179               	movf	detect_color@m& (0+255),w,b
  3986  001508  26D9               	addwf	fsr2l,f,c
  3987  00150A  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3988  00150C  22DA               	addwfc	fsr2h,f,c
  3989  00150E  CFDE F07F          	movff	postinc2,??_detect_color+2
  3990  001512  CFDD F080          	movff	postdec2,??_detect_color+3
  3991  001516  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3992  00151A  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3993  00151E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3994  001520  6A04               	clrf	(___xxtofl@val+3)^0,c
  3995  001522  0E00               	movlw	0
  3996  001524  EC5E  F020         	call	___xxtofl
  3997  001528  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3998  00152C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3999  001530  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4000  001534  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4001  001538  EC84  F016         	call	___fldiv	;wreg free
  4002  00153C  C00F  F028         	movff	?___fldiv,___flmul@b
  4003  001540  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4004  001544  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4005  001548  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4006  00154C  0E00               	movlw	0
  4007  00154E  6E2C               	movwf	___flmul@a^0,c
  4008  001550  0E00               	movlw	0
  4009  001552  6E2D               	movwf	(___flmul@a+1)^0,c
  4010  001554  0EC8               	movlw	200
  4011  001556  6E2E               	movwf	(___flmul@a+2)^0,c
  4012  001558  0E42               	movlw	66
  4013  00155A  6E2F               	movwf	(___flmul@a+3)^0,c
  4014  00155C  ECC6  F010         	call	___flmul	;wreg free
  4015  001560  C028  F0FA         	movff	?___flmul,_detect_color$2948
  4016  001564  C029  F0FB         	movff	?___flmul+1,_detect_color$2948+1
  4017  001568  C02A  F0FC         	movff	?___flmul+2,_detect_color$2948+2
  4018  00156C  C02B  F0FD         	movff	?___flmul+3,_detect_color$2948+3
  4019  001570  C0FA  F066         	movff	_detect_color$2948,lroundf@x
  4020  001574  C0FB  F067         	movff	_detect_color$2948+1,lroundf@x+1
  4021  001578  C0FC  F068         	movff	_detect_color$2948+2,lroundf@x+2
  4022  00157C  C0FD  F069         	movff	_detect_color$2948+3,lroundf@x+3
  4023  001580  EC69  F02E         	call	_lroundf	;wreg free
  4024  001584  C066  F0F1         	movff	?_lroundf,detect_color@GB
  4025  001588  C067  F0F2         	movff	?_lroundf+1,detect_color@GB+1
  4026  00158C                     
  4027                           ;color.c: 296:     sprintf(buf,"%d\t%d\t%d\r\n", GR, GG, GB);
  4028  00158C  0E81               	movlw	low detect_color@buf
  4029  00158E  0100               	movlb	0	; () banked
  4030  001590  6F60               	movwf	sprintf@s& (0+255),b
  4031  001592  0E00               	movlw	high detect_color@buf
  4032  001594  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4033  001596  0E08               	movlw	low (STR_1+3)
  4034  001598  6F62               	movwf	sprintf@fmt& (0+255),b
  4035  00159A  0E0E               	movlw	high (STR_1+3)
  4036  00159C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4037  00159E  C0EB  F064         	movff	detect_color@GR,?_sprintf+4
  4038  0015A2  C0EC  F065         	movff	detect_color@GR+1,?_sprintf+5
  4039  0015A6  C0F3  F066         	movff	detect_color@GG,?_sprintf+6
  4040  0015AA  C0F4  F067         	movff	detect_color@GG+1,?_sprintf+7
  4041  0015AE  C0F1  F068         	movff	detect_color@GB,?_sprintf+8
  4042  0015B2  C0F2  F069         	movff	detect_color@GB+1,?_sprintf+9
  4043  0015B6  ECBB  F02C         	call	_sprintf	;wreg free
  4044  0015BA                     
  4045                           ;color.c: 297:     sendStringSerial4(buf);
  4046  0015BA  0E81               	movlw	low detect_color@buf
  4047  0015BC  6E02               	movwf	sendStringSerial4@string^0,c
  4048  0015BE  0E00               	movlw	high detect_color@buf
  4049  0015C0  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4050  0015C2  EC0C  F02F         	call	_sendStringSerial4	;wreg free
  4051  0015C6                     
  4052                           ;color.c: 299:     LED_B();
  4053  0015C6  ECA7  F02F         	call	_LED_B	;wreg free
  4054  0015CA                     
  4055                           ;color.c: 300:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4056  0015CA  0E09               	movlw	9
  4057  0015CC  0100               	movlb	0	; () banked
  4058  0015CE  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  4059  0015D0  0E1E               	movlw	30
  4060  0015D2  6F7D               	movwf	??_detect_color& (0+255),b
  4061  0015D4  0EE4               	movlw	228
  4062  0015D6                     u6037:
  4063  0015D6  2EE8               	decfsz	wreg,f,c
  4064  0015D8  D7FE               	bra	u6037
  4065  0015DA  2F7D               	decfsz	??_detect_color& (0+255),f,b
  4066  0015DC  D7FC               	bra	u6037
  4067  0015DE  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  4068  0015E0  D7FA               	bra	u6037
  4069  0015E2  F000               	nop	
  4070  0015E4                     
  4071                           ;color.c: 301:     read_color(m);
  4072  0015E4  C079  F00C         	movff	detect_color@m,read_color@m
  4073  0015E8  C07A  F00D         	movff	detect_color@m+1,read_color@m+1
  4074  0015EC  EC8C  F02C         	call	_read_color	;wreg free
  4075  0015F0                     
  4076                           ;color.c: 302:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  4077  0015F0  0100               	movlb	0	; () banked
  4078  0015F2  EE20 F00C          	lfsr	2,12
  4079  0015F6  517B               	movf	detect_color@w& (0+255),w,b
  4080  0015F8  26D9               	addwf	fsr2l,f,c
  4081  0015FA  517C               	movf	(detect_color@w+1)& (0+255),w,b
  4082  0015FC  22DA               	addwfc	fsr2h,f,c
  4083  0015FE  CFDE F07D          	movff	postinc2,??_detect_color
  4084  001602  CFDD F07E          	movff	postdec2,??_detect_color+1
  4085  001606  C07D  F001         	movff	??_detect_color,___xxtofl@val
  4086  00160A  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4087  00160E  6A03               	clrf	(___xxtofl@val+2)^0,c
  4088  001610  6A04               	clrf	(___xxtofl@val+3)^0,c
  4089  001612  0E00               	movlw	0
  4090  001614  EC5E  F020         	call	___xxtofl
  4091  001618  C001  F013         	movff	?___xxtofl,___fldiv@a
  4092  00161C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4093  001620  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4094  001624  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4095  001628  C079  FFD9         	movff	detect_color@m,fsr2l
  4096  00162C  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  4097  001630  CFDE F07F          	movff	postinc2,??_detect_color+2
  4098  001634  CFDD F080          	movff	postdec2,??_detect_color+3
  4099  001638  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  4100  00163C  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4101  001640  6A03               	clrf	(___xxtofl@val+2)^0,c
  4102  001642  6A04               	clrf	(___xxtofl@val+3)^0,c
  4103  001644  0E00               	movlw	0
  4104  001646  EC5E  F020         	call	___xxtofl
  4105  00164A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4106  00164E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4107  001652  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4108  001656  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4109  00165A  EC84  F016         	call	___fldiv	;wreg free
  4110  00165E  C00F  F028         	movff	?___fldiv,___flmul@b
  4111  001662  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4112  001666  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4113  00166A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4114  00166E  0E00               	movlw	0
  4115  001670  6E2C               	movwf	___flmul@a^0,c
  4116  001672  0E00               	movlw	0
  4117  001674  6E2D               	movwf	(___flmul@a+1)^0,c
  4118  001676  0EC8               	movlw	200
  4119  001678  6E2E               	movwf	(___flmul@a+2)^0,c
  4120  00167A  0E42               	movlw	66
  4121  00167C  6E2F               	movwf	(___flmul@a+3)^0,c
  4122  00167E  ECC6  F010         	call	___flmul	;wreg free
  4123  001682  C028  F0FA         	movff	?___flmul,_detect_color$2948
  4124  001686  C029  F0FB         	movff	?___flmul+1,_detect_color$2948+1
  4125  00168A  C02A  F0FC         	movff	?___flmul+2,_detect_color$2948+2
  4126  00168E  C02B  F0FD         	movff	?___flmul+3,_detect_color$2948+3
  4127  001692                     
  4128                           ;color.c: 302:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  4129  001692  C0FA  F066         	movff	_detect_color$2948,lroundf@x
  4130  001696  C0FB  F067         	movff	_detect_color$2948+1,lroundf@x+1
  4131  00169A  C0FC  F068         	movff	_detect_color$2948+2,lroundf@x+2
  4132  00169E  C0FD  F069         	movff	_detect_color$2948+3,lroundf@x+3
  4133  0016A2  EC69  F02E         	call	_lroundf	;wreg free
  4134  0016A6  C066  F0E9         	movff	?_lroundf,detect_color@BR
  4135  0016AA  C067  F0EA         	movff	?_lroundf+1,detect_color@BR+1
  4136  0016AE  0100               	movlb	0	; () banked
  4137  0016B0  EE20 F00E          	lfsr	2,14
  4138  0016B4  517B               	movf	detect_color@w& (0+255),w,b
  4139  0016B6  26D9               	addwf	fsr2l,f,c
  4140  0016B8  517C               	movf	(detect_color@w+1)& (0+255),w,b
  4141  0016BA  22DA               	addwfc	fsr2h,f,c
  4142  0016BC  CFDE F07D          	movff	postinc2,??_detect_color
  4143  0016C0  CFDD F07E          	movff	postdec2,??_detect_color+1
  4144  0016C4  C07D  F001         	movff	??_detect_color,___xxtofl@val
  4145  0016C8  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4146  0016CC  6A03               	clrf	(___xxtofl@val+2)^0,c
  4147  0016CE  6A04               	clrf	(___xxtofl@val+3)^0,c
  4148  0016D0  0E00               	movlw	0
  4149  0016D2  EC5E  F020         	call	___xxtofl
  4150  0016D6  C001  F013         	movff	?___xxtofl,___fldiv@a
  4151  0016DA  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4152  0016DE  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4153  0016E2  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4154  0016E6  0100               	movlb	0	; () banked
  4155  0016E8  EE20 F002          	lfsr	2,2
  4156  0016EC  5179               	movf	detect_color@m& (0+255),w,b
  4157  0016EE  26D9               	addwf	fsr2l,f,c
  4158  0016F0  517A               	movf	(detect_color@m+1)& (0+255),w,b
  4159  0016F2  22DA               	addwfc	fsr2h,f,c
  4160  0016F4  CFDE F07F          	movff	postinc2,??_detect_color+2
  4161  0016F8  CFDD F080          	movff	postdec2,??_detect_color+3
  4162  0016FC  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  4163  001700  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4164  001704  6A03               	clrf	(___xxtofl@val+2)^0,c
  4165  001706  6A04               	clrf	(___xxtofl@val+3)^0,c
  4166  001708  0E00               	movlw	0
  4167  00170A  EC5E  F020         	call	___xxtofl
  4168  00170E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4169  001712  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4170  001716  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4171  00171A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4172  00171E  EC84  F016         	call	___fldiv	;wreg free
  4173  001722  C00F  F028         	movff	?___fldiv,___flmul@b
  4174  001726  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4175  00172A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4176  00172E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4177  001732  0E00               	movlw	0
  4178  001734  6E2C               	movwf	___flmul@a^0,c
  4179  001736  0E00               	movlw	0
  4180  001738  6E2D               	movwf	(___flmul@a+1)^0,c
  4181  00173A  0EC8               	movlw	200
  4182  00173C  6E2E               	movwf	(___flmul@a+2)^0,c
  4183  00173E  0E42               	movlw	66
  4184  001740  6E2F               	movwf	(___flmul@a+3)^0,c
  4185  001742  ECC6  F010         	call	___flmul	;wreg free
  4186  001746  C028  F0FA         	movff	?___flmul,_detect_color$2948
  4187  00174A  C029  F0FB         	movff	?___flmul+1,_detect_color$2948+1
  4188  00174E  C02A  F0FC         	movff	?___flmul+2,_detect_color$2948+2
  4189  001752  C02B  F0FD         	movff	?___flmul+3,_detect_color$2948+3
  4190  001756  C0FA  F066         	movff	_detect_color$2948,lroundf@x
  4191  00175A  C0FB  F067         	movff	_detect_color$2948+1,lroundf@x+1
  4192  00175E  C0FC  F068         	movff	_detect_color$2948+2,lroundf@x+2
  4193  001762  C0FD  F069         	movff	_detect_color$2948+3,lroundf@x+3
  4194  001766  EC69  F02E         	call	_lroundf	;wreg free
  4195  00176A  C066  F0F6         	movff	?_lroundf,detect_color@BG
  4196  00176E  C067  F0F7         	movff	?_lroundf+1,detect_color@BG+1
  4197  001772  0100               	movlb	0	; () banked
  4198  001774  EE20 F010          	lfsr	2,16
  4199  001778  517B               	movf	detect_color@w& (0+255),w,b
  4200  00177A  26D9               	addwf	fsr2l,f,c
  4201  00177C  517C               	movf	(detect_color@w+1)& (0+255),w,b
  4202  00177E  22DA               	addwfc	fsr2h,f,c
  4203  001780  CFDE F07D          	movff	postinc2,??_detect_color
  4204  001784  CFDD F07E          	movff	postdec2,??_detect_color+1
  4205  001788  C07D  F001         	movff	??_detect_color,___xxtofl@val
  4206  00178C  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4207  001790  6A03               	clrf	(___xxtofl@val+2)^0,c
  4208  001792  6A04               	clrf	(___xxtofl@val+3)^0,c
  4209  001794  0E00               	movlw	0
  4210  001796  EC5E  F020         	call	___xxtofl
  4211  00179A  C001  F013         	movff	?___xxtofl,___fldiv@a
  4212  00179E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4213  0017A2  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4214  0017A6  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4215  0017AA  0100               	movlb	0	; () banked
  4216  0017AC  EE20 F004          	lfsr	2,4
  4217  0017B0  5179               	movf	detect_color@m& (0+255),w,b
  4218  0017B2  26D9               	addwf	fsr2l,f,c
  4219  0017B4  517A               	movf	(detect_color@m+1)& (0+255),w,b
  4220  0017B6  22DA               	addwfc	fsr2h,f,c
  4221  0017B8  CFDE F07F          	movff	postinc2,??_detect_color+2
  4222  0017BC  CFDD F080          	movff	postdec2,??_detect_color+3
  4223  0017C0  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  4224  0017C4  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4225  0017C8  6A03               	clrf	(___xxtofl@val+2)^0,c
  4226  0017CA  6A04               	clrf	(___xxtofl@val+3)^0,c
  4227  0017CC  0E00               	movlw	0
  4228  0017CE  EC5E  F020         	call	___xxtofl
  4229  0017D2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4230  0017D6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4231  0017DA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4232  0017DE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4233  0017E2  EC84  F016         	call	___fldiv	;wreg free
  4234  0017E6  C00F  F028         	movff	?___fldiv,___flmul@b
  4235  0017EA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4236  0017EE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4237  0017F2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4238  0017F6  0E00               	movlw	0
  4239  0017F8  6E2C               	movwf	___flmul@a^0,c
  4240  0017FA  0E00               	movlw	0
  4241  0017FC  6E2D               	movwf	(___flmul@a+1)^0,c
  4242  0017FE  0EC8               	movlw	200
  4243  001800  6E2E               	movwf	(___flmul@a+2)^0,c
  4244  001802  0E42               	movlw	66
  4245  001804  6E2F               	movwf	(___flmul@a+3)^0,c
  4246  001806  ECC6  F010         	call	___flmul	;wreg free
  4247  00180A  C028  F0FA         	movff	?___flmul,_detect_color$2948
  4248  00180E  C029  F0FB         	movff	?___flmul+1,_detect_color$2948+1
  4249  001812  C02A  F0FC         	movff	?___flmul+2,_detect_color$2948+2
  4250  001816  C02B  F0FD         	movff	?___flmul+3,_detect_color$2948+3
  4251  00181A  C0FA  F066         	movff	_detect_color$2948,lroundf@x
  4252  00181E  C0FB  F067         	movff	_detect_color$2948+1,lroundf@x+1
  4253  001822  C0FC  F068         	movff	_detect_color$2948+2,lroundf@x+2
  4254  001826  C0FD  F069         	movff	_detect_color$2948+3,lroundf@x+3
  4255  00182A  EC69  F02E         	call	_lroundf	;wreg free
  4256  00182E  C066  F0EF         	movff	?_lroundf,detect_color@BB
  4257  001832  C067  F0F0         	movff	?_lroundf+1,detect_color@BB+1
  4258  001836                     
  4259                           ;color.c: 303:     BC = lroundf((float)(m->C)/(w->BC)*100);
  4260  001836  0100               	movlb	0	; () banked
  4261  001838  EE20 F01A          	lfsr	2,26
  4262  00183C  517B               	movf	detect_color@w& (0+255),w,b
  4263  00183E  26D9               	addwf	fsr2l,f,c
  4264  001840  517C               	movf	(detect_color@w+1)& (0+255),w,b
  4265  001842  22DA               	addwfc	fsr2h,f,c
  4266  001844  CFDE F07D          	movff	postinc2,??_detect_color
  4267  001848  CFDD F07E          	movff	postdec2,??_detect_color+1
  4268  00184C  C07D  F001         	movff	??_detect_color,___xxtofl@val
  4269  001850  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4270  001854  6A03               	clrf	(___xxtofl@val+2)^0,c
  4271  001856  6A04               	clrf	(___xxtofl@val+3)^0,c
  4272  001858  0E00               	movlw	0
  4273  00185A  EC5E  F020         	call	___xxtofl
  4274  00185E  C001  F013         	movff	?___xxtofl,___fldiv@a
  4275  001862  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4276  001866  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4277  00186A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4278  00186E  0100               	movlb	0	; () banked
  4279  001870  EE20 F006          	lfsr	2,6
  4280  001874  5179               	movf	detect_color@m& (0+255),w,b
  4281  001876  26D9               	addwf	fsr2l,f,c
  4282  001878  517A               	movf	(detect_color@m+1)& (0+255),w,b
  4283  00187A  22DA               	addwfc	fsr2h,f,c
  4284  00187C  CFDE F07F          	movff	postinc2,??_detect_color+2
  4285  001880  CFDD F080          	movff	postdec2,??_detect_color+3
  4286  001884  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  4287  001888  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4288  00188C  6A03               	clrf	(___xxtofl@val+2)^0,c
  4289  00188E  6A04               	clrf	(___xxtofl@val+3)^0,c
  4290  001890  0E00               	movlw	0
  4291  001892  EC5E  F020         	call	___xxtofl
  4292  001896  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4293  00189A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4294  00189E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4295  0018A2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4296  0018A6  EC84  F016         	call	___fldiv	;wreg free
  4297  0018AA  C00F  F028         	movff	?___fldiv,___flmul@b
  4298  0018AE  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4299  0018B2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4300  0018B6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4301  0018BA  0E00               	movlw	0
  4302  0018BC  6E2C               	movwf	___flmul@a^0,c
  4303  0018BE  0E00               	movlw	0
  4304  0018C0  6E2D               	movwf	(___flmul@a+1)^0,c
  4305  0018C2  0EC8               	movlw	200
  4306  0018C4  6E2E               	movwf	(___flmul@a+2)^0,c
  4307  0018C6  0E42               	movlw	66
  4308  0018C8  6E2F               	movwf	(___flmul@a+3)^0,c
  4309  0018CA  ECC6  F010         	call	___flmul	;wreg free
  4310  0018CE  C028  F0FA         	movff	?___flmul,_detect_color$2948
  4311  0018D2  C029  F0FB         	movff	?___flmul+1,_detect_color$2948+1
  4312  0018D6  C02A  F0FC         	movff	?___flmul+2,_detect_color$2948+2
  4313  0018DA  C02B  F0FD         	movff	?___flmul+3,_detect_color$2948+3
  4314  0018DE  C0FA  F066         	movff	_detect_color$2948,lroundf@x
  4315  0018E2  C0FB  F067         	movff	_detect_color$2948+1,lroundf@x+1
  4316  0018E6  C0FC  F068         	movff	_detect_color$2948+2,lroundf@x+2
  4317  0018EA  C0FD  F069         	movff	_detect_color$2948+3,lroundf@x+3
  4318  0018EE  EC69  F02E         	call	_lroundf	;wreg free
  4319  0018F2                     
  4320                           ;color.c: 305:     sprintf(buf,"%d\t%d\t%d\r\n", BR, BG, BB);
  4321  0018F2  0E81               	movlw	low detect_color@buf
  4322  0018F4  0100               	movlb	0	; () banked
  4323  0018F6  6F60               	movwf	sprintf@s& (0+255),b
  4324  0018F8  0E00               	movlw	high detect_color@buf
  4325  0018FA  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4326  0018FC  0E08               	movlw	low (STR_1+3)
  4327  0018FE  6F62               	movwf	sprintf@fmt& (0+255),b
  4328  001900  0E0E               	movlw	high (STR_1+3)
  4329  001902  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4330  001904  C0E9  F064         	movff	detect_color@BR,?_sprintf+4
  4331  001908  C0EA  F065         	movff	detect_color@BR+1,?_sprintf+5
  4332  00190C  C0F6  F066         	movff	detect_color@BG,?_sprintf+6
  4333  001910  C0F7  F067         	movff	detect_color@BG+1,?_sprintf+7
  4334  001914  C0EF  F068         	movff	detect_color@BB,?_sprintf+8
  4335  001918  C0F0  F069         	movff	detect_color@BB+1,?_sprintf+9
  4336  00191C  ECBB  F02C         	call	_sprintf	;wreg free
  4337  001920                     
  4338                           ;color.c: 306:     sendStringSerial4(buf);
  4339  001920  0E81               	movlw	low detect_color@buf
  4340  001922  6E02               	movwf	sendStringSerial4@string^0,c
  4341  001924  0E00               	movlw	high detect_color@buf
  4342  001926  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4343  001928  EC0C  F02F         	call	_sendStringSerial4	;wreg free
  4344  00192C                     
  4345                           ;color.c: 309:     if (compare(0, RR, 45)){
  4346  00192C  0E00               	movlw	0
  4347  00192E  0100               	movlb	0	; () banked
  4348  001930  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4349  001932  0E00               	movlw	0
  4350  001934  6F6A               	movwf	compare@lower& (0+255),b
  4351  001936  C0F8  F06C         	movff	detect_color@RR,compare@value2compare
  4352  00193A  C0F9  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4353  00193E  0E00               	movlw	0
  4354  001940  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4355  001942  0E2D               	movlw	45
  4356  001944  6F6E               	movwf	compare@upper& (0+255),b
  4357  001946  EC4C  F02E         	call	_compare	;wreg free
  4358  00194A  0900               	iorlw	0
  4359  00194C  B4D8               	btfsc	status,2,c
  4360  00194E  EFAB  F00C         	goto	u5191
  4361  001952  EFAD  F00C         	goto	u5190
  4362  001956                     u5191:
  4363  001956  EF1E  F00D         	goto	l4866
  4364  00195A                     u5190:
  4365  00195A                     
  4366                           ;color.c: 310:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  4367  00195A  C0EF  F001         	movff	detect_color@BB,___xxtofl@val
  4368  00195E  C0F0  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  4369  001962  6A03               	clrf	(___xxtofl@val+2)^0,c
  4370  001964  6A04               	clrf	(___xxtofl@val+3)^0,c
  4371  001966  0E00               	movlw	0
  4372  001968  EC5E  F020         	call	___xxtofl
  4373  00196C  C001  F013         	movff	?___xxtofl,___fldiv@a
  4374  001970  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4375  001974  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4376  001978  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4377  00197C  0100               	movlb	0	; () banked
  4378  00197E  51F6               	movf	detect_color@BG& (0+255),w,b
  4379  001980  25F3               	addwf	detect_color@GG& (0+255),w,b
  4380  001982  6F7D               	movwf	??_detect_color& (0+255),b
  4381  001984  51F7               	movf	(detect_color@BG+1)& (0+255),w,b
  4382  001986  21F4               	addwfc	(detect_color@GG+1)& (0+255),w,b
  4383  001988  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  4384  00198A  C07D  F001         	movff	??_detect_color,___xxtofl@val
  4385  00198E  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4386  001992  6A03               	clrf	(___xxtofl@val+2)^0,c
  4387  001994  6A04               	clrf	(___xxtofl@val+3)^0,c
  4388  001996  0E00               	movlw	0
  4389  001998  EC5E  F020         	call	___xxtofl
  4390  00199C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4391  0019A0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4392  0019A4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4393  0019A8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4394  0019AC  EC84  F016         	call	___fldiv	;wreg free
  4395  0019B0  C00F  F028         	movff	?___fldiv,___flmul@b
  4396  0019B4  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4397  0019B8  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4398  0019BC  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4399  0019C0  0E00               	movlw	0
  4400  0019C2  6E2C               	movwf	___flmul@a^0,c
  4401  0019C4  0E00               	movlw	0
  4402  0019C6  6E2D               	movwf	(___flmul@a+1)^0,c
  4403  0019C8  0E48               	movlw	72
  4404  0019CA  6E2E               	movwf	(___flmul@a+2)^0,c
  4405  0019CC  0E43               	movlw	67
  4406  0019CE  6E2F               	movwf	(___flmul@a+3)^0,c
  4407  0019D0  ECC6  F010         	call	___flmul	;wreg free
  4408  0019D4  C028  F0FA         	movff	?___flmul,_detect_color$2948
  4409  0019D8  C029  F0FB         	movff	?___flmul+1,_detect_color$2948+1
  4410  0019DC  C02A  F0FC         	movff	?___flmul+2,_detect_color$2948+2
  4411  0019E0  C02B  F0FD         	movff	?___flmul+3,_detect_color$2948+3
  4412                           
  4413                           ;color.c: 310:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  4414  0019E4  0E00               	movlw	0
  4415  0019E6  0100               	movlb	0	; () banked
  4416  0019E8  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4417  0019EA  0E00               	movlw	0
  4418  0019EC  6F6A               	movwf	compare@lower& (0+255),b
  4419  0019EE  C0FA  F066         	movff	_detect_color$2948,lroundf@x
  4420  0019F2  C0FB  F067         	movff	_detect_color$2948+1,lroundf@x+1
  4421  0019F6  C0FC  F068         	movff	_detect_color$2948+2,lroundf@x+2
  4422  0019FA  C0FD  F069         	movff	_detect_color$2948+3,lroundf@x+3
  4423  0019FE  EC69  F02E         	call	_lroundf	;wreg free
  4424  001A02  C066  F06C         	movff	?_lroundf,compare@value2compare
  4425  001A06  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  4426  001A0A  0E01               	movlw	1
  4427  001A0C  0100               	movlb	0	; () banked
  4428  001A0E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4429  001A10  0ED3               	movlw	211
  4430  001A12  6F6E               	movwf	compare@upper& (0+255),b
  4431  001A14  EC4C  F02E         	call	_compare	;wreg free
  4432  001A18  0900               	iorlw	0
  4433  001A1A  B4D8               	btfsc	status,2,c
  4434  001A1C  EF12  F00D         	goto	u5201
  4435  001A20  EF14  F00D         	goto	u5200
  4436  001A24                     u5201:
  4437  001A24  EF19  F00D         	goto	l4864
  4438  001A28                     u5200:
  4439  001A28  0E03               	movlw	3
  4440  001A2A  0100               	movlb	0	; () banked
  4441  001A2C  6FF5               	movwf	detect_color@color& (0+255),b
  4442  001A2E  EFD9  F00D         	goto	l4892
  4443  001A32                     l4864:
  4444  001A32  0E02               	movlw	2
  4445  001A34  0100               	movlb	0	; () banked
  4446  001A36  6FF5               	movwf	detect_color@color& (0+255),b
  4447  001A38  EFD9  F00D         	goto	l4892
  4448  001A3C                     l4866:
  4449                           
  4450                           ;color.c: 314:         if (GG <= 30 && GB <= 30){
  4451  001A3C  0100               	movlb	0	; () banked
  4452  001A3E  51F4               	movf	(detect_color@GG+1)& (0+255),w,b
  4453  001A40  E107               	bnz	u5211
  4454  001A42  0E1F               	movlw	31
  4455  001A44  5DF3               	subwf	detect_color@GG& (0+255),w,b
  4456  001A46  B0D8               	btfsc	status,0,c
  4457  001A48  EF28  F00D         	goto	u5211
  4458  001A4C  EF2A  F00D         	goto	u5210
  4459  001A50                     u5211:
  4460  001A50  EF9F  F00D         	goto	l4876
  4461  001A54                     u5210:
  4462  001A54                     
  4463                           ; BSR set to: 0
  4464  001A54  51F2               	movf	(detect_color@GB+1)& (0+255),w,b
  4465  001A56  E107               	bnz	u5221
  4466  001A58  0E1F               	movlw	31
  4467  001A5A  5DF1               	subwf	detect_color@GB& (0+255),w,b
  4468  001A5C  B0D8               	btfsc	status,0,c
  4469  001A5E  EF33  F00D         	goto	u5221
  4470  001A62  EF35  F00D         	goto	u5220
  4471  001A66                     u5221:
  4472  001A66  EF9F  F00D         	goto	l4876
  4473  001A6A                     u5220:
  4474  001A6A                     
  4475                           ; BSR set to: 0
  4476                           ;color.c: 316:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4477  001A6A  C0F8  F001         	movff	detect_color@RR,___xxtofl@val
  4478  001A6E  C0F9  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  4479  001A72  6A03               	clrf	(___xxtofl@val+2)^0,c
  4480  001A74  6A04               	clrf	(___xxtofl@val+3)^0,c
  4481  001A76  0E00               	movlw	0
  4482  001A78  EC5E  F020         	call	___xxtofl
  4483  001A7C  C001  F013         	movff	?___xxtofl,___fldiv@a
  4484  001A80  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4485  001A84  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4486  001A88  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4487  001A8C  C0EB  F001         	movff	detect_color@GR,___xxtofl@val
  4488  001A90  C0EC  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  4489  001A94  6A03               	clrf	(___xxtofl@val+2)^0,c
  4490  001A96  6A04               	clrf	(___xxtofl@val+3)^0,c
  4491  001A98  0E00               	movlw	0
  4492  001A9A  EC5E  F020         	call	___xxtofl
  4493  001A9E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4494  001AA2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4495  001AA6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4496  001AAA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4497  001AAE  EC84  F016         	call	___fldiv	;wreg free
  4498  001AB2  C00F  F028         	movff	?___fldiv,___flmul@b
  4499  001AB6  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4500  001ABA  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4501  001ABE  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4502  001AC2  0E00               	movlw	0
  4503  001AC4  6E2C               	movwf	___flmul@a^0,c
  4504  001AC6  0E00               	movlw	0
  4505  001AC8  6E2D               	movwf	(___flmul@a+1)^0,c
  4506  001ACA  0EFA               	movlw	250
  4507  001ACC  6E2E               	movwf	(___flmul@a+2)^0,c
  4508  001ACE  0E43               	movlw	67
  4509  001AD0  6E2F               	movwf	(___flmul@a+3)^0,c
  4510  001AD2  ECC6  F010         	call	___flmul	;wreg free
  4511  001AD6  C028  F0FA         	movff	?___flmul,_detect_color$2948
  4512  001ADA  C029  F0FB         	movff	?___flmul+1,_detect_color$2948+1
  4513  001ADE  C02A  F0FC         	movff	?___flmul+2,_detect_color$2948+2
  4514  001AE2  C02B  F0FD         	movff	?___flmul+3,_detect_color$2948+3
  4515                           
  4516                           ;color.c: 316:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4517  001AE6  0E00               	movlw	0
  4518  001AE8  0100               	movlb	0	; () banked
  4519  001AEA  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4520  001AEC  0E00               	movlw	0
  4521  001AEE  6F6A               	movwf	compare@lower& (0+255),b
  4522  001AF0  C0FA  F066         	movff	_detect_color$2948,lroundf@x
  4523  001AF4  C0FB  F067         	movff	_detect_color$2948+1,lroundf@x+1
  4524  001AF8  C0FC  F068         	movff	_detect_color$2948+2,lroundf@x+2
  4525  001AFC  C0FD  F069         	movff	_detect_color$2948+3,lroundf@x+3
  4526  001B00  EC69  F02E         	call	_lroundf	;wreg free
  4527  001B04  C066  F06C         	movff	?_lroundf,compare@value2compare
  4528  001B08  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  4529  001B0C  0E00               	movlw	0
  4530  001B0E  0100               	movlb	0	; () banked
  4531  001B10  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4532  001B12  0E96               	movlw	150
  4533  001B14  6F6E               	movwf	compare@upper& (0+255),b
  4534  001B16  EC4C  F02E         	call	_compare	;wreg free
  4535  001B1A  0900               	iorlw	0
  4536  001B1C  B4D8               	btfsc	status,2,c
  4537  001B1E  EF93  F00D         	goto	u5231
  4538  001B22  EF95  F00D         	goto	u5230
  4539  001B26                     u5231:
  4540  001B26  EF9A  F00D         	goto	l4874
  4541  001B2A                     u5230:
  4542  001B2A  0E01               	movlw	1
  4543  001B2C  0100               	movlb	0	; () banked
  4544  001B2E  6FF5               	movwf	detect_color@color& (0+255),b
  4545  001B30  EFD9  F00D         	goto	l4892
  4546  001B34                     l4874:
  4547  001B34  0E06               	movlw	6
  4548  001B36  0100               	movlb	0	; () banked
  4549  001B38  6FF5               	movwf	detect_color@color& (0+255),b
  4550  001B3A  EFD9  F00D         	goto	l4892
  4551  001B3E                     l4876:
  4552                           
  4553                           ; BSR set to: 0
  4554  001B3E  51F4               	movf	(detect_color@GG+1)& (0+255),w,b
  4555  001B40  E109               	bnz	u5240
  4556  001B42  0E1F               	movlw	31
  4557  001B44  5DF3               	subwf	detect_color@GG& (0+255),w,b
  4558  001B46  A0D8               	btfss	status,0,c
  4559  001B48  EFA8  F00D         	goto	u5241
  4560  001B4C  EFAA  F00D         	goto	u5240
  4561  001B50                     u5241:
  4562  001B50  EFD7  F00D         	goto	l4890
  4563  001B54                     u5240:
  4564  001B54                     
  4565                           ; BSR set to: 0
  4566  001B54  51F2               	movf	(detect_color@GB+1)& (0+255),w,b
  4567  001B56  E109               	bnz	u5250
  4568  001B58  0E1F               	movlw	31
  4569  001B5A  5DF1               	subwf	detect_color@GB& (0+255),w,b
  4570  001B5C  A0D8               	btfss	status,0,c
  4571  001B5E  EFB3  F00D         	goto	u5251
  4572  001B62  EFB5  F00D         	goto	u5250
  4573  001B66                     u5251:
  4574  001B66  EFD7  F00D         	goto	l4890
  4575  001B6A                     u5250:
  4576  001B6A                     
  4577                           ; BSR set to: 0
  4578                           ;color.c: 321:             if (BB >= 80){color = 7;}
  4579  001B6A  51F0               	movf	(detect_color@BB+1)& (0+255),w,b
  4580  001B6C  E109               	bnz	u5260
  4581  001B6E  0E50               	movlw	80
  4582  001B70  5DEF               	subwf	detect_color@BB& (0+255),w,b
  4583  001B72  A0D8               	btfss	status,0,c
  4584  001B74  EFBE  F00D         	goto	u5261
  4585  001B78  EFC0  F00D         	goto	u5260
  4586  001B7C                     u5261:
  4587  001B7C  EFC4  F00D         	goto	l4884
  4588  001B80                     u5260:
  4589  001B80                     
  4590                           ; BSR set to: 0
  4591  001B80  0E07               	movlw	7
  4592  001B82  6FF5               	movwf	detect_color@color& (0+255),b
  4593  001B84  EFD9  F00D         	goto	l4892
  4594  001B88                     l4884:
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;color.c: 324:                 if (BG < 48){color = 4;}
  4598  001B88  51F7               	movf	(detect_color@BG+1)& (0+255),w,b
  4599  001B8A  E107               	bnz	u5271
  4600  001B8C  0E30               	movlw	48
  4601  001B8E  5DF6               	subwf	detect_color@BG& (0+255),w,b
  4602  001B90  B0D8               	btfsc	status,0,c
  4603  001B92  EFCD  F00D         	goto	u5271
  4604  001B96  EFCF  F00D         	goto	u5270
  4605  001B9A                     u5271:
  4606  001B9A  EFD3  F00D         	goto	l4888
  4607  001B9E                     u5270:
  4608  001B9E                     
  4609                           ; BSR set to: 0
  4610  001B9E  0E04               	movlw	4
  4611  001BA0  6FF5               	movwf	detect_color@color& (0+255),b
  4612  001BA2  EFD9  F00D         	goto	l4892
  4613  001BA6                     l4888:
  4614                           
  4615                           ; BSR set to: 0
  4616  001BA6  0E05               	movlw	5
  4617  001BA8  6FF5               	movwf	detect_color@color& (0+255),b
  4618  001BAA  EFD9  F00D         	goto	l4892
  4619  001BAE                     l4890:
  4620                           
  4621                           ; BSR set to: 0
  4622  001BAE  0E00               	movlw	0
  4623  001BB0  6FF5               	movwf	detect_color@color& (0+255),b
  4624  001BB2                     l4892:
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;color.c: 331:     if (compare(90, RR, RR * 2) && compare(90, RB, RB * 2) && compare(90,
      +                           BG, BG * 2)){color = 8;}
  4628  001BB2  0E00               	movlw	0
  4629  001BB4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4630  001BB6  0E5A               	movlw	90
  4631  001BB8  6F6A               	movwf	compare@lower& (0+255),b
  4632  001BBA  C0F8  F06C         	movff	detect_color@RR,compare@value2compare
  4633  001BBE  C0F9  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4634  001BC2  90D8               	bcf	status,0,c
  4635  001BC4  35F8               	rlcf	detect_color@RR& (0+255),w,b
  4636  001BC6  6F6E               	movwf	compare@upper& (0+255),b
  4637  001BC8  35F9               	rlcf	(detect_color@RR+1)& (0+255),w,b
  4638  001BCA  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4639  001BCC  EC4C  F02E         	call	_compare	;wreg free
  4640  001BD0  0900               	iorlw	0
  4641  001BD2  B4D8               	btfsc	status,2,c
  4642  001BD4  EFEE  F00D         	goto	u5281
  4643  001BD8  EFF0  F00D         	goto	u5280
  4644  001BDC                     u5281:
  4645  001BDC  EF23  F00E         	goto	l4900
  4646  001BE0                     u5280:
  4647  001BE0  0E00               	movlw	0
  4648  001BE2  0100               	movlb	0	; () banked
  4649  001BE4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4650  001BE6  0E5A               	movlw	90
  4651  001BE8  6F6A               	movwf	compare@lower& (0+255),b
  4652  001BEA  C0ED  F06C         	movff	detect_color@RB,compare@value2compare
  4653  001BEE  C0EE  F06D         	movff	detect_color@RB+1,compare@value2compare+1
  4654  001BF2  90D8               	bcf	status,0,c
  4655  001BF4  35ED               	rlcf	detect_color@RB& (0+255),w,b
  4656  001BF6  6F6E               	movwf	compare@upper& (0+255),b
  4657  001BF8  35EE               	rlcf	(detect_color@RB+1)& (0+255),w,b
  4658  001BFA  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4659  001BFC  EC4C  F02E         	call	_compare	;wreg free
  4660  001C00  0900               	iorlw	0
  4661  001C02  B4D8               	btfsc	status,2,c
  4662  001C04  EF06  F00E         	goto	u5291
  4663  001C08  EF08  F00E         	goto	u5290
  4664  001C0C                     u5291:
  4665  001C0C  EF23  F00E         	goto	l4900
  4666  001C10                     u5290:
  4667  001C10  0E00               	movlw	0
  4668  001C12  0100               	movlb	0	; () banked
  4669  001C14  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4670  001C16  0E5A               	movlw	90
  4671  001C18  6F6A               	movwf	compare@lower& (0+255),b
  4672  001C1A  C0F6  F06C         	movff	detect_color@BG,compare@value2compare
  4673  001C1E  C0F7  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  4674  001C22  90D8               	bcf	status,0,c
  4675  001C24  35F6               	rlcf	detect_color@BG& (0+255),w,b
  4676  001C26  6F6E               	movwf	compare@upper& (0+255),b
  4677  001C28  35F7               	rlcf	(detect_color@BG+1)& (0+255),w,b
  4678  001C2A  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4679  001C2C  EC4C  F02E         	call	_compare	;wreg free
  4680  001C30  0900               	iorlw	0
  4681  001C32  B4D8               	btfsc	status,2,c
  4682  001C34  EF1E  F00E         	goto	u5301
  4683  001C38  EF20  F00E         	goto	u5300
  4684  001C3C                     u5301:
  4685  001C3C  EF23  F00E         	goto	l4900
  4686  001C40                     u5300:
  4687  001C40  0E08               	movlw	8
  4688  001C42  0100               	movlb	0	; () banked
  4689  001C44  6FF5               	movwf	detect_color@color& (0+255),b
  4690  001C46                     l4900:
  4691                           
  4692                           ;color.c: 332:     if (compare(0, BR, 25) && compare(0,RR,30)){color = 0;}
  4693  001C46  0E00               	movlw	0
  4694  001C48  0100               	movlb	0	; () banked
  4695  001C4A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4696  001C4C  0E00               	movlw	0
  4697  001C4E  6F6A               	movwf	compare@lower& (0+255),b
  4698  001C50  C0E9  F06C         	movff	detect_color@BR,compare@value2compare
  4699  001C54  C0EA  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  4700  001C58  0E00               	movlw	0
  4701  001C5A  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4702  001C5C  0E19               	movlw	25
  4703  001C5E  6F6E               	movwf	compare@upper& (0+255),b
  4704  001C60  EC4C  F02E         	call	_compare	;wreg free
  4705  001C64  0900               	iorlw	0
  4706  001C66  B4D8               	btfsc	status,2,c
  4707  001C68  EF38  F00E         	goto	u5311
  4708  001C6C  EF3A  F00E         	goto	u5310
  4709  001C70                     u5311:
  4710  001C70  EF54  F00E         	goto	l4906
  4711  001C74                     u5310:
  4712  001C74  0E00               	movlw	0
  4713  001C76  0100               	movlb	0	; () banked
  4714  001C78  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4715  001C7A  0E00               	movlw	0
  4716  001C7C  6F6A               	movwf	compare@lower& (0+255),b
  4717  001C7E  C0F8  F06C         	movff	detect_color@RR,compare@value2compare
  4718  001C82  C0F9  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4719  001C86  0E00               	movlw	0
  4720  001C88  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4721  001C8A  0E1E               	movlw	30
  4722  001C8C  6F6E               	movwf	compare@upper& (0+255),b
  4723  001C8E  EC4C  F02E         	call	_compare	;wreg free
  4724  001C92  0900               	iorlw	0
  4725  001C94  B4D8               	btfsc	status,2,c
  4726  001C96  EF4F  F00E         	goto	u5321
  4727  001C9A  EF51  F00E         	goto	u5320
  4728  001C9E                     u5321:
  4729  001C9E  EF54  F00E         	goto	l4906
  4730  001CA2                     u5320:
  4731  001CA2  0E00               	movlw	0
  4732  001CA4  0100               	movlb	0	; () banked
  4733  001CA6  6FF5               	movwf	detect_color@color& (0+255),b
  4734  001CA8                     l4906:
  4735                           
  4736                           ;color.c: 334:     if (color == 8) {toggle_light(2,1);}
  4737  001CA8  0E08               	movlw	8
  4738  001CAA  0100               	movlb	0	; () banked
  4739  001CAC  19F5               	xorwf	detect_color@color& (0+255),w,b
  4740  001CAE  A4D8               	btfss	status,2,c
  4741  001CB0  EF5C  F00E         	goto	u5331
  4742  001CB4  EF5E  F00E         	goto	u5330
  4743  001CB8                     u5331:
  4744  001CB8  EF63  F00E         	goto	l4910
  4745  001CBC                     u5330:
  4746  001CBC                     
  4747                           ; BSR set to: 0
  4748  001CBC  0E01               	movlw	1
  4749  001CBE  6E01               	movwf	toggle_light@toggletime^0,c
  4750  001CC0  0E02               	movlw	2
  4751  001CC2  EC3A  F01B         	call	_toggle_light
  4752  001CC6                     l4910:
  4753                           
  4754                           ;color.c: 335:     return color;
  4755  001CC6  0100               	movlb	0	; () banked
  4756  001CC8  51F5               	movf	detect_color@color& (0+255),w,b
  4757  001CCA                     
  4758                           ; BSR set to: 0
  4759  001CCA  0012               	return		;funcret
  4760  001CCC                     __end_of_detect_color:
  4761                           	callstack 0
  4762                           
  4763 ;; *************** function _compare *****************
  4764 ;; Defined at:
  4765 ;;		line 338 in file "color.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  lower           2   10[BANK0 ] unsigned int 
  4768 ;;  value2compar    2   12[BANK0 ] unsigned int 
  4769 ;;  upper           2   14[BANK0 ] unsigned int 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  result          1   16[BANK0 ] unsigned char 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      unsigned char 
  4774 ;; Registers used:
  4775 ;;		wreg, status,2, status,0
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4781 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4782 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4784 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4785 ;;Total ram usage:        7 bytes
  4786 ;; Hardware stack levels used: 1
  4787 ;; Hardware stack levels required when called: 1
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_detect_color
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text8
  4796  005C98                     __ptext8:
  4797                           	callstack 0
  4798  005C98                     _compare:
  4799                           	callstack 27
  4800  005C98                     
  4801                           ;color.c: 338: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 339: {;color.c: 340:     unsigned char result = 0;
  4802  005C98  0E00               	movlw	0
  4803  005C9A  0100               	movlb	0	; () banked
  4804  005C9C  6F70               	movwf	compare@result& (0+255),b
  4805  005C9E                     
  4806                           ; BSR set to: 0
  4807                           ;color.c: 341:     if (lower < value2compare && value2compare <= upper){result = 1;}
  4808  005C9E  516C               	movf	compare@value2compare& (0+255),w,b
  4809  005CA0  5D6A               	subwf	compare@lower& (0+255),w,b
  4810  005CA2  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4811  005CA4  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  4812  005CA6  B0D8               	btfsc	status,0,c
  4813  005CA8  EF58  F02E         	goto	u4771
  4814  005CAC  EF5A  F02E         	goto	u4770
  4815  005CB0                     u4771:
  4816  005CB0  EF67  F02E         	goto	l136
  4817  005CB4                     u4770:
  4818  005CB4                     
  4819                           ; BSR set to: 0
  4820  005CB4  516C               	movf	compare@value2compare& (0+255),w,b
  4821  005CB6  5D6E               	subwf	compare@upper& (0+255),w,b
  4822  005CB8  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4823  005CBA  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  4824  005CBC  A0D8               	btfss	status,0,c
  4825  005CBE  EF63  F02E         	goto	u4781
  4826  005CC2  EF65  F02E         	goto	u4780
  4827  005CC6                     u4781:
  4828  005CC6  EF67  F02E         	goto	l136
  4829  005CCA                     u4780:
  4830  005CCA                     
  4831                           ; BSR set to: 0
  4832  005CCA  0E01               	movlw	1
  4833  005CCC  6F70               	movwf	compare@result& (0+255),b
  4834  005CCE                     l136:
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;color.c: 342:     return result;
  4838  005CCE  5170               	movf	compare@result& (0+255),w,b
  4839  005CD0                     
  4840                           ; BSR set to: 0
  4841  005CD0  0012               	return		;funcret
  4842  005CD2                     __end_of_compare:
  4843                           	callstack 0
  4844                           
  4845 ;; *************** function _color_data_collection *****************
  4846 ;; Defined at:
  4847 ;;		line 29 in file "test_and_calibration.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;  m               2   89[COMRAM] PTR struct color_rgb
  4850 ;;		 -> main@rgb(8), 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  x               2  132[BANK0 ] int 
  4853 ;;  k               2  130[BANK0 ] int 
  4854 ;;  j               2  128[BANK0 ] int 
  4855 ;;  i               2  126[BANK0 ] int 
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      void 
  4858 ;; Registers used:
  4859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4865 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4866 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4867 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4868 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4869 ;;Total ram usage:       12 bytes
  4870 ;; Hardware stack levels used: 1
  4871 ;; Hardware stack levels required when called: 10
  4872 ;; This function calls:
  4873 ;;		_LED_B
  4874 ;;		_LED_C
  4875 ;;		_LED_G
  4876 ;;		_LED_R
  4877 ;;		_color_display
  4878 ;;		_color_predict
  4879 ;;		_read_color
  4880 ;; This function is called by:
  4881 ;;		_test_function
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text9
  4886  0045D0                     __ptext9:
  4887                           	callstack 0
  4888  0045D0                     _color_data_collection:
  4889                           	callstack 19
  4890  0045D0                     
  4891                           ;test_and_calibration.c: 29: void color_data_collection(struct color_rgb *m);test_and_ca
      +                          libration.c: 30: {;test_and_calibration.c: 31:     int i = 0; int j = 0; int k = 0; int 
      +                          x = 0;
  4892  0045D0  0E00               	movlw	0
  4893  0045D2  0100               	movlb	0	; () banked
  4894  0045D4  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4895  0045D6  0E00               	movlw	0
  4896  0045D8  6FDE               	movwf	color_data_collection@i& (0+255),b
  4897  0045DA  0E00               	movlw	0
  4898  0045DC  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  4899  0045DE  0E00               	movlw	0
  4900  0045E0  6FE2               	movwf	color_data_collection@k& (0+255),b
  4901  0045E2  0E00               	movlw	0
  4902  0045E4  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  4903  0045E6  0E00               	movlw	0
  4904  0045E8  6FE4               	movwf	color_data_collection@x& (0+255),b
  4905                           
  4906                           ;test_and_calibration.c: 32:     for (i = 0; i < 1; ++i){
  4907  0045EA  0E00               	movlw	0
  4908  0045EC  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4909  0045EE  0E00               	movlw	0
  4910  0045F0  6FDE               	movwf	color_data_collection@i& (0+255),b
  4911  0045F2                     l5066:
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;test_and_calibration.c: 33:         LED_C();
  4915  0045F2  ECB7  F02F         	call	_LED_C	;wreg free
  4916  0045F6                     
  4917                           ;test_and_calibration.c: 34:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4918  0045F6  0E09               	movlw	9
  4919  0045F8  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4920  0045FA  0E1E               	movlw	30
  4921  0045FC  6E5C               	movwf	??_color_data_collection^0,c
  4922  0045FE  0EE4               	movlw	228
  4923  004600                     u6047:
  4924  004600  2EE8               	decfsz	wreg,f,c
  4925  004602  D7FE               	bra	u6047
  4926  004604  2E5C               	decfsz	??_color_data_collection^0,f,c
  4927  004606  D7FC               	bra	u6047
  4928  004608  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4929  00460A  D7FA               	bra	u6047
  4930  00460C  D000               	nop2	
  4931  00460E                     
  4932                           ;test_and_calibration.c: 35:         read_color(m);
  4933  00460E  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4934  004612  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4935  004616  EC8C  F02C         	call	_read_color	;wreg free
  4936  00461A                     
  4937                           ;test_and_calibration.c: 36:         color_display(m);
  4938  00461A  C05A  F058         	movff	color_data_collection@m,color_display@m
  4939  00461E  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4940  004622  EC23  F02C         	call	_color_display	;wreg free
  4941  004626                     
  4942                           ;test_and_calibration.c: 37:     }
  4943  004626  0100               	movlb	0	; () banked
  4944  004628  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  4945  00462A  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  4946  00462C                     
  4947                           ; BSR set to: 0
  4948  00462C  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  4949  00462E  EF21  F023         	goto	u5521
  4950  004632  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  4951  004634  E108               	bnz	u5520
  4952  004636  05DE               	decf	color_data_collection@i& (0+255),w,b
  4953  004638  A0D8               	btfss	status,0,c
  4954  00463A  EF21  F023         	goto	u5521
  4955  00463E  EF23  F023         	goto	u5520
  4956  004642                     u5521:
  4957  004642  EFF9  F022         	goto	l5066
  4958  004646                     u5520:
  4959  004646                     
  4960                           ; BSR set to: 0
  4961                           ;test_and_calibration.c: 39:     for (j = 0; j < 1; ++j){
  4962  004646  0E00               	movlw	0
  4963  004648  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  4964  00464A  0E00               	movlw	0
  4965  00464C  6FE0               	movwf	color_data_collection@j& (0+255),b
  4966  00464E                     l5084:
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;test_and_calibration.c: 40:         LED_R();
  4970  00464E  EC77  F02F         	call	_LED_R	;wreg free
  4971  004652                     
  4972                           ;test_and_calibration.c: 41:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4973  004652  0E09               	movlw	9
  4974  004654  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4975  004656  0E1E               	movlw	30
  4976  004658  6E5C               	movwf	??_color_data_collection^0,c
  4977  00465A  0EE4               	movlw	228
  4978  00465C                     u6057:
  4979  00465C  2EE8               	decfsz	wreg,f,c
  4980  00465E  D7FE               	bra	u6057
  4981  004660  2E5C               	decfsz	??_color_data_collection^0,f,c
  4982  004662  D7FC               	bra	u6057
  4983  004664  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4984  004666  D7FA               	bra	u6057
  4985  004668  D000               	nop2	
  4986  00466A                     
  4987                           ;test_and_calibration.c: 42:         read_color(m);
  4988  00466A  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4989  00466E  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4990  004672  EC8C  F02C         	call	_read_color	;wreg free
  4991  004676                     
  4992                           ;test_and_calibration.c: 43:         color_display(m);
  4993  004676  C05A  F058         	movff	color_data_collection@m,color_display@m
  4994  00467A  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4995  00467E  EC23  F02C         	call	_color_display	;wreg free
  4996  004682                     
  4997                           ;test_and_calibration.c: 44:     }
  4998  004682  0100               	movlb	0	; () banked
  4999  004684  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  5000  004686  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  5001  004688                     
  5002                           ; BSR set to: 0
  5003  004688  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  5004  00468A  EF4F  F023         	goto	u5531
  5005  00468E  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  5006  004690  E108               	bnz	u5530
  5007  004692  05E0               	decf	color_data_collection@j& (0+255),w,b
  5008  004694  A0D8               	btfss	status,0,c
  5009  004696  EF4F  F023         	goto	u5531
  5010  00469A  EF51  F023         	goto	u5530
  5011  00469E                     u5531:
  5012  00469E  EF27  F023         	goto	l5084
  5013  0046A2                     u5530:
  5014  0046A2                     
  5015                           ; BSR set to: 0
  5016                           ;test_and_calibration.c: 46:     for (k = 0; k < 1; ++k){
  5017  0046A2  0E00               	movlw	0
  5018  0046A4  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  5019  0046A6  0E00               	movlw	0
  5020  0046A8  6FE2               	movwf	color_data_collection@k& (0+255),b
  5021  0046AA                     l5102:
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;test_and_calibration.c: 47:         LED_G();
  5025  0046AA  EC97  F02F         	call	_LED_G	;wreg free
  5026  0046AE                     
  5027                           ;test_and_calibration.c: 48:         _delay((unsigned long)((100)*(64000000/4000.0)));
  5028  0046AE  0E09               	movlw	9
  5029  0046B0  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5030  0046B2  0E1E               	movlw	30
  5031  0046B4  6E5C               	movwf	??_color_data_collection^0,c
  5032  0046B6  0EE4               	movlw	228
  5033  0046B8                     u6067:
  5034  0046B8  2EE8               	decfsz	wreg,f,c
  5035  0046BA  D7FE               	bra	u6067
  5036  0046BC  2E5C               	decfsz	??_color_data_collection^0,f,c
  5037  0046BE  D7FC               	bra	u6067
  5038  0046C0  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5039  0046C2  D7FA               	bra	u6067
  5040  0046C4  D000               	nop2	
  5041  0046C6                     
  5042                           ;test_and_calibration.c: 49:         read_color(m);
  5043  0046C6  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5044  0046CA  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5045  0046CE  EC8C  F02C         	call	_read_color	;wreg free
  5046  0046D2                     
  5047                           ;test_and_calibration.c: 50:         color_display(m);
  5048  0046D2  C05A  F058         	movff	color_data_collection@m,color_display@m
  5049  0046D6  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5050  0046DA  EC23  F02C         	call	_color_display	;wreg free
  5051  0046DE                     
  5052                           ;test_and_calibration.c: 51:     }
  5053  0046DE  0100               	movlb	0	; () banked
  5054  0046E0  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  5055  0046E2  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  5056  0046E4                     
  5057                           ; BSR set to: 0
  5058  0046E4  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  5059  0046E6  EF7D  F023         	goto	u5541
  5060  0046EA  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  5061  0046EC  E108               	bnz	u5540
  5062  0046EE  05E2               	decf	color_data_collection@k& (0+255),w,b
  5063  0046F0  A0D8               	btfss	status,0,c
  5064  0046F2  EF7D  F023         	goto	u5541
  5065  0046F6  EF7F  F023         	goto	u5540
  5066  0046FA                     u5541:
  5067  0046FA  EF55  F023         	goto	l5102
  5068  0046FE                     u5540:
  5069  0046FE                     
  5070                           ; BSR set to: 0
  5071                           ;test_and_calibration.c: 53:     for (x = 0; x < 1; ++x){
  5072  0046FE  0E00               	movlw	0
  5073  004700  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  5074  004702  0E00               	movlw	0
  5075  004704  6FE4               	movwf	color_data_collection@x& (0+255),b
  5076  004706                     l5120:
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;test_and_calibration.c: 54:         LED_B();
  5080  004706  ECA7  F02F         	call	_LED_B	;wreg free
  5081  00470A                     
  5082                           ;test_and_calibration.c: 55:         _delay((unsigned long)((100)*(64000000/4000.0)));
  5083  00470A  0E09               	movlw	9
  5084  00470C  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5085  00470E  0E1E               	movlw	30
  5086  004710  6E5C               	movwf	??_color_data_collection^0,c
  5087  004712  0EE4               	movlw	228
  5088  004714                     u6077:
  5089  004714  2EE8               	decfsz	wreg,f,c
  5090  004716  D7FE               	bra	u6077
  5091  004718  2E5C               	decfsz	??_color_data_collection^0,f,c
  5092  00471A  D7FC               	bra	u6077
  5093  00471C  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5094  00471E  D7FA               	bra	u6077
  5095  004720  D000               	nop2	
  5096  004722                     
  5097                           ;test_and_calibration.c: 56:         read_color(m);
  5098  004722  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5099  004726  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5100  00472A  EC8C  F02C         	call	_read_color	;wreg free
  5101  00472E                     
  5102                           ;test_and_calibration.c: 57:         color_display(m);
  5103  00472E  C05A  F058         	movff	color_data_collection@m,color_display@m
  5104  004732  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5105  004736  EC23  F02C         	call	_color_display	;wreg free
  5106  00473A                     
  5107                           ;test_and_calibration.c: 58:     }
  5108  00473A  0100               	movlb	0	; () banked
  5109  00473C  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  5110  00473E  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  5111  004740                     
  5112                           ; BSR set to: 0
  5113  004740  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  5114  004742  EFAB  F023         	goto	u5551
  5115  004746  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  5116  004748  E108               	bnz	u5550
  5117  00474A  05E4               	decf	color_data_collection@x& (0+255),w,b
  5118  00474C  A0D8               	btfss	status,0,c
  5119  00474E  EFAB  F023         	goto	u5551
  5120  004752  EFAD  F023         	goto	u5550
  5121  004756                     u5551:
  5122  004756  EF83  F023         	goto	l5120
  5123  00475A                     u5550:
  5124  00475A                     
  5125                           ; BSR set to: 0
  5126                           ;test_and_calibration.c: 59:     color_predict(1);
  5127  00475A  0E01               	movlw	1
  5128  00475C  EC24  F02F         	call	_color_predict
  5129  004760                     
  5130                           ;test_and_calibration.c: 60:     LED_C();
  5131  004760  ECB7  F02F         	call	_LED_C	;wreg free
  5132  004764  0012               	return		;funcret
  5133  004766                     __end_of_color_data_collection:
  5134                           	callstack 0
  5135                           
  5136 ;; *************** function _read_color *****************
  5137 ;; Defined at:
  5138 ;;		line 167 in file "color.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  m               2   11[COMRAM] PTR struct color_rgb
  5141 ;;		 -> main@rgb(8), 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;		None
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5157 ;;Total ram usage:        2 bytes
  5158 ;; Hardware stack levels used: 1
  5159 ;; Hardware stack levels required when called: 4
  5160 ;; This function calls:
  5161 ;;		_color_read_Blue
  5162 ;;		_color_read_Clear
  5163 ;;		_color_read_Green
  5164 ;;		_color_read_Red
  5165 ;; This function is called by:
  5166 ;;		_detect_color
  5167 ;;		_color_data_collection
  5168 ;;		_test_function
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text10
  5173  005918                     __ptext10:
  5174                           	callstack 0
  5175  005918                     _read_color:
  5176                           	callstack 24
  5177  005918                     
  5178                           ;color.c: 167: void read_color (struct color_rgb *m);color.c: 168: {;color.c: 169:     m
      +                          ->R = color_read_Red();
  5179  005918  ECE4  F02C         	call	_color_read_Red	;wreg free
  5180  00591C  C00C  FFD9         	movff	read_color@m,fsr2l
  5181  005920  C00D  FFDA         	movff	read_color@m+1,fsr2h
  5182  005924  C005  FFDE         	movff	?_color_read_Red,postinc2
  5183  005928  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  5184                           
  5185                           ;color.c: 170:     m->B = color_read_Blue();
  5186  00592C  EC34  F02D         	call	_color_read_Blue	;wreg free
  5187  005930  EE20 F004          	lfsr	2,4
  5188  005934  500C               	movf	read_color@m^0,w,c
  5189  005936  26D9               	addwf	fsr2l,f,c
  5190  005938  500D               	movf	(read_color@m+1)^0,w,c
  5191  00593A  22DA               	addwfc	fsr2h,f,c
  5192  00593C  C005  FFDE         	movff	?_color_read_Blue,postinc2
  5193  005940  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  5194                           
  5195                           ;color.c: 171:     m->G = color_read_Green();
  5196  005944  EC0C  F02D         	call	_color_read_Green	;wreg free
  5197  005948  EE20 F002          	lfsr	2,2
  5198  00594C  500C               	movf	read_color@m^0,w,c
  5199  00594E  26D9               	addwf	fsr2l,f,c
  5200  005950  500D               	movf	(read_color@m+1)^0,w,c
  5201  005952  22DA               	addwfc	fsr2h,f,c
  5202  005954  C005  FFDE         	movff	?_color_read_Green,postinc2
  5203  005958  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  5204                           
  5205                           ;color.c: 172:     m->C = color_read_Clear();
  5206  00595C  EC5C  F02D         	call	_color_read_Clear	;wreg free
  5207  005960  EE20 F006          	lfsr	2,6
  5208  005964  500C               	movf	read_color@m^0,w,c
  5209  005966  26D9               	addwf	fsr2l,f,c
  5210  005968  500D               	movf	(read_color@m+1)^0,w,c
  5211  00596A  22DA               	addwfc	fsr2h,f,c
  5212  00596C  C005  FFDE         	movff	?_color_read_Clear,postinc2
  5213  005970  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  5214  005974  0012               	return		;funcret
  5215  005976                     __end_of_read_color:
  5216                           	callstack 0
  5217                           
  5218 ;; *************** function _color_predict *****************
  5219 ;; Defined at:
  5220 ;;		line 230 in file "color.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  color           1    wreg     unsigned char 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  color           1  125[BANK0 ] unsigned char 
  5225 ;;  buf           100   25[BANK0 ] unsigned char [100]
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  1    wreg      void 
  5228 ;; Registers used:
  5229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5236 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5238 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5239 ;;Total ram usage:      101 bytes
  5240 ;; Hardware stack levels used: 1
  5241 ;; Hardware stack levels required when called: 9
  5242 ;; This function calls:
  5243 ;;		_sendStringSerial4
  5244 ;;		_sprintf
  5245 ;; This function is called by:
  5246 ;;		_main
  5247 ;;		_color_data_collection
  5248 ;;		_test_function
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           	psect	text11
  5253  005E48                     __ptext11:
  5254                           	callstack 0
  5255  005E48                     _color_predict:
  5256                           	callstack 20
  5257                           
  5258                           ;incstack = 0
  5259                           ;color_predict@color stored from wreg
  5260  005E48  0100               	movlb	0	; () banked
  5261  005E4A  6FDD               	movwf	color_predict@color& (0+255),b
  5262  005E4C                     
  5263                           ;color.c: 230: void color_predict(unsigned char color);color.c: 231: {;color.c: 232:    
      +                           char buf[100];;color.c: 233:     sprintf(buf,"\t%d\r\n", color);
  5264  005E4C  0E79               	movlw	low color_predict@buf
  5265  005E4E  0100               	movlb	0	; () banked
  5266  005E50  6F60               	movwf	sprintf@s& (0+255),b
  5267  005E52  0E00               	movlw	high color_predict@buf
  5268  005E54  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5269  005E56  0E0D               	movlw	low (STR_1+8)
  5270  005E58  6F62               	movwf	sprintf@fmt& (0+255),b
  5271  005E5A  0E0E               	movlw	high (STR_1+8)
  5272  005E5C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5273  005E5E  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  5274  005E62  6B65               	clrf	(?_sprintf+5)& (0+255),b
  5275  005E64  ECBB  F02C         	call	_sprintf	;wreg free
  5276  005E68                     
  5277                           ;color.c: 234:     sendStringSerial4(buf);
  5278  005E68  0E79               	movlw	low color_predict@buf
  5279  005E6A  6E02               	movwf	sendStringSerial4@string^0,c
  5280  005E6C  0E00               	movlw	high color_predict@buf
  5281  005E6E  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  5282  005E70  EC0C  F02F         	call	_sendStringSerial4	;wreg free
  5283  005E74  0012               	return		;funcret
  5284  005E76                     __end_of_color_predict:
  5285                           	callstack 0
  5286                           
  5287 ;; *************** function _color_display *****************
  5288 ;; Defined at:
  5289 ;;		line 222 in file "color.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  m               2   87[COMRAM] PTR struct color_rgb
  5292 ;;		 -> main@rgb(8), 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  buf           100   25[BANK0 ] unsigned char [100]
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  1    wreg      void 
  5297 ;; Registers used:
  5298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5305 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5307 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5308 ;;Total ram usage:      102 bytes
  5309 ;; Hardware stack levels used: 1
  5310 ;; Hardware stack levels required when called: 9
  5311 ;; This function calls:
  5312 ;;		_sendStringSerial4
  5313 ;;		_sprintf
  5314 ;; This function is called by:
  5315 ;;		_color_data_collection
  5316 ;;		_test_function
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text12
  5321  005846                     __ptext12:
  5322                           	callstack 0
  5323  005846                     _color_display:
  5324                           	callstack 20
  5325  005846                     
  5326                           ;color.c: 222: void color_display(struct color_rgb *m);color.c: 223: {;color.c: 224:    
      +                           char buf[100];;color.c: 225:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  5327  005846  0E79               	movlw	low color_display@buf
  5328  005848  0100               	movlb	0	; () banked
  5329  00584A  6F60               	movwf	sprintf@s& (0+255),b
  5330  00584C  0E00               	movlw	high color_display@buf
  5331  00584E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5332  005850  0E05               	movlw	low STR_1
  5333  005852  6F62               	movwf	sprintf@fmt& (0+255),b
  5334  005854  0E0E               	movlw	high STR_1
  5335  005856  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5336  005858  C058  FFD9         	movff	color_display@m,fsr2l
  5337  00585C  C059  FFDA         	movff	color_display@m+1,fsr2h
  5338  005860  CFDE F064          	movff	postinc2,?_sprintf+4
  5339  005864  CFDD F065          	movff	postdec2,?_sprintf+5
  5340  005868  EE20 F002          	lfsr	2,2
  5341  00586C  5058               	movf	color_display@m^0,w,c
  5342  00586E  26D9               	addwf	fsr2l,f,c
  5343  005870  5059               	movf	(color_display@m+1)^0,w,c
  5344  005872  22DA               	addwfc	fsr2h,f,c
  5345  005874  CFDE F066          	movff	postinc2,?_sprintf+6
  5346  005878  CFDD F067          	movff	postdec2,?_sprintf+7
  5347  00587C  EE20 F004          	lfsr	2,4
  5348  005880  5058               	movf	color_display@m^0,w,c
  5349  005882  26D9               	addwf	fsr2l,f,c
  5350  005884  5059               	movf	(color_display@m+1)^0,w,c
  5351  005886  22DA               	addwfc	fsr2h,f,c
  5352  005888  CFDE F068          	movff	postinc2,?_sprintf+8
  5353  00588C  CFDD F069          	movff	postdec2,?_sprintf+9
  5354  005890  EE20 F006          	lfsr	2,6
  5355  005894  5058               	movf	color_display@m^0,w,c
  5356  005896  26D9               	addwf	fsr2l,f,c
  5357  005898  5059               	movf	(color_display@m+1)^0,w,c
  5358  00589A  22DA               	addwfc	fsr2h,f,c
  5359  00589C  CFDE F06A          	movff	postinc2,?_sprintf+10
  5360  0058A0  CFDD F06B          	movff	postdec2,?_sprintf+11
  5361  0058A4  ECBB  F02C         	call	_sprintf	;wreg free
  5362  0058A8                     
  5363                           ;color.c: 226:     sendStringSerial4(buf);
  5364  0058A8  0E79               	movlw	low color_display@buf
  5365  0058AA  6E02               	movwf	sendStringSerial4@string^0,c
  5366  0058AC  0E00               	movlw	high color_display@buf
  5367  0058AE  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  5368  0058B0  EC0C  F02F         	call	_sendStringSerial4	;wreg free
  5369  0058B4  0012               	return		;funcret
  5370  0058B6                     __end_of_color_display:
  5371                           	callstack 0
  5372                           
  5373 ;; *************** function _sprintf *****************
  5374 ;; Defined at:
  5375 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;  s               2    0[BANK0 ] PTR unsigned char 
  5378 ;;		 -> detect_color@buf(100), color_predict@buf(100), color_display@buf(100), 
  5379 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5380 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(6), 
  5381 ;;		 -> STR_1(14), 
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;  f              11   14[BANK0 ] struct _IO_FILE
  5384 ;;  ap              2   12[BANK0 ] PTR void [1]
  5385 ;;		 -> ?_sprintf(2), 
  5386 ;;  ret             2    0        int 
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  2    0[BANK0 ] int 
  5389 ;; Registers used:
  5390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5396 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5397 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5399 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5400 ;;Total ram usage:       25 bytes
  5401 ;; Hardware stack levels used: 1
  5402 ;; Hardware stack levels required when called: 8
  5403 ;; This function calls:
  5404 ;;		_vfprintf
  5405 ;; This function is called by:
  5406 ;;		_color_display
  5407 ;;		_color_predict
  5408 ;;		_detect_color
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           	psect	text13
  5413  005976                     __ptext13:
  5414                           	callstack 0
  5415  005976                     _sprintf:
  5416                           	callstack 20
  5417  005976  0E64               	movlw	low (?_sprintf+4)
  5418  005978  0100               	movlb	0	; () banked
  5419  00597A  6F6C               	movwf	sprintf@ap& (0+255),b
  5420  00597C  0E00               	movlw	high (?_sprintf+4)
  5421  00597E  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  5422  005980  C060  F06E         	movff	sprintf@s,sprintf@f
  5423  005984  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  5424  005988                     
  5425                           ; BSR set to: 0
  5426  005988  0E00               	movlw	0
  5427  00598A  6F72               	movwf	(sprintf@f+4)& (0+255),b
  5428  00598C  0E00               	movlw	0
  5429  00598E  6F71               	movwf	(sprintf@f+3)& (0+255),b
  5430  005990                     
  5431                           ; BSR set to: 0
  5432  005990  0E00               	movlw	0
  5433  005992  6F78               	movwf	(sprintf@f+10)& (0+255),b
  5434  005994  0E00               	movlw	0
  5435  005996  6F77               	movwf	(sprintf@f+9)& (0+255),b
  5436  005998                     
  5437                           ; BSR set to: 0
  5438  005998  0E6E               	movlw	low sprintf@f
  5439  00599A  6E50               	movwf	vfprintf@fp^0,c
  5440  00599C  0E00               	movlw	high sprintf@f
  5441  00599E  6E51               	movwf	(vfprintf@fp+1)^0,c
  5442  0059A0  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  5443  0059A4  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5444  0059A8  0E6C               	movlw	low sprintf@ap
  5445  0059AA  6E54               	movwf	vfprintf@ap^0,c
  5446  0059AC  0E00               	movlw	high sprintf@ap
  5447  0059AE  6E55               	movwf	(vfprintf@ap+1)^0,c
  5448  0059B0  EC5B  F02C         	call	_vfprintf	;wreg free
  5449  0059B4  0100               	movlb	0	; () banked
  5450  0059B6  5171               	movf	(sprintf@f+3)& (0+255),w,b
  5451  0059B8  2560               	addwf	sprintf@s& (0+255),w,b
  5452  0059BA  6ED9               	movwf	fsr2l,c
  5453  0059BC  5172               	movf	(sprintf@f+4)& (0+255),w,b
  5454  0059BE  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  5455  0059C0  6EDA               	movwf	fsr2h,c
  5456  0059C2  0E00               	movlw	0
  5457  0059C4  6EDF               	movwf	indf2,c
  5458  0059C6                     
  5459                           ; BSR set to: 0
  5460  0059C6  0012               	return		;funcret
  5461  0059C8                     __end_of_sprintf:
  5462                           	callstack 0
  5463                           
  5464 ;; *************** function _vfprintf *****************
  5465 ;; Defined at:
  5466 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5469 ;;		 -> sprintf@f(11), 
  5470 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5471 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(6), 
  5472 ;;		 -> STR_1(14), 
  5473 ;;  ap              2   83[COMRAM] PTR PTR void 
  5474 ;;		 -> sprintf@ap(2), 
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5477 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(6), 
  5478 ;;		 -> STR_1(14), 
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  2   79[COMRAM] int 
  5481 ;; Registers used:
  5482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5488 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5491 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5492 ;;Total ram usage:        8 bytes
  5493 ;; Hardware stack levels used: 1
  5494 ;; Hardware stack levels required when called: 7
  5495 ;; This function calls:
  5496 ;;		_vfpfcnvrt
  5497 ;; This function is called by:
  5498 ;;		_sprintf
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           	psect	text14
  5503  0058B6                     __ptext14:
  5504                           	callstack 0
  5505  0058B6                     _vfprintf:
  5506                           	callstack 20
  5507  0058B6                     
  5508                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5509  0058B6  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  5510  0058BA  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5511  0058BE                     
  5512                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5513  0058BE  0E00               	movlw	0
  5514  0058C0  0101               	movlb	1	; () banked
  5515  0058C2  6F3F               	movwf	(_nout+1)& (0+255),b
  5516  0058C4  0E00               	movlw	0
  5517  0058C6  6F3E               	movwf	_nout& (0+255),b
  5518                           
  5519                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5520  0058C8  EF79  F02C         	goto	l4188
  5521  0058CC                     l4186:
  5522                           
  5523                           ; BSR set to: 1
  5524                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5525  0058CC  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5526  0058D0  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5527  0058D4  0E56               	movlw	low vfprintf@cfmt
  5528  0058D6  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5529  0058D8  0E00               	movlw	high vfprintf@cfmt
  5530  0058DA  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5531  0058DC  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5532  0058E0  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5533  0058E4  EC84  F01F         	call	_vfpfcnvrt	;wreg free
  5534  0058E8  5040               	movf	?_vfpfcnvrt^0,w,c
  5535  0058EA  0101               	movlb	1	; () banked
  5536  0058EC  273E               	addwf	_nout& (0+255),f,b
  5537  0058EE  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5538  0058F0  233F               	addwfc	(_nout+1)& (0+255),f,b
  5539  0058F2                     l4188:
  5540                           
  5541                           ; BSR set to: 1
  5542                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5543  0058F2  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  5544  0058F6  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5545  0058FA                     	if	0	;tblptru may be non-zero
  5546  0058FA                     	endif
  5547  0058FA                     	if	0	;tblptru may be non-zero
  5548  0058FA                     	endif
  5549  0058FA  0008               	tblrd		*
  5550  0058FC  50F5               	movf	tablat,w,c
  5551  0058FE  0900               	iorlw	0
  5552  005900  A4D8               	btfss	status,2,c
  5553  005902  EF85  F02C         	goto	u4221
  5554  005906  EF87  F02C         	goto	u4220
  5555  00590A                     u4221:
  5556  00590A  EF66  F02C         	goto	l4186
  5557  00590E                     u4220:
  5558  00590E                     
  5559                           ; BSR set to: 1
  5560                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5561  00590E  C13E  F050         	movff	_nout,?_vfprintf
  5562  005912  C13F  F051         	movff	_nout+1,?_vfprintf+1
  5563  005916                     
  5564                           ; BSR set to: 1
  5565  005916  0012               	return		;funcret
  5566  005918                     __end_of_vfprintf:
  5567                           	callstack 0
  5568                           
  5569 ;; *************** function _vfpfcnvrt *****************
  5570 ;; Defined at:
  5571 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5574 ;;		 -> sprintf@f(11), 
  5575 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5576 ;;		 -> vfprintf@cfmt(2), 
  5577 ;;  ap              2   67[COMRAM] PTR PTR void 
  5578 ;;		 -> sprintf@ap(2), 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  ll              8   71[COMRAM] long long 
  5581 ;;  llu             8    0        unsigned long long 
  5582 ;;  f               4    0        unsigned long long 
  5583 ;;  vp              3    0        PTR void 
  5584 ;;  ct              3    0        unsigned char [3]
  5585 ;;  cp              3    0        PTR unsigned char 
  5586 ;;  i               2    0        int 
  5587 ;;  done            2    0        int 
  5588 ;;  c               1    0        unsigned char 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  2   63[COMRAM] int 
  5591 ;; Registers used:
  5592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5598 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5599 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5602 ;;Total ram usage:       16 bytes
  5603 ;; Hardware stack levels used: 1
  5604 ;; Hardware stack levels required when called: 6
  5605 ;; This function calls:
  5606 ;;		_dtoa
  5607 ;;		_fputc
  5608 ;; This function is called by:
  5609 ;;		_vfprintf
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           	psect	text15
  5614  003F08                     __ptext15:
  5615                           	callstack 0
  5616  003F08                     _vfpfcnvrt:
  5617                           	callstack 20
  5618  003F08                     
  5619                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5620  003F08  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5621  003F0C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5622  003F10  CFDE FFF6          	movff	postinc2,tblptrl
  5623  003F14  CFDD FFF7          	movff	postdec2,tblptrh
  5624  003F18                     	if	0	;tblptru may be non-zero
  5625  003F18                     	endif
  5626  003F18                     	if	0	;tblptru may be non-zero
  5627  003F18                     	endif
  5628  003F18  0008               	tblrd		*
  5629  003F1A  50F5               	movf	tablat,w,c
  5630  003F1C  0A25               	xorlw	37
  5631  003F1E  A4D8               	btfss	status,2,c
  5632  003F20  EF94  F01F         	goto	u3861
  5633  003F24  EF96  F01F         	goto	u3860
  5634  003F28                     u3861:
  5635  003F28  EF42  F020         	goto	l3952
  5636  003F2C                     u3860:
  5637  003F2C                     
  5638                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5639  003F2C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5640  003F30  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5641  003F34  2ADE               	incf	postinc2,f,c
  5642  003F36  0E00               	movlw	0
  5643  003F38  22DD               	addwfc	postdec2,f,c
  5644  003F3A                     
  5645                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5646  003F3A  0E00               	movlw	0
  5647  003F3C  0101               	movlb	1	; () banked
  5648  003F3E  6F41               	movwf	(_width+1)& (0+255),b
  5649  003F40  0E00               	movlw	0
  5650  003F42  6F40               	movwf	_width& (0+255),b
  5651  003F44  C140  F144         	movff	_width,_flags
  5652  003F48  C141  F145         	movff	_width+1,_flags+1
  5653  003F4C                     
  5654                           ; BSR set to: 1
  5655                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5656  003F4C  6942               	setf	_prec& (0+255),b
  5657  003F4E  6943               	setf	(_prec+1)& (0+255),b
  5658  003F50                     
  5659                           ; BSR set to: 1
  5660                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5661  003F50  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5662  003F54  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5663  003F58  CFDE FFF6          	movff	postinc2,tblptrl
  5664  003F5C  CFDD FFF7          	movff	postdec2,tblptrh
  5665  003F60                     	if	0	;tblptru may be non-zero
  5666  003F60                     	endif
  5667  003F60                     	if	0	;tblptru may be non-zero
  5668  003F60                     	endif
  5669  003F60  0008               	tblrd		*
  5670  003F62  50F5               	movf	tablat,w,c
  5671  003F64  0A64               	xorlw	100
  5672  003F66  B4D8               	btfsc	status,2,c
  5673  003F68  EFB8  F01F         	goto	u3871
  5674  003F6C  EFBA  F01F         	goto	u3870
  5675  003F70                     u3871:
  5676  003F70  EFCC  F01F         	goto	l3930
  5677  003F74                     u3870:
  5678  003F74                     
  5679                           ; BSR set to: 1
  5680  003F74  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5681  003F78  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5682  003F7C  CFDE FFF6          	movff	postinc2,tblptrl
  5683  003F80  CFDD FFF7          	movff	postdec2,tblptrh
  5684  003F84                     	if	0	;tblptru may be non-zero
  5685  003F84                     	endif
  5686  003F84                     	if	0	;tblptru may be non-zero
  5687  003F84                     	endif
  5688  003F84  0008               	tblrd		*
  5689  003F86  50F5               	movf	tablat,w,c
  5690  003F88  0A69               	xorlw	105
  5691  003F8A  A4D8               	btfss	status,2,c
  5692  003F8C  EFCA  F01F         	goto	u3881
  5693  003F90  EFCC  F01F         	goto	u3880
  5694  003F94                     u3881:
  5695  003F94  EF0C  F020         	goto	l3936
  5696  003F98                     u3880:
  5697  003F98                     l3930:
  5698                           
  5699                           ; BSR set to: 1
  5700                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5701  003F98  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5702  003F9C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5703  003FA0  2ADE               	incf	postinc2,f,c
  5704  003FA2  0E00               	movlw	0
  5705  003FA4  22DD               	addwfc	postdec2,f,c
  5706                           
  5707                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5708  003FA6  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5709  003FAA  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5710  003FAE  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5711  003FB2  0E02               	movlw	2
  5712  003FB4  26DE               	addwf	postinc2,f,c
  5713  003FB6  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5714  003FBA  0E00               	movlw	0
  5715  003FBC  22DD               	addwfc	postdec2,f,c
  5716  003FBE  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5717  003FC2  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5718  003FC6  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  5719  003FCA  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  5720  003FCE  0E00               	movlw	0
  5721  003FD0  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5722  003FD2  0EFF               	movlw	-1
  5723  003FD4  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  5724  003FD6  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  5725  003FD8  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  5726  003FDA  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  5727  003FDC  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  5728  003FDE  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  5729  003FE0                     
  5730                           ; BSR set to: 1
  5731                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5732  003FE0  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5733  003FE4  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5734  003FE8  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5735  003FEC  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5736  003FF0  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5737  003FF4  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5738  003FF8  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5739  003FFC  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5740  004000  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5741  004004  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5742  004008  ECC9  F019         	call	_dtoa	;wreg free
  5743  00400C  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5744  004010  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5745  004014  EF5D  F020         	goto	l1374
  5746  004018                     l3936:
  5747                           
  5748                           ; BSR set to: 1
  5749                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5750  004018  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5751  00401C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5752  004020  CFDE FFF6          	movff	postinc2,tblptrl
  5753  004024  CFDD FFF7          	movff	postdec2,tblptrh
  5754  004028                     	if	0	;tblptru may be non-zero
  5755  004028                     	endif
  5756  004028                     	if	0	;tblptru may be non-zero
  5757  004028                     	endif
  5758  004028  0008               	tblrd		*
  5759  00402A  50F5               	movf	tablat,w,c
  5760  00402C  0A25               	xorlw	37
  5761  00402E  A4D8               	btfss	status,2,c
  5762  004030  EF1C  F020         	goto	u3891
  5763  004034  EF1E  F020         	goto	u3890
  5764  004038                     u3891:
  5765  004038  EF35  F020         	goto	l3946
  5766  00403C                     u3890:
  5767  00403C                     
  5768                           ; BSR set to: 1
  5769                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5770  00403C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5771  004040  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5772  004044  2ADE               	incf	postinc2,f,c
  5773  004046  0E00               	movlw	0
  5774  004048  22DD               	addwfc	postdec2,f,c
  5775  00404A                     
  5776                           ; BSR set to: 1
  5777                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5778  00404A  0E00               	movlw	0
  5779  00404C  6E02               	movwf	(fputc@c+1)^0,c
  5780  00404E  0E25               	movlw	37
  5781  004050  6E01               	movwf	fputc@c^0,c
  5782  004052  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5783  004056  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5784  00405A  EC90  F029         	call	_fputc	;wreg free
  5785  00405E                     l3942:
  5786                           
  5787                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5788  00405E  0E00               	movlw	0
  5789  004060  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5790  004062  0E01               	movlw	1
  5791  004064  6E40               	movwf	?_vfpfcnvrt^0,c
  5792  004066  EF5D  F020         	goto	l1374
  5793  00406A                     l3946:
  5794                           
  5795                           ; BSR set to: 1
  5796                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5797  00406A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5798  00406E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5799  004072  2ADE               	incf	postinc2,f,c
  5800  004074  0E00               	movlw	0
  5801  004076  22DD               	addwfc	postdec2,f,c
  5802  004078                     
  5803                           ; BSR set to: 1
  5804                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5805  004078  0E00               	movlw	0
  5806  00407A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5807  00407C  0E00               	movlw	0
  5808  00407E  6E40               	movwf	?_vfpfcnvrt^0,c
  5809  004080  EF5D  F020         	goto	l1374
  5810  004084                     l3952:
  5811                           
  5812                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5813  004084  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5814  004088  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5815  00408C  CFDE FFF6          	movff	postinc2,tblptrl
  5816  004090  CFDD FFF7          	movff	postdec2,tblptrh
  5817  004094                     	if	0	;tblptru may be non-zero
  5818  004094                     	endif
  5819  004094                     	if	0	;tblptru may be non-zero
  5820  004094                     	endif
  5821  004094  0008               	tblrd		*
  5822  004096  50F5               	movf	tablat,w,c
  5823  004098  6E01               	movwf	fputc@c^0,c
  5824  00409A  6A02               	clrf	(fputc@c+1)^0,c
  5825  00409C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5826  0040A0  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5827  0040A4  EC90  F029         	call	_fputc	;wreg free
  5828  0040A8                     
  5829                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5830  0040A8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5831  0040AC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5832  0040B0  2ADE               	incf	postinc2,f,c
  5833  0040B2  0E00               	movlw	0
  5834  0040B4  22DD               	addwfc	postdec2,f,c
  5835  0040B6  EF2F  F020         	goto	l3942
  5836  0040BA                     l1374:
  5837  0040BA  0012               	return		;funcret
  5838  0040BC                     __end_of_vfpfcnvrt:
  5839                           	callstack 0
  5840                           
  5841 ;; *************** function _dtoa *****************
  5842 ;; Defined at:
  5843 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5846 ;;		 -> sprintf@f(11), 
  5847 ;;  d               8   29[COMRAM] long long 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  n               8   53[COMRAM] long long 
  5850 ;;  i               2   61[COMRAM] int 
  5851 ;;  s               2   51[COMRAM] int 
  5852 ;;  w               2   49[COMRAM] int 
  5853 ;;  p               2   47[COMRAM] int 
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  2   27[COMRAM] int 
  5856 ;; Registers used:
  5857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5863 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5864 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5865 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5866 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5867 ;;Total ram usage:       36 bytes
  5868 ;; Hardware stack levels used: 1
  5869 ;; Hardware stack levels required when called: 5
  5870 ;; This function calls:
  5871 ;;		___aodiv
  5872 ;;		___aomod
  5873 ;;		_abs
  5874 ;;		_pad
  5875 ;; This function is called by:
  5876 ;;		_vfpfcnvrt
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           	psect	text16
  5881  003392                     __ptext16:
  5882                           	callstack 0
  5883  003392                     _dtoa:
  5884                           	callstack 20
  5885  003392                     
  5886                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5887  003392  C01E  F036         	movff	dtoa@d,dtoa@n
  5888  003396  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5889  00339A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5890  00339E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5891  0033A2  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5892  0033A6  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5893  0033AA  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5894  0033AE  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5895  0033B2                     
  5896                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5897  0033B2  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5898  0033B4  EFDE  F019         	goto	u3261
  5899  0033B8  EFE1  F019         	goto	u3260
  5900  0033BC                     u3261:
  5901  0033BC  0E01               	movlw	1
  5902  0033BE  EFE2  F019         	goto	u3270
  5903  0033C2                     u3260:
  5904  0033C2  0E00               	movlw	0
  5905  0033C4                     u3270:
  5906  0033C4  6E34               	movwf	dtoa@s^0,c
  5907  0033C6  6A35               	clrf	(dtoa@s+1)^0,c
  5908                           
  5909                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5910  0033C8  5034               	movf	dtoa@s^0,w,c
  5911  0033CA  1035               	iorwf	(dtoa@s+1)^0,w,c
  5912  0033CC  B4D8               	btfsc	status,2,c
  5913  0033CE  EFEB  F019         	goto	u3281
  5914  0033D2  EFED  F019         	goto	u3280
  5915  0033D6                     u3281:
  5916  0033D6  EFFD  F019         	goto	l3642
  5917  0033DA                     u3280:
  5918  0033DA                     
  5919                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5920  0033DA  1E3D               	comf	(dtoa@n+7)^0,f,c
  5921  0033DC  1E3C               	comf	(dtoa@n+6)^0,f,c
  5922  0033DE  1E3B               	comf	(dtoa@n+5)^0,f,c
  5923  0033E0  1E3A               	comf	(dtoa@n+4)^0,f,c
  5924  0033E2  1E39               	comf	(dtoa@n+3)^0,f,c
  5925  0033E4  1E38               	comf	(dtoa@n+2)^0,f,c
  5926  0033E6  1E37               	comf	(dtoa@n+1)^0,f,c
  5927  0033E8  6C36               	negf	dtoa@n^0,c
  5928  0033EA  0E00               	movlw	0
  5929  0033EC  2237               	addwfc	(dtoa@n+1)^0,f,c
  5930  0033EE  2238               	addwfc	(dtoa@n+2)^0,f,c
  5931  0033F0  2239               	addwfc	(dtoa@n+3)^0,f,c
  5932  0033F2  223A               	addwfc	(dtoa@n+4)^0,f,c
  5933  0033F4  223B               	addwfc	(dtoa@n+5)^0,f,c
  5934  0033F6  223C               	addwfc	(dtoa@n+6)^0,f,c
  5935  0033F8  223D               	addwfc	(dtoa@n+7)^0,f,c
  5936  0033FA                     l3642:
  5937                           
  5938                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5939  0033FA  0101               	movlb	1	; () banked
  5940  0033FC  BF43               	btfsc	(_prec+1)& (0+255),7,b
  5941  0033FE  EF03  F01A         	goto	u3291
  5942  003402  EF05  F01A         	goto	u3290
  5943  003406                     u3291:
  5944  003406  EF06  F01A         	goto	l3646
  5945  00340A                     u3290:
  5946  00340A                     
  5947                           ; BSR set to: 1
  5948                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5949  00340A  9344               	bcf	_flags& (0+255),1,b
  5950  00340C                     l3646:
  5951                           
  5952                           ; BSR set to: 1
  5953                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5954  00340C  BF43               	btfsc	(_prec+1)& (0+255),7,b
  5955  00340E  EF13  F01A         	goto	u3300
  5956  003412  5143               	movf	(_prec+1)& (0+255),w,b
  5957  003414  E106               	bnz	u3301
  5958  003416  0542               	decf	_prec& (0+255),w,b
  5959  003418  B0D8               	btfsc	status,0,c
  5960  00341A  EF11  F01A         	goto	u3301
  5961  00341E  EF13  F01A         	goto	u3300
  5962  003422                     u3301:
  5963  003422  EF19  F01A         	goto	l1347
  5964  003426                     u3300:
  5965  003426                     
  5966                           ; BSR set to: 1
  5967  003426  0E00               	movlw	0
  5968  003428  6E31               	movwf	(dtoa@p+1)^0,c
  5969  00342A  0E01               	movlw	1
  5970  00342C  6E30               	movwf	dtoa@p^0,c
  5971  00342E  EF1D  F01A         	goto	l1349
  5972  003432                     l1347:
  5973                           
  5974                           ; BSR set to: 1
  5975  003432  C142  F030         	movff	_prec,dtoa@p
  5976  003436  C143  F031         	movff	_prec+1,dtoa@p+1
  5977  00343A                     l1349:
  5978                           
  5979                           ; BSR set to: 1
  5980                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5981  00343A  C140  F032         	movff	_width,dtoa@w
  5982  00343E  C141  F033         	movff	_width+1,dtoa@w+1
  5983  003442                     
  5984                           ; BSR set to: 1
  5985                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5986  003442  5034               	movf	dtoa@s^0,w,c
  5987  003444  1035               	iorwf	(dtoa@s+1)^0,w,c
  5988  003446  A4D8               	btfss	status,2,c
  5989  003448  EF28  F01A         	goto	u3311
  5990  00344C  EF2A  F01A         	goto	u3310
  5991  003450                     u3311:
  5992  003450  EF31  F01A         	goto	l3654
  5993  003454                     u3310:
  5994  003454                     
  5995                           ; BSR set to: 1
  5996  003454  A544               	btfss	_flags& (0+255),2,b
  5997  003456  EF2F  F01A         	goto	u3321
  5998  00345A  EF31  F01A         	goto	u3320
  5999  00345E                     u3321:
  6000  00345E  EF34  F01A         	goto	l3656
  6001  003462                     u3320:
  6002  003462                     l3654:
  6003                           
  6004                           ; BSR set to: 1
  6005                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  6006  003462  0632               	decf	dtoa@w^0,f,c
  6007  003464  A0D8               	btfss	status,0,c
  6008  003466  0633               	decf	(dtoa@w+1)^0,f,c
  6009  003468                     l3656:
  6010                           
  6011                           ; BSR set to: 1
  6012                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6013  003468  0E00               	movlw	0
  6014  00346A  6E3F               	movwf	(dtoa@i+1)^0,c
  6015  00346C  0E1F               	movlw	31
  6016  00346E  6E3E               	movwf	dtoa@i^0,c
  6017  003470                     
  6018                           ; BSR set to: 1
  6019                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6020  003470  0E00               	movlw	0
  6021  003472  6F69               	movwf	(_dbuf+31)& (0+255),b
  6022                           
  6023                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6024  003474  EFB8  F01A         	goto	l3670
  6025  003478                     l3660:
  6026                           
  6027                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  6028  003478  063E               	decf	dtoa@i^0,f,c
  6029  00347A  A0D8               	btfss	status,0,c
  6030  00347C  063F               	decf	(dtoa@i+1)^0,f,c
  6031  00347E                     
  6032                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6033  00347E  0E4A               	movlw	low _dbuf
  6034  003480  243E               	addwf	dtoa@i^0,w,c
  6035  003482  6ED9               	movwf	fsr2l,c
  6036  003484  0E01               	movlw	high _dbuf
  6037  003486  203F               	addwfc	(dtoa@i+1)^0,w,c
  6038  003488  6EDA               	movwf	fsr2h,c
  6039  00348A  C036  F001         	movff	dtoa@n,___aomod@dividend
  6040  00348E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6041  003492  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6042  003496  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6043  00349A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6044  00349E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6045  0034A2  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6046  0034A6  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6047  0034AA  0E0A               	movlw	10
  6048  0034AC  6E09               	movwf	___aomod@divisor^0,c
  6049  0034AE  0E00               	movlw	0
  6050  0034B0  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6051  0034B2  0E00               	movlw	0
  6052  0034B4  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6053  0034B6  0E00               	movlw	0
  6054  0034B8  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6055  0034BA  0E00               	movlw	0
  6056  0034BC  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6057  0034BE  0E00               	movlw	0
  6058  0034C0  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6059  0034C2  0E00               	movlw	0
  6060  0034C4  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6061  0034C6  0E00               	movlw	0
  6062  0034C8  6E10               	movwf	(___aomod@divisor+7)^0,c
  6063  0034CA  EC77  F024         	call	___aomod	;wreg free
  6064  0034CE  C001  F026         	movff	?___aomod,??_dtoa
  6065  0034D2  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6066  0034D6  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6067  0034DA  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6068  0034DE  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6069  0034E2  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6070  0034E6  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6071  0034EA  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6072  0034EE  C026  F013         	movff	??_dtoa,abs@a
  6073  0034F2  C028  F014         	movff	??_dtoa+2,abs@a+1
  6074  0034F6  EC2C  F02E         	call	_abs	;wreg free
  6075  0034FA  5013               	movf	?_abs^0,w,c
  6076  0034FC  0F30               	addlw	48
  6077  0034FE  6EDF               	movwf	indf2,c
  6078  003500                     
  6079                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  6080  003500  0630               	decf	dtoa@p^0,f,c
  6081  003502  A0D8               	btfss	status,0,c
  6082  003504  0631               	decf	(dtoa@p+1)^0,f,c
  6083  003506                     
  6084                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  6085  003506  0632               	decf	dtoa@w^0,f,c
  6086  003508  A0D8               	btfss	status,0,c
  6087  00350A  0633               	decf	(dtoa@w+1)^0,f,c
  6088  00350C                     
  6089                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6090  00350C  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6091  003510  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6092  003514  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6093  003518  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6094  00351C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6095  003520  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6096  003524  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6097  003528  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6098  00352C  0E0A               	movlw	10
  6099  00352E  6E09               	movwf	___aodiv@divisor^0,c
  6100  003530  0E00               	movlw	0
  6101  003532  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6102  003534  0E00               	movlw	0
  6103  003536  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6104  003538  0E00               	movlw	0
  6105  00353A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6106  00353C  0E00               	movlw	0
  6107  00353E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6108  003540  0E00               	movlw	0
  6109  003542  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6110  003544  0E00               	movlw	0
  6111  003546  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6112  003548  0E00               	movlw	0
  6113  00354A  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6114  00354C  ECB3  F023         	call	___aodiv	;wreg free
  6115  003550  C001  F036         	movff	?___aodiv,dtoa@n
  6116  003554  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6117  003558  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6118  00355C  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6119  003560  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6120  003564  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6121  003568  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6122  00356C  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6123  003570                     l3670:
  6124                           
  6125                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6126  003570  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6127  003572  EFC3  F01A         	goto	u3331
  6128  003576  503F               	movf	(dtoa@i+1)^0,w,c
  6129  003578  E108               	bnz	u3330
  6130  00357A  043E               	decf	dtoa@i^0,w,c
  6131  00357C  A0D8               	btfss	status,0,c
  6132  00357E  EFC3  F01A         	goto	u3331
  6133  003582  EFC5  F01A         	goto	u3330
  6134  003586                     u3331:
  6135  003586  EFF6  F01A         	goto	l3680
  6136  00358A                     u3330:
  6137  00358A  5036               	movf	dtoa@n^0,w,c
  6138  00358C  1037               	iorwf	(dtoa@n+1)^0,w,c
  6139  00358E  1038               	iorwf	(dtoa@n+2)^0,w,c
  6140  003590  1039               	iorwf	(dtoa@n+3)^0,w,c
  6141  003592  103A               	iorwf	(dtoa@n+4)^0,w,c
  6142  003594  103B               	iorwf	(dtoa@n+5)^0,w,c
  6143  003596  103C               	iorwf	(dtoa@n+6)^0,w,c
  6144  003598  103D               	iorwf	(dtoa@n+7)^0,w,c
  6145  00359A  A4D8               	btfss	status,2,c
  6146  00359C  EFD2  F01A         	goto	u3341
  6147  0035A0  EFD4  F01A         	goto	u3340
  6148  0035A4                     u3341:
  6149  0035A4  EF3C  F01A         	goto	l3660
  6150  0035A8                     u3340:
  6151  0035A8  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6152  0035AA  EFE1  F01A         	goto	u3350
  6153  0035AE  5031               	movf	(dtoa@p+1)^0,w,c
  6154  0035B0  E106               	bnz	u3351
  6155  0035B2  0430               	decf	dtoa@p^0,w,c
  6156  0035B4  B0D8               	btfsc	status,0,c
  6157  0035B6  EFDF  F01A         	goto	u3351
  6158  0035BA  EFE1  F01A         	goto	u3350
  6159  0035BE                     u3351:
  6160  0035BE  EF3C  F01A         	goto	l3660
  6161  0035C2                     u3350:
  6162  0035C2  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6163  0035C4  EFEC  F01A         	goto	u3361
  6164  0035C8  5033               	movf	(dtoa@w+1)^0,w,c
  6165  0035CA  E108               	bnz	u3360
  6166  0035CC  0432               	decf	dtoa@w^0,w,c
  6167  0035CE  A0D8               	btfss	status,0,c
  6168  0035D0  EFEC  F01A         	goto	u3361
  6169  0035D4  EFEE  F01A         	goto	u3360
  6170  0035D8                     u3361:
  6171  0035D8  EFF6  F01A         	goto	l3680
  6172  0035DC                     u3360:
  6173  0035DC  0101               	movlb	1	; () banked
  6174  0035DE  B344               	btfsc	_flags& (0+255),1,b
  6175  0035E0  EFF4  F01A         	goto	u3371
  6176  0035E4  EFF6  F01A         	goto	u3370
  6177  0035E8                     u3371:
  6178  0035E8  EF3C  F01A         	goto	l3660
  6179  0035EC                     u3370:
  6180  0035EC                     l3680:
  6181                           
  6182                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6183  0035EC  5034               	movf	dtoa@s^0,w,c
  6184  0035EE  1035               	iorwf	(dtoa@s+1)^0,w,c
  6185  0035F0  A4D8               	btfss	status,2,c
  6186  0035F2  EFFD  F01A         	goto	u3381
  6187  0035F6  EFFF  F01A         	goto	u3380
  6188  0035FA                     u3381:
  6189  0035FA  EF07  F01B         	goto	l3684
  6190  0035FE                     u3380:
  6191  0035FE  0101               	movlb	1	; () banked
  6192  003600  A544               	btfss	_flags& (0+255),2,b
  6193  003602  EF05  F01B         	goto	u3391
  6194  003606  EF07  F01B         	goto	u3390
  6195  00360A                     u3391:
  6196  00360A  EF25  F01B         	goto	l3694
  6197  00360E                     u3390:
  6198  00360E                     l3684:
  6199                           
  6200                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  6201  00360E  063E               	decf	dtoa@i^0,f,c
  6202  003610  A0D8               	btfss	status,0,c
  6203  003612  063F               	decf	(dtoa@i+1)^0,f,c
  6204  003614                     
  6205                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6206  003614  5034               	movf	dtoa@s^0,w,c
  6207  003616  1035               	iorwf	(dtoa@s+1)^0,w,c
  6208  003618  A4D8               	btfss	status,2,c
  6209  00361A  EF11  F01B         	goto	u3401
  6210  00361E  EF13  F01B         	goto	u3400
  6211  003622                     u3401:
  6212  003622  EF19  F01B         	goto	l3690
  6213  003626                     u3400:
  6214  003626  0E00               	movlw	0
  6215  003628  6E2F               	movwf	(_dtoa$2620+1)^0,c
  6216  00362A  0E2B               	movlw	43
  6217  00362C  6E2E               	movwf	_dtoa$2620^0,c
  6218  00362E  EF1D  F01B         	goto	l3692
  6219  003632                     l3690:
  6220  003632  0E00               	movlw	0
  6221  003634  6E2F               	movwf	(_dtoa$2620+1)^0,c
  6222  003636  0E2D               	movlw	45
  6223  003638  6E2E               	movwf	_dtoa$2620^0,c
  6224  00363A                     l3692:
  6225  00363A  0E4A               	movlw	low _dbuf
  6226  00363C  243E               	addwf	dtoa@i^0,w,c
  6227  00363E  6ED9               	movwf	fsr2l,c
  6228  003640  0E01               	movlw	high _dbuf
  6229  003642  203F               	addwfc	(dtoa@i+1)^0,w,c
  6230  003644  6EDA               	movwf	fsr2h,c
  6231  003646  C02E  FFDF         	movff	_dtoa$2620,indf2
  6232  00364A                     l3694:
  6233                           
  6234                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6235  00364A  C01C  F011         	movff	dtoa@fp,pad@fp
  6236  00364E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6237  003652  0E4A               	movlw	low _dbuf
  6238  003654  243E               	addwf	dtoa@i^0,w,c
  6239  003656  6E13               	movwf	pad@buf^0,c
  6240  003658  0E01               	movlw	high _dbuf
  6241  00365A  203F               	addwfc	(dtoa@i+1)^0,w,c
  6242  00365C  6E14               	movwf	(pad@buf+1)^0,c
  6243  00365E  C032  F015         	movff	dtoa@w,pad@p
  6244  003662  C033  F016         	movff	dtoa@w+1,pad@p+1
  6245  003666  EC58  F02A         	call	_pad	;wreg free
  6246  00366A  C011  F01C         	movff	?_pad,?_dtoa
  6247  00366E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6248  003672  0012               	return		;funcret
  6249  003674                     __end_of_dtoa:
  6250                           	callstack 0
  6251                           
  6252 ;; *************** function _pad *****************
  6253 ;; Defined at:
  6254 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6257 ;;		 -> sprintf@f(11), 
  6258 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6259 ;;		 -> dbuf(32), 
  6260 ;;  p               2   20[COMRAM] int 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  w               2   25[COMRAM] int 
  6263 ;;  i               2   23[COMRAM] int 
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  2   16[COMRAM] int 
  6266 ;; Registers used:
  6267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6273 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6274 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6275 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6276 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6277 ;;Total ram usage:       11 bytes
  6278 ;; Hardware stack levels used: 1
  6279 ;; Hardware stack levels required when called: 4
  6280 ;; This function calls:
  6281 ;;		_fputc
  6282 ;;		_fputs
  6283 ;;		_strlen
  6284 ;; This function is called by:
  6285 ;;		_dtoa
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           	psect	text17
  6290  0054B0                     __ptext17:
  6291                           	callstack 0
  6292  0054B0                     _pad:
  6293                           	callstack 20
  6294  0054B0                     
  6295                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6296  0054B0  0101               	movlb	1	; () banked
  6297  0054B2  A144               	btfss	_flags& (0+255),0,b
  6298  0054B4  EF5E  F02A         	goto	u3151
  6299  0054B8  EF60  F02A         	goto	u3150
  6300  0054BC                     u3151:
  6301  0054BC  EF6A  F02A         	goto	l3564
  6302  0054C0                     u3150:
  6303  0054C0                     
  6304                           ; BSR set to: 1
  6305                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6306  0054C0  C013  F00A         	movff	pad@buf,fputs@s
  6307  0054C4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6308  0054C8  C011  F00C         	movff	pad@fp,fputs@fp
  6309  0054CC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6310  0054D0  ECA7  F02D         	call	_fputs	;wreg free
  6311  0054D4                     l3564:
  6312                           
  6313                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6314  0054D4  BE16               	btfsc	(pad@p+1)^0,7,c
  6315  0054D6  EF6F  F02A         	goto	u3161
  6316  0054DA  EF71  F02A         	goto	u3160
  6317  0054DE                     u3161:
  6318  0054DE  EF77  F02A         	goto	l3568
  6319  0054E2                     u3160:
  6320  0054E2  C015  F01A         	movff	pad@p,pad@w
  6321  0054E6  C016  F01B         	movff	pad@p+1,pad@w+1
  6322  0054EA  EF7B  F02A         	goto	l1336
  6323  0054EE                     l3568:
  6324  0054EE  0E00               	movlw	0
  6325  0054F0  6E1B               	movwf	(pad@w+1)^0,c
  6326  0054F2  0E00               	movlw	0
  6327  0054F4  6E1A               	movwf	pad@w^0,c
  6328  0054F6                     l1336:
  6329                           
  6330                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6331  0054F6  0E00               	movlw	0
  6332  0054F8  6E19               	movwf	(pad@i+1)^0,c
  6333  0054FA  0E00               	movlw	0
  6334  0054FC  6E18               	movwf	pad@i^0,c
  6335                           
  6336                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6337  0054FE  EF8D  F02A         	goto	l3574
  6338  005502                     l3570:
  6339                           
  6340                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6341  005502  0E00               	movlw	0
  6342  005504  6E02               	movwf	(fputc@c+1)^0,c
  6343  005506  0E20               	movlw	32
  6344  005508  6E01               	movwf	fputc@c^0,c
  6345  00550A  C011  F003         	movff	pad@fp,fputc@fp
  6346  00550E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6347  005512  EC90  F029         	call	_fputc	;wreg free
  6348  005516                     
  6349                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6350  005516  4A18               	infsnz	pad@i^0,f,c
  6351  005518  2A19               	incf	(pad@i+1)^0,f,c
  6352  00551A                     l3574:
  6353                           
  6354                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6355  00551A  501A               	movf	pad@w^0,w,c
  6356  00551C  5C18               	subwf	pad@i^0,w,c
  6357  00551E  5019               	movf	(pad@i+1)^0,w,c
  6358  005520  0A80               	xorlw	128
  6359  005522  6E17               	movwf	??_pad^0,c
  6360  005524  501B               	movf	(pad@w+1)^0,w,c
  6361  005526  0A80               	xorlw	128
  6362  005528  5817               	subwfb	??_pad^0,w,c
  6363  00552A  A0D8               	btfss	status,0,c
  6364  00552C  EF9A  F02A         	goto	u3171
  6365  005530  EF9C  F02A         	goto	u3170
  6366  005534                     u3171:
  6367  005534  EF81  F02A         	goto	l3570
  6368  005538                     u3170:
  6369  005538                     
  6370                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6371  005538  0101               	movlb	1	; () banked
  6372  00553A  B144               	btfsc	_flags& (0+255),0,b
  6373  00553C  EFA2  F02A         	goto	u3181
  6374  005540  EFA4  F02A         	goto	u3180
  6375  005544                     u3181:
  6376  005544  EFAE  F02A         	goto	l3578
  6377  005548                     u3180:
  6378  005548                     
  6379                           ; BSR set to: 1
  6380                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6381  005548  C013  F00A         	movff	pad@buf,fputs@s
  6382  00554C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6383  005550  C011  F00C         	movff	pad@fp,fputs@fp
  6384  005554  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6385  005558  ECA7  F02D         	call	_fputs	;wreg free
  6386  00555C                     l3578:
  6387                           
  6388                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6389  00555C  C013  F001         	movff	pad@buf,strlen@s
  6390  005560  C014  F002         	movff	pad@buf+1,strlen@s+1
  6391  005564  ECBD  F02E         	call	_strlen	;wreg free
  6392  005568  501A               	movf	pad@w^0,w,c
  6393  00556A  2401               	addwf	?_strlen^0,w,c
  6394  00556C  6E11               	movwf	?_pad^0,c
  6395  00556E  501B               	movf	(pad@w+1)^0,w,c
  6396  005570  2002               	addwfc	(?_strlen+1)^0,w,c
  6397  005572  6E12               	movwf	(?_pad+1)^0,c
  6398  005574  0012               	return		;funcret
  6399  005576                     __end_of_pad:
  6400                           	callstack 0
  6401                           
  6402 ;; *************** function _strlen *****************
  6403 ;; Defined at:
  6404 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6407 ;;		 -> dbuf(32), 
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6410 ;;		 -> dbuf(32), 
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  2    0[COMRAM] unsigned int 
  6413 ;; Registers used:
  6414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6420 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6423 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6424 ;;Total ram usage:        4 bytes
  6425 ;; Hardware stack levels used: 1
  6426 ;; Hardware stack levels required when called: 1
  6427 ;; This function calls:
  6428 ;;		Nothing
  6429 ;; This function is called by:
  6430 ;;		_pad
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text18
  6435  005D7A                     __ptext18:
  6436                           	callstack 0
  6437  005D7A                     _strlen:
  6438                           	callstack 22
  6439  005D7A  C001  F003         	movff	strlen@s,strlen@a
  6440  005D7E  C002  F004         	movff	strlen@s+1,strlen@a+1
  6441  005D82  EFC5  F02E         	goto	l3474
  6442  005D86                     l3472:
  6443  005D86  4A01               	infsnz	strlen@s^0,f,c
  6444  005D88  2A02               	incf	(strlen@s+1)^0,f,c
  6445  005D8A                     l3474:
  6446  005D8A  C001  FFD9         	movff	strlen@s,fsr2l
  6447  005D8E  C002  FFDA         	movff	strlen@s+1,fsr2h
  6448  005D92  50DF               	movf	indf2,w,c
  6449  005D94  A4D8               	btfss	status,2,c
  6450  005D96  EFCF  F02E         	goto	u3011
  6451  005D9A  EFD1  F02E         	goto	u3010
  6452  005D9E                     u3011:
  6453  005D9E  EFC3  F02E         	goto	l3472
  6454  005DA2                     u3010:
  6455  005DA2  5003               	movf	strlen@a^0,w,c
  6456  005DA4  5C01               	subwf	strlen@s^0,w,c
  6457  005DA6  6E01               	movwf	?_strlen^0,c
  6458  005DA8  5004               	movf	(strlen@a+1)^0,w,c
  6459  005DAA  5802               	subwfb	(strlen@s+1)^0,w,c
  6460  005DAC  6E02               	movwf	(?_strlen+1)^0,c
  6461  005DAE  0012               	return		;funcret
  6462  005DB0                     __end_of_strlen:
  6463                           	callstack 0
  6464                           
  6465 ;; *************** function _fputs *****************
  6466 ;; Defined at:
  6467 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6470 ;;		 -> dbuf(32), 
  6471 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6472 ;;		 -> sprintf@f(11), 
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;  i               2   14[COMRAM] int 
  6475 ;;  c               1   13[COMRAM] unsigned char 
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  2    9[COMRAM] int 
  6478 ;; Registers used:
  6479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6486 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6488 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6489 ;;Total ram usage:        7 bytes
  6490 ;; Hardware stack levels used: 1
  6491 ;; Hardware stack levels required when called: 3
  6492 ;; This function calls:
  6493 ;;		_fputc
  6494 ;; This function is called by:
  6495 ;;		_pad
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           	psect	text19
  6500  005B4E                     __ptext19:
  6501                           	callstack 0
  6502  005B4E                     _fputs:
  6503                           	callstack 20
  6504  005B4E  0E00               	movlw	0
  6505  005B50  6E10               	movwf	(fputs@i+1)^0,c
  6506  005B52  0E00               	movlw	0
  6507  005B54  6E0F               	movwf	fputs@i^0,c
  6508  005B56  EFB8  F02D         	goto	l3468
  6509  005B5A                     l3464:
  6510  005B5A  C00E  F001         	movff	fputs@c,fputc@c
  6511  005B5E  6A02               	clrf	(fputc@c+1)^0,c
  6512  005B60  C00C  F003         	movff	fputs@fp,fputc@fp
  6513  005B64  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6514  005B68  EC90  F029         	call	_fputc	;wreg free
  6515  005B6C  4A0F               	infsnz	fputs@i^0,f,c
  6516  005B6E  2A10               	incf	(fputs@i+1)^0,f,c
  6517  005B70                     l3468:
  6518  005B70  500F               	movf	fputs@i^0,w,c
  6519  005B72  240A               	addwf	fputs@s^0,w,c
  6520  005B74  6ED9               	movwf	fsr2l,c
  6521  005B76  5010               	movf	(fputs@i+1)^0,w,c
  6522  005B78  200B               	addwfc	(fputs@s+1)^0,w,c
  6523  005B7A  6EDA               	movwf	fsr2h,c
  6524  005B7C  50DF               	movf	indf2,w,c
  6525  005B7E  6E0E               	movwf	fputs@c^0,c
  6526  005B80  500E               	movf	fputs@c^0,w,c
  6527  005B82  A4D8               	btfss	status,2,c
  6528  005B84  EFC6  F02D         	goto	u3001
  6529  005B88  EFC8  F02D         	goto	u3000
  6530  005B8C                     u3001:
  6531  005B8C  EFAD  F02D         	goto	l3464
  6532  005B90                     u3000:
  6533  005B90  0012               	return		;funcret
  6534  005B92                     __end_of_fputs:
  6535                           	callstack 0
  6536                           
  6537 ;; *************** function _fputc *****************
  6538 ;; Defined at:
  6539 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  c               2    0[COMRAM] int 
  6542 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6543 ;;		 -> sprintf@f(11), 
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;		None
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  2    0[COMRAM] int 
  6548 ;; Registers used:
  6549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6557 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6558 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6559 ;;Total ram usage:        9 bytes
  6560 ;; Hardware stack levels used: 1
  6561 ;; Hardware stack levels required when called: 2
  6562 ;; This function calls:
  6563 ;;		_putch
  6564 ;; This function is called by:
  6565 ;;		_pad
  6566 ;;		_vfpfcnvrt
  6567 ;;		_fputs
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           	psect	text20
  6572  005320                     __ptext20:
  6573                           	callstack 0
  6574  005320                     _fputc:
  6575                           	callstack 23
  6576  005320  5003               	movf	fputc@fp^0,w,c
  6577  005322  1004               	iorwf	(fputc@fp+1)^0,w,c
  6578  005324  B4D8               	btfsc	status,2,c
  6579  005326  EF97  F029         	goto	u2961
  6580  00532A  EF99  F029         	goto	u2960
  6581  00532E                     u2961:
  6582  00532E  EFA2  F029         	goto	l3452
  6583  005332                     u2960:
  6584  005332  5003               	movf	fputc@fp^0,w,c
  6585  005334  1004               	iorwf	(fputc@fp+1)^0,w,c
  6586  005336  A4D8               	btfss	status,2,c
  6587  005338  EFA0  F029         	goto	u2971
  6588  00533C  EFA2  F029         	goto	u2970
  6589  005340                     u2971:
  6590  005340  EFA7  F029         	goto	l3454
  6591  005344                     u2970:
  6592  005344                     l3452:
  6593  005344  5001               	movf	fputc@c^0,w,c
  6594  005346  EC1D  F030         	call	_putch
  6595  00534A  EFF4  F029         	goto	l1400
  6596  00534E                     l3454:
  6597  00534E  EE20 F009          	lfsr	2,9
  6598  005352  5003               	movf	fputc@fp^0,w,c
  6599  005354  26D9               	addwf	fsr2l,f,c
  6600  005356  5004               	movf	(fputc@fp+1)^0,w,c
  6601  005358  22DA               	addwfc	fsr2h,f,c
  6602  00535A  50DE               	movf	postinc2,w,c
  6603  00535C  10DE               	iorwf	postinc2,w,c
  6604  00535E  B4D8               	btfsc	status,2,c
  6605  005360  EFB4  F029         	goto	u2981
  6606  005364  EFB6  F029         	goto	u2980
  6607  005368                     u2981:
  6608  005368  EFD1  F029         	goto	l3458
  6609  00536C                     u2980:
  6610  00536C  EE20 F009          	lfsr	2,9
  6611  005370  5003               	movf	fputc@fp^0,w,c
  6612  005372  26D9               	addwf	fsr2l,f,c
  6613  005374  5004               	movf	(fputc@fp+1)^0,w,c
  6614  005376  22DA               	addwfc	fsr2h,f,c
  6615  005378  EE10 F003          	lfsr	1,3
  6616  00537C  5003               	movf	fputc@fp^0,w,c
  6617  00537E  26E1               	addwf	fsr1l,f,c
  6618  005380  5004               	movf	(fputc@fp+1)^0,w,c
  6619  005382  22E2               	addwfc	fsr1h,f,c
  6620  005384  50DE               	movf	postinc2,w,c
  6621  005386  5CE6               	subwf	postinc1,w,c
  6622  005388  50E6               	movf	postinc1,w,c
  6623  00538A  0A80               	xorlw	128
  6624  00538C  6E09               	movwf	(??_fputc+4)^0,c
  6625  00538E  50DE               	movf	postinc2,w,c
  6626  005390  0A80               	xorlw	128
  6627  005392  5809               	subwfb	(??_fputc+4)^0,w,c
  6628  005394  B0D8               	btfsc	status,0,c
  6629  005396  EFCF  F029         	goto	u2991
  6630  00539A  EFD1  F029         	goto	u2990
  6631  00539E                     u2991:
  6632  00539E  EFF4  F029         	goto	l1400
  6633  0053A2                     u2990:
  6634  0053A2                     l3458:
  6635  0053A2  EE20 F003          	lfsr	2,3
  6636  0053A6  5003               	movf	fputc@fp^0,w,c
  6637  0053A8  26D9               	addwf	fsr2l,f,c
  6638  0053AA  5004               	movf	(fputc@fp+1)^0,w,c
  6639  0053AC  22DA               	addwfc	fsr2h,f,c
  6640  0053AE  CFDE F005          	movff	postinc2,??_fputc
  6641  0053B2  CFDD F006          	movff	postdec2,??_fputc+1
  6642  0053B6  C003  FFD9         	movff	fputc@fp,fsr2l
  6643  0053BA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6644  0053BE  CFDE F007          	movff	postinc2,??_fputc+2
  6645  0053C2  CFDD F008          	movff	postdec2,??_fputc+3
  6646  0053C6  5005               	movf	??_fputc^0,w,c
  6647  0053C8  2407               	addwf	(??_fputc+2)^0,w,c
  6648  0053CA  6ED9               	movwf	fsr2l,c
  6649  0053CC  5006               	movf	(??_fputc+1)^0,w,c
  6650  0053CE  2008               	addwfc	(??_fputc+3)^0,w,c
  6651  0053D0  6EDA               	movwf	fsr2h,c
  6652  0053D2  C001  FFDF         	movff	fputc@c,indf2
  6653  0053D6  EE20 F003          	lfsr	2,3
  6654  0053DA  5003               	movf	fputc@fp^0,w,c
  6655  0053DC  26D9               	addwf	fsr2l,f,c
  6656  0053DE  5004               	movf	(fputc@fp+1)^0,w,c
  6657  0053E0  22DA               	addwfc	fsr2h,f,c
  6658  0053E2  2ADE               	incf	postinc2,f,c
  6659  0053E4  0E00               	movlw	0
  6660  0053E6  22DD               	addwfc	postdec2,f,c
  6661  0053E8                     l1400:
  6662  0053E8  0012               	return		;funcret
  6663  0053EA                     __end_of_fputc:
  6664                           	callstack 0
  6665                           
  6666 ;; *************** function _putch *****************
  6667 ;; Defined at:
  6668 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  6669 ;; Parameters:    Size  Location     Type
  6670 ;;  c               1    wreg     unsigned char 
  6671 ;; Auto vars:     Size  Location     Type
  6672 ;;  c               1    0[COMRAM] unsigned char 
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  1    wreg      void 
  6675 ;; Registers used:
  6676 ;;		wreg
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6686 ;;Total ram usage:        0 bytes
  6687 ;; Hardware stack levels used: 1
  6688 ;; Hardware stack levels required when called: 1
  6689 ;; This function calls:
  6690 ;;		Nothing
  6691 ;; This function is called by:
  6692 ;;		_fputc
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           	psect	text21
  6697  00603A                     __ptext21:
  6698                           	callstack 0
  6699  00603A                     _putch:
  6700                           	callstack 23
  6701  00603A  0012               	return		;funcret
  6702  00603C                     __end_of_putch:
  6703                           	callstack 0
  6704                           
  6705 ;; *************** function _abs *****************
  6706 ;; Defined at:
  6707 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;  a               2   18[COMRAM] int 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  2   18[COMRAM] int 
  6714 ;; Registers used:
  6715 ;;		wreg, status,2, status,0
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6723 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6724 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6725 ;;Total ram usage:        4 bytes
  6726 ;; Hardware stack levels used: 1
  6727 ;; Hardware stack levels required when called: 1
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		_dtoa
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text22
  6736  005C58                     __ptext22:
  6737                           	callstack 0
  6738  005C58                     _abs:
  6739                           	callstack 23
  6740  005C58  BE14               	btfsc	(abs@a+1)^0,7,c
  6741  005C5A  EF39  F02E         	goto	u3190
  6742  005C5E  5014               	movf	(abs@a+1)^0,w,c
  6743  005C60  E106               	bnz	u3191
  6744  005C62  0413               	decf	abs@a^0,w,c
  6745  005C64  B0D8               	btfsc	status,0,c
  6746  005C66  EF37  F02E         	goto	u3191
  6747  005C6A  EF39  F02E         	goto	u3190
  6748  005C6E                     u3191:
  6749  005C6E  EF47  F02E         	goto	l1385
  6750  005C72                     u3190:
  6751  005C72  C013  F015         	movff	abs@a,??_abs
  6752  005C76  C014  F016         	movff	abs@a+1,??_abs+1
  6753  005C7A  1E15               	comf	??_abs^0,f,c
  6754  005C7C  1E16               	comf	(??_abs+1)^0,f,c
  6755  005C7E  4A15               	infsnz	??_abs^0,f,c
  6756  005C80  2A16               	incf	(??_abs+1)^0,f,c
  6757  005C82  C015  F013         	movff	??_abs,?_abs
  6758  005C86  C016  F014         	movff	??_abs+1,?_abs+1
  6759  005C8A  EF4B  F02E         	goto	l1388
  6760  005C8E                     l1385:
  6761  005C8E  C013  F013         	movff	abs@a,?_abs
  6762  005C92  C014  F014         	movff	abs@a+1,?_abs+1
  6763  005C96                     l1388:
  6764  005C96  0012               	return		;funcret
  6765  005C98                     __end_of_abs:
  6766                           	callstack 0
  6767                           
  6768 ;; *************** function ___aomod *****************
  6769 ;; Defined at:
  6770 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;  dividend        8    0[COMRAM] long long 
  6773 ;;  divisor         8    8[COMRAM] long long 
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;  sign            1   17[COMRAM] unsigned char 
  6776 ;;  counter         1   16[COMRAM] unsigned char 
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  8    0[COMRAM] long long 
  6779 ;; Registers used:
  6780 ;;		wreg, status,2, status,0
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6786 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6789 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6790 ;;Total ram usage:       18 bytes
  6791 ;; Hardware stack levels used: 1
  6792 ;; Hardware stack levels required when called: 1
  6793 ;; This function calls:
  6794 ;;		Nothing
  6795 ;; This function is called by:
  6796 ;;		_dtoa
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           	psect	text23
  6801  0048EE                     __ptext23:
  6802                           	callstack 0
  6803  0048EE                     ___aomod:
  6804                           	callstack 23
  6805  0048EE  0E00               	movlw	0
  6806  0048F0  6E12               	movwf	___aomod@sign^0,c
  6807  0048F2  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6808  0048F4  EF80  F024         	goto	u3090
  6809  0048F8  EF7E  F024         	goto	u3091
  6810  0048FC                     u3091:
  6811  0048FC  EF92  F024         	goto	l3532
  6812  004900                     u3090:
  6813  004900  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6814  004902  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6815  004904  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6816  004906  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6817  004908  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6818  00490A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6819  00490C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6820  00490E  6C01               	negf	___aomod@dividend^0,c
  6821  004910  0E00               	movlw	0
  6822  004912  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6823  004914  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6824  004916  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6825  004918  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6826  00491A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6827  00491C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6828  00491E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6829  004920  0E01               	movlw	1
  6830  004922  6E12               	movwf	___aomod@sign^0,c
  6831  004924                     l3532:
  6832  004924  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6833  004926  EF99  F024         	goto	u3100
  6834  00492A  EF97  F024         	goto	u3101
  6835  00492E                     u3101:
  6836  00492E  EFA9  F024         	goto	l3536
  6837  004932                     u3100:
  6838  004932  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6839  004934  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6840  004936  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6841  004938  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6842  00493A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6843  00493C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6844  00493E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6845  004940  6C09               	negf	___aomod@divisor^0,c
  6846  004942  0E00               	movlw	0
  6847  004944  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6848  004946  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6849  004948  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6850  00494A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6851  00494C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6852  00494E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6853  004950  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6854  004952                     l3536:
  6855  004952  5009               	movf	___aomod@divisor^0,w,c
  6856  004954  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6857  004956  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6858  004958  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6859  00495A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6860  00495C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6861  00495E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6862  004960  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6863  004962  B4D8               	btfsc	status,2,c
  6864  004964  EFB6  F024         	goto	u3111
  6865  004968  EFB8  F024         	goto	u3110
  6866  00496C                     u3111:
  6867  00496C  EF00  F025         	goto	l3552
  6868  004970                     u3110:
  6869  004970  0E01               	movlw	1
  6870  004972  6E11               	movwf	___aomod@counter^0,c
  6871  004974  EFC6  F024         	goto	l3542
  6872  004978                     l3540:
  6873  004978  90D8               	bcf	status,0,c
  6874  00497A  3609               	rlcf	___aomod@divisor^0,f,c
  6875  00497C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6876  00497E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6877  004980  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6878  004982  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6879  004984  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6880  004986  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6881  004988  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6882  00498A  2A11               	incf	___aomod@counter^0,f,c
  6883  00498C                     l3542:
  6884  00498C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6885  00498E  EFCB  F024         	goto	u3121
  6886  004992  EFCD  F024         	goto	u3120
  6887  004996                     u3121:
  6888  004996  EFBC  F024         	goto	l3540
  6889  00499A                     u3120:
  6890  00499A                     l3544:
  6891  00499A  5009               	movf	___aomod@divisor^0,w,c
  6892  00499C  5C01               	subwf	___aomod@dividend^0,w,c
  6893  00499E  500A               	movf	(___aomod@divisor+1)^0,w,c
  6894  0049A0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6895  0049A2  500B               	movf	(___aomod@divisor+2)^0,w,c
  6896  0049A4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6897  0049A6  500C               	movf	(___aomod@divisor+3)^0,w,c
  6898  0049A8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6899  0049AA  500D               	movf	(___aomod@divisor+4)^0,w,c
  6900  0049AC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6901  0049AE  500E               	movf	(___aomod@divisor+5)^0,w,c
  6902  0049B0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6903  0049B2  500F               	movf	(___aomod@divisor+6)^0,w,c
  6904  0049B4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6905  0049B6  5010               	movf	(___aomod@divisor+7)^0,w,c
  6906  0049B8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6907  0049BA  A0D8               	btfss	status,0,c
  6908  0049BC  EFE2  F024         	goto	u3131
  6909  0049C0  EFE4  F024         	goto	u3130
  6910  0049C4                     u3131:
  6911  0049C4  EFF4  F024         	goto	l3548
  6912  0049C8                     u3130:
  6913  0049C8  5009               	movf	___aomod@divisor^0,w,c
  6914  0049CA  5E01               	subwf	___aomod@dividend^0,f,c
  6915  0049CC  500A               	movf	(___aomod@divisor+1)^0,w,c
  6916  0049CE  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6917  0049D0  500B               	movf	(___aomod@divisor+2)^0,w,c
  6918  0049D2  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6919  0049D4  500C               	movf	(___aomod@divisor+3)^0,w,c
  6920  0049D6  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6921  0049D8  500D               	movf	(___aomod@divisor+4)^0,w,c
  6922  0049DA  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6923  0049DC  500E               	movf	(___aomod@divisor+5)^0,w,c
  6924  0049DE  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6925  0049E0  500F               	movf	(___aomod@divisor+6)^0,w,c
  6926  0049E2  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6927  0049E4  5010               	movf	(___aomod@divisor+7)^0,w,c
  6928  0049E6  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6929  0049E8                     l3548:
  6930  0049E8  90D8               	bcf	status,0,c
  6931  0049EA  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6932  0049EC  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6933  0049EE  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6934  0049F0  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6935  0049F2  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6936  0049F4  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6937  0049F6  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6938  0049F8  3209               	rrcf	___aomod@divisor^0,f,c
  6939  0049FA  2E11               	decfsz	___aomod@counter^0,f,c
  6940  0049FC  EFCD  F024         	goto	l3544
  6941  004A00                     l3552:
  6942  004A00  5012               	movf	___aomod@sign^0,w,c
  6943  004A02  B4D8               	btfsc	status,2,c
  6944  004A04  EF06  F025         	goto	u3141
  6945  004A08  EF08  F025         	goto	u3140
  6946  004A0C                     u3141:
  6947  004A0C  EF18  F025         	goto	l3556
  6948  004A10                     u3140:
  6949  004A10  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6950  004A12  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6951  004A14  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6952  004A16  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6953  004A18  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6954  004A1A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6955  004A1C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6956  004A1E  6C01               	negf	___aomod@dividend^0,c
  6957  004A20  0E00               	movlw	0
  6958  004A22  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6959  004A24  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6960  004A26  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6961  004A28  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6962  004A2A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6963  004A2C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6964  004A2E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6965  004A30                     l3556:
  6966  004A30  C001  F001         	movff	___aomod@dividend,?___aomod
  6967  004A34  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6968  004A38  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6969  004A3C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6970  004A40  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6971  004A44  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6972  004A48  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6973  004A4C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6974  004A50  0012               	return		;funcret
  6975  004A52                     __end_of___aomod:
  6976                           	callstack 0
  6977                           
  6978 ;; *************** function ___aodiv *****************
  6979 ;; Defined at:
  6980 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;  dividend        8    0[COMRAM] long long 
  6983 ;;  divisor         8    8[COMRAM] long long 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;  quotient        8   18[COMRAM] long long 
  6986 ;;  sign            1   17[COMRAM] unsigned char 
  6987 ;;  counter         1   16[COMRAM] unsigned char 
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  8    0[COMRAM] long long 
  6990 ;; Registers used:
  6991 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6997 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6998 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7000 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;Total ram usage:       26 bytes
  7002 ;; Hardware stack levels used: 1
  7003 ;; Hardware stack levels required when called: 1
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		_dtoa
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text24
  7012  004766                     __ptext24:
  7013                           	callstack 0
  7014  004766                     ___aodiv:
  7015                           	callstack 23
  7016  004766  0E00               	movlw	0
  7017  004768  6E12               	movwf	___aodiv@sign^0,c
  7018  00476A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7019  00476C  EFBC  F023         	goto	u3020
  7020  004770  EFBA  F023         	goto	u3021
  7021  004774                     u3021:
  7022  004774  EFCE  F023         	goto	l3488
  7023  004778                     u3020:
  7024  004778  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7025  00477A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7026  00477C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7027  00477E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7028  004780  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7029  004782  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7030  004784  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7031  004786  6C09               	negf	___aodiv@divisor^0,c
  7032  004788  0E00               	movlw	0
  7033  00478A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7034  00478C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7035  00478E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7036  004790  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7037  004792  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7038  004794  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7039  004796  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7040  004798  0E01               	movlw	1
  7041  00479A  6E12               	movwf	___aodiv@sign^0,c
  7042  00479C                     l3488:
  7043  00479C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7044  00479E  EFD5  F023         	goto	u3030
  7045  0047A2  EFD3  F023         	goto	u3031
  7046  0047A6                     u3031:
  7047  0047A6  EFE7  F023         	goto	l3494
  7048  0047AA                     u3030:
  7049  0047AA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7050  0047AC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7051  0047AE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7052  0047B0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7053  0047B2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7054  0047B4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7055  0047B6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7056  0047B8  6C01               	negf	___aodiv@dividend^0,c
  7057  0047BA  0E00               	movlw	0
  7058  0047BC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7059  0047BE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7060  0047C0  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7061  0047C2  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7062  0047C4  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7063  0047C6  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7064  0047C8  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7065  0047CA  0E01               	movlw	1
  7066  0047CC  1A12               	xorwf	___aodiv@sign^0,f,c
  7067  0047CE                     l3494:
  7068  0047CE  EE20  F013         	lfsr	2,___aodiv@quotient
  7069  0047D2  0E07               	movlw	7
  7070  0047D4                     u3041:
  7071  0047D4  6ADE               	clrf	postinc2,c
  7072  0047D6  06E8               	decf	wreg,f,c
  7073  0047D8  E2FD               	bc	u3041
  7074  0047DA  5009               	movf	___aodiv@divisor^0,w,c
  7075  0047DC  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7076  0047DE  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7077  0047E0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7078  0047E2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7079  0047E4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7080  0047E6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7081  0047E8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7082  0047EA  B4D8               	btfsc	status,2,c
  7083  0047EC  EFFA  F023         	goto	u3051
  7084  0047F0  EFFC  F023         	goto	u3050
  7085  0047F4                     u3051:
  7086  0047F4  EF4E  F024         	goto	l3516
  7087  0047F8                     u3050:
  7088  0047F8  0E01               	movlw	1
  7089  0047FA  6E11               	movwf	___aodiv@counter^0,c
  7090  0047FC  EF0A  F024         	goto	l3502
  7091  004800                     l3500:
  7092  004800  90D8               	bcf	status,0,c
  7093  004802  3609               	rlcf	___aodiv@divisor^0,f,c
  7094  004804  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7095  004806  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7096  004808  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7097  00480A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7098  00480C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7099  00480E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7100  004810  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7101  004812  2A11               	incf	___aodiv@counter^0,f,c
  7102  004814                     l3502:
  7103  004814  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7104  004816  EF0F  F024         	goto	u3061
  7105  00481A  EF11  F024         	goto	u3060
  7106  00481E                     u3061:
  7107  00481E  EF00  F024         	goto	l3500
  7108  004822                     u3060:
  7109  004822                     l3504:
  7110  004822  90D8               	bcf	status,0,c
  7111  004824  3613               	rlcf	___aodiv@quotient^0,f,c
  7112  004826  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7113  004828  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7114  00482A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7115  00482C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7116  00482E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7117  004830  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7118  004832  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7119  004834  5009               	movf	___aodiv@divisor^0,w,c
  7120  004836  5C01               	subwf	___aodiv@dividend^0,w,c
  7121  004838  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7122  00483A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7123  00483C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7124  00483E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7125  004840  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7126  004842  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7127  004844  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7128  004846  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7129  004848  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7130  00484A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7131  00484C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7132  00484E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7133  004850  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7134  004852  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7135  004854  A0D8               	btfss	status,0,c
  7136  004856  EF2F  F024         	goto	u3071
  7137  00485A  EF31  F024         	goto	u3070
  7138  00485E                     u3071:
  7139  00485E  EF42  F024         	goto	l3512
  7140  004862                     u3070:
  7141  004862  5009               	movf	___aodiv@divisor^0,w,c
  7142  004864  5E01               	subwf	___aodiv@dividend^0,f,c
  7143  004866  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7144  004868  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7145  00486A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7146  00486C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7147  00486E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7148  004870  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7149  004872  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7150  004874  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7151  004876  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7152  004878  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7153  00487A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7154  00487C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7155  00487E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7156  004880  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7157  004882  8013               	bsf	___aodiv@quotient^0,0,c
  7158  004884                     l3512:
  7159  004884  90D8               	bcf	status,0,c
  7160  004886  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7161  004888  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7162  00488A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7163  00488C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7164  00488E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7165  004890  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7166  004892  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7167  004894  3209               	rrcf	___aodiv@divisor^0,f,c
  7168  004896  2E11               	decfsz	___aodiv@counter^0,f,c
  7169  004898  EF11  F024         	goto	l3504
  7170  00489C                     l3516:
  7171  00489C  5012               	movf	___aodiv@sign^0,w,c
  7172  00489E  B4D8               	btfsc	status,2,c
  7173  0048A0  EF54  F024         	goto	u3081
  7174  0048A4  EF56  F024         	goto	u3080
  7175  0048A8                     u3081:
  7176  0048A8  EF66  F024         	goto	l3520
  7177  0048AC                     u3080:
  7178  0048AC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7179  0048AE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7180  0048B0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7181  0048B2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7182  0048B4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7183  0048B6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7184  0048B8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7185  0048BA  6C13               	negf	___aodiv@quotient^0,c
  7186  0048BC  0E00               	movlw	0
  7187  0048BE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7188  0048C0  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7189  0048C2  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7190  0048C4  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7191  0048C6  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7192  0048C8  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7193  0048CA  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7194  0048CC                     l3520:
  7195  0048CC  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7196  0048D0  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7197  0048D4  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7198  0048D8  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7199  0048DC  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7200  0048E0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7201  0048E4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7202  0048E8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7203  0048EC  0012               	return		;funcret
  7204  0048EE                     __end_of___aodiv:
  7205                           	callstack 0
  7206                           
  7207 ;; *************** function _sendStringSerial4 *****************
  7208 ;; Defined at:
  7209 ;;		line 35 in file "serial.c"
  7210 ;; Parameters:    Size  Location     Type
  7211 ;;  string          2    1[COMRAM] PTR unsigned char 
  7212 ;;		 -> detect_color@buf(100), color_predict@buf(100), color_display@buf(100), 
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;		None
  7215 ;; Return value:  Size  Location     Type
  7216 ;;                  1    wreg      void 
  7217 ;; Registers used:
  7218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7219 ;; Tracked objects:
  7220 ;;		On entry : 0/0
  7221 ;;		On exit  : 0/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7227 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7228 ;;Total ram usage:        2 bytes
  7229 ;; Hardware stack levels used: 1
  7230 ;; Hardware stack levels required when called: 2
  7231 ;; This function calls:
  7232 ;;		_sendCharSerial4
  7233 ;; This function is called by:
  7234 ;;		_color_display
  7235 ;;		_color_predict
  7236 ;;		_detect_color
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           	psect	text25
  7241  005E18                     __ptext25:
  7242                           	callstack 0
  7243  005E18                     _sendStringSerial4:
  7244                           	callstack 26
  7245  005E18                     
  7246                           ;serial.c: 37:     while(*string != 0){
  7247  005E18  EF17  F02F         	goto	l4232
  7248  005E1C                     l4228:
  7249                           
  7250                           ;serial.c: 38:   sendCharSerial4(*string++);}
  7251  005E1C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7252  005E20  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7253  005E24  50DF               	movf	indf2,w,c
  7254  005E26  ECF5  F02F         	call	_sendCharSerial4
  7255  005E2A  4A02               	infsnz	sendStringSerial4@string^0,f,c
  7256  005E2C  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  7257  005E2E                     l4232:
  7258                           
  7259                           ;serial.c: 37:     while(*string != 0){
  7260  005E2E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7261  005E32  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7262  005E36  50DF               	movf	indf2,w,c
  7263  005E38  A4D8               	btfss	status,2,c
  7264  005E3A  EF21  F02F         	goto	u4231
  7265  005E3E  EF23  F02F         	goto	u4230
  7266  005E42                     u4231:
  7267  005E42  EF0E  F02F         	goto	l4228
  7268  005E46                     u4230:
  7269  005E46  0012               	return		;funcret
  7270  005E48                     __end_of_sendStringSerial4:
  7271                           	callstack 0
  7272                           
  7273 ;; *************** function _sendCharSerial4 *****************
  7274 ;; Defined at:
  7275 ;;		line 29 in file "serial.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;  charToSend      1    wreg     unsigned char 
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;  charToSend      1    0[COMRAM] unsigned char 
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  1    wreg      void 
  7282 ;; Registers used:
  7283 ;;		wreg
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7290 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7292 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7293 ;;Total ram usage:        1 bytes
  7294 ;; Hardware stack levels used: 1
  7295 ;; Hardware stack levels required when called: 1
  7296 ;; This function calls:
  7297 ;;		Nothing
  7298 ;; This function is called by:
  7299 ;;		_sendStringSerial4
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           	psect	text26
  7304  005FEA                     __ptext26:
  7305                           	callstack 0
  7306  005FEA                     _sendCharSerial4:
  7307                           	callstack 26
  7308                           
  7309                           ;incstack = 0
  7310                           ;sendCharSerial4@charToSend stored from wreg
  7311  005FEA  6E01               	movwf	sendCharSerial4@charToSend^0,c
  7312  005FEC                     l334:
  7313  005FEC  010E               	movlb	14	; () banked
  7314  005FEE  A537               	btfss	55,2,b	;volatile
  7315  005FF0  EFFC  F02F         	goto	u3961
  7316  005FF4  EFFE  F02F         	goto	u3960
  7317  005FF8                     u3961:
  7318  005FF8  EFF6  F02F         	goto	l334
  7319  005FFC                     u3960:
  7320  005FFC                     
  7321                           ; BSR set to: 14
  7322                           ;serial.c: 31:     TX4REG = charToSend;
  7323  005FFC  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  7324  006000                     
  7325                           ; BSR set to: 14
  7326  006000  0012               	return		;funcret
  7327  006002                     __end_of_sendCharSerial4:
  7328                           	callstack 0
  7329                           
  7330 ;; *************** function _short_burst *****************
  7331 ;; Defined at:
  7332 ;;		line 7 in file "movement.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7335 ;;		 -> main@motorL(9), 
  7336 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7337 ;;		 -> main@motorR(9), 
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;		None
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  1    wreg      void 
  7342 ;; Registers used:
  7343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7349 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7352 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7353 ;;Total ram usage:        6 bytes
  7354 ;; Hardware stack levels used: 1
  7355 ;; Hardware stack levels required when called: 4
  7356 ;; This function calls:
  7357 ;;		_fullSpeedAhead
  7358 ;;		_stop
  7359 ;; This function is called by:
  7360 ;;		_main
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364                           	psect	text27
  7365  005B92                     __ptext27:
  7366                           	callstack 0
  7367  005B92                     _short_burst:
  7368                           	callstack 26
  7369  005B92                     
  7370                           ;movement.c: 7: void short_burst(struct DC_motor *mL, struct DC_motor *mR);movement.c: 8
      +                          : {;movement.c: 9:     fullSpeedAhead(mL,mR);
  7371  005B92  C020  F01A         	movff	short_burst@mL,fullSpeedAhead@mL
  7372  005B96  C021  F01B         	movff	short_burst@mL+1,fullSpeedAhead@mL+1
  7373  005B9A  C022  F01C         	movff	short_burst@mR,fullSpeedAhead@mR
  7374  005B9E  C023  F01D         	movff	short_burst@mR+1,fullSpeedAhead@mR+1
  7375  005BA2  ECBB  F02A         	call	_fullSpeedAhead	;wreg free
  7376  005BA6                     
  7377                           ;movement.c: 10:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7378  005BA6  0E21               	movlw	33
  7379  005BA8  6E25               	movwf	(??_short_burst+1)^0,c
  7380  005BAA  0E78               	movlw	120
  7381  005BAC  6E24               	movwf	??_short_burst^0,c
  7382  005BAE  0E98               	movlw	152
  7383  005BB0                     u6087:
  7384  005BB0  2EE8               	decfsz	wreg,f,c
  7385  005BB2  D7FE               	bra	u6087
  7386  005BB4  2E24               	decfsz	??_short_burst^0,f,c
  7387  005BB6  D7FC               	bra	u6087
  7388  005BB8  2E25               	decfsz	(??_short_burst+1)^0,f,c
  7389  005BBA  D7FA               	bra	u6087
  7390  005BBC  D000               	nop2	
  7391  005BBE                     
  7392                           ;movement.c: 11:     stop(mL,mR);
  7393  005BBE  C020  F01A         	movff	short_burst@mL,stop@mL
  7394  005BC2  C021  F01B         	movff	short_burst@mL+1,stop@mL+1
  7395  005BC6  C022  F01C         	movff	short_burst@mR,stop@mR
  7396  005BCA  C023  F01D         	movff	short_burst@mR+1,stop@mR+1
  7397  005BCE  EC7F  F02B         	call	_stop	;wreg free
  7398  005BD2  0012               	return		;funcret
  7399  005BD4                     __end_of_short_burst:
  7400                           	callstack 0
  7401                           
  7402 ;; *************** function _setup *****************
  7403 ;; Defined at:
  7404 ;;		line 6 in file "test_and_calibration.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;  white           2   24[BANK0 ] PTR struct white_card
  7407 ;;		 -> main@white(28), 
  7408 ;;  amb             2   26[BANK0 ] PTR struct color_rgb
  7409 ;;		 -> main@amb(8), 
  7410 ;;  mL              2   28[BANK0 ] PTR struct DC_motor
  7411 ;;		 -> main@motorL(9), 
  7412 ;;  mR              2   30[BANK0 ] PTR struct DC_motor
  7413 ;;		 -> main@motorR(9), 
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;  amb_light       2   34[BANK0 ] unsigned int 
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  2   24[BANK0 ] unsigned int 
  7418 ;; Registers used:
  7419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7425 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7426 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7427 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7428 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7429 ;;Total ram usage:       12 bytes
  7430 ;; Hardware stack levels used: 1
  7431 ;; Hardware stack levels required when called: 7
  7432 ;; This function calls:
  7433 ;;		_LED_OFF
  7434 ;;		_amb_light_measure
  7435 ;;		_calibrate_white
  7436 ;;		_calibration_motor
  7437 ;; This function is called by:
  7438 ;;		_main
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text28
  7443  004A52                     __ptext28:
  7444                           	callstack 0
  7445  004A52                     _setup:
  7446                           	callstack 23
  7447  004A52                     
  7448                           ;test_and_calibration.c: 6: unsigned int setup(struct white_card *white,struct color_rgb
      +                          *amb,struct DC_motor *mL, struct DC_motor *mR);test_and_calibration.c: 7: {;test_and_cal
      +                          ibration.c: 8:     unsigned int amb_light = 0;
  7449  004A52  0E00               	movlw	0
  7450  004A54  0100               	movlb	0	; () banked
  7451  004A56  6F83               	movwf	(setup@amb_light+1)& (0+255),b
  7452  004A58  0E00               	movlw	0
  7453  004A5A  6F82               	movwf	setup@amb_light& (0+255),b
  7454  004A5C                     
  7455                           ; BSR set to: 0
  7456                           ;test_and_calibration.c: 9:     LED_OFF();
  7457  004A5C  EC87  F02F         	call	_LED_OFF	;wreg free
  7458  004A60                     
  7459                           ;test_and_calibration.c: 10:     LATDbits.LATD7 = 1;
  7460  004A60  8E7C               	bsf	124,7,c	;volatile
  7461  004A62                     
  7462                           ;test_and_calibration.c: 11:     LATHbits.LATH3 = 1;
  7463  004A62  8680               	bsf	128,3,c	;volatile
  7464  004A64                     l560:
  7465  004A64  B48E               	btfsc	142,2,c	;volatile
  7466  004A66  EF37  F025         	goto	u5571
  7467  004A6A  EF39  F025         	goto	u5570
  7468  004A6E                     u5571:
  7469  004A6E  EF32  F025         	goto	l560
  7470  004A72                     u5570:
  7471  004A72                     
  7472                           ;test_and_calibration.c: 14:     if (!PORTFbits.RF2){calibrate_white(white); LATDbits.LA
      +                          TD7 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  7473  004A72  B48E               	btfsc	142,2,c	;volatile
  7474  004A74  EF3E  F025         	goto	u5581
  7475  004A78  EF40  F025         	goto	u5580
  7476  004A7C                     u5581:
  7477  004A7C  EF53  F025         	goto	l564
  7478  004A80                     u5580:
  7479  004A80  C078  F00C         	movff	setup@white,calibrate_white@w
  7480  004A84  C079  F00D         	movff	setup@white+1,calibrate_white@w+1
  7481  004A88  EC95  F01D         	call	_calibrate_white	;wreg free
  7482  004A8C  9E7C               	bcf	124,7,c	;volatile
  7483  004A8E  0E29               	movlw	41
  7484  004A90  0100               	movlb	0	; () banked
  7485  004A92  6F81               	movwf	(??_setup+1)& (0+255),b
  7486  004A94  0E96               	movlw	150
  7487  004A96  6F80               	movwf	??_setup& (0+255),b
  7488  004A98  0E7F               	movlw	127
  7489  004A9A                     u6097:
  7490  004A9A  2EE8               	decfsz	wreg,f,c
  7491  004A9C  D7FE               	bra	u6097
  7492  004A9E  2F80               	decfsz	??_setup& (0+255),f,b
  7493  004AA0  D7FC               	bra	u6097
  7494  004AA2  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7495  004AA4  D7FA               	bra	u6097
  7496  004AA6                     l564:
  7497  004AA6  B68E               	btfsc	142,3,c	;volatile
  7498  004AA8  EF58  F025         	goto	u5591
  7499  004AAC  EF5A  F025         	goto	u5590
  7500  004AB0                     u5591:
  7501  004AB0  EF53  F025         	goto	l564
  7502  004AB4                     u5590:
  7503  004AB4                     
  7504                           ;test_and_calibration.c: 17:     if (!PORTFbits.RF3){amb_light = amb_light_measure(amb);
      +                           LATHbits.LATH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  7505  004AB4  B68E               	btfsc	142,3,c	;volatile
  7506  004AB6  EF5F  F025         	goto	u5601
  7507  004ABA  EF61  F025         	goto	u5600
  7508  004ABE                     u5601:
  7509  004ABE  EF9B  F025         	goto	l5234
  7510  004AC2                     u5600:
  7511  004AC2  C07A  F06A         	movff	setup@amb,amb_light_measure@amb
  7512  004AC6  C07B  F06B         	movff	setup@amb+1,amb_light_measure@amb+1
  7513  004ACA  EC16  F027         	call	_amb_light_measure	;wreg free
  7514  004ACE  C06A  F082         	movff	?_amb_light_measure,setup@amb_light
  7515  004AD2  C06B  F083         	movff	?_amb_light_measure+1,setup@amb_light+1
  7516  004AD6  9680               	bcf	128,3,c	;volatile
  7517  004AD8  0E29               	movlw	41
  7518  004ADA  0100               	movlb	0	; () banked
  7519  004ADC  6F81               	movwf	(??_setup+1)& (0+255),b
  7520  004ADE  0E96               	movlw	150
  7521  004AE0  6F80               	movwf	??_setup& (0+255),b
  7522  004AE2  0E7F               	movlw	127
  7523  004AE4                     u6107:
  7524  004AE4  2EE8               	decfsz	wreg,f,c
  7525  004AE6  D7FE               	bra	u6107
  7526  004AE8  2F80               	decfsz	??_setup& (0+255),f,b
  7527  004AEA  D7FC               	bra	u6107
  7528  004AEC  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7529  004AEE  D7FA               	bra	u6107
  7530  004AF0  EF9B  F025         	goto	l5234
  7531  004AF4                     l570:
  7532  004AF4  8E7C               	bsf	124,7,c	;volatile
  7533  004AF6  A680               	btfss	128,3,c	;volatile
  7534  004AF8  EF80  F025         	goto	u5611
  7535  004AFC  EF85  F025         	goto	u5610
  7536  004B00                     u5611:
  7537  004B00  0100               	movlb	0	; () banked
  7538  004B02  6B80               	clrf	??_setup& (0+255),b
  7539  004B04  2B80               	incf	??_setup& (0+255),f,b
  7540  004B06  EF87  F025         	goto	u5628
  7541  004B0A                     u5610:
  7542  004B0A  0100               	movlb	0	; () banked
  7543  004B0C  6B80               	clrf	??_setup& (0+255),b
  7544  004B0E                     u5628:
  7545  004B0E  4780               	rlncf	??_setup& (0+255),f,b
  7546  004B10  4780               	rlncf	??_setup& (0+255),f,b
  7547  004B12  4780               	rlncf	??_setup& (0+255),f,b
  7548  004B14  5080               	movf	128,w,c	;volatile
  7549  004B16  1980               	xorwf	??_setup& (0+255),w,b
  7550  004B18  0BF7               	andlw	-9
  7551  004B1A  1980               	xorwf	??_setup& (0+255),w,b
  7552  004B1C  6E80               	movwf	128,c	;volatile
  7553  004B1E                     
  7554                           ; BSR set to: 0
  7555  004B1E  0E11               	movlw	17
  7556  004B20  0100               	movlb	0	; () banked
  7557  004B22  6F81               	movwf	(??_setup+1)& (0+255),b
  7558  004B24  0E3C               	movlw	60
  7559  004B26  6F80               	movwf	??_setup& (0+255),b
  7560  004B28  0ECB               	movlw	203
  7561  004B2A                     u6117:
  7562  004B2A  2EE8               	decfsz	wreg,f,c
  7563  004B2C  D7FE               	bra	u6117
  7564  004B2E  2F80               	decfsz	??_setup& (0+255),f,b
  7565  004B30  D7FC               	bra	u6117
  7566  004B32  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7567  004B34  D7FA               	bra	u6117
  7568  004B36                     l5234:
  7569  004B36  A68E               	btfss	142,3,c	;volatile
  7570  004B38  EFA0  F025         	goto	u5631
  7571  004B3C  EFA2  F025         	goto	u5630
  7572  004B40                     u5631:
  7573  004B40  EFA9  F025         	goto	l573
  7574  004B44                     u5630:
  7575  004B44  B48E               	btfsc	142,2,c	;volatile
  7576  004B46  EFA7  F025         	goto	u5641
  7577  004B4A  EFA9  F025         	goto	u5640
  7578  004B4E                     u5641:
  7579  004B4E  EF7A  F025         	goto	l570
  7580  004B52                     u5640:
  7581  004B52                     l573:
  7582                           
  7583                           ;test_and_calibration.c: 22:         if (!PORTFbits.RF3){calibration_motor(mL,mR); LATDb
      +                          its.LATD7 = 0;}
  7584  004B52  B68E               	btfsc	142,3,c	;volatile
  7585  004B54  EFAE  F025         	goto	u5651
  7586  004B58  EFB0  F025         	goto	u5650
  7587  004B5C                     u5651:
  7588  004B5C  EFBB  F025         	goto	l5242
  7589  004B60                     u5650:
  7590  004B60  C07C  F033         	movff	setup@mL,calibration_motor@mL
  7591  004B64  C07D  F034         	movff	setup@mL+1,calibration_motor@mL+1
  7592  004B68  C07E  F035         	movff	setup@mR,calibration_motor@mR
  7593  004B6C  C07F  F036         	movff	setup@mR+1,calibration_motor@mR+1
  7594  004B70  ECB0  F028         	call	_calibration_motor	;wreg free
  7595  004B74  9E7C               	bcf	124,7,c	;volatile
  7596  004B76                     l5242:
  7597                           
  7598                           ;test_and_calibration.c: 23:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0; LATHbits.LA
      +                          TH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0))); return amb_light;}
  7599  004B76  B48E               	btfsc	142,2,c	;volatile
  7600  004B78  EFC0  F025         	goto	u5661
  7601  004B7C  EFC2  F025         	goto	u5660
  7602  004B80                     u5661:
  7603  004B80  EF9B  F025         	goto	l5234
  7604  004B84                     u5660:
  7605  004B84  9E7C               	bcf	124,7,c	;volatile
  7606  004B86  9680               	bcf	128,3,c	;volatile
  7607  004B88  0E29               	movlw	41
  7608  004B8A  0100               	movlb	0	; () banked
  7609  004B8C  6F81               	movwf	(??_setup+1)& (0+255),b
  7610  004B8E  0E96               	movlw	150
  7611  004B90  6F80               	movwf	??_setup& (0+255),b
  7612  004B92  0E7F               	movlw	127
  7613  004B94                     u6127:
  7614  004B94  2EE8               	decfsz	wreg,f,c
  7615  004B96  D7FE               	bra	u6127
  7616  004B98  2F80               	decfsz	??_setup& (0+255),f,b
  7617  004B9A  D7FC               	bra	u6127
  7618  004B9C  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7619  004B9E  D7FA               	bra	u6127
  7620  004BA0  C082  F078         	movff	setup@amb_light,?_setup
  7621  004BA4  C083  F079         	movff	setup@amb_light+1,?_setup+1
  7622  004BA8  0012               	return		;funcret
  7623  004BAA                     __end_of_setup:
  7624                           	callstack 0
  7625                           
  7626 ;; *************** function _calibration_motor *****************
  7627 ;; Defined at:
  7628 ;;		line 128 in file "test_and_calibration.c"
  7629 ;; Parameters:    Size  Location     Type
  7630 ;;  mL              2   50[COMRAM] PTR struct DC_motor
  7631 ;;		 -> main@motorL(9), 
  7632 ;;  mR              2   52[COMRAM] PTR struct DC_motor
  7633 ;;		 -> main@motorR(9), 
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      void 
  7638 ;; Registers used:
  7639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7645 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7647 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7648 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7649 ;;Total ram usage:        6 bytes
  7650 ;; Hardware stack levels used: 1
  7651 ;; Hardware stack levels required when called: 6
  7652 ;; This function calls:
  7653 ;;		_test_action
  7654 ;; This function is called by:
  7655 ;;		_setup
  7656 ;; This function uses a non-reentrant model
  7657 ;;
  7658                           
  7659                           	psect	text29
  7660  005160                     __ptext29:
  7661                           	callstack 0
  7662  005160                     _calibration_motor:
  7663                           	callstack 23
  7664  005160                     l614:
  7665                           
  7666                           ;test_and_calibration.c: 131:         LATDbits.LATD7 = 1;
  7667  005160  8E7C               	bsf	124,7,c	;volatile
  7668                           
  7669                           ;test_and_calibration.c: 132:         LATHbits.LATH3 = 1;
  7670  005162  8680               	bsf	128,3,c	;volatile
  7671                           
  7672                           ;test_and_calibration.c: 134:         if (!PORTFbits.RF2) {
  7673  005164  B48E               	btfsc	142,2,c	;volatile
  7674  005166  EFB7  F028         	goto	u5461
  7675  00516A  EFB9  F028         	goto	u5460
  7676  00516E                     u5461:
  7677  00516E  EFE5  F028         	goto	l615
  7678  005172                     u5460:
  7679  005172                     
  7680                           ;test_and_calibration.c: 135:             _delay((unsigned long)((300)*(64000000/4000.0)
      +                          ));
  7681  005172  0E19               	movlw	25
  7682  005174  6E38               	movwf	(??_calibration_motor+1)^0,c
  7683  005176  0E5A               	movlw	90
  7684  005178  6E37               	movwf	??_calibration_motor^0,c
  7685  00517A  0EB2               	movlw	178
  7686  00517C                     u6137:
  7687  00517C  2EE8               	decfsz	wreg,f,c
  7688  00517E  D7FE               	bra	u6137
  7689  005180  2E37               	decfsz	??_calibration_motor^0,f,c
  7690  005182  D7FC               	bra	u6137
  7691  005184  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7692  005186  D7FA               	bra	u6137
  7693  005188                     
  7694                           ;test_and_calibration.c: 136:             if (!PORTFbits.RF2){LATDbits.LATD7 = 0; _delay
      +                          ((unsigned long)((300)*(64000000/4000.0))); SENSITIVITY += 5; }
  7695  005188  B48E               	btfsc	142,2,c	;volatile
  7696  00518A  EFC9  F028         	goto	u5471
  7697  00518E  EFCB  F028         	goto	u5470
  7698  005192                     u5471:
  7699  005192  EFDC  F028         	goto	l5042
  7700  005196                     u5470:
  7701  005196  9E7C               	bcf	124,7,c	;volatile
  7702  005198  0E19               	movlw	25
  7703  00519A  6E38               	movwf	(??_calibration_motor+1)^0,c
  7704  00519C  0E5A               	movlw	90
  7705  00519E  6E37               	movwf	??_calibration_motor^0,c
  7706  0051A0  0EB2               	movlw	178
  7707  0051A2                     u6147:
  7708  0051A2  2EE8               	decfsz	wreg,f,c
  7709  0051A4  D7FE               	bra	u6147
  7710  0051A6  2E37               	decfsz	??_calibration_motor^0,f,c
  7711  0051A8  D7FC               	bra	u6147
  7712  0051AA  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7713  0051AC  D7FA               	bra	u6147
  7714  0051AE  0E05               	movlw	5
  7715  0051B0  0101               	movlb	1	; () banked
  7716  0051B2  27C2               	addwf	_SENSITIVITY& (0+255),f,b
  7717  0051B4  0E00               	movlw	0
  7718  0051B6  23C3               	addwfc	(_SENSITIVITY+1)& (0+255),f,b
  7719  0051B8                     l5042:
  7720                           
  7721                           ;test_and_calibration.c: 137:             if (!PORTFbits.RF3){break;}
  7722  0051B8  B68E               	btfsc	142,3,c	;volatile
  7723  0051BA  EFE1  F028         	goto	u5481
  7724  0051BE  EFE3  F028         	goto	u5480
  7725  0051C2                     u5481:
  7726  0051C2  EFE5  F028         	goto	l615
  7727  0051C6                     u5480:
  7728  0051C6  EF1A  F029         	goto	l618
  7729  0051CA                     l615:
  7730                           
  7731                           ;test_and_calibration.c: 139:         if (!PORTFbits.RF3) {
  7732  0051CA  B68E               	btfsc	142,3,c	;volatile
  7733  0051CC  EFEA  F028         	goto	u5491
  7734  0051D0  EFEC  F028         	goto	u5490
  7735  0051D4                     u5491:
  7736  0051D4  EFB0  F028         	goto	l614
  7737  0051D8                     u5490:
  7738  0051D8                     
  7739                           ;test_and_calibration.c: 140:             _delay((unsigned long)((300)*(64000000/4000.0)
      +                          ));
  7740  0051D8  0E19               	movlw	25
  7741  0051DA  6E38               	movwf	(??_calibration_motor+1)^0,c
  7742  0051DC  0E5A               	movlw	90
  7743  0051DE  6E37               	movwf	??_calibration_motor^0,c
  7744  0051E0  0EB2               	movlw	178
  7745  0051E2                     u6157:
  7746  0051E2  2EE8               	decfsz	wreg,f,c
  7747  0051E4  D7FE               	bra	u6157
  7748  0051E6  2E37               	decfsz	??_calibration_motor^0,f,c
  7749  0051E8  D7FC               	bra	u6157
  7750  0051EA  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7751  0051EC  D7FA               	bra	u6157
  7752  0051EE                     
  7753                           ;test_and_calibration.c: 141:             if (!PORTFbits.RF2){break;}
  7754  0051EE  B48E               	btfsc	142,2,c	;volatile
  7755  0051F0  EFFC  F028         	goto	u5501
  7756  0051F4  EFFE  F028         	goto	u5500
  7757  0051F8                     u5501:
  7758  0051F8  EF00  F029         	goto	l620
  7759  0051FC                     u5500:
  7760  0051FC  EF1A  F029         	goto	l618
  7761  005200                     l620:
  7762                           
  7763                           ;test_and_calibration.c: 142:             if (!PORTFbits.RF3){LATHbits.LATH3 = 0; _delay
      +                          ((unsigned long)((300)*(64000000/4000.0))); SENSITIVITY -= 5; }
  7764  005200  B68E               	btfsc	142,3,c	;volatile
  7765  005202  EF05  F029         	goto	u5511
  7766  005206  EF07  F029         	goto	u5510
  7767  00520A                     u5511:
  7768  00520A  EFB0  F028         	goto	l614
  7769  00520E                     u5510:
  7770  00520E  9680               	bcf	128,3,c	;volatile
  7771  005210  0E19               	movlw	25
  7772  005212  6E38               	movwf	(??_calibration_motor+1)^0,c
  7773  005214  0E5A               	movlw	90
  7774  005216  6E37               	movwf	??_calibration_motor^0,c
  7775  005218  0EB2               	movlw	178
  7776  00521A                     u6167:
  7777  00521A  2EE8               	decfsz	wreg,f,c
  7778  00521C  D7FE               	bra	u6167
  7779  00521E  2E37               	decfsz	??_calibration_motor^0,f,c
  7780  005220  D7FC               	bra	u6167
  7781  005222  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7782  005224  D7FA               	bra	u6167
  7783  005226  0E05               	movlw	5
  7784  005228  0101               	movlb	1	; () banked
  7785  00522A  5FC2               	subwf	_SENSITIVITY& (0+255),f,b
  7786  00522C  0E00               	movlw	0
  7787  00522E  5BC3               	subwfb	(_SENSITIVITY+1)& (0+255),f,b
  7788  005230  EFB0  F028         	goto	l614
  7789  005234                     l618:
  7790                           
  7791                           ;test_and_calibration.c: 145:     LATDbits.LATD7 = 0;
  7792  005234  9E7C               	bcf	124,7,c	;volatile
  7793                           
  7794                           ;test_and_calibration.c: 146:     LATHbits.LATH3 = 0;
  7795  005236  9680               	bcf	128,3,c	;volatile
  7796  005238                     
  7797                           ;test_and_calibration.c: 147:     test_action(mL, mR);
  7798  005238  C033  F02D         	movff	calibration_motor@mL,test_action@mL
  7799  00523C  C034  F02E         	movff	calibration_motor@mL+1,test_action@mL+1
  7800  005240  C035  F02F         	movff	calibration_motor@mR,test_action@mR
  7801  005244  C036  F030         	movff	calibration_motor@mR+1,test_action@mR+1
  7802  005248  EC7F  F026         	call	_test_action	;wreg free
  7803  00524C  0012               	return		;funcret
  7804  00524E                     __end_of_calibration_motor:
  7805                           	callstack 0
  7806                           
  7807 ;; *************** function _test_action *****************
  7808 ;; Defined at:
  7809 ;;		line 63 in file "test_and_calibration.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  7812 ;;		 -> main@motorL(9), 
  7813 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  7814 ;;		 -> main@motorR(9), 
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;		None
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  1    wreg      void 
  7819 ;; Registers used:
  7820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7828 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7829 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7830 ;;Total ram usage:        6 bytes
  7831 ;; Hardware stack levels used: 1
  7832 ;; Hardware stack levels required when called: 5
  7833 ;; This function calls:
  7834 ;;		_fullSpeedAhead
  7835 ;;		_stop
  7836 ;;		_turn45
  7837 ;; This function is called by:
  7838 ;;		_test_function
  7839 ;;		_calibration_motor
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text30
  7844  004CFE                     __ptext30:
  7845                           	callstack 0
  7846  004CFE                     _test_action:
  7847                           	callstack 24
  7848  004CFE                     
  7849                           ;test_and_calibration.c: 63: void test_action(struct DC_motor *mL, struct DC_motor *mR);
      +                          test_and_calibration.c: 64: {;test_and_calibration.c: 65:     stop(mL,mR);
  7850  004CFE  C02D  F01A         	movff	test_action@mL,stop@mL
  7851  004D02  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7852  004D06  C02F  F01C         	movff	test_action@mR,stop@mR
  7853  004D0A  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7854  004D0E  EC7F  F02B         	call	_stop	;wreg free
  7855  004D12                     
  7856                           ;test_and_calibration.c: 66:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  7857  004D12  0EA3               	movlw	163
  7858  004D14  6E32               	movwf	(??_test_action+1)^0,c
  7859  004D16  0E57               	movlw	87
  7860  004D18  6E31               	movwf	??_test_action^0,c
  7861  004D1A  0E02               	movlw	2
  7862  004D1C                     u6177:
  7863  004D1C  2EE8               	decfsz	wreg,f,c
  7864  004D1E  D7FE               	bra	u6177
  7865  004D20  2E31               	decfsz	??_test_action^0,f,c
  7866  004D22  D7FC               	bra	u6177
  7867  004D24  2E32               	decfsz	(??_test_action+1)^0,f,c
  7868  004D26  D7FA               	bra	u6177
  7869  004D28  D000               	nop2	
  7870  004D2A                     
  7871                           ;test_and_calibration.c: 67:     turn45(mL,mR,8,1);
  7872  004D2A  C02D  F020         	movff	test_action@mL,turn45@mL
  7873  004D2E  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7874  004D32  C02F  F022         	movff	test_action@mR,turn45@mR
  7875  004D36  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7876  004D3A  0E08               	movlw	8
  7877  004D3C  6E24               	movwf	turn45@turn_time^0,c
  7878  004D3E  0E01               	movlw	1
  7879  004D40  6E25               	movwf	turn45@direction^0,c
  7880  004D42  EC10  F022         	call	_turn45	;wreg free
  7881  004D46                     
  7882                           ;test_and_calibration.c: 68:     stop(mL,mR);
  7883  004D46  C02D  F01A         	movff	test_action@mL,stop@mL
  7884  004D4A  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7885  004D4E  C02F  F01C         	movff	test_action@mR,stop@mR
  7886  004D52  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7887  004D56  EC7F  F02B         	call	_stop	;wreg free
  7888  004D5A                     
  7889                           ;test_and_calibration.c: 69:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  7890  004D5A  0EA3               	movlw	163
  7891  004D5C  6E32               	movwf	(??_test_action+1)^0,c
  7892  004D5E  0E57               	movlw	87
  7893  004D60  6E31               	movwf	??_test_action^0,c
  7894  004D62  0E02               	movlw	2
  7895  004D64                     u6187:
  7896  004D64  2EE8               	decfsz	wreg,f,c
  7897  004D66  D7FE               	bra	u6187
  7898  004D68  2E31               	decfsz	??_test_action^0,f,c
  7899  004D6A  D7FC               	bra	u6187
  7900  004D6C  2E32               	decfsz	(??_test_action+1)^0,f,c
  7901  004D6E  D7FA               	bra	u6187
  7902  004D70  D000               	nop2	
  7903                           
  7904                           ;test_and_calibration.c: 70:     turn45(mL,mR,8,2);
  7905  004D72  C02D  F020         	movff	test_action@mL,turn45@mL
  7906  004D76  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7907  004D7A  C02F  F022         	movff	test_action@mR,turn45@mR
  7908  004D7E  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7909  004D82  0E08               	movlw	8
  7910  004D84  6E24               	movwf	turn45@turn_time^0,c
  7911  004D86  0E02               	movlw	2
  7912  004D88  6E25               	movwf	turn45@direction^0,c
  7913  004D8A  EC10  F022         	call	_turn45	;wreg free
  7914                           
  7915                           ;test_and_calibration.c: 71:     fullSpeedAhead(mL,mR);
  7916  004D8E  C02D  F01A         	movff	test_action@mL,fullSpeedAhead@mL
  7917  004D92  C02E  F01B         	movff	test_action@mL+1,fullSpeedAhead@mL+1
  7918  004D96  C02F  F01C         	movff	test_action@mR,fullSpeedAhead@mR
  7919  004D9A  C030  F01D         	movff	test_action@mR+1,fullSpeedAhead@mR+1
  7920  004D9E  ECBB  F02A         	call	_fullSpeedAhead	;wreg free
  7921  004DA2                     
  7922                           ;test_and_calibration.c: 72:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  7923  004DA2  0EF4               	movlw	244
  7924  004DA4  6E32               	movwf	(??_test_action+1)^0,c
  7925  004DA6  0E82               	movlw	130
  7926  004DA8  6E31               	movwf	??_test_action^0,c
  7927  004DAA  0E05               	movlw	5
  7928  004DAC                     u6197:
  7929  004DAC  2EE8               	decfsz	wreg,f,c
  7930  004DAE  D7FE               	bra	u6197
  7931  004DB0  2E31               	decfsz	??_test_action^0,f,c
  7932  004DB2  D7FC               	bra	u6197
  7933  004DB4  2E32               	decfsz	(??_test_action+1)^0,f,c
  7934  004DB6  D7FA               	bra	u6197
  7935  004DB8  F000               	nop	
  7936  004DBA                     
  7937                           ;test_and_calibration.c: 73:     stop(mL,mR);
  7938  004DBA  C02D  F01A         	movff	test_action@mL,stop@mL
  7939  004DBE  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7940  004DC2  C02F  F01C         	movff	test_action@mR,stop@mR
  7941  004DC6  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7942  004DCA  EC7F  F02B         	call	_stop	;wreg free
  7943  004DCE                     
  7944                           ;test_and_calibration.c: 74:     turn45(mL,mR,4,1);
  7945  004DCE  C02D  F020         	movff	test_action@mL,turn45@mL
  7946  004DD2  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7947  004DD6  C02F  F022         	movff	test_action@mR,turn45@mR
  7948  004DDA  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7949  004DDE  0E04               	movlw	4
  7950  004DE0  6E24               	movwf	turn45@turn_time^0,c
  7951  004DE2  0E01               	movlw	1
  7952  004DE4  6E25               	movwf	turn45@direction^0,c
  7953  004DE6  EC10  F022         	call	_turn45	;wreg free
  7954  004DEA                     
  7955                           ;test_and_calibration.c: 75:     fullSpeedAhead(mL,mR);
  7956  004DEA  C02D  F01A         	movff	test_action@mL,fullSpeedAhead@mL
  7957  004DEE  C02E  F01B         	movff	test_action@mL+1,fullSpeedAhead@mL+1
  7958  004DF2  C02F  F01C         	movff	test_action@mR,fullSpeedAhead@mR
  7959  004DF6  C030  F01D         	movff	test_action@mR+1,fullSpeedAhead@mR+1
  7960  004DFA  ECBB  F02A         	call	_fullSpeedAhead	;wreg free
  7961                           
  7962                           ;test_and_calibration.c: 76:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  7963  004DFE  0EF4               	movlw	244
  7964  004E00  6E32               	movwf	(??_test_action+1)^0,c
  7965  004E02  0E82               	movlw	130
  7966  004E04  6E31               	movwf	??_test_action^0,c
  7967  004E06  0E05               	movlw	5
  7968  004E08                     u6207:
  7969  004E08  2EE8               	decfsz	wreg,f,c
  7970  004E0A  D7FE               	bra	u6207
  7971  004E0C  2E31               	decfsz	??_test_action^0,f,c
  7972  004E0E  D7FC               	bra	u6207
  7973  004E10  2E32               	decfsz	(??_test_action+1)^0,f,c
  7974  004E12  D7FA               	bra	u6207
  7975  004E14  F000               	nop	
  7976  004E16                     
  7977                           ;test_and_calibration.c: 77:     stop(mL,mR);
  7978  004E16  C02D  F01A         	movff	test_action@mL,stop@mL
  7979  004E1A  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7980  004E1E  C02F  F01C         	movff	test_action@mR,stop@mR
  7981  004E22  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7982  004E26  EC7F  F02B         	call	_stop	;wreg free
  7983  004E2A  0012               	return		;funcret
  7984  004E2C                     __end_of_test_action:
  7985                           	callstack 0
  7986                           
  7987 ;; *************** function _turn45 *****************
  7988 ;; Defined at:
  7989 ;;		line 88 in file "dc_motor.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7992 ;;		 -> main@motorL(9), 
  7993 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7994 ;;		 -> main@motorR(9), 
  7995 ;;  turn_time       1   35[COMRAM] unsigned char 
  7996 ;;  direction       1   36[COMRAM] unsigned char 
  7997 ;; Auto vars:     Size  Location     Type
  7998 ;;  i               2   41[COMRAM] unsigned int 
  7999 ;;  i               2   39[COMRAM] unsigned int 
  8000 ;;  i               1   43[COMRAM] unsigned char 
  8001 ;; Return value:  Size  Location     Type
  8002 ;;                  1    wreg      void 
  8003 ;; Registers used:
  8004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8005 ;; Tracked objects:
  8006 ;;		On entry : 0/0
  8007 ;;		On exit  : 0/0
  8008 ;;		Unchanged: 0/0
  8009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8010 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8011 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8012 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8013 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8014 ;;Total ram usage:       13 bytes
  8015 ;; Hardware stack levels used: 1
  8016 ;; Hardware stack levels required when called: 4
  8017 ;; This function calls:
  8018 ;;		_setMotorPWM
  8019 ;;		_stop
  8020 ;; This function is called by:
  8021 ;;		_turning_action
  8022 ;;		_goback
  8023 ;;		_test_action
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027                           	psect	text31
  8028  004420                     __ptext31:
  8029                           	callstack 0
  8030  004420                     _turn45:
  8031                           	callstack 25
  8032  004420                     
  8033                           ;dc_motor.c: 88: void turn45(struct DC_motor *mL, struct DC_motor *mR, unsigned char tur
      +                          n_time, unsigned char direction);dc_motor.c: 89: {;dc_motor.c: 91:     unsigned char i =
      +                           0;
  8034  004420  0E00               	movlw	0
  8035  004422  6E2C               	movwf	turn45@i^0,c
  8036                           
  8037                           ;dc_motor.c: 92:     for (i = 0; i < turn_time; i++){
  8038  004424  0E00               	movlw	0
  8039  004426  6E2C               	movwf	turn45@i^0,c
  8040  004428  EFDE  F022         	goto	l4284
  8041  00442C                     l4236:
  8042                           
  8043                           ;dc_motor.c: 93:         mL->direction=1;
  8044  00442C  EE20 F001          	lfsr	2,1
  8045  004430  5020               	movf	turn45@mL^0,w,c
  8046  004432  26D9               	addwf	fsr2l,f,c
  8047  004434  5021               	movf	(turn45@mL+1)^0,w,c
  8048  004436  22DA               	addwfc	fsr2h,f,c
  8049  004438  0E01               	movlw	1
  8050  00443A  6EDF               	movwf	indf2,c
  8051                           
  8052                           ;dc_motor.c: 94:         mR->direction=1;
  8053  00443C  EE20 F001          	lfsr	2,1
  8054  004440  5022               	movf	turn45@mR^0,w,c
  8055  004442  26D9               	addwf	fsr2l,f,c
  8056  004444  5023               	movf	(turn45@mR+1)^0,w,c
  8057  004446  22DA               	addwfc	fsr2h,f,c
  8058  004448  0E01               	movlw	1
  8059  00444A  6EDF               	movwf	indf2,c
  8060  00444C                     
  8061                           ;dc_motor.c: 95:         if (direction == 1){
  8062  00444C  0425               	decf	turn45@direction^0,w,c
  8063  00444E  A4D8               	btfss	status,2,c
  8064  004450  EF2C  F022         	goto	u4241
  8065  004454  EF2E  F022         	goto	u4240
  8066  004458                     u4241:
  8067  004458  EF89  F022         	goto	l4260
  8068  00445C                     u4240:
  8069  00445C  EF4F  F022         	goto	l4250
  8070  004460                     l4242:
  8071                           
  8072                           ;dc_motor.c: 97:                 mR->power += 5;
  8073  004460  C022  FFD9         	movff	turn45@mR,fsr2l
  8074  004464  C023  FFDA         	movff	turn45@mR+1,fsr2h
  8075  004468  0E05               	movlw	5
  8076  00446A  26DF               	addwf	indf2,f,c
  8077                           
  8078                           ;dc_motor.c: 98:                 mL->power = 0;
  8079  00446C  C020  FFD9         	movff	turn45@mL,fsr2l
  8080  004470  C021  FFDA         	movff	turn45@mL+1,fsr2h
  8081  004474  0E00               	movlw	0
  8082  004476  6EDF               	movwf	indf2,c
  8083  004478                     
  8084                           ;dc_motor.c: 99:                 setMotorPWM(mL);
  8085  004478  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  8086  00447C  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  8087  004480  EC9A  F01E         	call	_setMotorPWM	;wreg free
  8088  004484                     
  8089                           ;dc_motor.c: 100:                 setMotorPWM(mR);
  8090  004484  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  8091  004488  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  8092  00448C  EC9A  F01E         	call	_setMotorPWM	;wreg free
  8093  004490                     
  8094                           ;dc_motor.c: 101:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  8095  004490  0ED0               	movlw	208
  8096  004492  6E26               	movwf	??_turn45^0,c
  8097  004494  0ECA               	movlw	202
  8098  004496                     u6217:
  8099  004496  2EE8               	decfsz	wreg,f,c
  8100  004498  D7FE               	bra	u6217
  8101  00449A  2E26               	decfsz	??_turn45^0,f,c
  8102  00449C  D7FC               	bra	u6217
  8103  00449E                     l4250:
  8104                           
  8105                           ;dc_motor.c: 96:             while (mR->power <50){
  8106  00449E  C022  FFD9         	movff	turn45@mR,fsr2l
  8107  0044A2  C023  FFDA         	movff	turn45@mR+1,fsr2h
  8108  0044A6  0E31               	movlw	49
  8109  0044A8  64DF               	cpfsgt	indf2,c
  8110  0044AA  EF59  F022         	goto	u4251
  8111  0044AE  EF5B  F022         	goto	u4250
  8112  0044B2                     u4251:
  8113  0044B2  EF30  F022         	goto	l4242
  8114  0044B6                     u4250:
  8115  0044B6                     
  8116                           ;dc_motor.c: 103:             for(unsigned int i = 0; i<SENSITIVITY + 15; i++){_delay((u
      +                          nsigned long)((1)*(64000000/4000.0)));}
  8117  0044B6  0E00               	movlw	0
  8118  0044B8  6E29               	movwf	(turn45@i_1335+1)^0,c
  8119  0044BA  0E00               	movlw	0
  8120  0044BC  6E28               	movwf	turn45@i_1335^0,c
  8121  0044BE  EF6B  F022         	goto	l271
  8122  0044C2                     l4254:
  8123                           
  8124                           ; BSR set to: 1
  8125  0044C2  0E15               	movlw	21
  8126  0044C4  6E26               	movwf	??_turn45^0,c
  8127  0044C6  0EC6               	movlw	198
  8128  0044C8                     u6227:
  8129  0044C8  2EE8               	decfsz	wreg,f,c
  8130  0044CA  D7FE               	bra	u6227
  8131  0044CC  2E26               	decfsz	??_turn45^0,f,c
  8132  0044CE  D7FC               	bra	u6227
  8133  0044D0  D000               	nop2	
  8134  0044D2  4A28               	infsnz	turn45@i_1335^0,f,c
  8135  0044D4  2A29               	incf	(turn45@i_1335+1)^0,f,c
  8136  0044D6                     l271:
  8137  0044D6  0E0F               	movlw	15
  8138  0044D8  0101               	movlb	1	; () banked
  8139  0044DA  25C2               	addwf	_SENSITIVITY& (0+255),w,b
  8140  0044DC  6E26               	movwf	??_turn45^0,c
  8141  0044DE  0E00               	movlw	0
  8142  0044E0  21C3               	addwfc	(_SENSITIVITY+1)& (0+255),w,b
  8143  0044E2  6E27               	movwf	(??_turn45+1)^0,c
  8144  0044E4  5026               	movf	??_turn45^0,w,c
  8145  0044E6  5C28               	subwf	turn45@i_1335^0,w,c
  8146  0044E8  5027               	movf	(??_turn45+1)^0,w,c
  8147  0044EA  5829               	subwfb	(turn45@i_1335+1)^0,w,c
  8148  0044EC  A0D8               	btfss	status,0,c
  8149  0044EE  EF7B  F022         	goto	u4261
  8150  0044F2  EF7D  F022         	goto	u4260
  8151  0044F6                     u4261:
  8152  0044F6  EF61  F022         	goto	l4254
  8153  0044FA                     u4260:
  8154  0044FA                     l4258:
  8155                           
  8156                           ; BSR set to: 1
  8157                           ;dc_motor.c: 104:             stop(mL,mR);
  8158  0044FA  C020  F01A         	movff	turn45@mL,stop@mL
  8159  0044FE  C021  F01B         	movff	turn45@mL+1,stop@mL+1
  8160  004502  C022  F01C         	movff	turn45@mR,stop@mR
  8161  004506  C023  F01D         	movff	turn45@mR+1,stop@mR+1
  8162  00450A  EC7F  F02B         	call	_stop	;wreg free
  8163                           
  8164                           ;dc_motor.c: 105:         }
  8165  00450E  EFDD  F022         	goto	l4282
  8166  004512                     l4260:
  8167  004512  0E02               	movlw	2
  8168  004514  1825               	xorwf	turn45@direction^0,w,c
  8169  004516  A4D8               	btfss	status,2,c
  8170  004518  EF90  F022         	goto	u4271
  8171  00451C  EF92  F022         	goto	u4270
  8172  004520                     u4271:
  8173  004520  EFDD  F022         	goto	l4282
  8174  004524                     u4270:
  8175  004524  EFB3  F022         	goto	l4272
  8176  004528                     l4264:
  8177                           
  8178                           ;dc_motor.c: 108:                 mL->power += 5;
  8179  004528  C020  FFD9         	movff	turn45@mL,fsr2l
  8180  00452C  C021  FFDA         	movff	turn45@mL+1,fsr2h
  8181  004530  0E05               	movlw	5
  8182  004532  26DF               	addwf	indf2,f,c
  8183                           
  8184                           ;dc_motor.c: 109:                 mR->power = 0;
  8185  004534  C022  FFD9         	movff	turn45@mR,fsr2l
  8186  004538  C023  FFDA         	movff	turn45@mR+1,fsr2h
  8187  00453C  0E00               	movlw	0
  8188  00453E  6EDF               	movwf	indf2,c
  8189  004540                     
  8190                           ;dc_motor.c: 110:                 setMotorPWM(mL);
  8191  004540  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  8192  004544  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  8193  004548  EC9A  F01E         	call	_setMotorPWM	;wreg free
  8194  00454C                     
  8195                           ;dc_motor.c: 111:                 setMotorPWM(mR);
  8196  00454C  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  8197  004550  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  8198  004554  EC9A  F01E         	call	_setMotorPWM	;wreg free
  8199  004558                     
  8200                           ;dc_motor.c: 112:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  8201  004558  0ED0               	movlw	208
  8202  00455A  6E26               	movwf	??_turn45^0,c
  8203  00455C  0ECA               	movlw	202
  8204  00455E                     u6237:
  8205  00455E  2EE8               	decfsz	wreg,f,c
  8206  004560  D7FE               	bra	u6237
  8207  004562  2E26               	decfsz	??_turn45^0,f,c
  8208  004564  D7FC               	bra	u6237
  8209  004566                     l4272:
  8210                           
  8211                           ;dc_motor.c: 107:             while (mL->power <50){
  8212  004566  C020  FFD9         	movff	turn45@mL,fsr2l
  8213  00456A  C021  FFDA         	movff	turn45@mL+1,fsr2h
  8214  00456E  0E31               	movlw	49
  8215  004570  64DF               	cpfsgt	indf2,c
  8216  004572  EFBD  F022         	goto	u4281
  8217  004576  EFBF  F022         	goto	u4280
  8218  00457A                     u4281:
  8219  00457A  EF94  F022         	goto	l4264
  8220  00457E                     u4280:
  8221  00457E                     
  8222                           ;dc_motor.c: 114:             for(unsigned int i = 0; i <SENSITIVITY; i++){_delay((unsig
      +                          ned long)((1)*(64000000/4000.0)));}
  8223  00457E  0E00               	movlw	0
  8224  004580  6E2B               	movwf	(turn45@i_1337+1)^0,c
  8225  004582  0E00               	movlw	0
  8226  004584  6E2A               	movwf	turn45@i_1337^0,c
  8227  004586  EFCF  F022         	goto	l279
  8228  00458A                     l4276:
  8229                           
  8230                           ; BSR set to: 1
  8231  00458A  0E15               	movlw	21
  8232  00458C  6E26               	movwf	??_turn45^0,c
  8233  00458E  0EC6               	movlw	198
  8234  004590                     u6247:
  8235  004590  2EE8               	decfsz	wreg,f,c
  8236  004592  D7FE               	bra	u6247
  8237  004594  2E26               	decfsz	??_turn45^0,f,c
  8238  004596  D7FC               	bra	u6247
  8239  004598  D000               	nop2	
  8240  00459A  4A2A               	infsnz	turn45@i_1337^0,f,c
  8241  00459C  2A2B               	incf	(turn45@i_1337+1)^0,f,c
  8242  00459E                     l279:
  8243  00459E  0101               	movlb	1	; () banked
  8244  0045A0  51C2               	movf	_SENSITIVITY& (0+255),w,b
  8245  0045A2  5C2A               	subwf	turn45@i_1337^0,w,c
  8246  0045A4  51C3               	movf	(_SENSITIVITY+1)& (0+255),w,b
  8247  0045A6  582B               	subwfb	(turn45@i_1337+1)^0,w,c
  8248  0045A8  A0D8               	btfss	status,0,c
  8249  0045AA  EFD9  F022         	goto	u4291
  8250  0045AE  EFDB  F022         	goto	u4290
  8251  0045B2                     u4291:
  8252  0045B2  EFC5  F022         	goto	l4276
  8253  0045B6                     u4290:
  8254  0045B6  EF7D  F022         	goto	l4258
  8255  0045BA                     l4282:
  8256                           
  8257                           ;dc_motor.c: 117:     }
  8258  0045BA  2A2C               	incf	turn45@i^0,f,c
  8259  0045BC                     l4284:
  8260  0045BC  5024               	movf	turn45@turn_time^0,w,c
  8261  0045BE  5C2C               	subwf	turn45@i^0,w,c
  8262  0045C0  A0D8               	btfss	status,0,c
  8263  0045C2  EFE5  F022         	goto	u4301
  8264  0045C6  EFE7  F022         	goto	u4300
  8265  0045CA                     u4301:
  8266  0045CA  EF16  F022         	goto	l4236
  8267  0045CE                     u4300:
  8268  0045CE  0012               	return		;funcret
  8269  0045D0                     __end_of_turn45:
  8270                           	callstack 0
  8271                           
  8272 ;; *************** function _stop *****************
  8273 ;; Defined at:
  8274 ;;		line 76 in file "dc_motor.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8277 ;;		 -> main@motorL(9), 
  8278 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8279 ;;		 -> main@motorR(9), 
  8280 ;; Auto vars:     Size  Location     Type
  8281 ;;		None
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  1    wreg      void 
  8284 ;; Registers used:
  8285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8286 ;; Tracked objects:
  8287 ;;		On entry : 0/0
  8288 ;;		On exit  : 0/0
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8294 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8295 ;;Total ram usage:        6 bytes
  8296 ;; Hardware stack levels used: 1
  8297 ;; Hardware stack levels required when called: 3
  8298 ;; This function calls:
  8299 ;;		_setMotorPWM
  8300 ;; This function is called by:
  8301 ;;		_turn45
  8302 ;;		_fullSpeedBack
  8303 ;;		_main
  8304 ;;		_short_burst
  8305 ;;		_goback
  8306 ;;		_test_action
  8307 ;;		_test_function
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           	psect	text32
  8312  0056FE                     __ptext32:
  8313                           	callstack 0
  8314  0056FE                     _stop:
  8315                           	callstack 25
  8316  0056FE                     
  8317                           ;dc_motor.c: 76: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 77: {;d
      +                          c_motor.c: 78:     while (mL->power >0 || mR->power >0){
  8318  0056FE  EFB9  F02B         	goto	l4006
  8319  005702                     l3992:
  8320                           
  8321                           ;dc_motor.c: 79:         if (mL->power !=0){mL->power -= 2;}
  8322  005702  C01A  FFD9         	movff	stop@mL,fsr2l
  8323  005706  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8324  00570A  50DF               	movf	indf2,w,c
  8325  00570C  B4D8               	btfsc	status,2,c
  8326  00570E  EF8B  F02B         	goto	u3921
  8327  005712  EF8D  F02B         	goto	u3920
  8328  005716                     u3921:
  8329  005716  EF93  F02B         	goto	l3996
  8330  00571A                     u3920:
  8331  00571A  C01A  FFD9         	movff	stop@mL,fsr2l
  8332  00571E  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8333  005722  0E02               	movlw	2
  8334  005724  5EDF               	subwf	indf2,f,c
  8335  005726                     l3996:
  8336                           
  8337                           ;dc_motor.c: 80:         if (mR->power !=0){mR->power -= 2;}
  8338  005726  C01C  FFD9         	movff	stop@mR,fsr2l
  8339  00572A  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8340  00572E  50DF               	movf	indf2,w,c
  8341  005730  B4D8               	btfsc	status,2,c
  8342  005732  EF9D  F02B         	goto	u3931
  8343  005736  EF9F  F02B         	goto	u3930
  8344  00573A                     u3931:
  8345  00573A  EFA5  F02B         	goto	l4000
  8346  00573E                     u3930:
  8347  00573E  C01C  FFD9         	movff	stop@mR,fsr2l
  8348  005742  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8349  005746  0E02               	movlw	2
  8350  005748  5EDF               	subwf	indf2,f,c
  8351  00574A                     l4000:
  8352                           
  8353                           ;dc_motor.c: 81:         setMotorPWM(mL);
  8354  00574A  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  8355  00574E  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  8356  005752  EC9A  F01E         	call	_setMotorPWM	;wreg free
  8357  005756                     
  8358                           ;dc_motor.c: 82:         setMotorPWM(mR);
  8359  005756  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  8360  00575A  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  8361  00575E  EC9A  F01E         	call	_setMotorPWM	;wreg free
  8362  005762                     
  8363                           ;dc_motor.c: 83:         _delay((unsigned long)((5)*(64000000/4000.0)));
  8364  005762  0E68               	movlw	104
  8365  005764  6E1E               	movwf	??_stop^0,c
  8366  005766  0EE4               	movlw	228
  8367  005768                     u6257:
  8368  005768  2EE8               	decfsz	wreg,f,c
  8369  00576A  D7FE               	bra	u6257
  8370  00576C  2E1E               	decfsz	??_stop^0,f,c
  8371  00576E  D7FC               	bra	u6257
  8372  005770  D000               	nop2	
  8373  005772                     l4006:
  8374                           
  8375                           ;dc_motor.c: 78:     while (mL->power >0 || mR->power >0){
  8376  005772  C01A  FFD9         	movff	stop@mL,fsr2l
  8377  005776  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8378  00577A  50DF               	movf	indf2,w,c
  8379  00577C  A4D8               	btfss	status,2,c
  8380  00577E  EFC3  F02B         	goto	u3941
  8381  005782  EFC5  F02B         	goto	u3940
  8382  005786                     u3941:
  8383  005786  EF81  F02B         	goto	l3992
  8384  00578A                     u3940:
  8385  00578A  C01C  FFD9         	movff	stop@mR,fsr2l
  8386  00578E  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8387  005792  50DF               	movf	indf2,w,c
  8388  005794  A4D8               	btfss	status,2,c
  8389  005796  EFCF  F02B         	goto	u3951
  8390  00579A  EFD1  F02B         	goto	u3950
  8391  00579E                     u3951:
  8392  00579E  EF81  F02B         	goto	l3992
  8393  0057A2                     u3950:
  8394  0057A2                     
  8395                           ;dc_motor.c: 85:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8396  0057A2  0E29               	movlw	41
  8397  0057A4  6E1F               	movwf	(??_stop+1)^0,c
  8398  0057A6  0E96               	movlw	150
  8399  0057A8  6E1E               	movwf	??_stop^0,c
  8400  0057AA  0E7F               	movlw	127
  8401  0057AC                     u6267:
  8402  0057AC  2EE8               	decfsz	wreg,f,c
  8403  0057AE  D7FE               	bra	u6267
  8404  0057B0  2E1E               	decfsz	??_stop^0,f,c
  8405  0057B2  D7FC               	bra	u6267
  8406  0057B4  2E1F               	decfsz	(??_stop+1)^0,f,c
  8407  0057B6  D7FA               	bra	u6267
  8408  0057B8  F000               	nop	
  8409  0057BA  0012               	return		;funcret
  8410  0057BC                     __end_of_stop:
  8411                           	callstack 0
  8412                           
  8413 ;; *************** function _fullSpeedAhead *****************
  8414 ;; Defined at:
  8415 ;;		line 121 in file "dc_motor.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8418 ;;		 -> main@motorL(9), 
  8419 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8420 ;;		 -> main@motorR(9), 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;		None
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      void 
  8425 ;; Registers used:
  8426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8435 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8436 ;;Total ram usage:        5 bytes
  8437 ;; Hardware stack levels used: 1
  8438 ;; Hardware stack levels required when called: 3
  8439 ;; This function calls:
  8440 ;;		_setMotorPWM
  8441 ;; This function is called by:
  8442 ;;		_main
  8443 ;;		_short_burst
  8444 ;;		_goback
  8445 ;;		_test_action
  8446 ;;		_test_function
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450                           	psect	text33
  8451  005576                     __ptext33:
  8452                           	callstack 0
  8453  005576                     _fullSpeedAhead:
  8454                           	callstack 25
  8455  005576                     
  8456                           ;dc_motor.c: 121: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 122: {;dc_motor.c: 123:     mL->direction=1;
  8457  005576  EE20 F001          	lfsr	2,1
  8458  00557A  501A               	movf	fullSpeedAhead@mL^0,w,c
  8459  00557C  26D9               	addwf	fsr2l,f,c
  8460  00557E  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8461  005580  22DA               	addwfc	fsr2h,f,c
  8462  005582  0E01               	movlw	1
  8463  005584  6EDF               	movwf	indf2,c
  8464                           
  8465                           ;dc_motor.c: 124:     mR->direction=1;
  8466  005586  EE20 F001          	lfsr	2,1
  8467  00558A  501C               	movf	fullSpeedAhead@mR^0,w,c
  8468  00558C  26D9               	addwf	fsr2l,f,c
  8469  00558E  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8470  005590  22DA               	addwfc	fsr2h,f,c
  8471  005592  0E01               	movlw	1
  8472  005594  6EDF               	movwf	indf2,c
  8473                           
  8474                           ;dc_motor.c: 125:     while (mL->power<30 || mR->power<30){
  8475  005596  EF04  F02B         	goto	l4302
  8476  00559A                     l4288:
  8477                           
  8478                           ;dc_motor.c: 126:         if (mL->power<30) {mL->power += 2;}
  8479  00559A  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8480  00559E  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8481  0055A2  0E1E               	movlw	30
  8482  0055A4  60DF               	cpfslt	indf2,c
  8483  0055A6  EFD7  F02A         	goto	u4311
  8484  0055AA  EFD9  F02A         	goto	u4310
  8485  0055AE                     u4311:
  8486  0055AE  EFDF  F02A         	goto	l4292
  8487  0055B2                     u4310:
  8488  0055B2  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8489  0055B6  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8490  0055BA  0E02               	movlw	2
  8491  0055BC  26DF               	addwf	indf2,f,c
  8492  0055BE                     l4292:
  8493                           
  8494                           ;dc_motor.c: 127:         if (mR->power<30) {mR->power += 2;}
  8495  0055BE  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8496  0055C2  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8497  0055C6  0E1E               	movlw	30
  8498  0055C8  60DF               	cpfslt	indf2,c
  8499  0055CA  EFE9  F02A         	goto	u4321
  8500  0055CE  EFEB  F02A         	goto	u4320
  8501  0055D2                     u4321:
  8502  0055D2  EFF1  F02A         	goto	l4296
  8503  0055D6                     u4320:
  8504  0055D6  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8505  0055DA  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8506  0055DE  0E02               	movlw	2
  8507  0055E0  26DF               	addwf	indf2,f,c
  8508  0055E2                     l4296:
  8509                           
  8510                           ;dc_motor.c: 128:         setMotorPWM(mL);
  8511  0055E2  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8512  0055E6  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8513  0055EA  EC9A  F01E         	call	_setMotorPWM	;wreg free
  8514  0055EE                     
  8515                           ;dc_motor.c: 129:         setMotorPWM(mR);
  8516  0055EE  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8517  0055F2  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8518  0055F6  EC9A  F01E         	call	_setMotorPWM	;wreg free
  8519  0055FA                     
  8520                           ;dc_motor.c: 130:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8521  0055FA  0ED0               	movlw	208
  8522  0055FC  6E1E               	movwf	??_fullSpeedAhead^0,c
  8523  0055FE  0ECA               	movlw	202
  8524  005600                     u6277:
  8525  005600  2EE8               	decfsz	wreg,f,c
  8526  005602  D7FE               	bra	u6277
  8527  005604  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
  8528  005606  D7FC               	bra	u6277
  8529  005608                     l4302:
  8530                           
  8531                           ;dc_motor.c: 125:     while (mL->power<30 || mR->power<30){
  8532  005608  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8533  00560C  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8534  005610  0E1D               	movlw	29
  8535  005612  64DF               	cpfsgt	indf2,c
  8536  005614  EF0E  F02B         	goto	u4331
  8537  005618  EF10  F02B         	goto	u4330
  8538  00561C                     u4331:
  8539  00561C  EFCD  F02A         	goto	l4288
  8540  005620                     u4330:
  8541  005620  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8542  005624  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8543  005628  0E1D               	movlw	29
  8544  00562A  64DF               	cpfsgt	indf2,c
  8545  00562C  EF1A  F02B         	goto	u4341
  8546  005630  EF1C  F02B         	goto	u4340
  8547  005634                     u4341:
  8548  005634  EFCD  F02A         	goto	l4288
  8549  005638                     u4340:
  8550  005638  0012               	return		;funcret
  8551  00563A                     __end_of_fullSpeedAhead:
  8552                           	callstack 0
  8553                           
  8554 ;; *************** function _setMotorPWM *****************
  8555 ;; Defined at:
  8556 ;;		line 56 in file "dc_motor.c"
  8557 ;; Parameters:    Size  Location     Type
  8558 ;;  m               2   14[COMRAM] PTR struct DC_motor
  8559 ;;		 -> main@motorR(9), main@motorL(9), 
  8560 ;; Auto vars:     Size  Location     Type
  8561 ;;  PWMduty         2   23[COMRAM] int 
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  1    wreg      void 
  8564 ;; Registers used:
  8565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/0
  8568 ;;		On exit  : 0/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8572 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8573 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8574 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8575 ;;Total ram usage:       11 bytes
  8576 ;; Hardware stack levels used: 1
  8577 ;; Hardware stack levels required when called: 2
  8578 ;; This function calls:
  8579 ;;		___awdiv
  8580 ;;		___wmul
  8581 ;; This function is called by:
  8582 ;;		_stop
  8583 ;;		_turn45
  8584 ;;		_fullSpeedAhead
  8585 ;;		_fullSpeedBack
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text34
  8590  003D34                     __ptext34:
  8591                           	callstack 0
  8592  003D34                     _setMotorPWM:
  8593                           	callstack 25
  8594  003D34                     
  8595                           ;dc_motor.c: 56: void setMotorPWM(struct DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58: 
      +                           int PWMduty;;dc_motor.c: 59:  if (m->direction){
  8596  003D34  EE20 F001          	lfsr	2,1
  8597  003D38  500F               	movf	setMotorPWM@m^0,w,c
  8598  003D3A  26D9               	addwf	fsr2l,f,c
  8599  003D3C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8600  003D3E  22DA               	addwfc	fsr2h,f,c
  8601  003D40  50DF               	movf	indf2,w,c
  8602  003D42  B4D8               	btfsc	status,2,c
  8603  003D44  EFA6  F01E         	goto	u3431
  8604  003D48  EFA8  F01E         	goto	u3430
  8605  003D4C                     u3431:
  8606  003D4C  EFD9  F01E         	goto	l3706
  8607  003D50                     u3430:
  8608  003D50                     
  8609                           ;dc_motor.c: 61:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  8610  003D50  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8611  003D54  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8612  003D58  50DF               	movf	indf2,w,c
  8613  003D5A  6E11               	movwf	??_setMotorPWM^0,c
  8614  003D5C  5011               	movf	??_setMotorPWM^0,w,c
  8615  003D5E  6E01               	movwf	___wmul@multiplier^0,c
  8616  003D60  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8617  003D62  EE20 F007          	lfsr	2,7
  8618  003D66  500F               	movf	setMotorPWM@m^0,w,c
  8619  003D68  26D9               	addwf	fsr2l,f,c
  8620  003D6A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8621  003D6C  22DA               	addwfc	fsr2h,f,c
  8622  003D6E  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8623  003D72  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8624  003D76  EC64  F02F         	call	___wmul	;wreg free
  8625  003D7A  C001  F007         	movff	?___wmul,___awdiv@dividend
  8626  003D7E  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8627  003D82  0E00               	movlw	0
  8628  003D84  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8629  003D86  0E64               	movlw	100
  8630  003D88  6E09               	movwf	___awdiv@divisor^0,c
  8631  003D8A  EC1D  F02B         	call	___awdiv	;wreg free
  8632  003D8E  EE20 F007          	lfsr	2,7
  8633  003D92  500F               	movf	setMotorPWM@m^0,w,c
  8634  003D94  26D9               	addwf	fsr2l,f,c
  8635  003D96  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8636  003D98  22DA               	addwfc	fsr2h,f,c
  8637  003D9A  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  8638  003D9E  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  8639  003DA2  5007               	movf	?___awdiv^0,w,c
  8640  003DA4  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  8641  003DA6  6E18               	movwf	setMotorPWM@PWMduty^0,c
  8642  003DA8  5008               	movf	(?___awdiv+1)^0,w,c
  8643  003DAA  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  8644  003DAC  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  8645                           
  8646                           ;dc_motor.c: 62:  }
  8647  003DAE  EFFC  F01E         	goto	l3708
  8648  003DB2                     l3706:
  8649                           
  8650                           ;dc_motor.c: 65:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  8651  003DB2  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8652  003DB6  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8653  003DBA  50DF               	movf	indf2,w,c
  8654  003DBC  6E11               	movwf	??_setMotorPWM^0,c
  8655  003DBE  5011               	movf	??_setMotorPWM^0,w,c
  8656  003DC0  6E01               	movwf	___wmul@multiplier^0,c
  8657  003DC2  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8658  003DC4  EE20 F007          	lfsr	2,7
  8659  003DC8  500F               	movf	setMotorPWM@m^0,w,c
  8660  003DCA  26D9               	addwf	fsr2l,f,c
  8661  003DCC  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8662  003DCE  22DA               	addwfc	fsr2h,f,c
  8663  003DD0  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8664  003DD4  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8665  003DD8  EC64  F02F         	call	___wmul	;wreg free
  8666  003DDC  C001  F007         	movff	?___wmul,___awdiv@dividend
  8667  003DE0  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8668  003DE4  0E00               	movlw	0
  8669  003DE6  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8670  003DE8  0E64               	movlw	100
  8671  003DEA  6E09               	movwf	___awdiv@divisor^0,c
  8672  003DEC  EC1D  F02B         	call	___awdiv	;wreg free
  8673  003DF0  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  8674  003DF4  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  8675  003DF8                     l3708:
  8676                           
  8677                           ;dc_motor.c: 67:  *(m->dutyHighByte) = PWMduty;
  8678  003DF8  EE20 F002          	lfsr	2,2
  8679  003DFC  500F               	movf	setMotorPWM@m^0,w,c
  8680  003DFE  26D9               	addwf	fsr2l,f,c
  8681  003E00  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8682  003E02  22DA               	addwfc	fsr2h,f,c
  8683  003E04  CFDE F011          	movff	postinc2,??_setMotorPWM
  8684  003E08  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8685  003E0C  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8686  003E10  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8687  003E14  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  8688  003E18                     
  8689                           ;dc_motor.c: 68:  if (m->direction){
  8690  003E18  EE20 F001          	lfsr	2,1
  8691  003E1C  500F               	movf	setMotorPWM@m^0,w,c
  8692  003E1E  26D9               	addwf	fsr2l,f,c
  8693  003E20  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8694  003E22  22DA               	addwfc	fsr2h,f,c
  8695  003E24  50DF               	movf	indf2,w,c
  8696  003E26  B4D8               	btfsc	status,2,c
  8697  003E28  EF18  F01F         	goto	u3441
  8698  003E2C  EF1A  F01F         	goto	u3440
  8699  003E30                     u3441:
  8700  003E30  EF4F  F01F         	goto	l3714
  8701  003E34                     u3440:
  8702  003E34                     
  8703                           ;dc_motor.c: 69:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  8704  003E34  EE20 F004          	lfsr	2,4
  8705  003E38  500F               	movf	setMotorPWM@m^0,w,c
  8706  003E3A  26D9               	addwf	fsr2l,f,c
  8707  003E3C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8708  003E3E  22DA               	addwfc	fsr2h,f,c
  8709  003E40  CFDE F011          	movff	postinc2,??_setMotorPWM
  8710  003E44  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8711  003E48  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8712  003E4C  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8713  003E50  EE10 F004          	lfsr	1,4
  8714  003E54  500F               	movf	setMotorPWM@m^0,w,c
  8715  003E56  26E1               	addwf	fsr1l,f,c
  8716  003E58  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8717  003E5A  22E2               	addwfc	fsr1h,f,c
  8718  003E5C  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8719  003E60  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8720  003E64  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8721  003E68  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8722  003E6C  50E7               	movf	indf1,w,c
  8723  003E6E  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8724  003E70  EE10 F006          	lfsr	1,6
  8725  003E74  500F               	movf	setMotorPWM@m^0,w,c
  8726  003E76  26E1               	addwf	fsr1l,f,c
  8727  003E78  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8728  003E7A  22E2               	addwfc	fsr1h,f,c
  8729  003E7C  50E7               	movf	indf1,w,c
  8730  003E7E  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8731  003E80  0E01               	movlw	1
  8732  003E82  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8733  003E84  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8734  003E86  EF47  F01F         	goto	u3454
  8735  003E8A                     u3455:
  8736  003E8A  90D8               	bcf	status,0,c
  8737  003E8C  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8738  003E8E                     u3454:
  8739  003E8E  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8740  003E90  EF45  F01F         	goto	u3455
  8741  003E94  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8742  003E96  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  8743  003E98  6EDF               	movwf	indf2,c
  8744                           
  8745                           ;dc_motor.c: 70:  } else {
  8746  003E9A  EF83  F01F         	goto	l254
  8747  003E9E                     l3714:
  8748                           
  8749                           ;dc_motor.c: 71:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  8750  003E9E  EE20 F004          	lfsr	2,4
  8751  003EA2  500F               	movf	setMotorPWM@m^0,w,c
  8752  003EA4  26D9               	addwf	fsr2l,f,c
  8753  003EA6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8754  003EA8  22DA               	addwfc	fsr2h,f,c
  8755  003EAA  CFDE F011          	movff	postinc2,??_setMotorPWM
  8756  003EAE  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8757  003EB2  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8758  003EB6  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8759  003EBA  EE10 F004          	lfsr	1,4
  8760  003EBE  500F               	movf	setMotorPWM@m^0,w,c
  8761  003EC0  26E1               	addwf	fsr1l,f,c
  8762  003EC2  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8763  003EC4  22E2               	addwfc	fsr1h,f,c
  8764  003EC6  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8765  003ECA  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8766  003ECE  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8767  003ED2  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8768  003ED6  50E7               	movf	indf1,w,c
  8769  003ED8  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8770  003EDA  EE10 F006          	lfsr	1,6
  8771  003EDE  500F               	movf	setMotorPWM@m^0,w,c
  8772  003EE0  26E1               	addwf	fsr1l,f,c
  8773  003EE2  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8774  003EE4  22E2               	addwfc	fsr1h,f,c
  8775  003EE6  50E7               	movf	indf1,w,c
  8776  003EE8  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8777  003EEA  0E01               	movlw	1
  8778  003EEC  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8779  003EEE  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8780  003EF0  EF7C  F01F         	goto	u3464
  8781  003EF4                     u3465:
  8782  003EF4  90D8               	bcf	status,0,c
  8783  003EF6  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8784  003EF8                     u3464:
  8785  003EF8  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8786  003EFA  EF7A  F01F         	goto	u3465
  8787  003EFE  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8788  003F00  0AFF               	xorlw	255
  8789  003F02  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  8790  003F04  6EDF               	movwf	indf2,c
  8791  003F06                     l254:
  8792  003F06  0012               	return		;funcret
  8793  003F08                     __end_of_setMotorPWM:
  8794                           	callstack 0
  8795                           
  8796 ;; *************** function ___wmul *****************
  8797 ;; Defined at:
  8798 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  multiplier      2    0[COMRAM] unsigned int 
  8801 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;  product         2    4[COMRAM] unsigned int 
  8804 ;; Return value:  Size  Location     Type
  8805 ;;                  2    0[COMRAM] unsigned int 
  8806 ;; Registers used:
  8807 ;;		wreg, status,2, status,0, prodl, prodh
  8808 ;; Tracked objects:
  8809 ;;		On entry : 0/0
  8810 ;;		On exit  : 0/0
  8811 ;;		Unchanged: 0/0
  8812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8814 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8816 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8817 ;;Total ram usage:        6 bytes
  8818 ;; Hardware stack levels used: 1
  8819 ;; Hardware stack levels required when called: 1
  8820 ;; This function calls:
  8821 ;;		Nothing
  8822 ;; This function is called by:
  8823 ;;		_setMotorPWM
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text35
  8828  005EC8                     __ptext35:
  8829                           	callstack 0
  8830  005EC8                     ___wmul:
  8831                           	callstack 25
  8832  005EC8  5001               	movf	___wmul@multiplier^0,w,c
  8833  005ECA  0203               	mulwf	___wmul@multiplicand^0,c
  8834  005ECC  CFF3 F005          	movff	prodl,___wmul@product
  8835  005ED0  CFF4 F006          	movff	prodh,___wmul@product+1
  8836  005ED4  5001               	movf	___wmul@multiplier^0,w,c
  8837  005ED6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8838  005ED8  50F3               	movf	243,w,c
  8839  005EDA  2606               	addwf	(___wmul@product+1)^0,f,c
  8840  005EDC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8841  005EDE  0203               	mulwf	___wmul@multiplicand^0,c
  8842  005EE0  50F3               	movf	243,w,c
  8843  005EE2  2606               	addwf	(___wmul@product+1)^0,f,c
  8844  005EE4  C005  F001         	movff	___wmul@product,?___wmul
  8845  005EE8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8846  005EEC  0012               	return		;funcret
  8847  005EEE                     __end_of___wmul:
  8848                           	callstack 0
  8849                           
  8850 ;; *************** function ___awdiv *****************
  8851 ;; Defined at:
  8852 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
  8853 ;; Parameters:    Size  Location     Type
  8854 ;;  dividend        2    6[COMRAM] int 
  8855 ;;  divisor         2    8[COMRAM] int 
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;  quotient        2   12[COMRAM] int 
  8858 ;;  sign            1   11[COMRAM] unsigned char 
  8859 ;;  counter         1   10[COMRAM] unsigned char 
  8860 ;; Return value:  Size  Location     Type
  8861 ;;                  2    6[COMRAM] int 
  8862 ;; Registers used:
  8863 ;;		wreg, status,2, status,0
  8864 ;; Tracked objects:
  8865 ;;		On entry : 0/0
  8866 ;;		On exit  : 0/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8869 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8870 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8872 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8873 ;;Total ram usage:        8 bytes
  8874 ;; Hardware stack levels used: 1
  8875 ;; Hardware stack levels required when called: 1
  8876 ;; This function calls:
  8877 ;;		Nothing
  8878 ;; This function is called by:
  8879 ;;		_setMotorPWM
  8880 ;; This function uses a non-reentrant model
  8881 ;;
  8882                           
  8883                           	psect	text36
  8884  00563A                     __ptext36:
  8885                           	callstack 0
  8886  00563A                     ___awdiv:
  8887                           	callstack 25
  8888  00563A  0E00               	movlw	0
  8889  00563C  6E0C               	movwf	___awdiv@sign^0,c
  8890  00563E  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  8891  005640  EF26  F02B         	goto	u3200
  8892  005644  EF24  F02B         	goto	u3201
  8893  005648                     u3201:
  8894  005648  EF2C  F02B         	goto	l3600
  8895  00564C                     u3200:
  8896  00564C  6C09               	negf	___awdiv@divisor^0,c
  8897  00564E  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  8898  005650  B0D8               	btfsc	status,0,c
  8899  005652  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  8900  005654  0E01               	movlw	1
  8901  005656  6E0C               	movwf	___awdiv@sign^0,c
  8902  005658                     l3600:
  8903  005658  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  8904  00565A  EF33  F02B         	goto	u3210
  8905  00565E  EF31  F02B         	goto	u3211
  8906  005662                     u3211:
  8907  005662  EF39  F02B         	goto	l3606
  8908  005666                     u3210:
  8909  005666  6C07               	negf	___awdiv@dividend^0,c
  8910  005668  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  8911  00566A  B0D8               	btfsc	status,0,c
  8912  00566C  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  8913  00566E  0E01               	movlw	1
  8914  005670  1A0C               	xorwf	___awdiv@sign^0,f,c
  8915  005672                     l3606:
  8916  005672  0E00               	movlw	0
  8917  005674  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  8918  005676  0E00               	movlw	0
  8919  005678  6E0D               	movwf	___awdiv@quotient^0,c
  8920  00567A  5009               	movf	___awdiv@divisor^0,w,c
  8921  00567C  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  8922  00567E  B4D8               	btfsc	status,2,c
  8923  005680  EF44  F02B         	goto	u3221
  8924  005684  EF46  F02B         	goto	u3220
  8925  005688                     u3221:
  8926  005688  EF6E  F02B         	goto	l3628
  8927  00568C                     u3220:
  8928  00568C  0E01               	movlw	1
  8929  00568E  6E0B               	movwf	___awdiv@counter^0,c
  8930  005690  EF4E  F02B         	goto	l3614
  8931  005694                     l3612:
  8932  005694  90D8               	bcf	status,0,c
  8933  005696  3609               	rlcf	___awdiv@divisor^0,f,c
  8934  005698  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  8935  00569A  2A0B               	incf	___awdiv@counter^0,f,c
  8936  00569C                     l3614:
  8937  00569C  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  8938  00569E  EF53  F02B         	goto	u3231
  8939  0056A2  EF55  F02B         	goto	u3230
  8940  0056A6                     u3231:
  8941  0056A6  EF4A  F02B         	goto	l3612
  8942  0056AA                     u3230:
  8943  0056AA                     l3616:
  8944  0056AA  90D8               	bcf	status,0,c
  8945  0056AC  360D               	rlcf	___awdiv@quotient^0,f,c
  8946  0056AE  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  8947  0056B0  5009               	movf	___awdiv@divisor^0,w,c
  8948  0056B2  5C07               	subwf	___awdiv@dividend^0,w,c
  8949  0056B4  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8950  0056B6  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  8951  0056B8  A0D8               	btfss	status,0,c
  8952  0056BA  EF61  F02B         	goto	u3241
  8953  0056BE  EF63  F02B         	goto	u3240
  8954  0056C2                     u3241:
  8955  0056C2  EF68  F02B         	goto	l3624
  8956  0056C6                     u3240:
  8957  0056C6  5009               	movf	___awdiv@divisor^0,w,c
  8958  0056C8  5E07               	subwf	___awdiv@dividend^0,f,c
  8959  0056CA  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8960  0056CC  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  8961  0056CE  800D               	bsf	___awdiv@quotient^0,0,c
  8962  0056D0                     l3624:
  8963  0056D0  90D8               	bcf	status,0,c
  8964  0056D2  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  8965  0056D4  3209               	rrcf	___awdiv@divisor^0,f,c
  8966  0056D6  2E0B               	decfsz	___awdiv@counter^0,f,c
  8967  0056D8  EF55  F02B         	goto	l3616
  8968  0056DC                     l3628:
  8969  0056DC  500C               	movf	___awdiv@sign^0,w,c
  8970  0056DE  B4D8               	btfsc	status,2,c
  8971  0056E0  EF74  F02B         	goto	u3251
  8972  0056E4  EF76  F02B         	goto	u3250
  8973  0056E8                     u3251:
  8974  0056E8  EF7A  F02B         	goto	l3632
  8975  0056EC                     u3250:
  8976  0056EC  6C0D               	negf	___awdiv@quotient^0,c
  8977  0056EE  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  8978  0056F0  B0D8               	btfsc	status,0,c
  8979  0056F2  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  8980  0056F4                     l3632:
  8981  0056F4  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  8982  0056F8  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  8983  0056FC  0012               	return		;funcret
  8984  0056FE                     __end_of___awdiv:
  8985                           	callstack 0
  8986                           
  8987 ;; *************** function _calibrate_white *****************
  8988 ;; Defined at:
  8989 ;;		line 238 in file "color.c"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;  w               2   11[COMRAM] PTR struct white_card
  8992 ;;		 -> main@white(28), 
  8993 ;; Auto vars:     Size  Location     Type
  8994 ;;		None
  8995 ;; Return value:  Size  Location     Type
  8996 ;;                  1    wreg      void 
  8997 ;; Registers used:
  8998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8999 ;; Tracked objects:
  9000 ;;		On entry : 0/0
  9001 ;;		On exit  : 0/0
  9002 ;;		Unchanged: 0/0
  9003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9006 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9007 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9008 ;;Total ram usage:        4 bytes
  9009 ;; Hardware stack levels used: 1
  9010 ;; Hardware stack levels required when called: 4
  9011 ;; This function calls:
  9012 ;;		_LED_B
  9013 ;;		_LED_C
  9014 ;;		_LED_G
  9015 ;;		_LED_OFF
  9016 ;;		_LED_R
  9017 ;;		_color_read_Blue
  9018 ;;		_color_read_Clear
  9019 ;;		_color_read_Green
  9020 ;;		_color_read_Red
  9021 ;;		_toggle_light
  9022 ;; This function is called by:
  9023 ;;		_setup
  9024 ;;		_test_function
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           	psect	text37
  9029  003B2A                     __ptext37:
  9030                           	callstack 0
  9031  003B2A                     _calibrate_white:
  9032                           	callstack 25
  9033  003B2A                     
  9034                           ;color.c: 238: void calibrate_white(struct white_card *w);color.c: 239: {;color.c: 240: 
      +                              LED_OFF();
  9035  003B2A  EC87  F02F         	call	_LED_OFF	;wreg free
  9036  003B2E                     
  9037                           ;color.c: 241:     toggle_light(1,2);
  9038  003B2E  0E02               	movlw	2
  9039  003B30  6E01               	movwf	toggle_light@toggletime^0,c
  9040  003B32  0E01               	movlw	1
  9041  003B34  EC3A  F01B         	call	_toggle_light
  9042  003B38                     
  9043                           ;color.c: 242:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9044  003B38  0E29               	movlw	41
  9045  003B3A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9046  003B3C  0E96               	movlw	150
  9047  003B3E  6E0E               	movwf	??_calibrate_white^0,c
  9048  003B40  0E7F               	movlw	127
  9049  003B42                     u6287:
  9050  003B42  2EE8               	decfsz	wreg,f,c
  9051  003B44  D7FE               	bra	u6287
  9052  003B46  2E0E               	decfsz	??_calibrate_white^0,f,c
  9053  003B48  D7FC               	bra	u6287
  9054  003B4A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9055  003B4C  D7FA               	bra	u6287
  9056  003B4E  F000               	nop	
  9057  003B50                     
  9058                           ;color.c: 244:     LED_R();
  9059  003B50  EC77  F02F         	call	_LED_R	;wreg free
  9060  003B54                     
  9061                           ;color.c: 245:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9062  003B54  0E09               	movlw	9
  9063  003B56  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9064  003B58  0E1E               	movlw	30
  9065  003B5A  6E0E               	movwf	??_calibrate_white^0,c
  9066  003B5C  0EE4               	movlw	228
  9067  003B5E                     u6297:
  9068  003B5E  2EE8               	decfsz	wreg,f,c
  9069  003B60  D7FE               	bra	u6297
  9070  003B62  2E0E               	decfsz	??_calibrate_white^0,f,c
  9071  003B64  D7FC               	bra	u6297
  9072  003B66  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9073  003B68  D7FA               	bra	u6297
  9074  003B6A  D000               	nop2	
  9075  003B6C                     
  9076                           ;color.c: 246:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  9077  003B6C  ECE4  F02C         	call	_color_read_Red	;wreg free
  9078  003B70  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  9079  003B74  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  9080  003B78  C005  FFDE         	movff	?_color_read_Red,postinc2
  9081  003B7C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9082  003B80  EC0C  F02D         	call	_color_read_Green	;wreg free
  9083  003B84  EE20 F002          	lfsr	2,2
  9084  003B88  500C               	movf	calibrate_white@w^0,w,c
  9085  003B8A  26D9               	addwf	fsr2l,f,c
  9086  003B8C  500D               	movf	(calibrate_white@w+1)^0,w,c
  9087  003B8E  22DA               	addwfc	fsr2h,f,c
  9088  003B90  C005  FFDE         	movff	?_color_read_Green,postinc2
  9089  003B94  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9090  003B98  EC34  F02D         	call	_color_read_Blue	;wreg free
  9091  003B9C  EE20 F004          	lfsr	2,4
  9092  003BA0  500C               	movf	calibrate_white@w^0,w,c
  9093  003BA2  26D9               	addwf	fsr2l,f,c
  9094  003BA4  500D               	movf	(calibrate_white@w+1)^0,w,c
  9095  003BA6  22DA               	addwfc	fsr2h,f,c
  9096  003BA8  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9097  003BAC  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9098  003BB0                     
  9099                           ;color.c: 249:     LED_G();
  9100  003BB0  EC97  F02F         	call	_LED_G	;wreg free
  9101  003BB4                     
  9102                           ;color.c: 250:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9103  003BB4  0E09               	movlw	9
  9104  003BB6  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9105  003BB8  0E1E               	movlw	30
  9106  003BBA  6E0E               	movwf	??_calibrate_white^0,c
  9107  003BBC  0EE4               	movlw	228
  9108  003BBE                     u6307:
  9109  003BBE  2EE8               	decfsz	wreg,f,c
  9110  003BC0  D7FE               	bra	u6307
  9111  003BC2  2E0E               	decfsz	??_calibrate_white^0,f,c
  9112  003BC4  D7FC               	bra	u6307
  9113  003BC6  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9114  003BC8  D7FA               	bra	u6307
  9115  003BCA  D000               	nop2	
  9116  003BCC                     
  9117                           ;color.c: 251:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  9118  003BCC  ECE4  F02C         	call	_color_read_Red	;wreg free
  9119  003BD0  EE20 F006          	lfsr	2,6
  9120  003BD4  500C               	movf	calibrate_white@w^0,w,c
  9121  003BD6  26D9               	addwf	fsr2l,f,c
  9122  003BD8  500D               	movf	(calibrate_white@w+1)^0,w,c
  9123  003BDA  22DA               	addwfc	fsr2h,f,c
  9124  003BDC  C005  FFDE         	movff	?_color_read_Red,postinc2
  9125  003BE0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9126  003BE4  EC0C  F02D         	call	_color_read_Green	;wreg free
  9127  003BE8  EE20 F008          	lfsr	2,8
  9128  003BEC  500C               	movf	calibrate_white@w^0,w,c
  9129  003BEE  26D9               	addwf	fsr2l,f,c
  9130  003BF0  500D               	movf	(calibrate_white@w+1)^0,w,c
  9131  003BF2  22DA               	addwfc	fsr2h,f,c
  9132  003BF4  C005  FFDE         	movff	?_color_read_Green,postinc2
  9133  003BF8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9134  003BFC  EC34  F02D         	call	_color_read_Blue	;wreg free
  9135  003C00  EE20 F00A          	lfsr	2,10
  9136  003C04  500C               	movf	calibrate_white@w^0,w,c
  9137  003C06  26D9               	addwf	fsr2l,f,c
  9138  003C08  500D               	movf	(calibrate_white@w+1)^0,w,c
  9139  003C0A  22DA               	addwfc	fsr2h,f,c
  9140  003C0C  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9141  003C10  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9142  003C14                     
  9143                           ;color.c: 255:     LED_B();
  9144  003C14  ECA7  F02F         	call	_LED_B	;wreg free
  9145  003C18                     
  9146                           ;color.c: 256:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9147  003C18  0E09               	movlw	9
  9148  003C1A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9149  003C1C  0E1E               	movlw	30
  9150  003C1E  6E0E               	movwf	??_calibrate_white^0,c
  9151  003C20  0EE4               	movlw	228
  9152  003C22                     u6317:
  9153  003C22  2EE8               	decfsz	wreg,f,c
  9154  003C24  D7FE               	bra	u6317
  9155  003C26  2E0E               	decfsz	??_calibrate_white^0,f,c
  9156  003C28  D7FC               	bra	u6317
  9157  003C2A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9158  003C2C  D7FA               	bra	u6317
  9159  003C2E  D000               	nop2	
  9160  003C30                     
  9161                           ;color.c: 257:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  9162  003C30  ECE4  F02C         	call	_color_read_Red	;wreg free
  9163  003C34  EE20 F00C          	lfsr	2,12
  9164  003C38  500C               	movf	calibrate_white@w^0,w,c
  9165  003C3A  26D9               	addwf	fsr2l,f,c
  9166  003C3C  500D               	movf	(calibrate_white@w+1)^0,w,c
  9167  003C3E  22DA               	addwfc	fsr2h,f,c
  9168  003C40  C005  FFDE         	movff	?_color_read_Red,postinc2
  9169  003C44  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9170  003C48  EC0C  F02D         	call	_color_read_Green	;wreg free
  9171  003C4C  EE20 F00E          	lfsr	2,14
  9172  003C50  500C               	movf	calibrate_white@w^0,w,c
  9173  003C52  26D9               	addwf	fsr2l,f,c
  9174  003C54  500D               	movf	(calibrate_white@w+1)^0,w,c
  9175  003C56  22DA               	addwfc	fsr2h,f,c
  9176  003C58  C005  FFDE         	movff	?_color_read_Green,postinc2
  9177  003C5C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9178  003C60  EC34  F02D         	call	_color_read_Blue	;wreg free
  9179  003C64  EE20 F010          	lfsr	2,16
  9180  003C68  500C               	movf	calibrate_white@w^0,w,c
  9181  003C6A  26D9               	addwf	fsr2l,f,c
  9182  003C6C  500D               	movf	(calibrate_white@w+1)^0,w,c
  9183  003C6E  22DA               	addwfc	fsr2h,f,c
  9184  003C70  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9185  003C74  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9186  003C78  EC5C  F02D         	call	_color_read_Clear	;wreg free
  9187  003C7C  EE20 F01A          	lfsr	2,26
  9188  003C80  500C               	movf	calibrate_white@w^0,w,c
  9189  003C82  26D9               	addwf	fsr2l,f,c
  9190  003C84  500D               	movf	(calibrate_white@w+1)^0,w,c
  9191  003C86  22DA               	addwfc	fsr2h,f,c
  9192  003C88  C005  FFDE         	movff	?_color_read_Clear,postinc2
  9193  003C8C  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  9194  003C90                     
  9195                           ;color.c: 260:     LED_C();
  9196  003C90  ECB7  F02F         	call	_LED_C	;wreg free
  9197  003C94                     
  9198                           ;color.c: 261:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9199  003C94  0E09               	movlw	9
  9200  003C96  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9201  003C98  0E1E               	movlw	30
  9202  003C9A  6E0E               	movwf	??_calibrate_white^0,c
  9203  003C9C  0EE4               	movlw	228
  9204  003C9E                     u6327:
  9205  003C9E  2EE8               	decfsz	wreg,f,c
  9206  003CA0  D7FE               	bra	u6327
  9207  003CA2  2E0E               	decfsz	??_calibrate_white^0,f,c
  9208  003CA4  D7FC               	bra	u6327
  9209  003CA6  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9210  003CA8  D7FA               	bra	u6327
  9211  003CAA  D000               	nop2	
  9212  003CAC                     
  9213                           ;color.c: 262:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  9214  003CAC  ECE4  F02C         	call	_color_read_Red	;wreg free
  9215  003CB0  EE20 F012          	lfsr	2,18
  9216  003CB4  500C               	movf	calibrate_white@w^0,w,c
  9217  003CB6  26D9               	addwf	fsr2l,f,c
  9218  003CB8  500D               	movf	(calibrate_white@w+1)^0,w,c
  9219  003CBA  22DA               	addwfc	fsr2h,f,c
  9220  003CBC  C005  FFDE         	movff	?_color_read_Red,postinc2
  9221  003CC0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9222  003CC4  EC0C  F02D         	call	_color_read_Green	;wreg free
  9223  003CC8  EE20 F014          	lfsr	2,20
  9224  003CCC  500C               	movf	calibrate_white@w^0,w,c
  9225  003CCE  26D9               	addwf	fsr2l,f,c
  9226  003CD0  500D               	movf	(calibrate_white@w+1)^0,w,c
  9227  003CD2  22DA               	addwfc	fsr2h,f,c
  9228  003CD4  C005  FFDE         	movff	?_color_read_Green,postinc2
  9229  003CD8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9230  003CDC  EC34  F02D         	call	_color_read_Blue	;wreg free
  9231  003CE0  EE20 F016          	lfsr	2,22
  9232  003CE4  500C               	movf	calibrate_white@w^0,w,c
  9233  003CE6  26D9               	addwf	fsr2l,f,c
  9234  003CE8  500D               	movf	(calibrate_white@w+1)^0,w,c
  9235  003CEA  22DA               	addwfc	fsr2h,f,c
  9236  003CEC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9237  003CF0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9238  003CF4  EC5C  F02D         	call	_color_read_Clear	;wreg free
  9239  003CF8  EE20 F018          	lfsr	2,24
  9240  003CFC  500C               	movf	calibrate_white@w^0,w,c
  9241  003CFE  26D9               	addwf	fsr2l,f,c
  9242  003D00  500D               	movf	(calibrate_white@w+1)^0,w,c
  9243  003D02  22DA               	addwfc	fsr2h,f,c
  9244  003D04  C005  FFDE         	movff	?_color_read_Clear,postinc2
  9245  003D08  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  9246  003D0C                     
  9247                           ;color.c: 264:     LED_OFF();
  9248  003D0C  EC87  F02F         	call	_LED_OFF	;wreg free
  9249  003D10                     
  9250                           ;color.c: 265:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9251  003D10  0E29               	movlw	41
  9252  003D12  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9253  003D14  0E96               	movlw	150
  9254  003D16  6E0E               	movwf	??_calibrate_white^0,c
  9255  003D18  0E7F               	movlw	127
  9256  003D1A                     u6337:
  9257  003D1A  2EE8               	decfsz	wreg,f,c
  9258  003D1C  D7FE               	bra	u6337
  9259  003D1E  2E0E               	decfsz	??_calibrate_white^0,f,c
  9260  003D20  D7FC               	bra	u6337
  9261  003D22  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9262  003D24  D7FA               	bra	u6337
  9263  003D26  F000               	nop	
  9264                           
  9265                           ;color.c: 266:     toggle_light(1,2);
  9266  003D28  0E02               	movlw	2
  9267  003D2A  6E01               	movwf	toggle_light@toggletime^0,c
  9268  003D2C  0E01               	movlw	1
  9269  003D2E  EC3A  F01B         	call	_toggle_light
  9270  003D32  0012               	return		;funcret
  9271  003D34                     __end_of_calibrate_white:
  9272                           	callstack 0
  9273                           
  9274 ;; *************** function _color_read_Red *****************
  9275 ;; Defined at:
  9276 ;;		line 111 in file "color.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;		None
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;  tmp             2    9[COMRAM] unsigned int 
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  2    4[COMRAM] unsigned int 
  9283 ;; Registers used:
  9284 ;;		wreg, status,2, status,0, cstack
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9292 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9293 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9294 ;;Total ram usage:        7 bytes
  9295 ;; Hardware stack levels used: 1
  9296 ;; Hardware stack levels required when called: 3
  9297 ;; This function calls:
  9298 ;;		_I2C_2_Master_Read
  9299 ;;		_I2C_2_Master_RepStart
  9300 ;;		_I2C_2_Master_Start
  9301 ;;		_I2C_2_Master_Stop
  9302 ;;		_I2C_2_Master_Write
  9303 ;; This function is called by:
  9304 ;;		_read_color
  9305 ;;		_calibrate_white
  9306 ;; This function uses a non-reentrant model
  9307 ;;
  9308                           
  9309                           	psect	text38
  9310  0059C8                     __ptext38:
  9311                           	callstack 0
  9312  0059C8                     _color_read_Red:
  9313                           	callstack 24
  9314  0059C8                     
  9315                           ;color.c: 113:  unsigned int tmp;;color.c: 114:  I2C_2_Master_Start();
  9316  0059C8  EC17  F030         	call	_I2C_2_Master_Start	;wreg free
  9317                           
  9318                           ;color.c: 115:  I2C_2_Master_Write(0x52 | 0x00);
  9319  0059CC  0E52               	movlw	82
  9320  0059CE  EC01  F030         	call	_I2C_2_Master_Write
  9321                           
  9322                           ;color.c: 116:  I2C_2_Master_Write(0xA0 | 0x16);
  9323  0059D2  0EB6               	movlw	182
  9324  0059D4  EC01  F030         	call	_I2C_2_Master_Write
  9325                           
  9326                           ;color.c: 117:  I2C_2_Master_RepStart();
  9327  0059D8  EC0D  F030         	call	_I2C_2_Master_RepStart	;wreg free
  9328                           
  9329                           ;color.c: 118:  I2C_2_Master_Write(0x52 | 0x01);
  9330  0059DC  0E53               	movlw	83
  9331  0059DE  EC01  F030         	call	_I2C_2_Master_Write
  9332                           
  9333                           ;color.c: 119:  tmp=I2C_2_Master_Read(1);
  9334  0059E2  0E01               	movlw	1
  9335  0059E4  ECEA  F02D         	call	_I2C_2_Master_Read
  9336  0059E8  6E07               	movwf	??_color_read_Red^0,c
  9337  0059EA  5007               	movf	??_color_read_Red^0,w,c
  9338  0059EC  6E0A               	movwf	color_read_Red@tmp^0,c
  9339  0059EE  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  9340                           
  9341                           ;color.c: 120:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9342  0059F0  0E00               	movlw	0
  9343  0059F2  ECEA  F02D         	call	_I2C_2_Master_Read
  9344  0059F6  6E07               	movwf	??_color_read_Red^0,c
  9345  0059F8  5007               	movf	??_color_read_Red^0,w,c
  9346  0059FA  6E09               	movwf	(??_color_read_Red+2)^0,c
  9347  0059FC  6A08               	clrf	(??_color_read_Red+1)^0,c
  9348  0059FE  500A               	movf	color_read_Red@tmp^0,w,c
  9349  005A00  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  9350  005A02  6E0A               	movwf	color_read_Red@tmp^0,c
  9351  005A04  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  9352  005A06  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  9353  005A08  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  9354                           
  9355                           ;color.c: 121:  I2C_2_Master_Stop();
  9356  005A0A  EC12  F030         	call	_I2C_2_Master_Stop	;wreg free
  9357  005A0E                     
  9358                           ;color.c: 122:  return tmp;
  9359  005A0E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  9360  005A12  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  9361  005A16  0012               	return		;funcret
  9362  005A18                     __end_of_color_read_Red:
  9363                           	callstack 0
  9364                           
  9365 ;; *************** function _color_read_Green *****************
  9366 ;; Defined at:
  9367 ;;		line 139 in file "color.c"
  9368 ;; Parameters:    Size  Location     Type
  9369 ;;		None
  9370 ;; Auto vars:     Size  Location     Type
  9371 ;;  tmp             2    9[COMRAM] unsigned int 
  9372 ;; Return value:  Size  Location     Type
  9373 ;;                  2    4[COMRAM] unsigned int 
  9374 ;; Registers used:
  9375 ;;		wreg, status,2, status,0, cstack
  9376 ;; Tracked objects:
  9377 ;;		On entry : 0/0
  9378 ;;		On exit  : 0/0
  9379 ;;		Unchanged: 0/0
  9380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9382 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9383 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9384 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9385 ;;Total ram usage:        7 bytes
  9386 ;; Hardware stack levels used: 1
  9387 ;; Hardware stack levels required when called: 3
  9388 ;; This function calls:
  9389 ;;		_I2C_2_Master_Read
  9390 ;;		_I2C_2_Master_RepStart
  9391 ;;		_I2C_2_Master_Start
  9392 ;;		_I2C_2_Master_Stop
  9393 ;;		_I2C_2_Master_Write
  9394 ;; This function is called by:
  9395 ;;		_read_color
  9396 ;;		_calibrate_white
  9397 ;;		_detect_wall
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           	psect	text39
  9402  005A18                     __ptext39:
  9403                           	callstack 0
  9404  005A18                     _color_read_Green:
  9405                           	callstack 24
  9406  005A18                     
  9407                           ;color.c: 141:  unsigned int tmp;;color.c: 142:  I2C_2_Master_Start();
  9408  005A18  EC17  F030         	call	_I2C_2_Master_Start	;wreg free
  9409                           
  9410                           ;color.c: 143:  I2C_2_Master_Write(0x52 | 0x00);
  9411  005A1C  0E52               	movlw	82
  9412  005A1E  EC01  F030         	call	_I2C_2_Master_Write
  9413                           
  9414                           ;color.c: 144:  I2C_2_Master_Write(0xA0 | 0x18);
  9415  005A22  0EB8               	movlw	184
  9416  005A24  EC01  F030         	call	_I2C_2_Master_Write
  9417                           
  9418                           ;color.c: 145:  I2C_2_Master_RepStart();
  9419  005A28  EC0D  F030         	call	_I2C_2_Master_RepStart	;wreg free
  9420                           
  9421                           ;color.c: 146:  I2C_2_Master_Write(0x52 | 0x01);
  9422  005A2C  0E53               	movlw	83
  9423  005A2E  EC01  F030         	call	_I2C_2_Master_Write
  9424                           
  9425                           ;color.c: 147:  tmp=I2C_2_Master_Read(1);
  9426  005A32  0E01               	movlw	1
  9427  005A34  ECEA  F02D         	call	_I2C_2_Master_Read
  9428  005A38  6E07               	movwf	??_color_read_Green^0,c
  9429  005A3A  5007               	movf	??_color_read_Green^0,w,c
  9430  005A3C  6E0A               	movwf	color_read_Green@tmp^0,c
  9431  005A3E  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  9432                           
  9433                           ;color.c: 148:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9434  005A40  0E00               	movlw	0
  9435  005A42  ECEA  F02D         	call	_I2C_2_Master_Read
  9436  005A46  6E07               	movwf	??_color_read_Green^0,c
  9437  005A48  5007               	movf	??_color_read_Green^0,w,c
  9438  005A4A  6E09               	movwf	(??_color_read_Green+2)^0,c
  9439  005A4C  6A08               	clrf	(??_color_read_Green+1)^0,c
  9440  005A4E  500A               	movf	color_read_Green@tmp^0,w,c
  9441  005A50  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  9442  005A52  6E0A               	movwf	color_read_Green@tmp^0,c
  9443  005A54  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  9444  005A56  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  9445  005A58  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  9446                           
  9447                           ;color.c: 149:  I2C_2_Master_Stop();
  9448  005A5A  EC12  F030         	call	_I2C_2_Master_Stop	;wreg free
  9449  005A5E                     
  9450                           ;color.c: 150:  return tmp;
  9451  005A5E  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  9452  005A62  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  9453  005A66  0012               	return		;funcret
  9454  005A68                     __end_of_color_read_Green:
  9455                           	callstack 0
  9456                           
  9457 ;; *************** function _color_read_Blue *****************
  9458 ;; Defined at:
  9459 ;;		line 125 in file "color.c"
  9460 ;; Parameters:    Size  Location     Type
  9461 ;;		None
  9462 ;; Auto vars:     Size  Location     Type
  9463 ;;  tmp             2    9[COMRAM] unsigned int 
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  2    4[COMRAM] unsigned int 
  9466 ;; Registers used:
  9467 ;;		wreg, status,2, status,0, cstack
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9475 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9476 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9477 ;;Total ram usage:        7 bytes
  9478 ;; Hardware stack levels used: 1
  9479 ;; Hardware stack levels required when called: 3
  9480 ;; This function calls:
  9481 ;;		_I2C_2_Master_Read
  9482 ;;		_I2C_2_Master_RepStart
  9483 ;;		_I2C_2_Master_Start
  9484 ;;		_I2C_2_Master_Stop
  9485 ;;		_I2C_2_Master_Write
  9486 ;; This function is called by:
  9487 ;;		_read_color
  9488 ;;		_calibrate_white
  9489 ;; This function uses a non-reentrant model
  9490 ;;
  9491                           
  9492                           	psect	text40
  9493  005A68                     __ptext40:
  9494                           	callstack 0
  9495  005A68                     _color_read_Blue:
  9496                           	callstack 24
  9497  005A68                     
  9498                           ;color.c: 127:  unsigned int tmp;;color.c: 128:  I2C_2_Master_Start();
  9499  005A68  EC17  F030         	call	_I2C_2_Master_Start	;wreg free
  9500                           
  9501                           ;color.c: 129:  I2C_2_Master_Write(0x52 | 0x00);
  9502  005A6C  0E52               	movlw	82
  9503  005A6E  EC01  F030         	call	_I2C_2_Master_Write
  9504                           
  9505                           ;color.c: 130:  I2C_2_Master_Write(0xA0 | 0x1A);
  9506  005A72  0EBA               	movlw	186
  9507  005A74  EC01  F030         	call	_I2C_2_Master_Write
  9508                           
  9509                           ;color.c: 131:  I2C_2_Master_RepStart();
  9510  005A78  EC0D  F030         	call	_I2C_2_Master_RepStart	;wreg free
  9511                           
  9512                           ;color.c: 132:  I2C_2_Master_Write(0x52 | 0x01);
  9513  005A7C  0E53               	movlw	83
  9514  005A7E  EC01  F030         	call	_I2C_2_Master_Write
  9515                           
  9516                           ;color.c: 133:  tmp=I2C_2_Master_Read(1);
  9517  005A82  0E01               	movlw	1
  9518  005A84  ECEA  F02D         	call	_I2C_2_Master_Read
  9519  005A88  6E07               	movwf	??_color_read_Blue^0,c
  9520  005A8A  5007               	movf	??_color_read_Blue^0,w,c
  9521  005A8C  6E0A               	movwf	color_read_Blue@tmp^0,c
  9522  005A8E  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  9523                           
  9524                           ;color.c: 134:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9525  005A90  0E00               	movlw	0
  9526  005A92  ECEA  F02D         	call	_I2C_2_Master_Read
  9527  005A96  6E07               	movwf	??_color_read_Blue^0,c
  9528  005A98  5007               	movf	??_color_read_Blue^0,w,c
  9529  005A9A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  9530  005A9C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  9531  005A9E  500A               	movf	color_read_Blue@tmp^0,w,c
  9532  005AA0  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  9533  005AA2  6E0A               	movwf	color_read_Blue@tmp^0,c
  9534  005AA4  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  9535  005AA6  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  9536  005AA8  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  9537                           
  9538                           ;color.c: 135:  I2C_2_Master_Stop();
  9539  005AAA  EC12  F030         	call	_I2C_2_Master_Stop	;wreg free
  9540  005AAE                     
  9541                           ;color.c: 136:  return tmp;
  9542  005AAE  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  9543  005AB2  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  9544  005AB6  0012               	return		;funcret
  9545  005AB8                     __end_of_color_read_Blue:
  9546                           	callstack 0
  9547                           
  9548 ;; *************** function _LED_R *****************
  9549 ;; Defined at:
  9550 ;;		line 184 in file "color.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;		None
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;		None
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  1    wreg      void 
  9557 ;; Registers used:
  9558 ;;		wreg
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9566 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9567 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9568 ;;Total ram usage:        2 bytes
  9569 ;; Hardware stack levels used: 1
  9570 ;; Hardware stack levels required when called: 1
  9571 ;; This function calls:
  9572 ;;		Nothing
  9573 ;; This function is called by:
  9574 ;;		_calibrate_white
  9575 ;;		_detect_color
  9576 ;;		_color_data_collection
  9577 ;; This function uses a non-reentrant model
  9578 ;;
  9579                           
  9580                           	psect	text41
  9581  005EEE                     __ptext41:
  9582                           	callstack 0
  9583  005EEE                     _LED_R:
  9584                           	callstack 27
  9585  005EEE                     
  9586                           ;color.c: 186:     LATGbits.LATG1 = 1;
  9587  005EEE  827F               	bsf	127,1,c	;volatile
  9588                           
  9589                           ;color.c: 187:     LATFbits.LATF7 = 0;
  9590  005EF0  9E7E               	bcf	126,7,c	;volatile
  9591                           
  9592                           ;color.c: 188:     LATAbits.LATA4 = 0;
  9593  005EF2  9879               	bcf	121,4,c	;volatile
  9594  005EF4                     
  9595                           ;color.c: 189:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9596  005EF4  0E11               	movlw	17
  9597  005EF6  6E02               	movwf	(??_LED_R+1)^0,c
  9598  005EF8  0E3C               	movlw	60
  9599  005EFA  6E01               	movwf	??_LED_R^0,c
  9600  005EFC  0ECB               	movlw	203
  9601  005EFE                     u6347:
  9602  005EFE  2EE8               	decfsz	wreg,f,c
  9603  005F00  D7FE               	bra	u6347
  9604  005F02  2E01               	decfsz	??_LED_R^0,f,c
  9605  005F04  D7FC               	bra	u6347
  9606  005F06  2E02               	decfsz	(??_LED_R+1)^0,f,c
  9607  005F08  D7FA               	bra	u6347
  9608  005F0A  F000               	nop	
  9609  005F0C  0012               	return		;funcret
  9610  005F0E                     __end_of_LED_R:
  9611                           	callstack 0
  9612                           
  9613 ;; *************** function _LED_OFF *****************
  9614 ;; Defined at:
  9615 ;;		line 175 in file "color.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;		None
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;		None
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      void 
  9622 ;; Registers used:
  9623 ;;		wreg
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9633 ;;Total ram usage:        2 bytes
  9634 ;; Hardware stack levels used: 1
  9635 ;; Hardware stack levels required when called: 1
  9636 ;; This function calls:
  9637 ;;		Nothing
  9638 ;; This function is called by:
  9639 ;;		_calibrate_white
  9640 ;;		_setup
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643                           
  9644                           	psect	text42
  9645  005F0E                     __ptext42:
  9646                           	callstack 0
  9647  005F0E                     _LED_OFF:
  9648                           	callstack 27
  9649  005F0E                     
  9650                           ;color.c: 177:     LATGbits.LATG1 = 0;
  9651  005F0E  927F               	bcf	127,1,c	;volatile
  9652                           
  9653                           ;color.c: 178:     LATFbits.LATF7 = 0;
  9654  005F10  9E7E               	bcf	126,7,c	;volatile
  9655                           
  9656                           ;color.c: 179:     LATAbits.LATA4 = 0;
  9657  005F12  9879               	bcf	121,4,c	;volatile
  9658  005F14                     
  9659                           ;color.c: 180:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9660  005F14  0E11               	movlw	17
  9661  005F16  6E02               	movwf	(??_LED_OFF+1)^0,c
  9662  005F18  0E3C               	movlw	60
  9663  005F1A  6E01               	movwf	??_LED_OFF^0,c
  9664  005F1C  0ECB               	movlw	203
  9665  005F1E                     u6357:
  9666  005F1E  2EE8               	decfsz	wreg,f,c
  9667  005F20  D7FE               	bra	u6357
  9668  005F22  2E01               	decfsz	??_LED_OFF^0,f,c
  9669  005F24  D7FC               	bra	u6357
  9670  005F26  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  9671  005F28  D7FA               	bra	u6357
  9672  005F2A  F000               	nop	
  9673  005F2C  0012               	return		;funcret
  9674  005F2E                     __end_of_LED_OFF:
  9675                           	callstack 0
  9676                           
  9677 ;; *************** function _LED_G *****************
  9678 ;; Defined at:
  9679 ;;		line 211 in file "color.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;		None
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;		None
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  1    wreg      void 
  9686 ;; Registers used:
  9687 ;;		wreg
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9697 ;;Total ram usage:        2 bytes
  9698 ;; Hardware stack levels used: 1
  9699 ;; Hardware stack levels required when called: 1
  9700 ;; This function calls:
  9701 ;;		Nothing
  9702 ;; This function is called by:
  9703 ;;		_calibrate_white
  9704 ;;		_detect_color
  9705 ;;		_color_data_collection
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709                           	psect	text43
  9710  005F2E                     __ptext43:
  9711                           	callstack 0
  9712  005F2E                     _LED_G:
  9713                           	callstack 27
  9714  005F2E                     
  9715                           ;color.c: 213:     LATGbits.LATG1 = 0;
  9716  005F2E  927F               	bcf	127,1,c	;volatile
  9717                           
  9718                           ;color.c: 214:     LATFbits.LATF7 = 0;
  9719  005F30  9E7E               	bcf	126,7,c	;volatile
  9720                           
  9721                           ;color.c: 215:     LATAbits.LATA4 = 1;
  9722  005F32  8879               	bsf	121,4,c	;volatile
  9723  005F34                     
  9724                           ;color.c: 216:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9725  005F34  0E11               	movlw	17
  9726  005F36  6E02               	movwf	(??_LED_G+1)^0,c
  9727  005F38  0E3C               	movlw	60
  9728  005F3A  6E01               	movwf	??_LED_G^0,c
  9729  005F3C  0ECB               	movlw	203
  9730  005F3E                     u6367:
  9731  005F3E  2EE8               	decfsz	wreg,f,c
  9732  005F40  D7FE               	bra	u6367
  9733  005F42  2E01               	decfsz	??_LED_G^0,f,c
  9734  005F44  D7FC               	bra	u6367
  9735  005F46  2E02               	decfsz	(??_LED_G+1)^0,f,c
  9736  005F48  D7FA               	bra	u6367
  9737  005F4A  F000               	nop	
  9738  005F4C  0012               	return		;funcret
  9739  005F4E                     __end_of_LED_G:
  9740                           	callstack 0
  9741                           
  9742 ;; *************** function _LED_B *****************
  9743 ;; Defined at:
  9744 ;;		line 202 in file "color.c"
  9745 ;; Parameters:    Size  Location     Type
  9746 ;;		None
  9747 ;; Auto vars:     Size  Location     Type
  9748 ;;		None
  9749 ;; Return value:  Size  Location     Type
  9750 ;;                  1    wreg      void 
  9751 ;; Registers used:
  9752 ;;		wreg
  9753 ;; Tracked objects:
  9754 ;;		On entry : 0/0
  9755 ;;		On exit  : 0/0
  9756 ;;		Unchanged: 0/0
  9757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9762 ;;Total ram usage:        2 bytes
  9763 ;; Hardware stack levels used: 1
  9764 ;; Hardware stack levels required when called: 1
  9765 ;; This function calls:
  9766 ;;		Nothing
  9767 ;; This function is called by:
  9768 ;;		_calibrate_white
  9769 ;;		_detect_color
  9770 ;;		_color_data_collection
  9771 ;; This function uses a non-reentrant model
  9772 ;;
  9773                           
  9774                           	psect	text44
  9775  005F4E                     __ptext44:
  9776                           	callstack 0
  9777  005F4E                     _LED_B:
  9778                           	callstack 27
  9779  005F4E                     
  9780                           ;color.c: 204:     LATGbits.LATG1 = 0;
  9781  005F4E  927F               	bcf	127,1,c	;volatile
  9782                           
  9783                           ;color.c: 205:     LATFbits.LATF7 = 1;
  9784  005F50  8E7E               	bsf	126,7,c	;volatile
  9785                           
  9786                           ;color.c: 206:     LATAbits.LATA4 = 0;
  9787  005F52  9879               	bcf	121,4,c	;volatile
  9788  005F54                     
  9789                           ;color.c: 207:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9790  005F54  0E11               	movlw	17
  9791  005F56  6E02               	movwf	(??_LED_B+1)^0,c
  9792  005F58  0E3C               	movlw	60
  9793  005F5A  6E01               	movwf	??_LED_B^0,c
  9794  005F5C  0ECB               	movlw	203
  9795  005F5E                     u6377:
  9796  005F5E  2EE8               	decfsz	wreg,f,c
  9797  005F60  D7FE               	bra	u6377
  9798  005F62  2E01               	decfsz	??_LED_B^0,f,c
  9799  005F64  D7FC               	bra	u6377
  9800  005F66  2E02               	decfsz	(??_LED_B+1)^0,f,c
  9801  005F68  D7FA               	bra	u6377
  9802  005F6A  F000               	nop	
  9803  005F6C  0012               	return		;funcret
  9804  005F6E                     __end_of_LED_B:
  9805                           	callstack 0
  9806                           
  9807 ;; *************** function _amb_light_measure *****************
  9808 ;; Defined at:
  9809 ;;		line 359 in file "color.c"
  9810 ;; Parameters:    Size  Location     Type
  9811 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  9812 ;;		 -> main@rgb(8), main@amb(8), 
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  9815 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  9816 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  9817 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  9818 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  9819 ;; Return value:  Size  Location     Type
  9820 ;;                  2   10[BANK0 ] unsigned int 
  9821 ;; Registers used:
  9822 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9823 ;; Tracked objects:
  9824 ;;		On entry : 0/0
  9825 ;;		On exit  : 0/0
  9826 ;;		Unchanged: 0/0
  9827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9828 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9829 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9830 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9831 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9832 ;;Total ram usage:       14 bytes
  9833 ;; Hardware stack levels used: 1
  9834 ;; Hardware stack levels required when called: 5
  9835 ;; This function calls:
  9836 ;;		_LED_C
  9837 ;;		___fldiv
  9838 ;;		___xxtofl
  9839 ;;		_color_read_Clear
  9840 ;;		_lroundf
  9841 ;;		_toggle_light
  9842 ;; This function is called by:
  9843 ;;		_setup
  9844 ;;		_test_function
  9845 ;; This function uses a non-reentrant model
  9846 ;;
  9847                           
  9848                           	psect	text45
  9849  004E2C                     __ptext45:
  9850                           	callstack 0
  9851  004E2C                     _amb_light_measure:
  9852                           	callstack 24
  9853  004E2C  0E00               	movlw	0
  9854  004E2E  0100               	movlb	0	; () banked
  9855  004E30  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  9856  004E32  0E00               	movlw	0
  9857  004E34  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  9858  004E36  0E00               	movlw	0
  9859  004E38  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  9860  004E3A  0E00               	movlw	0
  9861  004E3C  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  9862  004E3E  0E00               	movlw	0
  9863  004E40  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  9864  004E42  0E00               	movlw	0
  9865  004E44  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  9866  004E46                     
  9867                           ; BSR set to: 0
  9868                           ;color.c: 362:     toggle_light(2,2);
  9869  004E46  0E02               	movlw	2
  9870  004E48  6E01               	movwf	toggle_light@toggletime^0,c
  9871  004E4A  0E02               	movlw	2
  9872  004E4C  EC3A  F01B         	call	_toggle_light
  9873  004E50                     
  9874                           ;color.c: 363:     LED_C();
  9875  004E50  ECB7  F02F         	call	_LED_C	;wreg free
  9876  004E54                     
  9877                           ;color.c: 364:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9878  004E54  0E29               	movlw	41
  9879  004E56  0100               	movlb	0	; () banked
  9880  004E58  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9881  004E5A  0E96               	movlw	150
  9882  004E5C  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9883  004E5E  0E7F               	movlw	127
  9884  004E60                     u6387:
  9885  004E60  2EE8               	decfsz	wreg,f,c
  9886  004E62  D7FE               	bra	u6387
  9887  004E64  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9888  004E66  D7FC               	bra	u6387
  9889  004E68  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9890  004E6A  D7FA               	bra	u6387
  9891  004E6C                     
  9892                           ;color.c: 366:     CC_amb_1 = color_read_Clear();
  9893  004E6C  EC5C  F02D         	call	_color_read_Clear	;wreg free
  9894  004E70  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  9895  004E74  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  9896  004E78                     
  9897                           ;color.c: 367:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9898  004E78  0E11               	movlw	17
  9899  004E7A  0100               	movlb	0	; () banked
  9900  004E7C  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9901  004E7E  0E3C               	movlw	60
  9902  004E80  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9903  004E82  0ECB               	movlw	203
  9904  004E84                     u6397:
  9905  004E84  2EE8               	decfsz	wreg,f,c
  9906  004E86  D7FE               	bra	u6397
  9907  004E88  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9908  004E8A  D7FC               	bra	u6397
  9909  004E8C  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9910  004E8E  D7FA               	bra	u6397
  9911  004E90                     
  9912                           ;color.c: 369:     CC_amb_2 = color_read_Clear();
  9913  004E90  EC5C  F02D         	call	_color_read_Clear	;wreg free
  9914  004E94  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  9915  004E98  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  9916  004E9C                     
  9917                           ;color.c: 370:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9918  004E9C  0E11               	movlw	17
  9919  004E9E  0100               	movlb	0	; () banked
  9920  004EA0  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9921  004EA2  0E3C               	movlw	60
  9922  004EA4  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9923  004EA6  0ECB               	movlw	203
  9924  004EA8                     u6407:
  9925  004EA8  2EE8               	decfsz	wreg,f,c
  9926  004EAA  D7FE               	bra	u6407
  9927  004EAC  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9928  004EAE  D7FC               	bra	u6407
  9929  004EB0  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9930  004EB2  D7FA               	bra	u6407
  9931  004EB4                     
  9932                           ;color.c: 372:     CC_amb_3 = color_read_Clear();
  9933  004EB4  EC5C  F02D         	call	_color_read_Clear	;wreg free
  9934  004EB8  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  9935  004EBC  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  9936  004EC0                     
  9937                           ;color.c: 373:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9938  004EC0  0E11               	movlw	17
  9939  004EC2  0100               	movlb	0	; () banked
  9940  004EC4  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9941  004EC6  0E3C               	movlw	60
  9942  004EC8  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9943  004ECA  0ECB               	movlw	203
  9944  004ECC                     u6417:
  9945  004ECC  2EE8               	decfsz	wreg,f,c
  9946  004ECE  D7FE               	bra	u6417
  9947  004ED0  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9948  004ED2  D7FC               	bra	u6417
  9949  004ED4  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9950  004ED6  D7FA               	bra	u6417
  9951  004ED8                     
  9952                           ;color.c: 375:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  9953  004ED8  0100               	movlb	0	; () banked
  9954  004EDA  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  9955  004EDC  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  9956  004EDE  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9957  004EE0  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  9958  004EE2  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  9959  004EE4  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9960  004EE6  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  9961  004EE8  276C               	addwf	??_amb_light_measure& (0+255),f,b
  9962  004EEA  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  9963  004EEC  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  9964  004EEE  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  9965  004EF2  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  9966  004EF6  6A03               	clrf	(___xxtofl@val+2)^0,c
  9967  004EF8  6A04               	clrf	(___xxtofl@val+3)^0,c
  9968  004EFA  0E00               	movlw	0
  9969  004EFC  EC5E  F020         	call	___xxtofl
  9970  004F00  C001  F00F         	movff	?___xxtofl,___fldiv@b
  9971  004F04  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  9972  004F08  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  9973  004F0C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  9974  004F10  0E00               	movlw	0
  9975  004F12  6E13               	movwf	___fldiv@a^0,c
  9976  004F14  0E00               	movlw	0
  9977  004F16  6E14               	movwf	(___fldiv@a+1)^0,c
  9978  004F18  0E40               	movlw	64
  9979  004F1A  6E15               	movwf	(___fldiv@a+2)^0,c
  9980  004F1C  0E40               	movlw	64
  9981  004F1E  6E16               	movwf	(___fldiv@a+3)^0,c
  9982  004F20  EC84  F016         	call	___fldiv	;wreg free
  9983  004F24  C00F  F066         	movff	?___fldiv,lroundf@x
  9984  004F28  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  9985  004F2C  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  9986  004F30  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  9987  004F34  EC69  F02E         	call	_lroundf	;wreg free
  9988  004F38  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  9989  004F3C  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  9990  004F40                     
  9991                           ;color.c: 377:     toggle_light(2,2);
  9992  004F40  0E02               	movlw	2
  9993  004F42  6E01               	movwf	toggle_light@toggletime^0,c
  9994  004F44  0E02               	movlw	2
  9995  004F46  EC3A  F01B         	call	_toggle_light
  9996  004F4A                     
  9997                           ;color.c: 379:     return CC_amb_ave;
  9998  004F4A  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  9999  004F4E  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
 10000  004F52  0012               	return		;funcret
 10001  004F54                     __end_of_amb_light_measure:
 10002                           	callstack 0
 10003                           
 10004 ;; *************** function _toggle_light *****************
 10005 ;; Defined at:
 10006 ;;		line 49 in file "color.c"
 10007 ;; Parameters:    Size  Location     Type
 10008 ;;  lightnumber     1    wreg     unsigned char 
 10009 ;;  toggletime      1    0[COMRAM] unsigned char 
 10010 ;; Auto vars:     Size  Location     Type
 10011 ;;  lightnumber     1    4[COMRAM] unsigned char 
 10012 ;;  i               1    3[COMRAM] unsigned char 
 10013 ;; Return value:  Size  Location     Type
 10014 ;;                  1    wreg      void 
 10015 ;; Registers used:
 10016 ;;		wreg, status,2, status,0
 10017 ;; Tracked objects:
 10018 ;;		On entry : 0/0
 10019 ;;		On exit  : 0/0
 10020 ;;		Unchanged: 0/0
 10021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10022 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10025 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10026 ;;Total ram usage:        5 bytes
 10027 ;; Hardware stack levels used: 1
 10028 ;; Hardware stack levels required when called: 1
 10029 ;; This function calls:
 10030 ;;		Nothing
 10031 ;; This function is called by:
 10032 ;;		_calibrate_white
 10033 ;;		_detect_color
 10034 ;;		_amb_light_measure
 10035 ;;		_turning_action
 10036 ;; This function uses a non-reentrant model
 10037 ;;
 10038                           
 10039                           	psect	text46
 10040  003674                     __ptext46:
 10041                           	callstack 0
 10042  003674                     _toggle_light:
 10043                           	callstack 27
 10044                           
 10045                           ;incstack = 0
 10046                           ;toggle_light@lightnumber stored from wreg
 10047  003674  6E05               	movwf	toggle_light@lightnumber^0,c
 10048  003676                     
 10049                           ;color.c: 49: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 50: {;color.c: 51:     unsigned char i = 0;
 10050  003676  0E00               	movlw	0
 10051  003678  6E04               	movwf	toggle_light@i^0,c
 10052                           
 10053                           ;color.c: 53:     for (i = 0; i < toggletime; i++){
 10054  00367A  0E00               	movlw	0
 10055  00367C  6E04               	movwf	toggle_light@i^0,c
 10056  00367E  EF86  F01C         	goto	l60
 10057  003682                     l4386:
 10058                           
 10059                           ;color.c: 54:         if (lightnumber == 1){
 10060  003682  0405               	decf	toggle_light@lightnumber^0,w,c
 10061  003684  A4D8               	btfss	status,2,c
 10062  003686  EF47  F01B         	goto	u4511
 10063  00368A  EF49  F01B         	goto	u4510
 10064  00368E                     u4511:
 10065  00368E  EF81  F01B         	goto	l4394
 10066  003692                     u4510:
 10067  003692                     
 10068                           ;color.c: 55:             LATHbits.LATH1 = !LATHbits.LATH1;
 10069  003692  A280               	btfss	128,1,c	;volatile
 10070  003694  EF4E  F01B         	goto	u4521
 10071  003698  EF52  F01B         	goto	u4520
 10072  00369C                     u4521:
 10073  00369C  6A02               	clrf	??_toggle_light^0,c
 10074  00369E  2A02               	incf	??_toggle_light^0,f,c
 10075  0036A0  EF53  F01B         	goto	u4538
 10076  0036A4                     u4520:
 10077  0036A4  6A02               	clrf	??_toggle_light^0,c
 10078  0036A6                     u4538:
 10079  0036A6  4602               	rlncf	??_toggle_light^0,f,c
 10080  0036A8  5080               	movf	128,w,c	;volatile
 10081  0036AA  1802               	xorwf	??_toggle_light^0,w,c
 10082  0036AC  0BFD               	andlw	-3
 10083  0036AE  1802               	xorwf	??_toggle_light^0,w,c
 10084  0036B0  6E80               	movwf	128,c	;volatile
 10085  0036B2                     
 10086                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10087  0036B2  0E29               	movlw	41
 10088  0036B4  6E03               	movwf	(??_toggle_light+1)^0,c
 10089  0036B6  0E96               	movlw	150
 10090  0036B8  6E02               	movwf	??_toggle_light^0,c
 10091  0036BA  0E7F               	movlw	127
 10092  0036BC                     u6427:
 10093  0036BC  2EE8               	decfsz	wreg,f,c
 10094  0036BE  D7FE               	bra	u6427
 10095  0036C0  2E02               	decfsz	??_toggle_light^0,f,c
 10096  0036C2  D7FC               	bra	u6427
 10097  0036C4  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10098  0036C6  D7FA               	bra	u6427
 10099  0036C8  F000               	nop	
 10100  0036CA                     
 10101                           ;color.c: 57:             LATHbits.LATH1 = !LATHbits.LATH1;
 10102  0036CA  A280               	btfss	128,1,c	;volatile
 10103  0036CC  EF6A  F01B         	goto	u4541
 10104  0036D0  EF6E  F01B         	goto	u4540
 10105  0036D4                     u4541:
 10106  0036D4  6A02               	clrf	??_toggle_light^0,c
 10107  0036D6  2A02               	incf	??_toggle_light^0,f,c
 10108  0036D8  EF6F  F01B         	goto	u4558
 10109  0036DC                     u4540:
 10110  0036DC  6A02               	clrf	??_toggle_light^0,c
 10111  0036DE                     u4558:
 10112  0036DE  4602               	rlncf	??_toggle_light^0,f,c
 10113  0036E0  5080               	movf	128,w,c	;volatile
 10114  0036E2  1802               	xorwf	??_toggle_light^0,w,c
 10115  0036E4  0BFD               	andlw	-3
 10116  0036E6  1802               	xorwf	??_toggle_light^0,w,c
 10117  0036E8  6E80               	movwf	128,c	;volatile
 10118                           
 10119                           ;color.c: 58:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10120  0036EA  0E29               	movlw	41
 10121  0036EC  6E03               	movwf	(??_toggle_light+1)^0,c
 10122  0036EE  0E96               	movlw	150
 10123  0036F0  6E02               	movwf	??_toggle_light^0,c
 10124  0036F2  0E7F               	movlw	127
 10125  0036F4                     u6437:
 10126  0036F4  2EE8               	decfsz	wreg,f,c
 10127  0036F6  D7FE               	bra	u6437
 10128  0036F8  2E02               	decfsz	??_toggle_light^0,f,c
 10129  0036FA  D7FC               	bra	u6437
 10130  0036FC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10131  0036FE  D7FA               	bra	u6437
 10132  003700  F000               	nop	
 10133  003702                     l4394:
 10134                           
 10135                           ;color.c: 60:         if (lightnumber == 2){
 10136  003702  0E02               	movlw	2
 10137  003704  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10138  003706  A4D8               	btfss	status,2,c
 10139  003708  EF88  F01B         	goto	u4561
 10140  00370C  EF8A  F01B         	goto	u4560
 10141  003710                     u4561:
 10142  003710  EFC2  F01B         	goto	l4402
 10143  003714                     u4560:
 10144  003714                     
 10145                           ;color.c: 61:             LATDbits.LATD4 = !LATDbits.LATD4;
 10146  003714  A87C               	btfss	124,4,c	;volatile
 10147  003716  EF8F  F01B         	goto	u4571
 10148  00371A  EF93  F01B         	goto	u4570
 10149  00371E                     u4571:
 10150  00371E  6A02               	clrf	??_toggle_light^0,c
 10151  003720  2A02               	incf	??_toggle_light^0,f,c
 10152  003722  EF94  F01B         	goto	u4588
 10153  003726                     u4570:
 10154  003726  6A02               	clrf	??_toggle_light^0,c
 10155  003728                     u4588:
 10156  003728  3A02               	swapf	??_toggle_light^0,f,c
 10157  00372A  507C               	movf	124,w,c	;volatile
 10158  00372C  1802               	xorwf	??_toggle_light^0,w,c
 10159  00372E  0BEF               	andlw	-17
 10160  003730  1802               	xorwf	??_toggle_light^0,w,c
 10161  003732  6E7C               	movwf	124,c	;volatile
 10162  003734                     
 10163                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10164  003734  0E29               	movlw	41
 10165  003736  6E03               	movwf	(??_toggle_light+1)^0,c
 10166  003738  0E96               	movlw	150
 10167  00373A  6E02               	movwf	??_toggle_light^0,c
 10168  00373C  0E7F               	movlw	127
 10169  00373E                     u6447:
 10170  00373E  2EE8               	decfsz	wreg,f,c
 10171  003740  D7FE               	bra	u6447
 10172  003742  2E02               	decfsz	??_toggle_light^0,f,c
 10173  003744  D7FC               	bra	u6447
 10174  003746  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10175  003748  D7FA               	bra	u6447
 10176  00374A  F000               	nop	
 10177  00374C                     
 10178                           ;color.c: 63:             LATDbits.LATD4 = !LATDbits.LATD4;
 10179  00374C  A87C               	btfss	124,4,c	;volatile
 10180  00374E  EFAB  F01B         	goto	u4591
 10181  003752  EFAF  F01B         	goto	u4590
 10182  003756                     u4591:
 10183  003756  6A02               	clrf	??_toggle_light^0,c
 10184  003758  2A02               	incf	??_toggle_light^0,f,c
 10185  00375A  EFB0  F01B         	goto	u4608
 10186  00375E                     u4590:
 10187  00375E  6A02               	clrf	??_toggle_light^0,c
 10188  003760                     u4608:
 10189  003760  3A02               	swapf	??_toggle_light^0,f,c
 10190  003762  507C               	movf	124,w,c	;volatile
 10191  003764  1802               	xorwf	??_toggle_light^0,w,c
 10192  003766  0BEF               	andlw	-17
 10193  003768  1802               	xorwf	??_toggle_light^0,w,c
 10194  00376A  6E7C               	movwf	124,c	;volatile
 10195                           
 10196                           ;color.c: 64:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10197  00376C  0E29               	movlw	41
 10198  00376E  6E03               	movwf	(??_toggle_light+1)^0,c
 10199  003770  0E96               	movlw	150
 10200  003772  6E02               	movwf	??_toggle_light^0,c
 10201  003774  0E7F               	movlw	127
 10202  003776                     u6457:
 10203  003776  2EE8               	decfsz	wreg,f,c
 10204  003778  D7FE               	bra	u6457
 10205  00377A  2E02               	decfsz	??_toggle_light^0,f,c
 10206  00377C  D7FC               	bra	u6457
 10207  00377E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10208  003780  D7FA               	bra	u6457
 10209  003782  F000               	nop	
 10210  003784                     l4402:
 10211                           
 10212                           ;color.c: 66:         if (lightnumber == 3){
 10213  003784  0E03               	movlw	3
 10214  003786  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10215  003788  A4D8               	btfss	status,2,c
 10216  00378A  EFC9  F01B         	goto	u4611
 10217  00378E  EFCB  F01B         	goto	u4610
 10218  003792                     u4611:
 10219  003792  EF07  F01C         	goto	l4410
 10220  003796                     u4610:
 10221  003796                     
 10222                           ;color.c: 67:             LATDbits.LATD3 = !LATDbits.LATD3;
 10223  003796  A67C               	btfss	124,3,c	;volatile
 10224  003798  EFD0  F01B         	goto	u4621
 10225  00379C  EFD4  F01B         	goto	u4620
 10226  0037A0                     u4621:
 10227  0037A0  6A02               	clrf	??_toggle_light^0,c
 10228  0037A2  2A02               	incf	??_toggle_light^0,f,c
 10229  0037A4  EFD5  F01B         	goto	u4638
 10230  0037A8                     u4620:
 10231  0037A8  6A02               	clrf	??_toggle_light^0,c
 10232  0037AA                     u4638:
 10233  0037AA  4602               	rlncf	??_toggle_light^0,f,c
 10234  0037AC  4602               	rlncf	??_toggle_light^0,f,c
 10235  0037AE  4602               	rlncf	??_toggle_light^0,f,c
 10236  0037B0  507C               	movf	124,w,c	;volatile
 10237  0037B2  1802               	xorwf	??_toggle_light^0,w,c
 10238  0037B4  0BF7               	andlw	-9
 10239  0037B6  1802               	xorwf	??_toggle_light^0,w,c
 10240  0037B8  6E7C               	movwf	124,c	;volatile
 10241  0037BA                     
 10242                           ;color.c: 68:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10243  0037BA  0E29               	movlw	41
 10244  0037BC  6E03               	movwf	(??_toggle_light+1)^0,c
 10245  0037BE  0E96               	movlw	150
 10246  0037C0  6E02               	movwf	??_toggle_light^0,c
 10247  0037C2  0E7F               	movlw	127
 10248  0037C4                     u6467:
 10249  0037C4  2EE8               	decfsz	wreg,f,c
 10250  0037C6  D7FE               	bra	u6467
 10251  0037C8  2E02               	decfsz	??_toggle_light^0,f,c
 10252  0037CA  D7FC               	bra	u6467
 10253  0037CC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10254  0037CE  D7FA               	bra	u6467
 10255  0037D0  F000               	nop	
 10256  0037D2                     
 10257                           ;color.c: 69:             LATDbits.LATD3 = !LATDbits.LATD3;
 10258  0037D2  A67C               	btfss	124,3,c	;volatile
 10259  0037D4  EFEE  F01B         	goto	u4641
 10260  0037D8  EFF2  F01B         	goto	u4640
 10261  0037DC                     u4641:
 10262  0037DC  6A02               	clrf	??_toggle_light^0,c
 10263  0037DE  2A02               	incf	??_toggle_light^0,f,c
 10264  0037E0  EFF3  F01B         	goto	u4658
 10265  0037E4                     u4640:
 10266  0037E4  6A02               	clrf	??_toggle_light^0,c
 10267  0037E6                     u4658:
 10268  0037E6  4602               	rlncf	??_toggle_light^0,f,c
 10269  0037E8  4602               	rlncf	??_toggle_light^0,f,c
 10270  0037EA  4602               	rlncf	??_toggle_light^0,f,c
 10271  0037EC  507C               	movf	124,w,c	;volatile
 10272  0037EE  1802               	xorwf	??_toggle_light^0,w,c
 10273  0037F0  0BF7               	andlw	-9
 10274  0037F2  1802               	xorwf	??_toggle_light^0,w,c
 10275  0037F4  6E7C               	movwf	124,c	;volatile
 10276                           
 10277                           ;color.c: 70:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10278  0037F6  0E29               	movlw	41
 10279  0037F8  6E03               	movwf	(??_toggle_light+1)^0,c
 10280  0037FA  0E96               	movlw	150
 10281  0037FC  6E02               	movwf	??_toggle_light^0,c
 10282  0037FE  0E7F               	movlw	127
 10283  003800                     u6477:
 10284  003800  2EE8               	decfsz	wreg,f,c
 10285  003802  D7FE               	bra	u6477
 10286  003804  2E02               	decfsz	??_toggle_light^0,f,c
 10287  003806  D7FC               	bra	u6477
 10288  003808  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10289  00380A  D7FA               	bra	u6477
 10290  00380C  F000               	nop	
 10291  00380E                     l4410:
 10292                           
 10293                           ;color.c: 72:         if (lightnumber == 4){
 10294  00380E  0E04               	movlw	4
 10295  003810  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10296  003812  A4D8               	btfss	status,2,c
 10297  003814  EF0E  F01C         	goto	u4661
 10298  003818  EF10  F01C         	goto	u4660
 10299  00381C                     u4661:
 10300  00381C  EF46  F01C         	goto	l4418
 10301  003820                     u4660:
 10302  003820                     
 10303                           ;color.c: 73:             LATFbits.LATF0 = !LATFbits.LATF0;
 10304  003820  A07E               	btfss	126,0,c	;volatile
 10305  003822  EF15  F01C         	goto	u4671
 10306  003826  EF19  F01C         	goto	u4670
 10307  00382A                     u4671:
 10308  00382A  6A02               	clrf	??_toggle_light^0,c
 10309  00382C  2A02               	incf	??_toggle_light^0,f,c
 10310  00382E  EF1A  F01C         	goto	u4688
 10311  003832                     u4670:
 10312  003832  6A02               	clrf	??_toggle_light^0,c
 10313  003834                     u4688:
 10314  003834  507E               	movf	126,w,c	;volatile
 10315  003836  1802               	xorwf	??_toggle_light^0,w,c
 10316  003838  0BFE               	andlw	-2
 10317  00383A  1802               	xorwf	??_toggle_light^0,w,c
 10318  00383C  6E7E               	movwf	126,c	;volatile
 10319  00383E                     
 10320                           ;color.c: 74:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10321  00383E  0E29               	movlw	41
 10322  003840  6E03               	movwf	(??_toggle_light+1)^0,c
 10323  003842  0E96               	movlw	150
 10324  003844  6E02               	movwf	??_toggle_light^0,c
 10325  003846  0E7F               	movlw	127
 10326  003848                     u6487:
 10327  003848  2EE8               	decfsz	wreg,f,c
 10328  00384A  D7FE               	bra	u6487
 10329  00384C  2E02               	decfsz	??_toggle_light^0,f,c
 10330  00384E  D7FC               	bra	u6487
 10331  003850  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10332  003852  D7FA               	bra	u6487
 10333  003854  F000               	nop	
 10334  003856                     
 10335                           ;color.c: 75:             LATFbits.LATF0 = !LATFbits.LATF0;
 10336  003856  A07E               	btfss	126,0,c	;volatile
 10337  003858  EF30  F01C         	goto	u4691
 10338  00385C  EF34  F01C         	goto	u4690
 10339  003860                     u4691:
 10340  003860  6A02               	clrf	??_toggle_light^0,c
 10341  003862  2A02               	incf	??_toggle_light^0,f,c
 10342  003864  EF35  F01C         	goto	u4708
 10343  003868                     u4690:
 10344  003868  6A02               	clrf	??_toggle_light^0,c
 10345  00386A                     u4708:
 10346  00386A  507E               	movf	126,w,c	;volatile
 10347  00386C  1802               	xorwf	??_toggle_light^0,w,c
 10348  00386E  0BFE               	andlw	-2
 10349  003870  1802               	xorwf	??_toggle_light^0,w,c
 10350  003872  6E7E               	movwf	126,c	;volatile
 10351                           
 10352                           ;color.c: 76:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10353  003874  0E29               	movlw	41
 10354  003876  6E03               	movwf	(??_toggle_light+1)^0,c
 10355  003878  0E96               	movlw	150
 10356  00387A  6E02               	movwf	??_toggle_light^0,c
 10357  00387C  0E7F               	movlw	127
 10358  00387E                     u6497:
 10359  00387E  2EE8               	decfsz	wreg,f,c
 10360  003880  D7FE               	bra	u6497
 10361  003882  2E02               	decfsz	??_toggle_light^0,f,c
 10362  003884  D7FC               	bra	u6497
 10363  003886  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10364  003888  D7FA               	bra	u6497
 10365  00388A  F000               	nop	
 10366  00388C                     l4418:
 10367                           
 10368                           ;color.c: 78:         if (lightnumber == 3){
 10369  00388C  0E03               	movlw	3
 10370  00388E  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10371  003890  A4D8               	btfss	status,2,c
 10372  003892  EF4D  F01C         	goto	u4711
 10373  003896  EF4F  F01C         	goto	u4710
 10374  00389A                     u4711:
 10375  00389A  EF85  F01C         	goto	l4426
 10376  00389E                     u4710:
 10377  00389E                     
 10378                           ;color.c: 79:             LATHbits.LATH0 = !LATHbits.LATH0;
 10379  00389E  A080               	btfss	128,0,c	;volatile
 10380  0038A0  EF54  F01C         	goto	u4721
 10381  0038A4  EF58  F01C         	goto	u4720
 10382  0038A8                     u4721:
 10383  0038A8  6A02               	clrf	??_toggle_light^0,c
 10384  0038AA  2A02               	incf	??_toggle_light^0,f,c
 10385  0038AC  EF59  F01C         	goto	u4738
 10386  0038B0                     u4720:
 10387  0038B0  6A02               	clrf	??_toggle_light^0,c
 10388  0038B2                     u4738:
 10389  0038B2  5080               	movf	128,w,c	;volatile
 10390  0038B4  1802               	xorwf	??_toggle_light^0,w,c
 10391  0038B6  0BFE               	andlw	-2
 10392  0038B8  1802               	xorwf	??_toggle_light^0,w,c
 10393  0038BA  6E80               	movwf	128,c	;volatile
 10394  0038BC                     
 10395                           ;color.c: 80:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10396  0038BC  0E29               	movlw	41
 10397  0038BE  6E03               	movwf	(??_toggle_light+1)^0,c
 10398  0038C0  0E96               	movlw	150
 10399  0038C2  6E02               	movwf	??_toggle_light^0,c
 10400  0038C4  0E7F               	movlw	127
 10401  0038C6                     u6507:
 10402  0038C6  2EE8               	decfsz	wreg,f,c
 10403  0038C8  D7FE               	bra	u6507
 10404  0038CA  2E02               	decfsz	??_toggle_light^0,f,c
 10405  0038CC  D7FC               	bra	u6507
 10406  0038CE  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10407  0038D0  D7FA               	bra	u6507
 10408  0038D2  F000               	nop	
 10409  0038D4                     
 10410                           ;color.c: 81:             LATHbits.LATH0 = !LATHbits.LATH0;
 10411  0038D4  A080               	btfss	128,0,c	;volatile
 10412  0038D6  EF6F  F01C         	goto	u4741
 10413  0038DA  EF73  F01C         	goto	u4740
 10414  0038DE                     u4741:
 10415  0038DE  6A02               	clrf	??_toggle_light^0,c
 10416  0038E0  2A02               	incf	??_toggle_light^0,f,c
 10417  0038E2  EF74  F01C         	goto	u4758
 10418  0038E6                     u4740:
 10419  0038E6  6A02               	clrf	??_toggle_light^0,c
 10420  0038E8                     u4758:
 10421  0038E8  5080               	movf	128,w,c	;volatile
 10422  0038EA  1802               	xorwf	??_toggle_light^0,w,c
 10423  0038EC  0BFE               	andlw	-2
 10424  0038EE  1802               	xorwf	??_toggle_light^0,w,c
 10425  0038F0  6E80               	movwf	128,c	;volatile
 10426                           
 10427                           ;color.c: 82:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10428  0038F2  0E29               	movlw	41
 10429  0038F4  6E03               	movwf	(??_toggle_light+1)^0,c
 10430  0038F6  0E96               	movlw	150
 10431  0038F8  6E02               	movwf	??_toggle_light^0,c
 10432  0038FA  0E7F               	movlw	127
 10433  0038FC                     u6517:
 10434  0038FC  2EE8               	decfsz	wreg,f,c
 10435  0038FE  D7FE               	bra	u6517
 10436  003900  2E02               	decfsz	??_toggle_light^0,f,c
 10437  003902  D7FC               	bra	u6517
 10438  003904  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10439  003906  D7FA               	bra	u6517
 10440  003908  F000               	nop	
 10441  00390A                     l4426:
 10442                           
 10443                           ;color.c: 84:     }
 10444  00390A  2A04               	incf	toggle_light@i^0,f,c
 10445  00390C                     l60:
 10446  00390C  5001               	movf	toggle_light@toggletime^0,w,c
 10447  00390E  5C04               	subwf	toggle_light@i^0,w,c
 10448  003910  A0D8               	btfss	status,0,c
 10449  003912  EF8D  F01C         	goto	u4761
 10450  003916  EF8F  F01C         	goto	u4760
 10451  00391A                     u4761:
 10452  00391A  EF41  F01B         	goto	l4386
 10453  00391E                     u4760:
 10454  00391E  0012               	return		;funcret
 10455  003920                     __end_of_toggle_light:
 10456                           	callstack 0
 10457                           
 10458 ;; *************** function _lroundf *****************
 10459 ;; Defined at:
 10460 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;  x               4    6[BANK0 ] float 
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;		None
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  4    6[BANK0 ] long 
 10467 ;; Registers used:
 10468 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10469 ;; Tracked objects:
 10470 ;;		On entry : 0/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10474 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10477 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10478 ;;Total ram usage:        4 bytes
 10479 ;; Hardware stack levels used: 1
 10480 ;; Hardware stack levels required when called: 4
 10481 ;; This function calls:
 10482 ;;		___fltol
 10483 ;;		_roundf
 10484 ;; This function is called by:
 10485 ;;		_detect_color
 10486 ;;		_amb_light_measure
 10487 ;;		_detect_wall
 10488 ;; This function uses a non-reentrant model
 10489 ;;
 10490                           
 10491                           	psect	text47
 10492  005CD2                     __ptext47:
 10493                           	callstack 0
 10494  005CD2                     _lroundf:
 10495                           	callstack 24
 10496  005CD2  C066  F041         	movff	lroundf@x,roundf@x
 10497  005CD6  C067  F042         	movff	lroundf@x+1,roundf@x+1
 10498  005CDA  C068  F043         	movff	lroundf@x+2,roundf@x+2
 10499  005CDE  C069  F044         	movff	lroundf@x+3,roundf@x+3
 10500  005CE2  ECDB  F012         	call	_roundf	;wreg free
 10501  005CE6  C041  F05B         	movff	?_roundf,___fltol@f1
 10502  005CEA  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
 10503  005CEE  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
 10504  005CF2  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
 10505  005CF6  ECAA  F027         	call	___fltol	;wreg free
 10506  005CFA  C05B  F066         	movff	?___fltol,?_lroundf
 10507  005CFE  C05C  F067         	movff	?___fltol+1,?_lroundf+1
 10508  005D02  C05D  F068         	movff	?___fltol+2,?_lroundf+2
 10509  005D06  C05E  F069         	movff	?___fltol+3,?_lroundf+3
 10510  005D0A  0012               	return		;funcret
 10511  005D0C                     __end_of_lroundf:
 10512                           	callstack 0
 10513                           
 10514 ;; *************** function _roundf *****************
 10515 ;; Defined at:
 10516 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
 10517 ;; Parameters:    Size  Location     Type
 10518 ;;  x               4   64[COMRAM] float 
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;  y               4   86[COMRAM] float 
 10521 ;;  u               4   82[COMRAM] struct .
 10522 ;;  e               2   76[COMRAM] int 
 10523 ;; Return value:  Size  Location     Type
 10524 ;;                  4   64[COMRAM] float 
 10525 ;; Registers used:
 10526 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10527 ;; Tracked objects:
 10528 ;;		On entry : 0/0
 10529 ;;		On exit  : 0/0
 10530 ;;		Unchanged: 0/0
 10531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10532 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10533 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10534 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10535 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10536 ;;Total ram usage:       26 bytes
 10537 ;; Hardware stack levels used: 1
 10538 ;; Hardware stack levels required when called: 3
 10539 ;; This function calls:
 10540 ;;		___fladd
 10541 ;;		___flge
 10542 ;;		___flmul
 10543 ;;		___flneg
 10544 ;;		___flsub
 10545 ;; This function is called by:
 10546 ;;		_lroundf
 10547 ;; This function uses a non-reentrant model
 10548 ;;
 10549                           
 10550                           	psect	text48
 10551  0025B6                     __ptext48:
 10552                           	callstack 0
 10553  0025B6                     _roundf:
 10554                           	callstack 24
 10555  0025B6  C13A  F053         	movff	roundf@F527,roundf@u
 10556  0025BA  C13B  F054         	movff	roundf@F527+1,roundf@u+1
 10557  0025BE  C13C  F055         	movff	roundf@F527+2,roundf@u+2
 10558  0025C2  C13D  F056         	movff	roundf@F527+3,roundf@u+3
 10559  0025C6  C041  F053         	movff	roundf@x,roundf@u
 10560  0025CA  C042  F054         	movff	roundf@x+1,roundf@u+1
 10561  0025CE  C043  F055         	movff	roundf@x+2,roundf@u+2
 10562  0025D2  C044  F056         	movff	roundf@x+3,roundf@u+3
 10563  0025D6  C053  F045         	movff	roundf@u,??_roundf
 10564  0025DA  C054  F046         	movff	roundf@u+1,??_roundf+1
 10565  0025DE  C055  F047         	movff	roundf@u+2,??_roundf+2
 10566  0025E2  C056  F048         	movff	roundf@u+3,??_roundf+3
 10567  0025E6  0E18               	movlw	24
 10568  0025E8  EFFB  F012         	goto	u4420
 10569  0025EC                     u4425:
 10570  0025EC  90D8               	bcf	status,0,c
 10571  0025EE  3248               	rrcf	(??_roundf+3)^0,f,c
 10572  0025F0  3247               	rrcf	(??_roundf+2)^0,f,c
 10573  0025F2  3246               	rrcf	(??_roundf+1)^0,f,c
 10574  0025F4  3245               	rrcf	??_roundf^0,f,c
 10575  0025F6                     u4420:
 10576  0025F6  2EE8               	decfsz	wreg,f,c
 10577  0025F8  EFF6  F012         	goto	u4425
 10578  0025FC  5045               	movf	??_roundf^0,w,c
 10579  0025FE  6E4D               	movwf	roundf@e^0,c
 10580  002600  6A4E               	clrf	(roundf@e+1)^0,c
 10581  002602  BE4E               	btfsc	(roundf@e+1)^0,7,c
 10582  002604  EF0D  F013         	goto	u4431
 10583  002608  504E               	movf	(roundf@e+1)^0,w,c
 10584  00260A  E109               	bnz	u4430
 10585  00260C  0E96               	movlw	150
 10586  00260E  5C4D               	subwf	roundf@e^0,w,c
 10587  002610  A0D8               	btfss	status,0,c
 10588  002612  EF0D  F013         	goto	u4431
 10589  002616  EF0F  F013         	goto	u4430
 10590  00261A                     u4431:
 10591  00261A  EF19  F013         	goto	l4356
 10592  00261E                     u4430:
 10593  00261E  C041  F041         	movff	roundf@x,?_roundf
 10594  002622  C042  F042         	movff	roundf@x+1,?_roundf+1
 10595  002626  C043  F043         	movff	roundf@x+2,?_roundf+2
 10596  00262A  C044  F044         	movff	roundf@x+3,?_roundf+3
 10597  00262E  EFB1  F014         	goto	l1419
 10598  002632                     l4356:
 10599  002632  C053  F045         	movff	roundf@u,??_roundf
 10600  002636  C054  F046         	movff	roundf@u+1,??_roundf+1
 10601  00263A  C055  F047         	movff	roundf@u+2,??_roundf+2
 10602  00263E  C056  F048         	movff	roundf@u+3,??_roundf+3
 10603  002642  0E20               	movlw	32
 10604  002644  EF29  F013         	goto	u4440
 10605  002648                     u4445:
 10606  002648  90D8               	bcf	status,0,c
 10607  00264A  3248               	rrcf	(??_roundf+3)^0,f,c
 10608  00264C  3247               	rrcf	(??_roundf+2)^0,f,c
 10609  00264E  3246               	rrcf	(??_roundf+1)^0,f,c
 10610  002650  3245               	rrcf	??_roundf^0,f,c
 10611  002652                     u4440:
 10612  002652  2EE8               	decfsz	wreg,f,c
 10613  002654  EF24  F013         	goto	u4445
 10614  002658  5045               	movf	??_roundf^0,w,c
 10615  00265A  1046               	iorwf	(??_roundf+1)^0,w,c
 10616  00265C  1047               	iorwf	(??_roundf+2)^0,w,c
 10617  00265E  1048               	iorwf	(??_roundf+3)^0,w,c
 10618  002660  B4D8               	btfsc	status,2,c
 10619  002662  EF35  F013         	goto	u4451
 10620  002666  EF37  F013         	goto	u4450
 10621  00266A                     u4451:
 10622  00266A  EF49  F013         	goto	l4360
 10623  00266E                     u4450:
 10624  00266E  C041  F001         	movff	roundf@x,___flneg@f1
 10625  002672  C042  F002         	movff	roundf@x+1,___flneg@f1+1
 10626  002676  C043  F003         	movff	roundf@x+2,___flneg@f1+2
 10627  00267A  C044  F004         	movff	roundf@x+3,___flneg@f1+3
 10628  00267E  EC86  F02E         	call	___flneg	;wreg free
 10629  002682  C001  F041         	movff	?___flneg,roundf@x
 10630  002686  C002  F042         	movff	?___flneg+1,roundf@x+1
 10631  00268A  C003  F043         	movff	?___flneg+2,roundf@x+2
 10632  00268E  C004  F044         	movff	?___flneg+3,roundf@x+3
 10633  002692                     l4360:
 10634  002692  BE4E               	btfsc	(roundf@e+1)^0,7,c
 10635  002694  EF57  F013         	goto	u4460
 10636  002698  504E               	movf	(roundf@e+1)^0,w,c
 10637  00269A  E107               	bnz	u4461
 10638  00269C  0E7E               	movlw	126
 10639  00269E  5C4D               	subwf	roundf@e^0,w,c
 10640  0026A0  B0D8               	btfsc	status,0,c
 10641  0026A2  EF55  F013         	goto	u4461
 10642  0026A6  EF57  F013         	goto	u4460
 10643  0026AA                     u4461:
 10644  0026AA  EF73  F013         	goto	l4366
 10645  0026AE                     u4460:
 10646  0026AE  C053  F028         	movff	roundf@u,___flmul@b
 10647  0026B2  C054  F029         	movff	roundf@u+1,___flmul@b+1
 10648  0026B6  C055  F02A         	movff	roundf@u+2,___flmul@b+2
 10649  0026BA  C056  F02B         	movff	roundf@u+3,___flmul@b+3
 10650  0026BE  0E00               	movlw	0
 10651  0026C0  6E2C               	movwf	___flmul@a^0,c
 10652  0026C2  0E00               	movlw	0
 10653  0026C4  6E2D               	movwf	(___flmul@a+1)^0,c
 10654  0026C6  0E00               	movlw	0
 10655  0026C8  6E2E               	movwf	(___flmul@a+2)^0,c
 10656  0026CA  0E00               	movlw	0
 10657  0026CC  6E2F               	movwf	(___flmul@a+3)^0,c
 10658  0026CE  ECC6  F010         	call	___flmul	;wreg free
 10659  0026D2  C028  F041         	movff	?___flmul,?_roundf
 10660  0026D6  C029  F042         	movff	?___flmul+1,?_roundf+1
 10661  0026DA  C02A  F043         	movff	?___flmul+2,?_roundf+2
 10662  0026DE  C02B  F044         	movff	?___flmul+3,?_roundf+3
 10663  0026E2  EFB1  F014         	goto	l1419
 10664  0026E6                     l4366:
 10665  0026E6  0E00               	movlw	0
 10666  0026E8  6E05               	movwf	___fladd@a^0,c
 10667  0026EA  0E00               	movlw	0
 10668  0026EC  6E06               	movwf	(___fladd@a+1)^0,c
 10669  0026EE  0E00               	movlw	0
 10670  0026F0  6E07               	movwf	(___fladd@a+2)^0,c
 10671  0026F2  0E4B               	movlw	75
 10672  0026F4  6E08               	movwf	(___fladd@a+3)^0,c
 10673  0026F6  C041  F001         	movff	roundf@x,___fladd@b
 10674  0026FA  C042  F002         	movff	roundf@x+1,___fladd@b+1
 10675  0026FE  C043  F003         	movff	roundf@x+2,___fladd@b+2
 10676  002702  C044  F004         	movff	roundf@x+3,___fladd@b+3
 10677  002706  EC66  F00E         	call	___fladd	;wreg free
 10678  00270A  C001  F04F         	movff	?___fladd,_roundf$2950
 10679  00270E  C002  F050         	movff	?___fladd+1,_roundf$2950+1
 10680  002712  C003  F051         	movff	?___fladd+2,_roundf$2950+2
 10681  002716  C004  F052         	movff	?___fladd+3,_roundf$2950+3
 10682  00271A  0E00               	movlw	0
 10683  00271C  6E05               	movwf	___fladd@a^0,c
 10684  00271E  0E00               	movlw	0
 10685  002720  6E06               	movwf	(___fladd@a+1)^0,c
 10686  002722  0E00               	movlw	0
 10687  002724  6E07               	movwf	(___fladd@a+2)^0,c
 10688  002726  0ECB               	movlw	203
 10689  002728  6E08               	movwf	(___fladd@a+3)^0,c
 10690  00272A  C04F  F001         	movff	_roundf$2950,___fladd@b
 10691  00272E  C050  F002         	movff	_roundf$2950+1,___fladd@b+1
 10692  002732  C051  F003         	movff	_roundf$2950+2,___fladd@b+2
 10693  002736  C052  F004         	movff	_roundf$2950+3,___fladd@b+3
 10694  00273A  EC66  F00E         	call	___fladd	;wreg free
 10695  00273E  C001  F049         	movff	?___fladd,_roundf$2951
 10696  002742  C002  F04A         	movff	?___fladd+1,_roundf$2951+1
 10697  002746  C003  F04B         	movff	?___fladd+2,_roundf$2951+2
 10698  00274A  C004  F04C         	movff	?___fladd+3,_roundf$2951+3
 10699  00274E  C049  F011         	movff	_roundf$2951,___flsub@b
 10700  002752  C04A  F012         	movff	_roundf$2951+1,___flsub@b+1
 10701  002756  C04B  F013         	movff	_roundf$2951+2,___flsub@b+2
 10702  00275A  C04C  F014         	movff	_roundf$2951+3,___flsub@b+3
 10703  00275E  C041  F015         	movff	roundf@x,___flsub@a
 10704  002762  C042  F016         	movff	roundf@x+1,___flsub@a+1
 10705  002766  C043  F017         	movff	roundf@x+2,___flsub@a+2
 10706  00276A  C044  F018         	movff	roundf@x+3,___flsub@a+3
 10707  00276E  EC84  F02D         	call	___flsub	;wreg free
 10708  002772  C011  F057         	movff	?___flsub,roundf@y
 10709  002776  C012  F058         	movff	?___flsub+1,roundf@y+1
 10710  00277A  C013  F059         	movff	?___flsub+2,roundf@y+2
 10711  00277E  C014  F05A         	movff	?___flsub+3,roundf@y+3
 10712  002782  0E00               	movlw	0
 10713  002784  6E01               	movwf	___flge@ff1^0,c
 10714  002786  0E00               	movlw	0
 10715  002788  6E02               	movwf	(___flge@ff1+1)^0,c
 10716  00278A  0E00               	movlw	0
 10717  00278C  6E03               	movwf	(___flge@ff1+2)^0,c
 10718  00278E  0E3F               	movlw	63
 10719  002790  6E04               	movwf	(___flge@ff1+3)^0,c
 10720  002792  C057  F005         	movff	roundf@y,___flge@ff2
 10721  002796  C058  F006         	movff	roundf@y+1,___flge@ff2+1
 10722  00279A  C059  F007         	movff	roundf@y+2,___flge@ff2+2
 10723  00279E  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
 10724  0027A2  EC2E  F028         	call	___flge	;wreg free
 10725  0027A6  B0D8               	btfsc	status,0,c
 10726  0027A8  EFD8  F013         	goto	u4471
 10727  0027AC  EFDA  F013         	goto	u4470
 10728  0027B0                     u4471:
 10729  0027B0  EF10  F014         	goto	l4370
 10730  0027B4                     u4470:
 10731  0027B4  C041  F005         	movff	roundf@x,___fladd@a
 10732  0027B8  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10733  0027BC  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10734  0027C0  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10735  0027C4  C057  F001         	movff	roundf@y,___fladd@b
 10736  0027C8  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10737  0027CC  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10738  0027D0  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10739  0027D4  EC66  F00E         	call	___fladd	;wreg free
 10740  0027D8  C001  F04F         	movff	?___fladd,_roundf$2950
 10741  0027DC  C002  F050         	movff	?___fladd+1,_roundf$2950+1
 10742  0027E0  C003  F051         	movff	?___fladd+2,_roundf$2950+2
 10743  0027E4  C004  F052         	movff	?___fladd+3,_roundf$2950+3
 10744  0027E8  C04F  F001         	movff	_roundf$2950,___fladd@b
 10745  0027EC  C050  F002         	movff	_roundf$2950+1,___fladd@b+1
 10746  0027F0  C051  F003         	movff	_roundf$2950+2,___fladd@b+2
 10747  0027F4  C052  F004         	movff	_roundf$2950+3,___fladd@b+3
 10748  0027F8  0E00               	movlw	0
 10749  0027FA  6E05               	movwf	___fladd@a^0,c
 10750  0027FC  0E00               	movlw	0
 10751  0027FE  6E06               	movwf	(___fladd@a+1)^0,c
 10752  002800  0E80               	movlw	128
 10753  002802  6E07               	movwf	(___fladd@a+2)^0,c
 10754  002804  0EBF               	movlw	191
 10755  002806  6E08               	movwf	(___fladd@a+3)^0,c
 10756  002808  EC66  F00E         	call	___fladd	;wreg free
 10757  00280C  C001  F057         	movff	?___fladd,roundf@y
 10758  002810  C002  F058         	movff	?___fladd+1,roundf@y+1
 10759  002814  C003  F059         	movff	?___fladd+2,roundf@y+2
 10760  002818  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10761  00281C  EF79  F014         	goto	l4376
 10762  002820                     l4370:
 10763  002820  0E00               	movlw	0
 10764  002822  6E01               	movwf	___flge@ff1^0,c
 10765  002824  0E00               	movlw	0
 10766  002826  6E02               	movwf	(___flge@ff1+1)^0,c
 10767  002828  0E00               	movlw	0
 10768  00282A  6E03               	movwf	(___flge@ff1+2)^0,c
 10769  00282C  0EBF               	movlw	191
 10770  00282E  6E04               	movwf	(___flge@ff1+3)^0,c
 10771  002830  C057  F005         	movff	roundf@y,___flge@ff2
 10772  002834  C058  F006         	movff	roundf@y+1,___flge@ff2+1
 10773  002838  C059  F007         	movff	roundf@y+2,___flge@ff2+2
 10774  00283C  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
 10775  002840  EC2E  F028         	call	___flge	;wreg free
 10776  002844  A0D8               	btfss	status,0,c
 10777  002846  EF27  F014         	goto	u4481
 10778  00284A  EF29  F014         	goto	u4480
 10779  00284E                     u4481:
 10780  00284E  EF5F  F014         	goto	l4374
 10781  002852                     u4480:
 10782  002852  C041  F005         	movff	roundf@x,___fladd@a
 10783  002856  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10784  00285A  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10785  00285E  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10786  002862  C057  F001         	movff	roundf@y,___fladd@b
 10787  002866  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10788  00286A  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10789  00286E  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10790  002872  EC66  F00E         	call	___fladd	;wreg free
 10791  002876  C001  F04F         	movff	?___fladd,_roundf$2950
 10792  00287A  C002  F050         	movff	?___fladd+1,_roundf$2950+1
 10793  00287E  C003  F051         	movff	?___fladd+2,_roundf$2950+2
 10794  002882  C004  F052         	movff	?___fladd+3,_roundf$2950+3
 10795  002886  C04F  F001         	movff	_roundf$2950,___fladd@b
 10796  00288A  C050  F002         	movff	_roundf$2950+1,___fladd@b+1
 10797  00288E  C051  F003         	movff	_roundf$2950+2,___fladd@b+2
 10798  002892  C052  F004         	movff	_roundf$2950+3,___fladd@b+3
 10799  002896  0E00               	movlw	0
 10800  002898  6E05               	movwf	___fladd@a^0,c
 10801  00289A  0E00               	movlw	0
 10802  00289C  6E06               	movwf	(___fladd@a+1)^0,c
 10803  00289E  0E80               	movlw	128
 10804  0028A0  6E07               	movwf	(___fladd@a+2)^0,c
 10805  0028A2  0E3F               	movlw	63
 10806  0028A4  6E08               	movwf	(___fladd@a+3)^0,c
 10807  0028A6  EC66  F00E         	call	___fladd	;wreg free
 10808  0028AA  C001  F057         	movff	?___fladd,roundf@y
 10809  0028AE  C002  F058         	movff	?___fladd+1,roundf@y+1
 10810  0028B2  C003  F059         	movff	?___fladd+2,roundf@y+2
 10811  0028B6  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10812  0028BA  EF79  F014         	goto	l4376
 10813  0028BE                     l4374:
 10814  0028BE  C057  F001         	movff	roundf@y,___fladd@b
 10815  0028C2  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10816  0028C6  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10817  0028CA  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10818  0028CE  C041  F005         	movff	roundf@x,___fladd@a
 10819  0028D2  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10820  0028D6  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10821  0028DA  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10822  0028DE  EC66  F00E         	call	___fladd	;wreg free
 10823  0028E2  C001  F057         	movff	?___fladd,roundf@y
 10824  0028E6  C002  F058         	movff	?___fladd+1,roundf@y+1
 10825  0028EA  C003  F059         	movff	?___fladd+2,roundf@y+2
 10826  0028EE  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10827  0028F2                     l4376:
 10828  0028F2  C053  F045         	movff	roundf@u,??_roundf
 10829  0028F6  C054  F046         	movff	roundf@u+1,??_roundf+1
 10830  0028FA  C055  F047         	movff	roundf@u+2,??_roundf+2
 10831  0028FE  C056  F048         	movff	roundf@u+3,??_roundf+3
 10832  002902  0E20               	movlw	32
 10833  002904  EF89  F014         	goto	u4490
 10834  002908                     u4495:
 10835  002908  90D8               	bcf	status,0,c
 10836  00290A  3248               	rrcf	(??_roundf+3)^0,f,c
 10837  00290C  3247               	rrcf	(??_roundf+2)^0,f,c
 10838  00290E  3246               	rrcf	(??_roundf+1)^0,f,c
 10839  002910  3245               	rrcf	??_roundf^0,f,c
 10840  002912                     u4490:
 10841  002912  2EE8               	decfsz	wreg,f,c
 10842  002914  EF84  F014         	goto	u4495
 10843  002918  5045               	movf	??_roundf^0,w,c
 10844  00291A  1046               	iorwf	(??_roundf+1)^0,w,c
 10845  00291C  1047               	iorwf	(??_roundf+2)^0,w,c
 10846  00291E  1048               	iorwf	(??_roundf+3)^0,w,c
 10847  002920  B4D8               	btfsc	status,2,c
 10848  002922  EF95  F014         	goto	u4501
 10849  002926  EF97  F014         	goto	u4500
 10850  00292A                     u4501:
 10851  00292A  EFA9  F014         	goto	l4380
 10852  00292E                     u4500:
 10853  00292E  C057  F001         	movff	roundf@y,___flneg@f1
 10854  002932  C058  F002         	movff	roundf@y+1,___flneg@f1+1
 10855  002936  C059  F003         	movff	roundf@y+2,___flneg@f1+2
 10856  00293A  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
 10857  00293E  EC86  F02E         	call	___flneg	;wreg free
 10858  002942  C001  F057         	movff	?___flneg,roundf@y
 10859  002946  C002  F058         	movff	?___flneg+1,roundf@y+1
 10860  00294A  C003  F059         	movff	?___flneg+2,roundf@y+2
 10861  00294E  C004  F05A         	movff	?___flneg+3,roundf@y+3
 10862  002952                     l4380:
 10863  002952  C057  F041         	movff	roundf@y,?_roundf
 10864  002956  C058  F042         	movff	roundf@y+1,?_roundf+1
 10865  00295A  C059  F043         	movff	roundf@y+2,?_roundf+2
 10866  00295E  C05A  F044         	movff	roundf@y+3,?_roundf+3
 10867  002962                     l1419:
 10868  002962  0012               	return		;funcret
 10869  002964                     __end_of_roundf:
 10870                           	callstack 0
 10871                           
 10872 ;; *************** function ___flsub *****************
 10873 ;; Defined at:
 10874 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10875 ;; Parameters:    Size  Location     Type
 10876 ;;  b               4   16[COMRAM] float 
 10877 ;;  a               4   20[COMRAM] float 
 10878 ;; Auto vars:     Size  Location     Type
 10879 ;;		None
 10880 ;; Return value:  Size  Location     Type
 10881 ;;                  4   16[COMRAM] float 
 10882 ;; Registers used:
 10883 ;;		wreg, status,2, status,0, cstack
 10884 ;; Tracked objects:
 10885 ;;		On entry : 0/0
 10886 ;;		On exit  : 0/0
 10887 ;;		Unchanged: 0/0
 10888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10889 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10892 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10893 ;;Total ram usage:        8 bytes
 10894 ;; Hardware stack levels used: 1
 10895 ;; Hardware stack levels required when called: 2
 10896 ;; This function calls:
 10897 ;;		___fladd
 10898 ;; This function is called by:
 10899 ;;		_roundf
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text49
 10904  005B08                     __ptext49:
 10905                           	callstack 0
 10906  005B08                     ___flsub:
 10907                           	callstack 24
 10908  005B08  0E00               	movlw	0
 10909  005B0A  1A15               	xorwf	___flsub@a^0,f,c
 10910  005B0C  0E00               	movlw	0
 10911  005B0E  1A16               	xorwf	(___flsub@a+1)^0,f,c
 10912  005B10  0E00               	movlw	0
 10913  005B12  1A17               	xorwf	(___flsub@a+2)^0,f,c
 10914  005B14  0E80               	movlw	128
 10915  005B16  1A18               	xorwf	(___flsub@a+3)^0,f,c
 10916  005B18  C011  F001         	movff	___flsub@b,___fladd@b
 10917  005B1C  C012  F002         	movff	___flsub@b+1,___fladd@b+1
 10918  005B20  C013  F003         	movff	___flsub@b+2,___fladd@b+2
 10919  005B24  C014  F004         	movff	___flsub@b+3,___fladd@b+3
 10920  005B28  C015  F005         	movff	___flsub@a,___fladd@a
 10921  005B2C  C016  F006         	movff	___flsub@a+1,___fladd@a+1
 10922  005B30  C017  F007         	movff	___flsub@a+2,___fladd@a+2
 10923  005B34  C018  F008         	movff	___flsub@a+3,___fladd@a+3
 10924  005B38  EC66  F00E         	call	___fladd	;wreg free
 10925  005B3C  C001  F011         	movff	?___fladd,?___flsub
 10926  005B40  C002  F012         	movff	?___fladd+1,?___flsub+1
 10927  005B44  C003  F013         	movff	?___fladd+2,?___flsub+2
 10928  005B48  C004  F014         	movff	?___fladd+3,?___flsub+3
 10929  005B4C  0012               	return		;funcret
 10930  005B4E                     __end_of___flsub:
 10931                           	callstack 0
 10932                           
 10933 ;; *************** function ___fladd *****************
 10934 ;; Defined at:
 10935 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;  b               4    0[COMRAM] float 
 10938 ;;  a               4    4[COMRAM] float 
 10939 ;; Auto vars:     Size  Location     Type
 10940 ;;  grs             1   15[COMRAM] unsigned char 
 10941 ;;  bexp            1   14[COMRAM] unsigned char 
 10942 ;;  aexp            1   13[COMRAM] unsigned char 
 10943 ;;  signs           1   12[COMRAM] unsigned char 
 10944 ;; Return value:  Size  Location     Type
 10945 ;;                  4    0[COMRAM] unsigned char 
 10946 ;; Registers used:
 10947 ;;		wreg, status,2, status,0
 10948 ;; Tracked objects:
 10949 ;;		On entry : 0/0
 10950 ;;		On exit  : 0/0
 10951 ;;		Unchanged: 0/0
 10952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10953 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10954 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10955 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10956 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10957 ;;Total ram usage:       16 bytes
 10958 ;; Hardware stack levels used: 1
 10959 ;; Hardware stack levels required when called: 1
 10960 ;; This function calls:
 10961 ;;		Nothing
 10962 ;; This function is called by:
 10963 ;;		___flsub
 10964 ;;		_roundf
 10965 ;; This function uses a non-reentrant model
 10966 ;;
 10967                           
 10968                           	psect	text50
 10969  001CCC                     __ptext50:
 10970                           	callstack 0
 10971  001CCC                     ___fladd:
 10972                           	callstack 24
 10973  001CCC  5004               	movf	(___fladd@b+3)^0,w,c
 10974  001CCE  0B80               	andlw	128
 10975  001CD0  6E0D               	movwf	___fladd@signs^0,c
 10976  001CD2  5004               	movf	(___fladd@b+3)^0,w,c
 10977  001CD4  2404               	addwf	(___fladd@b+3)^0,w,c
 10978  001CD6  6E0F               	movwf	___fladd@bexp^0,c
 10979  001CD8  AE03               	btfss	(___fladd@b+2)^0,7,c
 10980  001CDA  EF71  F00E         	goto	u3471
 10981  001CDE  EF73  F00E         	goto	u3470
 10982  001CE2                     u3471:
 10983  001CE2  EF74  F00E         	goto	l3722
 10984  001CE6                     u3470:
 10985  001CE6  800F               	bsf	___fladd@bexp^0,0,c
 10986  001CE8                     l3722:
 10987  001CE8  500F               	movf	___fladd@bexp^0,w,c
 10988  001CEA  B4D8               	btfsc	status,2,c
 10989  001CEC  EF7A  F00E         	goto	u3481
 10990  001CF0  EF7C  F00E         	goto	u3480
 10991  001CF4                     u3481:
 10992  001CF4  EF91  F00E         	goto	l3732
 10993  001CF8                     u3480:
 10994  001CF8  280F               	incf	___fladd@bexp^0,w,c
 10995  001CFA  A4D8               	btfss	status,2,c
 10996  001CFC  EF82  F00E         	goto	u3491
 10997  001D00  EF84  F00E         	goto	u3490
 10998  001D04                     u3491:
 10999  001D04  EF8C  F00E         	goto	l3728
 11000  001D08                     u3490:
 11001  001D08  0E00               	movlw	0
 11002  001D0A  6E01               	movwf	___fladd@b^0,c
 11003  001D0C  0E00               	movlw	0
 11004  001D0E  6E02               	movwf	(___fladd@b+1)^0,c
 11005  001D10  0E00               	movlw	0
 11006  001D12  6E03               	movwf	(___fladd@b+2)^0,c
 11007  001D14  0E00               	movlw	0
 11008  001D16  6E04               	movwf	(___fladd@b+3)^0,c
 11009  001D18                     l3728:
 11010  001D18  8E03               	bsf	(___fladd@b+2)^0,7,c
 11011  001D1A  0E00               	movlw	0
 11012  001D1C  6E04               	movwf	(___fladd@b+3)^0,c
 11013  001D1E  EF99  F00E         	goto	l3734
 11014  001D22                     l3732:
 11015  001D22  0E00               	movlw	0
 11016  001D24  6E01               	movwf	___fladd@b^0,c
 11017  001D26  0E00               	movlw	0
 11018  001D28  6E02               	movwf	(___fladd@b+1)^0,c
 11019  001D2A  0E00               	movlw	0
 11020  001D2C  6E03               	movwf	(___fladd@b+2)^0,c
 11021  001D2E  0E00               	movlw	0
 11022  001D30  6E04               	movwf	(___fladd@b+3)^0,c
 11023  001D32                     l3734:
 11024  001D32  5008               	movf	(___fladd@a+3)^0,w,c
 11025  001D34  0B80               	andlw	128
 11026  001D36  6E0E               	movwf	___fladd@aexp^0,c
 11027  001D38  500D               	movf	___fladd@signs^0,w,c
 11028  001D3A  180E               	xorwf	___fladd@aexp^0,w,c
 11029  001D3C  B4D8               	btfsc	status,2,c
 11030  001D3E  EFA3  F00E         	goto	u3501
 11031  001D42  EFA5  F00E         	goto	u3500
 11032  001D46                     u3501:
 11033  001D46  EFA6  F00E         	goto	l3740
 11034  001D4A                     u3500:
 11035  001D4A  8C0D               	bsf	___fladd@signs^0,6,c
 11036  001D4C                     l3740:
 11037  001D4C  5008               	movf	(___fladd@a+3)^0,w,c
 11038  001D4E  2408               	addwf	(___fladd@a+3)^0,w,c
 11039  001D50  6E0E               	movwf	___fladd@aexp^0,c
 11040  001D52  AE07               	btfss	(___fladd@a+2)^0,7,c
 11041  001D54  EFAE  F00E         	goto	u3511
 11042  001D58  EFB0  F00E         	goto	u3510
 11043  001D5C                     u3511:
 11044  001D5C  EFB1  F00E         	goto	l3746
 11045  001D60                     u3510:
 11046  001D60  800E               	bsf	___fladd@aexp^0,0,c
 11047  001D62                     l3746:
 11048  001D62  500E               	movf	___fladd@aexp^0,w,c
 11049  001D64  B4D8               	btfsc	status,2,c
 11050  001D66  EFB7  F00E         	goto	u3521
 11051  001D6A  EFB9  F00E         	goto	u3520
 11052  001D6E                     u3521:
 11053  001D6E  EFCE  F00E         	goto	l3756
 11054  001D72                     u3520:
 11055  001D72  280E               	incf	___fladd@aexp^0,w,c
 11056  001D74  A4D8               	btfss	status,2,c
 11057  001D76  EFBF  F00E         	goto	u3531
 11058  001D7A  EFC1  F00E         	goto	u3530
 11059  001D7E                     u3531:
 11060  001D7E  EFC9  F00E         	goto	l3752
 11061  001D82                     u3530:
 11062  001D82  0E00               	movlw	0
 11063  001D84  6E05               	movwf	___fladd@a^0,c
 11064  001D86  0E00               	movlw	0
 11065  001D88  6E06               	movwf	(___fladd@a+1)^0,c
 11066  001D8A  0E00               	movlw	0
 11067  001D8C  6E07               	movwf	(___fladd@a+2)^0,c
 11068  001D8E  0E00               	movlw	0
 11069  001D90  6E08               	movwf	(___fladd@a+3)^0,c
 11070  001D92                     l3752:
 11071  001D92  8E07               	bsf	(___fladd@a+2)^0,7,c
 11072  001D94  0E00               	movlw	0
 11073  001D96  6E08               	movwf	(___fladd@a+3)^0,c
 11074  001D98  EFD6  F00E         	goto	l3758
 11075  001D9C                     l3756:
 11076  001D9C  0E00               	movlw	0
 11077  001D9E  6E05               	movwf	___fladd@a^0,c
 11078  001DA0  0E00               	movlw	0
 11079  001DA2  6E06               	movwf	(___fladd@a+1)^0,c
 11080  001DA4  0E00               	movlw	0
 11081  001DA6  6E07               	movwf	(___fladd@a+2)^0,c
 11082  001DA8  0E00               	movlw	0
 11083  001DAA  6E08               	movwf	(___fladd@a+3)^0,c
 11084  001DAC                     l3758:
 11085  001DAC  500F               	movf	___fladd@bexp^0,w,c
 11086  001DAE  5C0E               	subwf	___fladd@aexp^0,w,c
 11087  001DB0  B0D8               	btfsc	status,0,c
 11088  001DB2  EFDD  F00E         	goto	u3541
 11089  001DB6  EFDF  F00E         	goto	u3540
 11090  001DBA                     u3541:
 11091  001DBA  EF06  F00F         	goto	l3794
 11092  001DBE                     u3540:
 11093  001DBE  AC0D               	btfss	___fladd@signs^0,6,c
 11094  001DC0  EFE4  F00E         	goto	u3551
 11095  001DC4  EFE6  F00E         	goto	u3550
 11096  001DC8                     u3551:
 11097  001DC8  EFE8  F00E         	goto	l3764
 11098  001DCC                     u3550:
 11099  001DCC  0E80               	movlw	128
 11100  001DCE  1A0D               	xorwf	___fladd@signs^0,f,c
 11101  001DD0                     l3764:
 11102  001DD0  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 11103  001DD4  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 11104  001DD8  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 11105  001DDC  C001  F010         	movff	___fladd@b,___fladd@grs
 11106  001DE0  C005  F001         	movff	___fladd@a,___fladd@b
 11107  001DE4  C010  F005         	movff	___fladd@grs,___fladd@a
 11108  001DE8  C002  F010         	movff	___fladd@b+1,___fladd@grs
 11109  001DEC  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 11110  001DF0  C010  F006         	movff	___fladd@grs,___fladd@a+1
 11111  001DF4  C003  F010         	movff	___fladd@b+2,___fladd@grs
 11112  001DF8  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 11113  001DFC  C010  F007         	movff	___fladd@grs,___fladd@a+2
 11114  001E00  C004  F010         	movff	___fladd@b+3,___fladd@grs
 11115  001E04  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 11116  001E08  C010  F008         	movff	___fladd@grs,___fladd@a+3
 11117  001E0C                     l3794:
 11118  001E0C  0E00               	movlw	0
 11119  001E0E  6E10               	movwf	___fladd@grs^0,c
 11120  001E10  500F               	movf	___fladd@bexp^0,w,c
 11121  001E12  C00E  F009         	movff	___fladd@aexp,??___fladd
 11122  001E16  6A0A               	clrf	(??___fladd+1)^0,c
 11123  001E18  5E09               	subwf	??___fladd^0,f,c
 11124  001E1A  0E00               	movlw	0
 11125  001E1C  5A0A               	subwfb	(??___fladd+1)^0,f,c
 11126  001E1E  BE0A               	btfsc	(??___fladd+1)^0,7,c
 11127  001E20  EF1B  F00F         	goto	u3561
 11128  001E24  500A               	movf	(??___fladd+1)^0,w,c
 11129  001E26  E109               	bnz	u3560
 11130  001E28  0E1A               	movlw	26
 11131  001E2A  5C09               	subwf	??___fladd^0,w,c
 11132  001E2C  A0D8               	btfss	status,0,c
 11133  001E2E  EF1B  F00F         	goto	u3561
 11134  001E32  EF1D  F00F         	goto	u3560
 11135  001E36                     u3561:
 11136  001E36  EF54  F00F         	goto	l1155
 11137  001E3A                     u3560:
 11138  001E3A  5001               	movf	___fladd@b^0,w,c
 11139  001E3C  1002               	iorwf	(___fladd@b+1)^0,w,c
 11140  001E3E  1003               	iorwf	(___fladd@b+2)^0,w,c
 11141  001E40  1004               	iorwf	(___fladd@b+3)^0,w,c
 11142  001E42  A4D8               	btfss	status,2,c
 11143  001E44  EF26  F00F         	goto	u3571
 11144  001E48  EF29  F00F         	goto	u3570
 11145  001E4C                     u3571:
 11146  001E4C  0E01               	movlw	1
 11147  001E4E  EF2A  F00F         	goto	u3580
 11148  001E52                     u3570:
 11149  001E52  0E00               	movlw	0
 11150  001E54                     u3580:
 11151  001E54  6E10               	movwf	___fladd@grs^0,c
 11152  001E56  0E00               	movlw	0
 11153  001E58  6E01               	movwf	___fladd@b^0,c
 11154  001E5A  0E00               	movlw	0
 11155  001E5C  6E02               	movwf	(___fladd@b+1)^0,c
 11156  001E5E  0E00               	movlw	0
 11157  001E60  6E03               	movwf	(___fladd@b+2)^0,c
 11158  001E62  0E00               	movlw	0
 11159  001E64  6E04               	movwf	(___fladd@b+3)^0,c
 11160  001E66  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 11161  001E6A  EF5D  F00F         	goto	l1154
 11162  001E6E                     l1156:
 11163  001E6E  A010               	btfss	___fladd@grs^0,0,c
 11164  001E70  EF3C  F00F         	goto	u3591
 11165  001E74  EF3E  F00F         	goto	u3590
 11166  001E78                     u3591:
 11167  001E78  EF44  F00F         	goto	l3806
 11168  001E7C                     u3590:
 11169  001E7C  90D8               	bcf	status,0,c
 11170  001E7E  3010               	rrcf	___fladd@grs^0,w,c
 11171  001E80  0901               	iorlw	1
 11172  001E82  6E10               	movwf	___fladd@grs^0,c
 11173  001E84  EF46  F00F         	goto	l3808
 11174  001E88                     l3806:
 11175  001E88  90D8               	bcf	status,0,c
 11176  001E8A  3210               	rrcf	___fladd@grs^0,f,c
 11177  001E8C                     l3808:
 11178  001E8C  A001               	btfss	___fladd@b^0,0,c
 11179  001E8E  EF4B  F00F         	goto	u3601
 11180  001E92  EF4D  F00F         	goto	u3600
 11181  001E96                     u3601:
 11182  001E96  EF4E  F00F         	goto	l3812
 11183  001E9A                     u3600:
 11184  001E9A  8E10               	bsf	___fladd@grs^0,7,c
 11185  001E9C                     l3812:
 11186  001E9C  3404               	rlcf	(___fladd@b+3)^0,w,c
 11187  001E9E  3204               	rrcf	(___fladd@b+3)^0,f,c
 11188  001EA0  3203               	rrcf	(___fladd@b+2)^0,f,c
 11189  001EA2  3202               	rrcf	(___fladd@b+1)^0,f,c
 11190  001EA4  3201               	rrcf	___fladd@b^0,f,c
 11191  001EA6  2A0F               	incf	___fladd@bexp^0,f,c
 11192  001EA8                     l1155:
 11193  001EA8  500E               	movf	___fladd@aexp^0,w,c
 11194  001EAA  5C0F               	subwf	___fladd@bexp^0,w,c
 11195  001EAC  A0D8               	btfss	status,0,c
 11196  001EAE  EF5B  F00F         	goto	u3611
 11197  001EB2  EF5D  F00F         	goto	u3610
 11198  001EB6                     u3611:
 11199  001EB6  EF37  F00F         	goto	l1156
 11200  001EBA                     u3610:
 11201  001EBA                     l1154:
 11202  001EBA  BC0D               	btfsc	___fladd@signs^0,6,c
 11203  001EBC  EF62  F00F         	goto	u3621
 11204  001EC0  EF64  F00F         	goto	u3620
 11205  001EC4                     u3621:
 11206  001EC4  EFA4  F00F         	goto	l3840
 11207  001EC8                     u3620:
 11208  001EC8  500F               	movf	___fladd@bexp^0,w,c
 11209  001ECA  A4D8               	btfss	status,2,c
 11210  001ECC  EF6A  F00F         	goto	u3631
 11211  001ED0  EF6C  F00F         	goto	u3630
 11212  001ED4                     u3631:
 11213  001ED4  EF76  F00F         	goto	l3822
 11214  001ED8                     u3630:
 11215  001ED8  0E00               	movlw	0
 11216  001EDA  6E01               	movwf	?___fladd^0,c
 11217  001EDC  0E00               	movlw	0
 11218  001EDE  6E02               	movwf	(?___fladd+1)^0,c
 11219  001EE0  0E00               	movlw	0
 11220  001EE2  6E03               	movwf	(?___fladd+2)^0,c
 11221  001EE4  0E00               	movlw	0
 11222  001EE6  6E04               	movwf	(?___fladd+3)^0,c
 11223  001EE8  EFC5  F010         	goto	l1163
 11224  001EEC                     l3822:
 11225  001EEC  5005               	movf	___fladd@a^0,w,c
 11226  001EEE  2601               	addwf	___fladd@b^0,f,c
 11227  001EF0  5006               	movf	(___fladd@a+1)^0,w,c
 11228  001EF2  2202               	addwfc	(___fladd@b+1)^0,f,c
 11229  001EF4  5007               	movf	(___fladd@a+2)^0,w,c
 11230  001EF6  2203               	addwfc	(___fladd@b+2)^0,f,c
 11231  001EF8  5008               	movf	(___fladd@a+3)^0,w,c
 11232  001EFA  2204               	addwfc	(___fladd@b+3)^0,f,c
 11233  001EFC  A004               	btfss	(___fladd@b+3)^0,0,c
 11234  001EFE  EF83  F00F         	goto	u3641
 11235  001F02  EF85  F00F         	goto	u3640
 11236  001F06                     u3641:
 11237  001F06  EF31  F010         	goto	l3876
 11238  001F0A                     u3640:
 11239  001F0A  A010               	btfss	___fladd@grs^0,0,c
 11240  001F0C  EF8A  F00F         	goto	u3651
 11241  001F10  EF8C  F00F         	goto	u3650
 11242  001F14                     u3651:
 11243  001F14  EF92  F00F         	goto	l3830
 11244  001F18                     u3650:
 11245  001F18  90D8               	bcf	status,0,c
 11246  001F1A  3010               	rrcf	___fladd@grs^0,w,c
 11247  001F1C  0901               	iorlw	1
 11248  001F1E  6E10               	movwf	___fladd@grs^0,c
 11249  001F20  EF94  F00F         	goto	l3832
 11250  001F24                     l3830:
 11251  001F24  90D8               	bcf	status,0,c
 11252  001F26  3210               	rrcf	___fladd@grs^0,f,c
 11253  001F28                     l3832:
 11254  001F28  A001               	btfss	___fladd@b^0,0,c
 11255  001F2A  EF99  F00F         	goto	u3661
 11256  001F2E  EF9B  F00F         	goto	u3660
 11257  001F32                     u3661:
 11258  001F32  EF9C  F00F         	goto	l3836
 11259  001F36                     u3660:
 11260  001F36  8E10               	bsf	___fladd@grs^0,7,c
 11261  001F38                     l3836:
 11262  001F38  3404               	rlcf	(___fladd@b+3)^0,w,c
 11263  001F3A  3204               	rrcf	(___fladd@b+3)^0,f,c
 11264  001F3C  3203               	rrcf	(___fladd@b+2)^0,f,c
 11265  001F3E  3202               	rrcf	(___fladd@b+1)^0,f,c
 11266  001F40  3201               	rrcf	___fladd@b^0,f,c
 11267  001F42  2A0F               	incf	___fladd@bexp^0,f,c
 11268  001F44  EF31  F010         	goto	l3876
 11269  001F48                     l3840:
 11270  001F48  5005               	movf	___fladd@a^0,w,c
 11271  001F4A  5C01               	subwf	___fladd@b^0,w,c
 11272  001F4C  5006               	movf	(___fladd@a+1)^0,w,c
 11273  001F4E  5802               	subwfb	(___fladd@b+1)^0,w,c
 11274  001F50  5007               	movf	(___fladd@a+2)^0,w,c
 11275  001F52  5803               	subwfb	(___fladd@b+2)^0,w,c
 11276  001F54  5004               	movf	(___fladd@b+3)^0,w,c
 11277  001F56  0A80               	xorlw	128
 11278  001F58  6E09               	movwf	??___fladd^0,c
 11279  001F5A  5008               	movf	(___fladd@a+3)^0,w,c
 11280  001F5C  0A80               	xorlw	128
 11281  001F5E  5809               	subwfb	??___fladd^0,w,c
 11282  001F60  B0D8               	btfsc	status,0,c
 11283  001F62  EFB5  F00F         	goto	u3671
 11284  001F66  EFB7  F00F         	goto	u3670
 11285  001F6A                     u3671:
 11286  001F6A  EFE2  F00F         	goto	l3850
 11287  001F6E                     u3670:
 11288  001F6E  5001               	movf	___fladd@b^0,w,c
 11289  001F70  5C05               	subwf	___fladd@a^0,w,c
 11290  001F72  6E09               	movwf	??___fladd^0,c
 11291  001F74  5002               	movf	(___fladd@b+1)^0,w,c
 11292  001F76  5806               	subwfb	(___fladd@a+1)^0,w,c
 11293  001F78  6E0A               	movwf	(??___fladd+1)^0,c
 11294  001F7A  5003               	movf	(___fladd@b+2)^0,w,c
 11295  001F7C  5807               	subwfb	(___fladd@a+2)^0,w,c
 11296  001F7E  6E0B               	movwf	(??___fladd+2)^0,c
 11297  001F80  5004               	movf	(___fladd@b+3)^0,w,c
 11298  001F82  5808               	subwfb	(___fladd@a+3)^0,w,c
 11299  001F84  6E0C               	movwf	(??___fladd+3)^0,c
 11300  001F86  0EFF               	movlw	255
 11301  001F88  2409               	addwf	??___fladd^0,w,c
 11302  001F8A  6E01               	movwf	___fladd@b^0,c
 11303  001F8C  0EFF               	movlw	255
 11304  001F8E  200A               	addwfc	(??___fladd+1)^0,w,c
 11305  001F90  6E02               	movwf	(___fladd@b+1)^0,c
 11306  001F92  0EFF               	movlw	255
 11307  001F94  200B               	addwfc	(??___fladd+2)^0,w,c
 11308  001F96  6E03               	movwf	(___fladd@b+2)^0,c
 11309  001F98  0EFF               	movlw	255
 11310  001F9A  200C               	addwfc	(??___fladd+3)^0,w,c
 11311  001F9C  6E04               	movwf	(___fladd@b+3)^0,c
 11312  001F9E  0E80               	movlw	128
 11313  001FA0  1A0D               	xorwf	___fladd@signs^0,f,c
 11314  001FA2  6C10               	negf	___fladd@grs^0,c
 11315  001FA4  5010               	movf	___fladd@grs^0,w,c
 11316  001FA6  A4D8               	btfss	status,2,c
 11317  001FA8  EFD8  F00F         	goto	u3681
 11318  001FAC  EFDA  F00F         	goto	u3680
 11319  001FB0                     u3681:
 11320  001FB0  EFEA  F00F         	goto	l1171
 11321  001FB4                     u3680:
 11322  001FB4  0E01               	movlw	1
 11323  001FB6  2601               	addwf	___fladd@b^0,f,c
 11324  001FB8  0E00               	movlw	0
 11325  001FBA  2202               	addwfc	(___fladd@b+1)^0,f,c
 11326  001FBC  2203               	addwfc	(___fladd@b+2)^0,f,c
 11327  001FBE  2204               	addwfc	(___fladd@b+3)^0,f,c
 11328  001FC0  EFEA  F00F         	goto	l1171
 11329  001FC4                     l3850:
 11330  001FC4  5005               	movf	___fladd@a^0,w,c
 11331  001FC6  5E01               	subwf	___fladd@b^0,f,c
 11332  001FC8  5006               	movf	(___fladd@a+1)^0,w,c
 11333  001FCA  5A02               	subwfb	(___fladd@b+1)^0,f,c
 11334  001FCC  5007               	movf	(___fladd@a+2)^0,w,c
 11335  001FCE  5A03               	subwfb	(___fladd@b+2)^0,f,c
 11336  001FD0  5008               	movf	(___fladd@a+3)^0,w,c
 11337  001FD2  5A04               	subwfb	(___fladd@b+3)^0,f,c
 11338  001FD4                     l1171:
 11339  001FD4  5001               	movf	___fladd@b^0,w,c
 11340  001FD6  1002               	iorwf	(___fladd@b+1)^0,w,c
 11341  001FD8  1003               	iorwf	(___fladd@b+2)^0,w,c
 11342  001FDA  1004               	iorwf	(___fladd@b+3)^0,w,c
 11343  001FDC  A4D8               	btfss	status,2,c
 11344  001FDE  EFF3  F00F         	goto	u3691
 11345  001FE2  EFF5  F00F         	goto	u3690
 11346  001FE6                     u3691:
 11347  001FE6  EF2A  F010         	goto	l3874
 11348  001FEA                     u3690:
 11349  001FEA  5010               	movf	___fladd@grs^0,w,c
 11350  001FEC  A4D8               	btfss	status,2,c
 11351  001FEE  EFFB  F00F         	goto	u3701
 11352  001FF2  EFFD  F00F         	goto	u3700
 11353  001FF6                     u3701:
 11354  001FF6  EF2A  F010         	goto	l3874
 11355  001FFA                     u3700:
 11356  001FFA  0E00               	movlw	0
 11357  001FFC  6E01               	movwf	?___fladd^0,c
 11358  001FFE  0E00               	movlw	0
 11359  002000  6E02               	movwf	(?___fladd+1)^0,c
 11360  002002  0E00               	movlw	0
 11361  002004  6E03               	movwf	(?___fladd+2)^0,c
 11362  002006  0E00               	movlw	0
 11363  002008  6E04               	movwf	(?___fladd+3)^0,c
 11364  00200A  EFC5  F010         	goto	l1163
 11365  00200E                     l3858:
 11366  00200E  90D8               	bcf	status,0,c
 11367  002010  3601               	rlcf	___fladd@b^0,f,c
 11368  002012  3602               	rlcf	(___fladd@b+1)^0,f,c
 11369  002014  3603               	rlcf	(___fladd@b+2)^0,f,c
 11370  002016  3604               	rlcf	(___fladd@b+3)^0,f,c
 11371  002018  AE10               	btfss	___fladd@grs^0,7,c
 11372  00201A  EF11  F010         	goto	u3711
 11373  00201E  EF13  F010         	goto	u3710
 11374  002022                     u3711:
 11375  002022  EF14  F010         	goto	l3864
 11376  002026                     u3710:
 11377  002026  8001               	bsf	___fladd@b^0,0,c
 11378  002028                     l3864:
 11379  002028  A010               	btfss	___fladd@grs^0,0,c
 11380  00202A  EF19  F010         	goto	u3721
 11381  00202E  EF1B  F010         	goto	u3720
 11382  002032                     u3721:
 11383  002032  EF1F  F010         	goto	l3868
 11384  002036                     u3720:
 11385  002036  80D8               	bsf	status,0,c
 11386  002038  3610               	rlcf	___fladd@grs^0,f,c
 11387  00203A  EF21  F010         	goto	l3870
 11388  00203E                     l3868:
 11389  00203E  90D8               	bcf	status,0,c
 11390  002040  3610               	rlcf	___fladd@grs^0,f,c
 11391  002042                     l3870:
 11392  002042  500F               	movf	___fladd@bexp^0,w,c
 11393  002044  B4D8               	btfsc	status,2,c
 11394  002046  EF27  F010         	goto	u3731
 11395  00204A  EF29  F010         	goto	u3730
 11396  00204E                     u3731:
 11397  00204E  EF2A  F010         	goto	l3874
 11398  002052                     u3730:
 11399  002052  060F               	decf	___fladd@bexp^0,f,c
 11400  002054                     l3874:
 11401  002054  AE03               	btfss	(___fladd@b+2)^0,7,c
 11402  002056  EF2F  F010         	goto	u3741
 11403  00205A  EF31  F010         	goto	u3740
 11404  00205E                     u3741:
 11405  00205E  EF07  F010         	goto	l3858
 11406  002062                     u3740:
 11407  002062                     l3876:
 11408  002062  0E00               	movlw	0
 11409  002064  6E0E               	movwf	___fladd@aexp^0,c
 11410  002066  AE10               	btfss	___fladd@grs^0,7,c
 11411  002068  EF38  F010         	goto	u3751
 11412  00206C  EF3A  F010         	goto	u3750
 11413  002070                     u3751:
 11414  002070  EF52  F010         	goto	l1180
 11415  002074                     u3750:
 11416  002074  C010  F009         	movff	___fladd@grs,??___fladd
 11417  002078  0E7F               	movlw	127
 11418  00207A  1609               	andwf	??___fladd^0,f,c
 11419  00207C  B4D8               	btfsc	status,2,c
 11420  00207E  EF43  F010         	goto	u3761
 11421  002082  EF45  F010         	goto	u3760
 11422  002086                     u3761:
 11423  002086  EF49  F010         	goto	l1181
 11424  00208A                     u3760:
 11425  00208A                     l3882:
 11426  00208A  0E01               	movlw	1
 11427  00208C  6E0E               	movwf	___fladd@aexp^0,c
 11428  00208E  EF52  F010         	goto	l1180
 11429  002092                     l1181:
 11430  002092  A001               	btfss	___fladd@b^0,0,c
 11431  002094  EF4E  F010         	goto	u3771
 11432  002098  EF50  F010         	goto	u3770
 11433  00209C                     u3771:
 11434  00209C  EF52  F010         	goto	l1180
 11435  0020A0                     u3770:
 11436  0020A0  EF45  F010         	goto	l3882
 11437  0020A4                     l1180:
 11438  0020A4  500E               	movf	___fladd@aexp^0,w,c
 11439  0020A6  B4D8               	btfsc	status,2,c
 11440  0020A8  EF58  F010         	goto	u3781
 11441  0020AC  EF5A  F010         	goto	u3780
 11442  0020B0                     u3781:
 11443  0020B0  EF85  F010         	goto	l3894
 11444  0020B4                     u3780:
 11445  0020B4  0E01               	movlw	1
 11446  0020B6  2601               	addwf	___fladd@b^0,f,c
 11447  0020B8  0E00               	movlw	0
 11448  0020BA  2202               	addwfc	(___fladd@b+1)^0,f,c
 11449  0020BC  2203               	addwfc	(___fladd@b+2)^0,f,c
 11450  0020BE  2204               	addwfc	(___fladd@b+3)^0,f,c
 11451  0020C0  A004               	btfss	(___fladd@b+3)^0,0,c
 11452  0020C2  EF65  F010         	goto	u3791
 11453  0020C6  EF67  F010         	goto	u3790
 11454  0020CA                     u3791:
 11455  0020CA  EF85  F010         	goto	l3894
 11456  0020CE                     u3790:
 11457  0020CE  C001  F009         	movff	___fladd@b,??___fladd
 11458  0020D2  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 11459  0020D6  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 11460  0020DA  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 11461  0020DE  340C               	rlcf	(??___fladd+3)^0,w,c
 11462  0020E0  320C               	rrcf	(??___fladd+3)^0,f,c
 11463  0020E2  320B               	rrcf	(??___fladd+2)^0,f,c
 11464  0020E4  320A               	rrcf	(??___fladd+1)^0,f,c
 11465  0020E6  3209               	rrcf	??___fladd^0,f,c
 11466  0020E8  C009  F001         	movff	??___fladd,___fladd@b
 11467  0020EC  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 11468  0020F0  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 11469  0020F4  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 11470  0020F8  280F               	incf	___fladd@bexp^0,w,c
 11471  0020FA  B4D8               	btfsc	status,2,c
 11472  0020FC  EF82  F010         	goto	u3801
 11473  002100  EF84  F010         	goto	u3800
 11474  002104                     u3801:
 11475  002104  EF85  F010         	goto	l3894
 11476  002108                     u3800:
 11477  002108  2A0F               	incf	___fladd@bexp^0,f,c
 11478  00210A                     l3894:
 11479  00210A  280F               	incf	___fladd@bexp^0,w,c
 11480  00210C  B4D8               	btfsc	status,2,c
 11481  00210E  EF8B  F010         	goto	u3811
 11482  002112  EF8D  F010         	goto	u3810
 11483  002116                     u3811:
 11484  002116  EF95  F010         	goto	l3898
 11485  00211A                     u3810:
 11486  00211A  500F               	movf	___fladd@bexp^0,w,c
 11487  00211C  A4D8               	btfss	status,2,c
 11488  00211E  EF93  F010         	goto	u3821
 11489  002122  EF95  F010         	goto	u3820
 11490  002126                     u3821:
 11491  002126  EFA7  F010         	goto	l3902
 11492  00212A                     u3820:
 11493  00212A                     l3898:
 11494  00212A  0E00               	movlw	0
 11495  00212C  6E01               	movwf	___fladd@b^0,c
 11496  00212E  0E00               	movlw	0
 11497  002130  6E02               	movwf	(___fladd@b+1)^0,c
 11498  002132  0E00               	movlw	0
 11499  002134  6E03               	movwf	(___fladd@b+2)^0,c
 11500  002136  0E00               	movlw	0
 11501  002138  6E04               	movwf	(___fladd@b+3)^0,c
 11502  00213A  500F               	movf	___fladd@bexp^0,w,c
 11503  00213C  A4D8               	btfss	status,2,c
 11504  00213E  EFA3  F010         	goto	u3831
 11505  002142  EFA5  F010         	goto	u3830
 11506  002146                     u3831:
 11507  002146  EFA7  F010         	goto	l3902
 11508  00214A                     u3830:
 11509  00214A  0E00               	movlw	0
 11510  00214C  6E0D               	movwf	___fladd@signs^0,c
 11511  00214E                     l3902:
 11512  00214E  A00F               	btfss	___fladd@bexp^0,0,c
 11513  002150  EFAC  F010         	goto	u3841
 11514  002154  EFAE  F010         	goto	u3840
 11515  002158                     u3841:
 11516  002158  EFB1  F010         	goto	l3906
 11517  00215C                     u3840:
 11518  00215C  8E03               	bsf	(___fladd@b+2)^0,7,c
 11519  00215E  EFB2  F010         	goto	l3908
 11520  002162                     l3906:
 11521  002162  9E03               	bcf	(___fladd@b+2)^0,7,c
 11522  002164                     l3908:
 11523  002164  90D8               	bcf	status,0,c
 11524  002166  300F               	rrcf	___fladd@bexp^0,w,c
 11525  002168  6E04               	movwf	(___fladd@b+3)^0,c
 11526  00216A  AE0D               	btfss	___fladd@signs^0,7,c
 11527  00216C  EFBA  F010         	goto	u3851
 11528  002170  EFBC  F010         	goto	u3850
 11529  002174                     u3851:
 11530  002174  EFBD  F010         	goto	l3914
 11531  002178                     u3850:
 11532  002178  8E04               	bsf	(___fladd@b+3)^0,7,c
 11533  00217A                     l3914:
 11534  00217A  C001  F001         	movff	___fladd@b,?___fladd
 11535  00217E  C002  F002         	movff	___fladd@b+1,?___fladd+1
 11536  002182  C003  F003         	movff	___fladd@b+2,?___fladd+2
 11537  002186  C004  F004         	movff	___fladd@b+3,?___fladd+3
 11538  00218A                     l1163:
 11539  00218A  0012               	return		;funcret
 11540  00218C                     __end_of___fladd:
 11541                           	callstack 0
 11542                           
 11543 ;; *************** function ___flneg *****************
 11544 ;; Defined at:
 11545 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
 11546 ;; Parameters:    Size  Location     Type
 11547 ;;  f1              4    0[COMRAM] unsigned char 
 11548 ;; Auto vars:     Size  Location     Type
 11549 ;;		None
 11550 ;; Return value:  Size  Location     Type
 11551 ;;                  4    0[COMRAM] unsigned char 
 11552 ;; Registers used:
 11553 ;;		wreg, status,2, status,0
 11554 ;; Tracked objects:
 11555 ;;		On entry : 0/0
 11556 ;;		On exit  : 0/0
 11557 ;;		Unchanged: 0/0
 11558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11559 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11562 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11563 ;;Total ram usage:        4 bytes
 11564 ;; Hardware stack levels used: 1
 11565 ;; Hardware stack levels required when called: 1
 11566 ;; This function calls:
 11567 ;;		Nothing
 11568 ;; This function is called by:
 11569 ;;		_roundf
 11570 ;; This function uses a non-reentrant model
 11571 ;;
 11572                           
 11573                           	psect	text51
 11574  005D0C                     __ptext51:
 11575                           	callstack 0
 11576  005D0C                     ___flneg:
 11577                           	callstack 25
 11578  005D0C  5001               	movf	___flneg@f1^0,w,c
 11579  005D0E  1002               	iorwf	(___flneg@f1+1)^0,w,c
 11580  005D10  1003               	iorwf	(___flneg@f1+2)^0,w,c
 11581  005D12  1004               	iorwf	(___flneg@f1+3)^0,w,c
 11582  005D14  B4D8               	btfsc	status,2,c
 11583  005D16  EF8F  F02E         	goto	u4211
 11584  005D1A  EF91  F02E         	goto	u4210
 11585  005D1E                     u4211:
 11586  005D1E  EF99  F02E         	goto	l4178
 11587  005D22                     u4210:
 11588  005D22  0E00               	movlw	0
 11589  005D24  1A01               	xorwf	___flneg@f1^0,f,c
 11590  005D26  0E00               	movlw	0
 11591  005D28  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 11592  005D2A  0E00               	movlw	0
 11593  005D2C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 11594  005D2E  0E80               	movlw	128
 11595  005D30  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 11596  005D32                     l4178:
 11597  005D32  C001  F001         	movff	___flneg@f1,?___flneg
 11598  005D36  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 11599  005D3A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 11600  005D3E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 11601  005D42  0012               	return		;funcret
 11602  005D44                     __end_of___flneg:
 11603                           	callstack 0
 11604                           
 11605 ;; *************** function ___flmul *****************
 11606 ;; Defined at:
 11607 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
 11608 ;; Parameters:    Size  Location     Type
 11609 ;;  b               4   39[COMRAM] unsigned char 
 11610 ;;  a               4   43[COMRAM] unsigned char 
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;  prod            4   58[COMRAM] struct .
 11613 ;;  grs             4   52[COMRAM] unsigned long 
 11614 ;;  temp            2   62[COMRAM] struct .
 11615 ;;  bexp            1   57[COMRAM] unsigned char 
 11616 ;;  aexp            1   56[COMRAM] unsigned char 
 11617 ;;  sign            1   51[COMRAM] unsigned char 
 11618 ;; Return value:  Size  Location     Type
 11619 ;;                  4   39[COMRAM] unsigned char 
 11620 ;; Registers used:
 11621 ;;		wreg, status,2, status,0, prodl, prodh
 11622 ;; Tracked objects:
 11623 ;;		On entry : 0/0
 11624 ;;		On exit  : 0/0
 11625 ;;		Unchanged: 0/0
 11626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11627 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11628 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11629 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11630 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11631 ;;Total ram usage:       25 bytes
 11632 ;; Hardware stack levels used: 1
 11633 ;; Hardware stack levels required when called: 1
 11634 ;; This function calls:
 11635 ;;		Nothing
 11636 ;; This function is called by:
 11637 ;;		_detect_color
 11638 ;;		_detect_wall
 11639 ;;		_roundf
 11640 ;; This function uses a non-reentrant model
 11641 ;;
 11642                           
 11643                           	psect	text52
 11644  00218C                     __ptext52:
 11645                           	callstack 0
 11646  00218C                     ___flmul:
 11647                           	callstack 25
 11648  00218C  502B               	movf	(___flmul@b+3)^0,w,c
 11649  00218E  0B80               	andlw	128
 11650  002190  6E34               	movwf	___flmul@sign^0,c
 11651  002192  502B               	movf	(___flmul@b+3)^0,w,c
 11652  002194  242B               	addwf	(___flmul@b+3)^0,w,c
 11653  002196  6E3A               	movwf	___flmul@bexp^0,c
 11654  002198  AE2A               	btfss	(___flmul@b+2)^0,7,c
 11655  00219A  EFD1  F010         	goto	u3971
 11656  00219E  EFD3  F010         	goto	u3970
 11657  0021A2                     u3971:
 11658  0021A2  EFD4  F010         	goto	l4022
 11659  0021A6                     u3970:
 11660  0021A6  803A               	bsf	___flmul@bexp^0,0,c
 11661  0021A8                     l4022:
 11662  0021A8  503A               	movf	___flmul@bexp^0,w,c
 11663  0021AA  B4D8               	btfsc	status,2,c
 11664  0021AC  EFDA  F010         	goto	u3981
 11665  0021B0  EFDC  F010         	goto	u3980
 11666  0021B4                     u3981:
 11667  0021B4  EFEF  F010         	goto	l4030
 11668  0021B8                     u3980:
 11669  0021B8  283A               	incf	___flmul@bexp^0,w,c
 11670  0021BA  A4D8               	btfss	status,2,c
 11671  0021BC  EFE2  F010         	goto	u3991
 11672  0021C0  EFE4  F010         	goto	u3990
 11673  0021C4                     u3991:
 11674  0021C4  EFEC  F010         	goto	l4028
 11675  0021C8                     u3990:
 11676  0021C8  0E00               	movlw	0
 11677  0021CA  6E28               	movwf	___flmul@b^0,c
 11678  0021CC  0E00               	movlw	0
 11679  0021CE  6E29               	movwf	(___flmul@b+1)^0,c
 11680  0021D0  0E00               	movlw	0
 11681  0021D2  6E2A               	movwf	(___flmul@b+2)^0,c
 11682  0021D4  0E00               	movlw	0
 11683  0021D6  6E2B               	movwf	(___flmul@b+3)^0,c
 11684  0021D8                     l4028:
 11685  0021D8  8E2A               	bsf	(___flmul@b+2)^0,7,c
 11686  0021DA  EFF7  F010         	goto	l4032
 11687  0021DE                     l4030:
 11688  0021DE  0E00               	movlw	0
 11689  0021E0  6E28               	movwf	___flmul@b^0,c
 11690  0021E2  0E00               	movlw	0
 11691  0021E4  6E29               	movwf	(___flmul@b+1)^0,c
 11692  0021E6  0E00               	movlw	0
 11693  0021E8  6E2A               	movwf	(___flmul@b+2)^0,c
 11694  0021EA  0E00               	movlw	0
 11695  0021EC  6E2B               	movwf	(___flmul@b+3)^0,c
 11696  0021EE                     l4032:
 11697  0021EE  502F               	movf	(___flmul@a+3)^0,w,c
 11698  0021F0  0B80               	andlw	128
 11699  0021F2  1A34               	xorwf	___flmul@sign^0,f,c
 11700  0021F4  502F               	movf	(___flmul@a+3)^0,w,c
 11701  0021F6  242F               	addwf	(___flmul@a+3)^0,w,c
 11702  0021F8  6E39               	movwf	___flmul@aexp^0,c
 11703  0021FA  AE2E               	btfss	(___flmul@a+2)^0,7,c
 11704  0021FC  EF02  F011         	goto	u4001
 11705  002200  EF04  F011         	goto	u4000
 11706  002204                     u4001:
 11707  002204  EF05  F011         	goto	l4040
 11708  002208                     u4000:
 11709  002208  8039               	bsf	___flmul@aexp^0,0,c
 11710  00220A                     l4040:
 11711  00220A  5039               	movf	___flmul@aexp^0,w,c
 11712  00220C  B4D8               	btfsc	status,2,c
 11713  00220E  EF0B  F011         	goto	u4011
 11714  002212  EF0D  F011         	goto	u4010
 11715  002216                     u4011:
 11716  002216  EF20  F011         	goto	l4048
 11717  00221A                     u4010:
 11718  00221A  2839               	incf	___flmul@aexp^0,w,c
 11719  00221C  A4D8               	btfss	status,2,c
 11720  00221E  EF13  F011         	goto	u4021
 11721  002222  EF15  F011         	goto	u4020
 11722  002226                     u4021:
 11723  002226  EF1D  F011         	goto	l4046
 11724  00222A                     u4020:
 11725  00222A  0E00               	movlw	0
 11726  00222C  6E2C               	movwf	___flmul@a^0,c
 11727  00222E  0E00               	movlw	0
 11728  002230  6E2D               	movwf	(___flmul@a+1)^0,c
 11729  002232  0E00               	movlw	0
 11730  002234  6E2E               	movwf	(___flmul@a+2)^0,c
 11731  002236  0E00               	movlw	0
 11732  002238  6E2F               	movwf	(___flmul@a+3)^0,c
 11733  00223A                     l4046:
 11734  00223A  8E2E               	bsf	(___flmul@a+2)^0,7,c
 11735  00223C  EF28  F011         	goto	l1240
 11736  002240                     l4048:
 11737  002240  0E00               	movlw	0
 11738  002242  6E2C               	movwf	___flmul@a^0,c
 11739  002244  0E00               	movlw	0
 11740  002246  6E2D               	movwf	(___flmul@a+1)^0,c
 11741  002248  0E00               	movlw	0
 11742  00224A  6E2E               	movwf	(___flmul@a+2)^0,c
 11743  00224C  0E00               	movlw	0
 11744  00224E  6E2F               	movwf	(___flmul@a+3)^0,c
 11745  002250                     l1240:
 11746  002250  5039               	movf	___flmul@aexp^0,w,c
 11747  002252  B4D8               	btfsc	status,2,c
 11748  002254  EF2E  F011         	goto	u4031
 11749  002258  EF30  F011         	goto	u4030
 11750  00225C                     u4031:
 11751  00225C  EF38  F011         	goto	l4052
 11752  002260                     u4030:
 11753  002260  503A               	movf	___flmul@bexp^0,w,c
 11754  002262  A4D8               	btfss	status,2,c
 11755  002264  EF36  F011         	goto	u4041
 11756  002268  EF38  F011         	goto	u4040
 11757  00226C                     u4041:
 11758  00226C  EF42  F011         	goto	l4056
 11759  002270                     u4040:
 11760  002270                     l4052:
 11761  002270  0E00               	movlw	0
 11762  002272  6E28               	movwf	?___flmul^0,c
 11763  002274  0E00               	movlw	0
 11764  002276  6E29               	movwf	(?___flmul+1)^0,c
 11765  002278  0E00               	movlw	0
 11766  00227A  6E2A               	movwf	(?___flmul+2)^0,c
 11767  00227C  0E00               	movlw	0
 11768  00227E  6E2B               	movwf	(?___flmul+3)^0,c
 11769  002280  EFDA  F012         	goto	l1244
 11770  002284                     l4056:
 11771  002284  502E               	movf	(___flmul@a+2)^0,w,c
 11772  002286  0228               	mulwf	___flmul@b^0,c
 11773  002288  CFF3 F03F          	movff	prodl,___flmul@temp
 11774  00228C  CFF4 F040          	movff	prodh,___flmul@temp+1
 11775  002290  503F               	movf	___flmul@temp^0,w,c
 11776  002292  6E35               	movwf	___flmul@grs^0,c
 11777  002294  6A36               	clrf	(___flmul@grs+1)^0,c
 11778  002296  6A37               	clrf	(___flmul@grs+2)^0,c
 11779  002298  6A38               	clrf	(___flmul@grs+3)^0,c
 11780  00229A  5040               	movf	(___flmul@temp+1)^0,w,c
 11781  00229C  6E3B               	movwf	___flmul@prod^0,c
 11782  00229E  6A3C               	clrf	(___flmul@prod+1)^0,c
 11783  0022A0  6A3D               	clrf	(___flmul@prod+2)^0,c
 11784  0022A2  6A3E               	clrf	(___flmul@prod+3)^0,c
 11785  0022A4  502D               	movf	(___flmul@a+1)^0,w,c
 11786  0022A6  0229               	mulwf	(___flmul@b+1)^0,c
 11787  0022A8  CFF3 F03F          	movff	prodl,___flmul@temp
 11788  0022AC  CFF4 F040          	movff	prodh,___flmul@temp+1
 11789  0022B0  503F               	movf	___flmul@temp^0,w,c
 11790  0022B2  2635               	addwf	___flmul@grs^0,f,c
 11791  0022B4  0E00               	movlw	0
 11792  0022B6  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11793  0022B8  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11794  0022BA  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11795  0022BC  5040               	movf	(___flmul@temp+1)^0,w,c
 11796  0022BE  263B               	addwf	___flmul@prod^0,f,c
 11797  0022C0  0E00               	movlw	0
 11798  0022C2  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11799  0022C4  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11800  0022C6  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11801  0022C8  502C               	movf	___flmul@a^0,w,c
 11802  0022CA  022A               	mulwf	(___flmul@b+2)^0,c
 11803  0022CC  CFF3 F03F          	movff	prodl,___flmul@temp
 11804  0022D0  CFF4 F040          	movff	prodh,___flmul@temp+1
 11805  0022D4  503F               	movf	___flmul@temp^0,w,c
 11806  0022D6  2635               	addwf	___flmul@grs^0,f,c
 11807  0022D8  0E00               	movlw	0
 11808  0022DA  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11809  0022DC  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11810  0022DE  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11811  0022E0  5040               	movf	(___flmul@temp+1)^0,w,c
 11812  0022E2  263B               	addwf	___flmul@prod^0,f,c
 11813  0022E4  0E00               	movlw	0
 11814  0022E6  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11815  0022E8  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11816  0022EA  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11817  0022EC  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11818  0022F0  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11819  0022F4  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11820  0022F8  6A35               	clrf	___flmul@grs^0,c
 11821  0022FA  502C               	movf	___flmul@a^0,w,c
 11822  0022FC  0229               	mulwf	(___flmul@b+1)^0,c
 11823  0022FE  CFF3 F03F          	movff	prodl,___flmul@temp
 11824  002302  CFF4 F040          	movff	prodh,___flmul@temp+1
 11825  002306  503F               	movf	___flmul@temp^0,w,c
 11826  002308  2635               	addwf	___flmul@grs^0,f,c
 11827  00230A  5040               	movf	(___flmul@temp+1)^0,w,c
 11828  00230C  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11829  00230E  0E00               	movlw	0
 11830  002310  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11831  002312  0E00               	movlw	0
 11832  002314  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11833  002316  502D               	movf	(___flmul@a+1)^0,w,c
 11834  002318  0228               	mulwf	___flmul@b^0,c
 11835  00231A  CFF3 F03F          	movff	prodl,___flmul@temp
 11836  00231E  CFF4 F040          	movff	prodh,___flmul@temp+1
 11837  002322  503F               	movf	___flmul@temp^0,w,c
 11838  002324  2635               	addwf	___flmul@grs^0,f,c
 11839  002326  5040               	movf	(___flmul@temp+1)^0,w,c
 11840  002328  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11841  00232A  0E00               	movlw	0
 11842  00232C  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11843  00232E  0E00               	movlw	0
 11844  002330  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11845  002332  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11846  002336  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11847  00233A  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11848  00233E  6A35               	clrf	___flmul@grs^0,c
 11849  002340  502C               	movf	___flmul@a^0,w,c
 11850  002342  0228               	mulwf	___flmul@b^0,c
 11851  002344  CFF3 F03F          	movff	prodl,___flmul@temp
 11852  002348  CFF4 F040          	movff	prodh,___flmul@temp+1
 11853  00234C  503F               	movf	___flmul@temp^0,w,c
 11854  00234E  2635               	addwf	___flmul@grs^0,f,c
 11855  002350  5040               	movf	(___flmul@temp+1)^0,w,c
 11856  002352  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11857  002354  0E00               	movlw	0
 11858  002356  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11859  002358  0E00               	movlw	0
 11860  00235A  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11861  00235C  502E               	movf	(___flmul@a+2)^0,w,c
 11862  00235E  0229               	mulwf	(___flmul@b+1)^0,c
 11863  002360  CFF3 F03F          	movff	prodl,___flmul@temp
 11864  002364  CFF4 F040          	movff	prodh,___flmul@temp+1
 11865  002368  503F               	movf	___flmul@temp^0,w,c
 11866  00236A  263B               	addwf	___flmul@prod^0,f,c
 11867  00236C  5040               	movf	(___flmul@temp+1)^0,w,c
 11868  00236E  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11869  002370  0E00               	movlw	0
 11870  002372  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11871  002374  0E00               	movlw	0
 11872  002376  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11873  002378  502D               	movf	(___flmul@a+1)^0,w,c
 11874  00237A  022A               	mulwf	(___flmul@b+2)^0,c
 11875  00237C  CFF3 F03F          	movff	prodl,___flmul@temp
 11876  002380  CFF4 F040          	movff	prodh,___flmul@temp+1
 11877  002384  503F               	movf	___flmul@temp^0,w,c
 11878  002386  263B               	addwf	___flmul@prod^0,f,c
 11879  002388  5040               	movf	(___flmul@temp+1)^0,w,c
 11880  00238A  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11881  00238C  0E00               	movlw	0
 11882  00238E  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11883  002390  0E00               	movlw	0
 11884  002392  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11885  002394  502E               	movf	(___flmul@a+2)^0,w,c
 11886  002396  022A               	mulwf	(___flmul@b+2)^0,c
 11887  002398  CFF3 F03F          	movff	prodl,___flmul@temp
 11888  00239C  CFF4 F040          	movff	prodh,___flmul@temp+1
 11889  0023A0  503F               	movf	___flmul@temp^0,w,c
 11890  0023A2  6E30               	movwf	??___flmul^0,c
 11891  0023A4  5040               	movf	(___flmul@temp+1)^0,w,c
 11892  0023A6  6E31               	movwf	(??___flmul+1)^0,c
 11893  0023A8  6A32               	clrf	(??___flmul+2)^0,c
 11894  0023AA  6A33               	clrf	(??___flmul+3)^0,c
 11895  0023AC  C032  F033         	movff	??___flmul+2,??___flmul+3
 11896  0023B0  C031  F032         	movff	??___flmul+1,??___flmul+2
 11897  0023B4  C030  F031         	movff	??___flmul,??___flmul+1
 11898  0023B8  6A30               	clrf	??___flmul^0,c
 11899  0023BA  5030               	movf	??___flmul^0,w,c
 11900  0023BC  263B               	addwf	___flmul@prod^0,f,c
 11901  0023BE  5031               	movf	(??___flmul+1)^0,w,c
 11902  0023C0  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11903  0023C2  5032               	movf	(??___flmul+2)^0,w,c
 11904  0023C4  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11905  0023C6  5033               	movf	(??___flmul+3)^0,w,c
 11906  0023C8  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11907  0023CA  C035  F030         	movff	___flmul@grs,??___flmul
 11908  0023CE  C036  F031         	movff	___flmul@grs+1,??___flmul+1
 11909  0023D2  C037  F032         	movff	___flmul@grs+2,??___flmul+2
 11910  0023D6  C038  F033         	movff	___flmul@grs+3,??___flmul+3
 11911  0023DA  0E19               	movlw	25
 11912  0023DC  EFF5  F011         	goto	u4050
 11913  0023E0                     u4055:
 11914  0023E0  90D8               	bcf	status,0,c
 11915  0023E2  3233               	rrcf	(??___flmul+3)^0,f,c
 11916  0023E4  3232               	rrcf	(??___flmul+2)^0,f,c
 11917  0023E6  3231               	rrcf	(??___flmul+1)^0,f,c
 11918  0023E8  3230               	rrcf	??___flmul^0,f,c
 11919  0023EA                     u4050:
 11920  0023EA  2EE8               	decfsz	wreg,f,c
 11921  0023EC  EFF0  F011         	goto	u4055
 11922  0023F0  5030               	movf	??___flmul^0,w,c
 11923  0023F2  263B               	addwf	___flmul@prod^0,f,c
 11924  0023F4  5031               	movf	(??___flmul+1)^0,w,c
 11925  0023F6  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11926  0023F8  5032               	movf	(??___flmul+2)^0,w,c
 11927  0023FA  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11928  0023FC  5033               	movf	(??___flmul+3)^0,w,c
 11929  0023FE  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11930  002400  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11931  002404  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11932  002408  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11933  00240C  6A35               	clrf	___flmul@grs^0,c
 11934  00240E  5039               	movf	___flmul@aexp^0,w,c
 11935  002410  C03A  F030         	movff	___flmul@bexp,??___flmul
 11936  002414  6A31               	clrf	(??___flmul+1)^0,c
 11937  002416  2630               	addwf	??___flmul^0,f,c
 11938  002418  0E00               	movlw	0
 11939  00241A  2231               	addwfc	(??___flmul+1)^0,f,c
 11940  00241C  0E82               	movlw	130
 11941  00241E  2430               	addwf	??___flmul^0,w,c
 11942  002420  6E3F               	movwf	___flmul@temp^0,c
 11943  002422  0EFF               	movlw	255
 11944  002424  2031               	addwfc	(??___flmul+1)^0,w,c
 11945  002426  6E40               	movwf	(___flmul@temp+1)^0,c
 11946  002428  EF2B  F012         	goto	l4104
 11947  00242C                     l4098:
 11948  00242C  90D8               	bcf	status,0,c
 11949  00242E  363B               	rlcf	___flmul@prod^0,f,c
 11950  002430  363C               	rlcf	(___flmul@prod+1)^0,f,c
 11951  002432  363D               	rlcf	(___flmul@prod+2)^0,f,c
 11952  002434  363E               	rlcf	(___flmul@prod+3)^0,f,c
 11953  002436  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11954  002438  EF20  F012         	goto	u4061
 11955  00243C  EF22  F012         	goto	u4060
 11956  002440                     u4061:
 11957  002440  EF23  F012         	goto	l1247
 11958  002444                     u4060:
 11959  002444  803B               	bsf	___flmul@prod^0,0,c
 11960  002446                     l1247:
 11961  002446  90D8               	bcf	status,0,c
 11962  002448  3635               	rlcf	___flmul@grs^0,f,c
 11963  00244A  3636               	rlcf	(___flmul@grs+1)^0,f,c
 11964  00244C  3637               	rlcf	(___flmul@grs+2)^0,f,c
 11965  00244E  3638               	rlcf	(___flmul@grs+3)^0,f,c
 11966  002450  063F               	decf	___flmul@temp^0,f,c
 11967  002452  A0D8               	btfss	status,0,c
 11968  002454  0640               	decf	(___flmul@temp+1)^0,f,c
 11969  002456                     l4104:
 11970  002456  AE3D               	btfss	(___flmul@prod+2)^0,7,c
 11971  002458  EF30  F012         	goto	u4071
 11972  00245C  EF32  F012         	goto	u4070
 11973  002460                     u4071:
 11974  002460  EF16  F012         	goto	l4098
 11975  002464                     u4070:
 11976  002464  0E00               	movlw	0
 11977  002466  6E39               	movwf	___flmul@aexp^0,c
 11978  002468  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11979  00246A  EF39  F012         	goto	u4081
 11980  00246E  EF3B  F012         	goto	u4080
 11981  002472                     u4081:
 11982  002472  EF5F  F012         	goto	l1249
 11983  002476                     u4080:
 11984  002476  0EFF               	movlw	255
 11985  002478  1435               	andwf	___flmul@grs^0,w,c
 11986  00247A  6E30               	movwf	??___flmul^0,c
 11987  00247C  0EFF               	movlw	255
 11988  00247E  1436               	andwf	(___flmul@grs+1)^0,w,c
 11989  002480  6E31               	movwf	(??___flmul+1)^0,c
 11990  002482  0EFF               	movlw	255
 11991  002484  1437               	andwf	(___flmul@grs+2)^0,w,c
 11992  002486  6E32               	movwf	(??___flmul+2)^0,c
 11993  002488  0E7F               	movlw	127
 11994  00248A  1438               	andwf	(___flmul@grs+3)^0,w,c
 11995  00248C  6E33               	movwf	(??___flmul+3)^0,c
 11996  00248E  5030               	movf	??___flmul^0,w,c
 11997  002490  1031               	iorwf	(??___flmul+1)^0,w,c
 11998  002492  1032               	iorwf	(??___flmul+2)^0,w,c
 11999  002494  1033               	iorwf	(??___flmul+3)^0,w,c
 12000  002496  B4D8               	btfsc	status,2,c
 12001  002498  EF50  F012         	goto	u4091
 12002  00249C  EF52  F012         	goto	u4090
 12003  0024A0                     u4091:
 12004  0024A0  EF56  F012         	goto	l1250
 12005  0024A4                     u4090:
 12006  0024A4                     l4112:
 12007  0024A4  0E01               	movlw	1
 12008  0024A6  6E39               	movwf	___flmul@aexp^0,c
 12009  0024A8  EF5F  F012         	goto	l1249
 12010  0024AC                     l1250:
 12011  0024AC  A03B               	btfss	___flmul@prod^0,0,c
 12012  0024AE  EF5B  F012         	goto	u4101
 12013  0024B2  EF5D  F012         	goto	u4100
 12014  0024B6                     u4101:
 12015  0024B6  EF5F  F012         	goto	l1249
 12016  0024BA                     u4100:
 12017  0024BA  EF52  F012         	goto	l4112
 12018  0024BE                     l1249:
 12019  0024BE  5039               	movf	___flmul@aexp^0,w,c
 12020  0024C0  B4D8               	btfsc	status,2,c
 12021  0024C2  EF65  F012         	goto	u4111
 12022  0024C6  EF67  F012         	goto	u4110
 12023  0024CA                     u4111:
 12024  0024CA  EF8B  F012         	goto	l4124
 12025  0024CE                     u4110:
 12026  0024CE  0E01               	movlw	1
 12027  0024D0  263B               	addwf	___flmul@prod^0,f,c
 12028  0024D2  0E00               	movlw	0
 12029  0024D4  223C               	addwfc	(___flmul@prod+1)^0,f,c
 12030  0024D6  223D               	addwfc	(___flmul@prod+2)^0,f,c
 12031  0024D8  223E               	addwfc	(___flmul@prod+3)^0,f,c
 12032  0024DA  A03E               	btfss	(___flmul@prod+3)^0,0,c
 12033  0024DC  EF72  F012         	goto	u4121
 12034  0024E0  EF74  F012         	goto	u4120
 12035  0024E4                     u4121:
 12036  0024E4  EF8B  F012         	goto	l4124
 12037  0024E8                     u4120:
 12038  0024E8  C03B  F030         	movff	___flmul@prod,??___flmul
 12039  0024EC  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
 12040  0024F0  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
 12041  0024F4  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
 12042  0024F8  3433               	rlcf	(??___flmul+3)^0,w,c
 12043  0024FA  3233               	rrcf	(??___flmul+3)^0,f,c
 12044  0024FC  3232               	rrcf	(??___flmul+2)^0,f,c
 12045  0024FE  3231               	rrcf	(??___flmul+1)^0,f,c
 12046  002500  3230               	rrcf	??___flmul^0,f,c
 12047  002502  C030  F03B         	movff	??___flmul,___flmul@prod
 12048  002506  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
 12049  00250A  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
 12050  00250E  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
 12051  002512  4A3F               	infsnz	___flmul@temp^0,f,c
 12052  002514  2A40               	incf	(___flmul@temp+1)^0,f,c
 12053  002516                     l4124:
 12054  002516  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 12055  002518  EF96  F012         	goto	u4131
 12056  00251C  5040               	movf	(___flmul@temp+1)^0,w,c
 12057  00251E  E108               	bnz	u4130
 12058  002520  283F               	incf	___flmul@temp^0,w,c
 12059  002522  A0D8               	btfss	status,0,c
 12060  002524  EF96  F012         	goto	u4131
 12061  002528  EF98  F012         	goto	u4130
 12062  00252C                     u4131:
 12063  00252C  EFA2  F012         	goto	l4128
 12064  002530                     u4130:
 12065  002530  0E00               	movlw	0
 12066  002532  6E3B               	movwf	___flmul@prod^0,c
 12067  002534  0E00               	movlw	0
 12068  002536  6E3C               	movwf	(___flmul@prod+1)^0,c
 12069  002538  0E80               	movlw	128
 12070  00253A  6E3D               	movwf	(___flmul@prod+2)^0,c
 12071  00253C  0E7F               	movlw	127
 12072  00253E  6E3E               	movwf	(___flmul@prod+3)^0,c
 12073  002540  EFD0  F012         	goto	l4140
 12074  002544                     l4128:
 12075  002544  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 12076  002546  EFAF  F012         	goto	u4140
 12077  00254A  5040               	movf	(___flmul@temp+1)^0,w,c
 12078  00254C  E106               	bnz	u4141
 12079  00254E  043F               	decf	___flmul@temp^0,w,c
 12080  002550  B0D8               	btfsc	status,0,c
 12081  002552  EFAD  F012         	goto	u4141
 12082  002556  EFAF  F012         	goto	u4140
 12083  00255A                     u4141:
 12084  00255A  EFBB  F012         	goto	l1257
 12085  00255E                     u4140:
 12086  00255E  0E00               	movlw	0
 12087  002560  6E3B               	movwf	___flmul@prod^0,c
 12088  002562  0E00               	movlw	0
 12089  002564  6E3C               	movwf	(___flmul@prod+1)^0,c
 12090  002566  0E00               	movlw	0
 12091  002568  6E3D               	movwf	(___flmul@prod+2)^0,c
 12092  00256A  0E00               	movlw	0
 12093  00256C  6E3E               	movwf	(___flmul@prod+3)^0,c
 12094  00256E  0E00               	movlw	0
 12095  002570  6E34               	movwf	___flmul@sign^0,c
 12096  002572  EFD0  F012         	goto	l4140
 12097  002576                     l1257:
 12098  002576  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
 12099  00257A  0EFF               	movlw	255
 12100  00257C  163B               	andwf	___flmul@prod^0,f,c
 12101  00257E  0EFF               	movlw	255
 12102  002580  163C               	andwf	(___flmul@prod+1)^0,f,c
 12103  002582  0E7F               	movlw	127
 12104  002584  163D               	andwf	(___flmul@prod+2)^0,f,c
 12105  002586  0E00               	movlw	0
 12106  002588  163E               	andwf	(___flmul@prod+3)^0,f,c
 12107  00258A  A03A               	btfss	___flmul@bexp^0,0,c
 12108  00258C  EFCA  F012         	goto	u4151
 12109  002590  EFCC  F012         	goto	u4150
 12110  002594                     u4151:
 12111  002594  EFCD  F012         	goto	l4138
 12112  002598                     u4150:
 12113  002598  8E3D               	bsf	(___flmul@prod+2)^0,7,c
 12114  00259A                     l4138:
 12115  00259A  90D8               	bcf	status,0,c
 12116  00259C  303A               	rrcf	___flmul@bexp^0,w,c
 12117  00259E  6E3E               	movwf	(___flmul@prod+3)^0,c
 12118  0025A0                     l4140:
 12119  0025A0  5034               	movf	___flmul@sign^0,w,c
 12120  0025A2  123E               	iorwf	(___flmul@prod+3)^0,f,c
 12121  0025A4  C03B  F028         	movff	___flmul@prod,?___flmul
 12122  0025A8  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
 12123  0025AC  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
 12124  0025B0  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
 12125  0025B4                     l1244:
 12126  0025B4  0012               	return		;funcret
 12127  0025B6                     __end_of___flmul:
 12128                           	callstack 0
 12129                           
 12130 ;; *************** function ___flge *****************
 12131 ;; Defined at:
 12132 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
 12133 ;; Parameters:    Size  Location     Type
 12134 ;;  ff1             4    0[COMRAM] unsigned char 
 12135 ;;  ff2             4    4[COMRAM] unsigned char 
 12136 ;; Auto vars:     Size  Location     Type
 12137 ;;		None
 12138 ;; Return value:  Size  Location     Type
 12139 ;;		None               void
 12140 ;; Registers used:
 12141 ;;		wreg, status,2, status,0
 12142 ;; Tracked objects:
 12143 ;;		On entry : 0/0
 12144 ;;		On exit  : 0/0
 12145 ;;		Unchanged: 0/0
 12146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12147 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12149 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12150 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12151 ;;Total ram usage:       12 bytes
 12152 ;; Hardware stack levels used: 1
 12153 ;; Hardware stack levels required when called: 1
 12154 ;; This function calls:
 12155 ;;		Nothing
 12156 ;; This function is called by:
 12157 ;;		_roundf
 12158 ;; This function uses a non-reentrant model
 12159 ;;
 12160                           
 12161                           	psect	text53
 12162  00505C                     __ptext53:
 12163                           	callstack 0
 12164  00505C                     ___flge:
 12165                           	callstack 25
 12166  00505C  0E00               	movlw	0
 12167  00505E  1401               	andwf	___flge@ff1^0,w,c
 12168  005060  6E09               	movwf	??___flge^0,c
 12169  005062  0E00               	movlw	0
 12170  005064  1402               	andwf	(___flge@ff1+1)^0,w,c
 12171  005066  6E0A               	movwf	(??___flge+1)^0,c
 12172  005068  0E80               	movlw	128
 12173  00506A  1403               	andwf	(___flge@ff1+2)^0,w,c
 12174  00506C  6E0B               	movwf	(??___flge+2)^0,c
 12175  00506E  0E7F               	movlw	127
 12176  005070  1404               	andwf	(___flge@ff1+3)^0,w,c
 12177  005072  6E0C               	movwf	(??___flge+3)^0,c
 12178  005074  5009               	movf	??___flge^0,w,c
 12179  005076  100A               	iorwf	(??___flge+1)^0,w,c
 12180  005078  100B               	iorwf	(??___flge+2)^0,w,c
 12181  00507A  100C               	iorwf	(??___flge+3)^0,w,c
 12182  00507C  A4D8               	btfss	status,2,c
 12183  00507E  EF43  F028         	goto	u4161
 12184  005082  EF45  F028         	goto	u4160
 12185  005086                     u4161:
 12186  005086  EF4D  F028         	goto	l4156
 12187  00508A                     u4160:
 12188  00508A  0E00               	movlw	0
 12189  00508C  6E01               	movwf	___flge@ff1^0,c
 12190  00508E  0E00               	movlw	0
 12191  005090  6E02               	movwf	(___flge@ff1+1)^0,c
 12192  005092  0E00               	movlw	0
 12193  005094  6E03               	movwf	(___flge@ff1+2)^0,c
 12194  005096  0E00               	movlw	0
 12195  005098  6E04               	movwf	(___flge@ff1+3)^0,c
 12196  00509A                     l4156:
 12197  00509A  0E00               	movlw	0
 12198  00509C  1405               	andwf	___flge@ff2^0,w,c
 12199  00509E  6E09               	movwf	??___flge^0,c
 12200  0050A0  0E00               	movlw	0
 12201  0050A2  1406               	andwf	(___flge@ff2+1)^0,w,c
 12202  0050A4  6E0A               	movwf	(??___flge+1)^0,c
 12203  0050A6  0E80               	movlw	128
 12204  0050A8  1407               	andwf	(___flge@ff2+2)^0,w,c
 12205  0050AA  6E0B               	movwf	(??___flge+2)^0,c
 12206  0050AC  0E7F               	movlw	127
 12207  0050AE  1408               	andwf	(___flge@ff2+3)^0,w,c
 12208  0050B0  6E0C               	movwf	(??___flge+3)^0,c
 12209  0050B2  5009               	movf	??___flge^0,w,c
 12210  0050B4  100A               	iorwf	(??___flge+1)^0,w,c
 12211  0050B6  100B               	iorwf	(??___flge+2)^0,w,c
 12212  0050B8  100C               	iorwf	(??___flge+3)^0,w,c
 12213  0050BA  A4D8               	btfss	status,2,c
 12214  0050BC  EF62  F028         	goto	u4171
 12215  0050C0  EF64  F028         	goto	u4170
 12216  0050C4                     u4171:
 12217  0050C4  EF6C  F028         	goto	l4160
 12218  0050C8                     u4170:
 12219  0050C8  0E00               	movlw	0
 12220  0050CA  6E05               	movwf	___flge@ff2^0,c
 12221  0050CC  0E00               	movlw	0
 12222  0050CE  6E06               	movwf	(___flge@ff2+1)^0,c
 12223  0050D0  0E00               	movlw	0
 12224  0050D2  6E07               	movwf	(___flge@ff2+2)^0,c
 12225  0050D4  0E00               	movlw	0
 12226  0050D6  6E08               	movwf	(___flge@ff2+3)^0,c
 12227  0050D8                     l4160:
 12228  0050D8  AE04               	btfss	(___flge@ff1+3)^0,7,c
 12229  0050DA  EF71  F028         	goto	u4181
 12230  0050DE  EF73  F028         	goto	u4180
 12231  0050E2                     u4181:
 12232  0050E2  EF7C  F028         	goto	l4164
 12233  0050E6                     u4180:
 12234  0050E6  6C01               	negf	___flge@ff1^0,c
 12235  0050E8  1E02               	comf	(___flge@ff1+1)^0,f,c
 12236  0050EA  B0D8               	btfsc	status,0,c
 12237  0050EC  2A02               	incf	(___flge@ff1+1)^0,f,c
 12238  0050EE  1E03               	comf	(___flge@ff1+2)^0,f,c
 12239  0050F0  B0D8               	btfsc	status,0,c
 12240  0050F2  2A03               	incf	(___flge@ff1+2)^0,f,c
 12241  0050F4  0E80               	movlw	128
 12242  0050F6  5604               	subfwb	(___flge@ff1+3)^0,f,c
 12243  0050F8                     l4164:
 12244  0050F8  AE08               	btfss	(___flge@ff2+3)^0,7,c
 12245  0050FA  EF81  F028         	goto	u4191
 12246  0050FE  EF83  F028         	goto	u4190
 12247  005102                     u4191:
 12248  005102  EF8C  F028         	goto	l891
 12249  005106                     u4190:
 12250  005106  6C05               	negf	___flge@ff2^0,c
 12251  005108  1E06               	comf	(___flge@ff2+1)^0,f,c
 12252  00510A  B0D8               	btfsc	status,0,c
 12253  00510C  2A06               	incf	(___flge@ff2+1)^0,f,c
 12254  00510E  1E07               	comf	(___flge@ff2+2)^0,f,c
 12255  005110  B0D8               	btfsc	status,0,c
 12256  005112  2A07               	incf	(___flge@ff2+2)^0,f,c
 12257  005114  0E80               	movlw	128
 12258  005116  5608               	subfwb	(___flge@ff2+3)^0,f,c
 12259  005118                     l891:
 12260  005118  0E00               	movlw	0
 12261  00511A  1A01               	xorwf	___flge@ff1^0,f,c
 12262  00511C  0E00               	movlw	0
 12263  00511E  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 12264  005120  0E00               	movlw	0
 12265  005122  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 12266  005124  0E80               	movlw	128
 12267  005126  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 12268  005128  0E00               	movlw	0
 12269  00512A  1A05               	xorwf	___flge@ff2^0,f,c
 12270  00512C  0E00               	movlw	0
 12271  00512E  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 12272  005130  0E00               	movlw	0
 12273  005132  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 12274  005134  0E80               	movlw	128
 12275  005136  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 12276  005138  5005               	movf	___flge@ff2^0,w,c
 12277  00513A  5C01               	subwf	___flge@ff1^0,w,c
 12278  00513C  5006               	movf	(___flge@ff2+1)^0,w,c
 12279  00513E  5802               	subwfb	(___flge@ff1+1)^0,w,c
 12280  005140  5007               	movf	(___flge@ff2+2)^0,w,c
 12281  005142  5803               	subwfb	(___flge@ff1+2)^0,w,c
 12282  005144  5008               	movf	(___flge@ff2+3)^0,w,c
 12283  005146  5804               	subwfb	(___flge@ff1+3)^0,w,c
 12284  005148  B0D8               	btfsc	status,0,c
 12285  00514A  EFA9  F028         	goto	u4201
 12286  00514E  EFAB  F028         	goto	u4200
 12287  005152                     u4201:
 12288  005152  EFAE  F028         	goto	l4170
 12289  005156                     u4200:
 12290  005156  90D8               	bcf	status,0,c
 12291  005158  EFAF  F028         	goto	l896
 12292  00515C                     l4170:
 12293  00515C  80D8               	bsf	status,0,c
 12294  00515E                     l896:
 12295  00515E  0012               	return		;funcret
 12296  005160                     __end_of___flge:
 12297                           	callstack 0
 12298                           
 12299 ;; *************** function ___fltol *****************
 12300 ;; Defined at:
 12301 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
 12302 ;; Parameters:    Size  Location     Type
 12303 ;;  f1              4   90[COMRAM] unsigned char 
 12304 ;; Auto vars:     Size  Location     Type
 12305 ;;  exp1            1    5[BANK0 ] unsigned char 
 12306 ;;  sign1           1    4[BANK0 ] unsigned char 
 12307 ;; Return value:  Size  Location     Type
 12308 ;;                  4   90[COMRAM] long 
 12309 ;; Registers used:
 12310 ;;		wreg, status,2, status,0
 12311 ;; Tracked objects:
 12312 ;;		On entry : 0/0
 12313 ;;		On exit  : 0/0
 12314 ;;		Unchanged: 0/0
 12315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12316 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12317 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12318 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12319 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12320 ;;Total ram usage:       10 bytes
 12321 ;; Hardware stack levels used: 1
 12322 ;; Hardware stack levels required when called: 1
 12323 ;; This function calls:
 12324 ;;		Nothing
 12325 ;; This function is called by:
 12326 ;;		_detect_color
 12327 ;;		_lroundf
 12328 ;; This function uses a non-reentrant model
 12329 ;;
 12330                           
 12331                           	psect	text54
 12332  004F54                     __ptext54:
 12333                           	callstack 0
 12334  004F54                     ___fltol:
 12335                           	callstack 26
 12336  004F54  345D               	rlcf	(___fltol@f1+2)^0,w,c
 12337  004F56  345E               	rlcf	(___fltol@f1+3)^0,w,c
 12338  004F58  0100               	movlb	0	; () banked
 12339  004F5A  6F65               	movwf	___fltol@exp1& (0+255),b
 12340  004F5C  5165               	movf	___fltol@exp1& (0+255),w,b
 12341  004F5E  A4D8               	btfss	status,2,c
 12342  004F60  EFB4  F027         	goto	u4351
 12343  004F64  EFB6  F027         	goto	u4350
 12344  004F68                     u4351:
 12345  004F68  EFC0  F027         	goto	l4312
 12346  004F6C                     u4350:
 12347  004F6C                     l4308:
 12348                           
 12349                           ; BSR set to: 0
 12350  004F6C  0E00               	movlw	0
 12351  004F6E  6E5B               	movwf	?___fltol^0,c
 12352  004F70  0E00               	movlw	0
 12353  004F72  6E5C               	movwf	(?___fltol+1)^0,c
 12354  004F74  0E00               	movlw	0
 12355  004F76  6E5D               	movwf	(?___fltol+2)^0,c
 12356  004F78  0E00               	movlw	0
 12357  004F7A  6E5E               	movwf	(?___fltol+3)^0,c
 12358  004F7C  EF2D  F028         	goto	l923
 12359  004F80                     l4312:
 12360                           
 12361                           ; BSR set to: 0
 12362  004F80  C05B  F060         	movff	___fltol@f1,??___fltol
 12363  004F84  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
 12364  004F88  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
 12365  004F8C  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
 12366  004F90  0E20               	movlw	32
 12367  004F92  EFD0  F027         	goto	u4360
 12368  004F96                     u4365:
 12369  004F96  90D8               	bcf	status,0,c
 12370  004F98  3363               	rrcf	(??___fltol+3)& (0+255),f,b
 12371  004F9A  3362               	rrcf	(??___fltol+2)& (0+255),f,b
 12372  004F9C  3361               	rrcf	(??___fltol+1)& (0+255),f,b
 12373  004F9E  3360               	rrcf	??___fltol& (0+255),f,b
 12374  004FA0                     u4360:
 12375  004FA0  2EE8               	decfsz	wreg,f,c
 12376  004FA2  EFCB  F027         	goto	u4365
 12377  004FA6  5160               	movf	??___fltol& (0+255),w,b
 12378  004FA8  6F64               	movwf	___fltol@sign1& (0+255),b
 12379  004FAA                     
 12380                           ; BSR set to: 0
 12381  004FAA  8E5D               	bsf	(___fltol@f1+2)^0,7,c
 12382  004FAC                     
 12383                           ; BSR set to: 0
 12384  004FAC  0EFF               	movlw	255
 12385  004FAE  165B               	andwf	___fltol@f1^0,f,c
 12386  004FB0  0EFF               	movlw	255
 12387  004FB2  165C               	andwf	(___fltol@f1+1)^0,f,c
 12388  004FB4  0EFF               	movlw	255
 12389  004FB6  165D               	andwf	(___fltol@f1+2)^0,f,c
 12390  004FB8  0E00               	movlw	0
 12391  004FBA  165E               	andwf	(___fltol@f1+3)^0,f,c
 12392  004FBC                     
 12393                           ; BSR set to: 0
 12394  004FBC  0E96               	movlw	150
 12395  004FBE  5F65               	subwf	___fltol@exp1& (0+255),f,b
 12396  004FC0                     
 12397                           ; BSR set to: 0
 12398  004FC0  BF65               	btfsc	___fltol@exp1& (0+255),7,b
 12399  004FC2  EFE7  F027         	goto	u4370
 12400  004FC6  EFE5  F027         	goto	u4371
 12401  004FCA                     u4371:
 12402  004FCA  EFFD  F027         	goto	l4332
 12403  004FCE                     u4370:
 12404  004FCE                     
 12405                           ; BSR set to: 0
 12406  004FCE  5165               	movf	___fltol@exp1& (0+255),w,b
 12407  004FD0  0A80               	xorlw	128
 12408  004FD2  0F97               	addlw	151
 12409  004FD4  B0D8               	btfsc	status,0,c
 12410  004FD6  EFEF  F027         	goto	u4381
 12411  004FDA  EFF1  F027         	goto	u4380
 12412  004FDE                     u4381:
 12413  004FDE  EFF3  F027         	goto	l4328
 12414  004FE2                     u4380:
 12415  004FE2  EFB6  F027         	goto	l4308
 12416  004FE6                     l4328:
 12417                           
 12418                           ; BSR set to: 0
 12419  004FE6  90D8               	bcf	status,0,c
 12420  004FE8  325E               	rrcf	(___fltol@f1+3)^0,f,c
 12421  004FEA  325D               	rrcf	(___fltol@f1+2)^0,f,c
 12422  004FEC  325C               	rrcf	(___fltol@f1+1)^0,f,c
 12423  004FEE  325B               	rrcf	___fltol@f1^0,f,c
 12424  004FF0                     
 12425                           ; BSR set to: 0
 12426  004FF0  3F65               	incfsz	___fltol@exp1& (0+255),f,b
 12427  004FF2  EFF3  F027         	goto	l4328
 12428  004FF6  EF15  F028         	goto	l4342
 12429  004FFA                     l4332:
 12430                           
 12431                           ; BSR set to: 0
 12432  004FFA  0E1F               	movlw	31
 12433  004FFC  6565               	cpfsgt	___fltol@exp1& (0+255),b
 12434  004FFE  EF03  F028         	goto	u4391
 12435  005002  EF05  F028         	goto	u4390
 12436  005006                     u4391:
 12437  005006  EF0D  F028         	goto	l4340
 12438  00500A                     u4390:
 12439  00500A  EFB6  F027         	goto	l4308
 12440  00500E                     l4338:
 12441                           
 12442                           ; BSR set to: 0
 12443  00500E  90D8               	bcf	status,0,c
 12444  005010  365B               	rlcf	___fltol@f1^0,f,c
 12445  005012  365C               	rlcf	(___fltol@f1+1)^0,f,c
 12446  005014  365D               	rlcf	(___fltol@f1+2)^0,f,c
 12447  005016  365E               	rlcf	(___fltol@f1+3)^0,f,c
 12448  005018  0765               	decf	___fltol@exp1& (0+255),f,b
 12449  00501A                     l4340:
 12450                           
 12451                           ; BSR set to: 0
 12452  00501A  5165               	movf	___fltol@exp1& (0+255),w,b
 12453  00501C  A4D8               	btfss	status,2,c
 12454  00501E  EF13  F028         	goto	u4401
 12455  005022  EF15  F028         	goto	u4400
 12456  005026                     u4401:
 12457  005026  EF07  F028         	goto	l4338
 12458  00502A                     u4400:
 12459  00502A                     l4342:
 12460                           
 12461                           ; BSR set to: 0
 12462  00502A  5164               	movf	___fltol@sign1& (0+255),w,b
 12463  00502C  B4D8               	btfsc	status,2,c
 12464  00502E  EF1B  F028         	goto	u4411
 12465  005032  EF1D  F028         	goto	u4410
 12466  005036                     u4411:
 12467  005036  EF25  F028         	goto	l4346
 12468  00503A                     u4410:
 12469  00503A                     
 12470                           ; BSR set to: 0
 12471  00503A  1E5E               	comf	(___fltol@f1+3)^0,f,c
 12472  00503C  1E5D               	comf	(___fltol@f1+2)^0,f,c
 12473  00503E  1E5C               	comf	(___fltol@f1+1)^0,f,c
 12474  005040  6C5B               	negf	___fltol@f1^0,c
 12475  005042  0E00               	movlw	0
 12476  005044  225C               	addwfc	(___fltol@f1+1)^0,f,c
 12477  005046  225D               	addwfc	(___fltol@f1+2)^0,f,c
 12478  005048  225E               	addwfc	(___fltol@f1+3)^0,f,c
 12479  00504A                     l4346:
 12480                           
 12481                           ; BSR set to: 0
 12482  00504A  C05B  F05B         	movff	___fltol@f1,?___fltol
 12483  00504E  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
 12484  005052  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
 12485  005056  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
 12486  00505A                     l923:
 12487                           
 12488                           ; BSR set to: 0
 12489  00505A  0012               	return		;funcret
 12490  00505C                     __end_of___fltol:
 12491                           	callstack 0
 12492                           
 12493 ;; *************** function _color_read_Clear *****************
 12494 ;; Defined at:
 12495 ;;		line 153 in file "color.c"
 12496 ;; Parameters:    Size  Location     Type
 12497 ;;		None
 12498 ;; Auto vars:     Size  Location     Type
 12499 ;;  tmp             2    9[COMRAM] unsigned int 
 12500 ;; Return value:  Size  Location     Type
 12501 ;;                  2    4[COMRAM] unsigned int 
 12502 ;; Registers used:
 12503 ;;		wreg, status,2, status,0, cstack
 12504 ;; Tracked objects:
 12505 ;;		On entry : 0/0
 12506 ;;		On exit  : 0/0
 12507 ;;		Unchanged: 0/0
 12508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12510 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12511 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12512 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12513 ;;Total ram usage:        7 bytes
 12514 ;; Hardware stack levels used: 1
 12515 ;; Hardware stack levels required when called: 3
 12516 ;; This function calls:
 12517 ;;		_I2C_2_Master_Read
 12518 ;;		_I2C_2_Master_RepStart
 12519 ;;		_I2C_2_Master_Start
 12520 ;;		_I2C_2_Master_Stop
 12521 ;;		_I2C_2_Master_Write
 12522 ;; This function is called by:
 12523 ;;		_read_color
 12524 ;;		_calibrate_white
 12525 ;;		_amb_light_measure
 12526 ;;		_detect_wall
 12527 ;; This function uses a non-reentrant model
 12528 ;;
 12529                           
 12530                           	psect	text55
 12531  005AB8                     __ptext55:
 12532                           	callstack 0
 12533  005AB8                     _color_read_Clear:
 12534                           	callstack 24
 12535  005AB8                     
 12536                           ;color.c: 155:  unsigned int tmp;;color.c: 156:  I2C_2_Master_Start();
 12537  005AB8  EC17  F030         	call	_I2C_2_Master_Start	;wreg free
 12538                           
 12539                           ;color.c: 157:  I2C_2_Master_Write(0x52 | 0x00);
 12540  005ABC  0E52               	movlw	82
 12541  005ABE  EC01  F030         	call	_I2C_2_Master_Write
 12542                           
 12543                           ;color.c: 158:  I2C_2_Master_Write(0xA0 | 0x14);
 12544  005AC2  0EB4               	movlw	180
 12545  005AC4  EC01  F030         	call	_I2C_2_Master_Write
 12546                           
 12547                           ;color.c: 159:  I2C_2_Master_RepStart();
 12548  005AC8  EC0D  F030         	call	_I2C_2_Master_RepStart	;wreg free
 12549                           
 12550                           ;color.c: 160:  I2C_2_Master_Write(0x52 | 0x01);
 12551  005ACC  0E53               	movlw	83
 12552  005ACE  EC01  F030         	call	_I2C_2_Master_Write
 12553                           
 12554                           ;color.c: 161:  tmp=I2C_2_Master_Read(1);
 12555  005AD2  0E01               	movlw	1
 12556  005AD4  ECEA  F02D         	call	_I2C_2_Master_Read
 12557  005AD8  6E07               	movwf	??_color_read_Clear^0,c
 12558  005ADA  5007               	movf	??_color_read_Clear^0,w,c
 12559  005ADC  6E0A               	movwf	color_read_Clear@tmp^0,c
 12560  005ADE  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
 12561                           
 12562                           ;color.c: 162:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 12563  005AE0  0E00               	movlw	0
 12564  005AE2  ECEA  F02D         	call	_I2C_2_Master_Read
 12565  005AE6  6E07               	movwf	??_color_read_Clear^0,c
 12566  005AE8  5007               	movf	??_color_read_Clear^0,w,c
 12567  005AEA  6E09               	movwf	(??_color_read_Clear+2)^0,c
 12568  005AEC  6A08               	clrf	(??_color_read_Clear+1)^0,c
 12569  005AEE  500A               	movf	color_read_Clear@tmp^0,w,c
 12570  005AF0  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
 12571  005AF2  6E0A               	movwf	color_read_Clear@tmp^0,c
 12572  005AF4  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
 12573  005AF6  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
 12574  005AF8  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
 12575                           
 12576                           ;color.c: 163:  I2C_2_Master_Stop();
 12577  005AFA  EC12  F030         	call	_I2C_2_Master_Stop	;wreg free
 12578  005AFE                     
 12579                           ;color.c: 164:  return tmp;
 12580  005AFE  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
 12581  005B02  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 12582  005B06  0012               	return		;funcret
 12583  005B08                     __end_of_color_read_Clear:
 12584                           	callstack 0
 12585                           
 12586 ;; *************** function _I2C_2_Master_RepStart *****************
 12587 ;; Defined at:
 12588 ;;		line 33 in file "i2c.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;		None
 12591 ;; Auto vars:     Size  Location     Type
 12592 ;;		None
 12593 ;; Return value:  Size  Location     Type
 12594 ;;                  1    wreg      void 
 12595 ;; Registers used:
 12596 ;;		wreg, status,2, status,0, cstack
 12597 ;; Tracked objects:
 12598 ;;		On entry : 0/0
 12599 ;;		On exit  : 0/0
 12600 ;;		Unchanged: 0/0
 12601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12606 ;;Total ram usage:        0 bytes
 12607 ;; Hardware stack levels used: 1
 12608 ;; Hardware stack levels required when called: 2
 12609 ;; This function calls:
 12610 ;;		_I2C_2_Master_Idle
 12611 ;; This function is called by:
 12612 ;;		_color_read_Red
 12613 ;;		_color_read_Blue
 12614 ;;		_color_read_Green
 12615 ;;		_color_read_Clear
 12616 ;; This function uses a non-reentrant model
 12617 ;;
 12618                           
 12619                           	psect	text56
 12620  00601A                     __ptext56:
 12621                           	callstack 0
 12622  00601A                     _I2C_2_Master_RepStart:
 12623                           	callstack 24
 12624  00601A                     
 12625                           ;i2c.c: 35:   I2C_2_Master_Idle();
 12626  00601A  EC50  F02F         	call	_I2C_2_Master_Idle	;wreg free
 12627  00601E                     
 12628                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 12629  00601E  010E               	movlb	14	; () banked
 12630  006020  83DA               	bsf	218,1,b	;volatile
 12631  006022                     
 12632                           ; BSR set to: 14
 12633  006022  0012               	return		;funcret
 12634  006024                     __end_of_I2C_2_Master_RepStart:
 12635                           	callstack 0
 12636                           
 12637 ;; *************** function _I2C_2_Master_Read *****************
 12638 ;; Defined at:
 12639 ;;		line 51 in file "i2c.c"
 12640 ;; Parameters:    Size  Location     Type
 12641 ;;  ack             1    wreg     unsigned char 
 12642 ;; Auto vars:     Size  Location     Type
 12643 ;;  ack             1    2[COMRAM] unsigned char 
 12644 ;;  tmp             1    3[COMRAM] unsigned char 
 12645 ;; Return value:  Size  Location     Type
 12646 ;;                  1    wreg      unsigned char 
 12647 ;; Registers used:
 12648 ;;		wreg, status,2, status,0, cstack
 12649 ;; Tracked objects:
 12650 ;;		On entry : 0/0
 12651 ;;		On exit  : 0/0
 12652 ;;		Unchanged: 0/0
 12653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12655 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12656 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12657 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12658 ;;Total ram usage:        3 bytes
 12659 ;; Hardware stack levels used: 1
 12660 ;; Hardware stack levels required when called: 2
 12661 ;; This function calls:
 12662 ;;		_I2C_2_Master_Idle
 12663 ;; This function is called by:
 12664 ;;		_color_read_Red
 12665 ;;		_color_read_Blue
 12666 ;;		_color_read_Green
 12667 ;;		_color_read_Clear
 12668 ;; This function uses a non-reentrant model
 12669 ;;
 12670                           
 12671                           	psect	text57
 12672  005BD4                     __ptext57:
 12673                           	callstack 0
 12674  005BD4                     _I2C_2_Master_Read:
 12675                           	callstack 24
 12676                           
 12677                           ; BSR set to: 14
 12678                           ;incstack = 0
 12679                           ;I2C_2_Master_Read@ack stored from wreg
 12680  005BD4  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 12681  005BD6                     
 12682                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 12683  005BD6  EC50  F02F         	call	_I2C_2_Master_Idle	;wreg free
 12684  005BDA                     
 12685                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 12686  005BDA  010E               	movlb	14	; () banked
 12687  005BDC  87DA               	bsf	218,3,b	;volatile
 12688                           
 12689                           ;i2c.c: 56:   I2C_2_Master_Idle();
 12690  005BDE  EC50  F02F         	call	_I2C_2_Master_Idle	;wreg free
 12691  005BE2                     
 12692                           ;i2c.c: 57:   tmp = SSP2BUF;
 12693  005BE2  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 12694                           
 12695                           ;i2c.c: 58:   I2C_2_Master_Idle();
 12696  005BE6  EC50  F02F         	call	_I2C_2_Master_Idle	;wreg free
 12697  005BEA                     
 12698                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 12699  005BEA  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 12700  005BEC  B4D8               	btfsc	status,2,c
 12701  005BEE  EFFB  F02D         	goto	u3901
 12702  005BF2  EFFF  F02D         	goto	u3900
 12703  005BF6                     u3901:
 12704  005BF6  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12705  005BF8  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 12706  005BFA  EF00  F02E         	goto	u3918
 12707  005BFE                     u3900:
 12708  005BFE  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12709  005C00                     u3918:
 12710  005C00  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 12711  005C02  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 12712  005C04  010E               	movlb	14	; () banked
 12713  005C06  51DA               	movf	218,w,b	;volatile
 12714  005C08  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12715  005C0A  0BDF               	andlw	-33
 12716  005C0C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12717  005C0E  6FDA               	movwf	218,b	;volatile
 12718  005C10                     
 12719                           ; BSR set to: 14
 12720                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 12721  005C10  89DA               	bsf	218,4,b	;volatile
 12722  005C12                     
 12723                           ; BSR set to: 14
 12724                           ;i2c.c: 61:   return tmp;
 12725  005C12  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 12726  005C14                     
 12727                           ; BSR set to: 14
 12728  005C14  0012               	return		;funcret
 12729  005C16                     __end_of_I2C_2_Master_Read:
 12730                           	callstack 0
 12731                           
 12732 ;; *************** function ___xxtofl *****************
 12733 ;; Defined at:
 12734 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
 12735 ;; Parameters:    Size  Location     Type
 12736 ;;  sign            1    wreg     unsigned char 
 12737 ;;  val             4    0[COMRAM] long 
 12738 ;; Auto vars:     Size  Location     Type
 12739 ;;  sign            1    8[COMRAM] unsigned char 
 12740 ;;  arg             4   10[COMRAM] unsigned long 
 12741 ;;  exp             1    9[COMRAM] unsigned char 
 12742 ;; Return value:  Size  Location     Type
 12743 ;;                  4    0[COMRAM] unsigned char 
 12744 ;; Registers used:
 12745 ;;		wreg, status,2, status,0
 12746 ;; Tracked objects:
 12747 ;;		On entry : 0/0
 12748 ;;		On exit  : 0/0
 12749 ;;		Unchanged: 0/0
 12750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12751 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12752 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12753 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12754 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12755 ;;Total ram usage:       14 bytes
 12756 ;; Hardware stack levels used: 1
 12757 ;; Hardware stack levels required when called: 1
 12758 ;; This function calls:
 12759 ;;		Nothing
 12760 ;; This function is called by:
 12761 ;;		_detect_color
 12762 ;;		_amb_light_measure
 12763 ;;		_detect_wall
 12764 ;; This function uses a non-reentrant model
 12765 ;;
 12766                           
 12767                           	psect	text58
 12768  0040BC                     __ptext58:
 12769                           	callstack 0
 12770  0040BC                     ___xxtofl:
 12771                           	callstack 27
 12772                           
 12773                           ; BSR set to: 14
 12774                           ;incstack = 0
 12775                           ;___xxtofl@sign stored from wreg
 12776  0040BC  6E09               	movwf	___xxtofl@sign^0,c
 12777  0040BE  5009               	movf	___xxtofl@sign^0,w,c
 12778  0040C0  B4D8               	btfsc	status,2,c
 12779  0040C2  EF65  F020         	goto	u5091
 12780  0040C6  EF67  F020         	goto	u5090
 12781  0040CA                     u5091:
 12782  0040CA  EF89  F020         	goto	l1281
 12783  0040CE                     u5090:
 12784  0040CE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12785  0040D0  EF6E  F020         	goto	u5100
 12786  0040D4  EF6C  F020         	goto	u5101
 12787  0040D8                     u5101:
 12788  0040D8  EF89  F020         	goto	l1281
 12789  0040DC                     u5100:
 12790  0040DC  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12791  0040E0  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12792  0040E4  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12793  0040E8  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12794  0040EC  1E05               	comf	??___xxtofl^0,f,c
 12795  0040EE  1E06               	comf	(??___xxtofl+1)^0,f,c
 12796  0040F0  1E07               	comf	(??___xxtofl+2)^0,f,c
 12797  0040F2  1E08               	comf	(??___xxtofl+3)^0,f,c
 12798  0040F4  2A05               	incf	??___xxtofl^0,f,c
 12799  0040F6  0E00               	movlw	0
 12800  0040F8  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12801  0040FA  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12802  0040FC  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12803  0040FE  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12804  004102  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12805  004106  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12806  00410A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12807  00410E  EF91  F020         	goto	l4670
 12808  004112                     l1281:
 12809  004112  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12810  004116  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12811  00411A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12812  00411E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12813  004122                     l4670:
 12814  004122  5001               	movf	___xxtofl@val^0,w,c
 12815  004124  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12816  004126  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12817  004128  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12818  00412A  A4D8               	btfss	status,2,c
 12819  00412C  EF9A  F020         	goto	u5111
 12820  004130  EF9C  F020         	goto	u5110
 12821  004134                     u5111:
 12822  004134  EFA6  F020         	goto	l4676
 12823  004138                     u5110:
 12824  004138  0E00               	movlw	0
 12825  00413A  6E01               	movwf	?___xxtofl^0,c
 12826  00413C  0E00               	movlw	0
 12827  00413E  6E02               	movwf	(?___xxtofl+1)^0,c
 12828  004140  0E00               	movlw	0
 12829  004142  6E03               	movwf	(?___xxtofl+2)^0,c
 12830  004144  0E00               	movlw	0
 12831  004146  6E04               	movwf	(?___xxtofl+3)^0,c
 12832  004148  EF37  F021         	goto	l1284
 12833  00414C                     l4676:
 12834  00414C  0E96               	movlw	150
 12835  00414E  6E0A               	movwf	___xxtofl@exp^0,c
 12836  004150  EFB0  F020         	goto	l4680
 12837  004154                     l4678:
 12838  004154  2A0A               	incf	___xxtofl@exp^0,f,c
 12839  004156  90D8               	bcf	status,0,c
 12840  004158  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12841  00415A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12842  00415C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12843  00415E  320B               	rrcf	___xxtofl@arg^0,f,c
 12844  004160                     l4680:
 12845  004160  0E00               	movlw	0
 12846  004162  140B               	andwf	___xxtofl@arg^0,w,c
 12847  004164  6E05               	movwf	??___xxtofl^0,c
 12848  004166  0E00               	movlw	0
 12849  004168  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12850  00416A  6E06               	movwf	(??___xxtofl+1)^0,c
 12851  00416C  0E00               	movlw	0
 12852  00416E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12853  004170  6E07               	movwf	(??___xxtofl+2)^0,c
 12854  004172  0EFE               	movlw	254
 12855  004174  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12856  004176  6E08               	movwf	(??___xxtofl+3)^0,c
 12857  004178  5005               	movf	??___xxtofl^0,w,c
 12858  00417A  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12859  00417C  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12860  00417E  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12861  004180  A4D8               	btfss	status,2,c
 12862  004182  EFC5  F020         	goto	u5121
 12863  004186  EFC7  F020         	goto	u5120
 12864  00418A                     u5121:
 12865  00418A  EFAA  F020         	goto	l4678
 12866  00418E                     u5120:
 12867  00418E  EFD5  F020         	goto	l1288
 12868  004192                     l4682:
 12869  004192  2A0A               	incf	___xxtofl@exp^0,f,c
 12870  004194  0E01               	movlw	1
 12871  004196  260B               	addwf	___xxtofl@arg^0,f,c
 12872  004198  0E00               	movlw	0
 12873  00419A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12874  00419C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12875  00419E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12876  0041A0  90D8               	bcf	status,0,c
 12877  0041A2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12878  0041A4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12879  0041A6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12880  0041A8  320B               	rrcf	___xxtofl@arg^0,f,c
 12881  0041AA                     l1288:
 12882  0041AA  0E00               	movlw	0
 12883  0041AC  140B               	andwf	___xxtofl@arg^0,w,c
 12884  0041AE  6E05               	movwf	??___xxtofl^0,c
 12885  0041B0  0E00               	movlw	0
 12886  0041B2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12887  0041B4  6E06               	movwf	(??___xxtofl+1)^0,c
 12888  0041B6  0E00               	movlw	0
 12889  0041B8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12890  0041BA  6E07               	movwf	(??___xxtofl+2)^0,c
 12891  0041BC  0EFF               	movlw	255
 12892  0041BE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12893  0041C0  6E08               	movwf	(??___xxtofl+3)^0,c
 12894  0041C2  5005               	movf	??___xxtofl^0,w,c
 12895  0041C4  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12896  0041C6  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12897  0041C8  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12898  0041CA  A4D8               	btfss	status,2,c
 12899  0041CC  EFEA  F020         	goto	u5131
 12900  0041D0  EFEC  F020         	goto	u5130
 12901  0041D4                     u5131:
 12902  0041D4  EFC9  F020         	goto	l4682
 12903  0041D8                     u5130:
 12904  0041D8  EFF4  F020         	goto	l4690
 12905  0041DC                     l4688:
 12906  0041DC  060A               	decf	___xxtofl@exp^0,f,c
 12907  0041DE  90D8               	bcf	status,0,c
 12908  0041E0  360B               	rlcf	___xxtofl@arg^0,f,c
 12909  0041E2  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12910  0041E4  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12911  0041E6  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12912  0041E8                     l4690:
 12913  0041E8  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12914  0041EA  EFF9  F020         	goto	u5141
 12915  0041EE  EFFB  F020         	goto	u5140
 12916  0041F2                     u5141:
 12917  0041F2  EF03  F021         	goto	l1295
 12918  0041F6                     u5140:
 12919  0041F6  0E02               	movlw	2
 12920  0041F8  600A               	cpfslt	___xxtofl@exp^0,c
 12921  0041FA  EF01  F021         	goto	u5151
 12922  0041FE  EF03  F021         	goto	u5150
 12923  004202                     u5151:
 12924  004202  EFEE  F020         	goto	l4688
 12925  004206                     u5150:
 12926  004206                     l1295:
 12927  004206  B00A               	btfsc	___xxtofl@exp^0,0,c
 12928  004208  EF08  F021         	goto	u5161
 12929  00420C  EF0A  F021         	goto	u5160
 12930  004210                     u5161:
 12931  004210  EF0B  F021         	goto	l4696
 12932  004214                     u5160:
 12933  004214  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12934  004216                     l4696:
 12935  004216  90D8               	bcf	status,0,c
 12936  004218  320A               	rrcf	___xxtofl@exp^0,f,c
 12937  00421A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12938  00421E  6A06               	clrf	(??___xxtofl+1)^0,c
 12939  004220  6A07               	clrf	(??___xxtofl+2)^0,c
 12940  004222  6A08               	clrf	(??___xxtofl+3)^0,c
 12941  004224  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12942  004228  6A07               	clrf	(??___xxtofl+2)^0,c
 12943  00422A  6A06               	clrf	(??___xxtofl+1)^0,c
 12944  00422C  6A05               	clrf	??___xxtofl^0,c
 12945  00422E  5005               	movf	??___xxtofl^0,w,c
 12946  004230  120B               	iorwf	___xxtofl@arg^0,f,c
 12947  004232  5006               	movf	(??___xxtofl+1)^0,w,c
 12948  004234  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12949  004236  5007               	movf	(??___xxtofl+2)^0,w,c
 12950  004238  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12951  00423A  5008               	movf	(??___xxtofl+3)^0,w,c
 12952  00423C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12953  00423E  5009               	movf	___xxtofl@sign^0,w,c
 12954  004240  B4D8               	btfsc	status,2,c
 12955  004242  EF25  F021         	goto	u5171
 12956  004246  EF27  F021         	goto	u5170
 12957  00424A                     u5171:
 12958  00424A  EF2F  F021         	goto	l4706
 12959  00424E                     u5170:
 12960  00424E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12961  004250  EF2E  F021         	goto	u5180
 12962  004254  EF2C  F021         	goto	u5181
 12963  004258                     u5181:
 12964  004258  EF2F  F021         	goto	l4706
 12965  00425C                     u5180:
 12966  00425C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12967  00425E                     l4706:
 12968  00425E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12969  004262  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12970  004266  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12971  00426A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12972  00426E                     l1284:
 12973  00426E  0012               	return		;funcret
 12974  004270                     __end_of___xxtofl:
 12975                           	callstack 0
 12976                           
 12977 ;; *************** function ___fldiv *****************
 12978 ;; Defined at:
 12979 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
 12980 ;; Parameters:    Size  Location     Type
 12981 ;;  b               4   14[COMRAM] unsigned char 
 12982 ;;  a               4   18[COMRAM] unsigned char 
 12983 ;; Auto vars:     Size  Location     Type
 12984 ;;  grs             4   33[COMRAM] unsigned long 
 12985 ;;  rem             4   26[COMRAM] unsigned long 
 12986 ;;  new_exp         2   31[COMRAM] short 
 12987 ;;  aexp            1   38[COMRAM] unsigned char 
 12988 ;;  bexp            1   37[COMRAM] unsigned char 
 12989 ;;  sign            1   30[COMRAM] unsigned char 
 12990 ;; Return value:  Size  Location     Type
 12991 ;;                  4   14[COMRAM] unsigned char 
 12992 ;; Registers used:
 12993 ;;		wreg, status,2, status,0
 12994 ;; Tracked objects:
 12995 ;;		On entry : 0/0
 12996 ;;		On exit  : 0/0
 12997 ;;		Unchanged: 0/0
 12998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12999 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13000 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13001 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13002 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13003 ;;Total ram usage:       25 bytes
 13004 ;; Hardware stack levels used: 1
 13005 ;; Hardware stack levels required when called: 1
 13006 ;; This function calls:
 13007 ;;		Nothing
 13008 ;; This function is called by:
 13009 ;;		_detect_color
 13010 ;;		_amb_light_measure
 13011 ;; This function uses a non-reentrant model
 13012 ;;
 13013                           
 13014                           	psect	text59
 13015  002D08                     __ptext59:
 13016                           	callstack 0
 13017  002D08                     ___fldiv:
 13018                           	callstack 27
 13019  002D08  5012               	movf	(___fldiv@b+3)^0,w,c
 13020  002D0A  0B80               	andlw	128
 13021  002D0C  6E1F               	movwf	___fldiv@sign^0,c
 13022  002D0E  5012               	movf	(___fldiv@b+3)^0,w,c
 13023  002D10  2412               	addwf	(___fldiv@b+3)^0,w,c
 13024  002D12  6E26               	movwf	___fldiv@bexp^0,c
 13025  002D14  AE11               	btfss	(___fldiv@b+2)^0,7,c
 13026  002D16  EF8F  F016         	goto	u4861
 13027  002D1A  EF91  F016         	goto	u4860
 13028  002D1E                     u4861:
 13029  002D1E  EF92  F016         	goto	l4532
 13030  002D22                     u4860:
 13031  002D22  8026               	bsf	___fldiv@bexp^0,0,c
 13032  002D24                     l4532:
 13033  002D24  5026               	movf	___fldiv@bexp^0,w,c
 13034  002D26  B4D8               	btfsc	status,2,c
 13035  002D28  EF98  F016         	goto	u4871
 13036  002D2C  EF9A  F016         	goto	u4870
 13037  002D30                     u4871:
 13038  002D30  EFAF  F016         	goto	l4542
 13039  002D34                     u4870:
 13040  002D34  2826               	incf	___fldiv@bexp^0,w,c
 13041  002D36  A4D8               	btfss	status,2,c
 13042  002D38  EFA0  F016         	goto	u4881
 13043  002D3C  EFA2  F016         	goto	u4880
 13044  002D40                     u4881:
 13045  002D40  EFAA  F016         	goto	l4538
 13046  002D44                     u4880:
 13047  002D44  0E00               	movlw	0
 13048  002D46  6E0F               	movwf	___fldiv@b^0,c
 13049  002D48  0E00               	movlw	0
 13050  002D4A  6E10               	movwf	(___fldiv@b+1)^0,c
 13051  002D4C  0E00               	movlw	0
 13052  002D4E  6E11               	movwf	(___fldiv@b+2)^0,c
 13053  002D50  0E00               	movlw	0
 13054  002D52  6E12               	movwf	(___fldiv@b+3)^0,c
 13055  002D54                     l4538:
 13056  002D54  8E11               	bsf	(___fldiv@b+2)^0,7,c
 13057  002D56  0E00               	movlw	0
 13058  002D58  6E12               	movwf	(___fldiv@b+3)^0,c
 13059  002D5A  EFB7  F016         	goto	l4544
 13060  002D5E                     l4542:
 13061  002D5E  0E00               	movlw	0
 13062  002D60  6E0F               	movwf	___fldiv@b^0,c
 13063  002D62  0E00               	movlw	0
 13064  002D64  6E10               	movwf	(___fldiv@b+1)^0,c
 13065  002D66  0E00               	movlw	0
 13066  002D68  6E11               	movwf	(___fldiv@b+2)^0,c
 13067  002D6A  0E00               	movlw	0
 13068  002D6C  6E12               	movwf	(___fldiv@b+3)^0,c
 13069  002D6E                     l4544:
 13070  002D6E  5016               	movf	(___fldiv@a+3)^0,w,c
 13071  002D70  0B80               	andlw	128
 13072  002D72  1A1F               	xorwf	___fldiv@sign^0,f,c
 13073  002D74  5016               	movf	(___fldiv@a+3)^0,w,c
 13074  002D76  2416               	addwf	(___fldiv@a+3)^0,w,c
 13075  002D78  6E27               	movwf	___fldiv@aexp^0,c
 13076  002D7A  AE15               	btfss	(___fldiv@a+2)^0,7,c
 13077  002D7C  EFC2  F016         	goto	u4891
 13078  002D80  EFC4  F016         	goto	u4890
 13079  002D84                     u4891:
 13080  002D84  EFC5  F016         	goto	l4552
 13081  002D88                     u4890:
 13082  002D88  8027               	bsf	___fldiv@aexp^0,0,c
 13083  002D8A                     l4552:
 13084  002D8A  5027               	movf	___fldiv@aexp^0,w,c
 13085  002D8C  B4D8               	btfsc	status,2,c
 13086  002D8E  EFCB  F016         	goto	u4901
 13087  002D92  EFCD  F016         	goto	u4900
 13088  002D96                     u4901:
 13089  002D96  EFE2  F016         	goto	l4562
 13090  002D9A                     u4900:
 13091  002D9A  2827               	incf	___fldiv@aexp^0,w,c
 13092  002D9C  A4D8               	btfss	status,2,c
 13093  002D9E  EFD3  F016         	goto	u4911
 13094  002DA2  EFD5  F016         	goto	u4910
 13095  002DA6                     u4911:
 13096  002DA6  EFDD  F016         	goto	l4558
 13097  002DAA                     u4910:
 13098  002DAA  0E00               	movlw	0
 13099  002DAC  6E13               	movwf	___fldiv@a^0,c
 13100  002DAE  0E00               	movlw	0
 13101  002DB0  6E14               	movwf	(___fldiv@a+1)^0,c
 13102  002DB2  0E00               	movlw	0
 13103  002DB4  6E15               	movwf	(___fldiv@a+2)^0,c
 13104  002DB6  0E00               	movlw	0
 13105  002DB8  6E16               	movwf	(___fldiv@a+3)^0,c
 13106  002DBA                     l4558:
 13107  002DBA  8E15               	bsf	(___fldiv@a+2)^0,7,c
 13108  002DBC  0E00               	movlw	0
 13109  002DBE  6E16               	movwf	(___fldiv@a+3)^0,c
 13110  002DC0  EFEA  F016         	goto	l4564
 13111  002DC4                     l4562:
 13112  002DC4  0E00               	movlw	0
 13113  002DC6  6E13               	movwf	___fldiv@a^0,c
 13114  002DC8  0E00               	movlw	0
 13115  002DCA  6E14               	movwf	(___fldiv@a+1)^0,c
 13116  002DCC  0E00               	movlw	0
 13117  002DCE  6E15               	movwf	(___fldiv@a+2)^0,c
 13118  002DD0  0E00               	movlw	0
 13119  002DD2  6E16               	movwf	(___fldiv@a+3)^0,c
 13120  002DD4                     l4564:
 13121  002DD4  5013               	movf	___fldiv@a^0,w,c
 13122  002DD6  1014               	iorwf	(___fldiv@a+1)^0,w,c
 13123  002DD8  1015               	iorwf	(___fldiv@a+2)^0,w,c
 13124  002DDA  1016               	iorwf	(___fldiv@a+3)^0,w,c
 13125  002DDC  A4D8               	btfss	status,2,c
 13126  002DDE  EFF3  F016         	goto	u4921
 13127  002DE2  EFF5  F016         	goto	u4920
 13128  002DE6                     u4921:
 13129  002DE6  EF0D  F017         	goto	l4576
 13130  002DEA                     u4920:
 13131  002DEA  0E00               	movlw	0
 13132  002DEC  6E0F               	movwf	___fldiv@b^0,c
 13133  002DEE  0E00               	movlw	0
 13134  002DF0  6E10               	movwf	(___fldiv@b+1)^0,c
 13135  002DF2  0E00               	movlw	0
 13136  002DF4  6E11               	movwf	(___fldiv@b+2)^0,c
 13137  002DF6  0E00               	movlw	0
 13138  002DF8  6E12               	movwf	(___fldiv@b+3)^0,c
 13139  002DFA  0E80               	movlw	128
 13140  002DFC  1211               	iorwf	(___fldiv@b+2)^0,f,c
 13141  002DFE  0E7F               	movlw	127
 13142  002E00  1212               	iorwf	(___fldiv@b+3)^0,f,c
 13143  002E02                     l4570:
 13144  002E02  501F               	movf	___fldiv@sign^0,w,c
 13145  002E04  1212               	iorwf	(___fldiv@b+3)^0,f,c
 13146  002E06  C00F  F00F         	movff	___fldiv@b,?___fldiv
 13147  002E0A  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 13148  002E0E  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 13149  002E12  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 13150  002E16  EF50  F018         	goto	l1208
 13151  002E1A                     l4576:
 13152  002E1A  5026               	movf	___fldiv@bexp^0,w,c
 13153  002E1C  A4D8               	btfss	status,2,c
 13154  002E1E  EF13  F017         	goto	u4931
 13155  002E22  EF15  F017         	goto	u4930
 13156  002E26                     u4931:
 13157  002E26  EF1F  F017         	goto	l4584
 13158  002E2A                     u4930:
 13159  002E2A  0E00               	movlw	0
 13160  002E2C  6E0F               	movwf	?___fldiv^0,c
 13161  002E2E  0E00               	movlw	0
 13162  002E30  6E10               	movwf	(?___fldiv+1)^0,c
 13163  002E32  0E00               	movlw	0
 13164  002E34  6E11               	movwf	(?___fldiv+2)^0,c
 13165  002E36  0E00               	movlw	0
 13166  002E38  6E12               	movwf	(?___fldiv+3)^0,c
 13167  002E3A  EF50  F018         	goto	l1208
 13168  002E3E                     l4584:
 13169  002E3E  5027               	movf	___fldiv@aexp^0,w,c
 13170  002E40  C026  F017         	movff	___fldiv@bexp,??___fldiv
 13171  002E44  6A18               	clrf	(??___fldiv+1)^0,c
 13172  002E46  5E17               	subwf	??___fldiv^0,f,c
 13173  002E48  0E00               	movlw	0
 13174  002E4A  5A18               	subwfb	(??___fldiv+1)^0,f,c
 13175  002E4C  0E7F               	movlw	127
 13176  002E4E  2417               	addwf	??___fldiv^0,w,c
 13177  002E50  6E20               	movwf	___fldiv@new_exp^0,c
 13178  002E52  0E00               	movlw	0
 13179  002E54  2018               	addwfc	(??___fldiv+1)^0,w,c
 13180  002E56  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 13181  002E58  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 13182  002E5C  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 13183  002E60  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 13184  002E64  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 13185  002E68  0E00               	movlw	0
 13186  002E6A  6E0F               	movwf	___fldiv@b^0,c
 13187  002E6C  0E00               	movlw	0
 13188  002E6E  6E10               	movwf	(___fldiv@b+1)^0,c
 13189  002E70  0E00               	movlw	0
 13190  002E72  6E11               	movwf	(___fldiv@b+2)^0,c
 13191  002E74  0E00               	movlw	0
 13192  002E76  6E12               	movwf	(___fldiv@b+3)^0,c
 13193  002E78  0E00               	movlw	0
 13194  002E7A  6E22               	movwf	___fldiv@grs^0,c
 13195  002E7C  0E00               	movlw	0
 13196  002E7E  6E23               	movwf	(___fldiv@grs+1)^0,c
 13197  002E80  0E00               	movlw	0
 13198  002E82  6E24               	movwf	(___fldiv@grs+2)^0,c
 13199  002E84  0E00               	movlw	0
 13200  002E86  6E25               	movwf	(___fldiv@grs+3)^0,c
 13201  002E88  0E00               	movlw	0
 13202  002E8A  6E27               	movwf	___fldiv@aexp^0,c
 13203  002E8C  EF80  F017         	goto	l1210
 13204  002E90                     l4594:
 13205  002E90  5027               	movf	___fldiv@aexp^0,w,c
 13206  002E92  B4D8               	btfsc	status,2,c
 13207  002E94  EF4E  F017         	goto	u4941
 13208  002E98  EF50  F017         	goto	u4940
 13209  002E9C                     u4941:
 13210  002E9C  EF67  F017         	goto	l4602
 13211  002EA0                     u4940:
 13212  002EA0  90D8               	bcf	status,0,c
 13213  002EA2  361B               	rlcf	___fldiv@rem^0,f,c
 13214  002EA4  361C               	rlcf	(___fldiv@rem+1)^0,f,c
 13215  002EA6  361D               	rlcf	(___fldiv@rem+2)^0,f,c
 13216  002EA8  361E               	rlcf	(___fldiv@rem+3)^0,f,c
 13217  002EAA  90D8               	bcf	status,0,c
 13218  002EAC  360F               	rlcf	___fldiv@b^0,f,c
 13219  002EAE  3610               	rlcf	(___fldiv@b+1)^0,f,c
 13220  002EB0  3611               	rlcf	(___fldiv@b+2)^0,f,c
 13221  002EB2  3612               	rlcf	(___fldiv@b+3)^0,f,c
 13222  002EB4  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 13223  002EB6  EF5F  F017         	goto	u4951
 13224  002EBA  EF61  F017         	goto	u4950
 13225  002EBE                     u4951:
 13226  002EBE  EF62  F017         	goto	l1213
 13227  002EC2                     u4950:
 13228  002EC2  800F               	bsf	___fldiv@b^0,0,c
 13229  002EC4                     l1213:
 13230  002EC4  90D8               	bcf	status,0,c
 13231  002EC6  3622               	rlcf	___fldiv@grs^0,f,c
 13232  002EC8  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 13233  002ECA  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 13234  002ECC  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 13235  002ECE                     l4602:
 13236  002ECE  5013               	movf	___fldiv@a^0,w,c
 13237  002ED0  5C1B               	subwf	___fldiv@rem^0,w,c
 13238  002ED2  5014               	movf	(___fldiv@a+1)^0,w,c
 13239  002ED4  581C               	subwfb	(___fldiv@rem+1)^0,w,c
 13240  002ED6  5015               	movf	(___fldiv@a+2)^0,w,c
 13241  002ED8  581D               	subwfb	(___fldiv@rem+2)^0,w,c
 13242  002EDA  5016               	movf	(___fldiv@a+3)^0,w,c
 13243  002EDC  581E               	subwfb	(___fldiv@rem+3)^0,w,c
 13244  002EDE  A0D8               	btfss	status,0,c
 13245  002EE0  EF74  F017         	goto	u4961
 13246  002EE4  EF76  F017         	goto	u4960
 13247  002EE8                     u4961:
 13248  002EE8  EF7F  F017         	goto	l4608
 13249  002EEC                     u4960:
 13250  002EEC  8C25               	bsf	(___fldiv@grs+3)^0,6,c
 13251  002EEE  5013               	movf	___fldiv@a^0,w,c
 13252  002EF0  5E1B               	subwf	___fldiv@rem^0,f,c
 13253  002EF2  5014               	movf	(___fldiv@a+1)^0,w,c
 13254  002EF4  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
 13255  002EF6  5015               	movf	(___fldiv@a+2)^0,w,c
 13256  002EF8  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
 13257  002EFA  5016               	movf	(___fldiv@a+3)^0,w,c
 13258  002EFC  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
 13259  002EFE                     l4608:
 13260  002EFE  2A27               	incf	___fldiv@aexp^0,f,c
 13261  002F00                     l1210:
 13262  002F00  0E19               	movlw	25
 13263  002F02  6427               	cpfsgt	___fldiv@aexp^0,c
 13264  002F04  EF86  F017         	goto	u4971
 13265  002F08  EF88  F017         	goto	u4970
 13266  002F0C                     u4971:
 13267  002F0C  EF48  F017         	goto	l4594
 13268  002F10                     u4970:
 13269  002F10  501B               	movf	___fldiv@rem^0,w,c
 13270  002F12  101C               	iorwf	(___fldiv@rem+1)^0,w,c
 13271  002F14  101D               	iorwf	(___fldiv@rem+2)^0,w,c
 13272  002F16  101E               	iorwf	(___fldiv@rem+3)^0,w,c
 13273  002F18  B4D8               	btfsc	status,2,c
 13274  002F1A  EF91  F017         	goto	u4981
 13275  002F1E  EF93  F017         	goto	u4980
 13276  002F22                     u4981:
 13277  002F22  EFAB  F017         	goto	l4620
 13278  002F26                     u4980:
 13279  002F26  8022               	bsf	___fldiv@grs^0,0,c
 13280  002F28  EFAB  F017         	goto	l4620
 13281  002F2C                     l4614:
 13282  002F2C  90D8               	bcf	status,0,c
 13283  002F2E  360F               	rlcf	___fldiv@b^0,f,c
 13284  002F30  3610               	rlcf	(___fldiv@b+1)^0,f,c
 13285  002F32  3611               	rlcf	(___fldiv@b+2)^0,f,c
 13286  002F34  3612               	rlcf	(___fldiv@b+3)^0,f,c
 13287  002F36  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 13288  002F38  EFA0  F017         	goto	u4991
 13289  002F3C  EFA2  F017         	goto	u4990
 13290  002F40                     u4991:
 13291  002F40  EFA3  F017         	goto	l1219
 13292  002F44                     u4990:
 13293  002F44  800F               	bsf	___fldiv@b^0,0,c
 13294  002F46                     l1219:
 13295  002F46  90D8               	bcf	status,0,c
 13296  002F48  3622               	rlcf	___fldiv@grs^0,f,c
 13297  002F4A  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 13298  002F4C  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 13299  002F4E  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 13300  002F50  0620               	decf	___fldiv@new_exp^0,f,c
 13301  002F52  A0D8               	btfss	status,0,c
 13302  002F54  0621               	decf	(___fldiv@new_exp+1)^0,f,c
 13303  002F56                     l4620:
 13304  002F56  AE11               	btfss	(___fldiv@b+2)^0,7,c
 13305  002F58  EFB0  F017         	goto	u5001
 13306  002F5C  EFB2  F017         	goto	u5000
 13307  002F60                     u5001:
 13308  002F60  EF96  F017         	goto	l4614
 13309  002F64                     u5000:
 13310  002F64  0E00               	movlw	0
 13311  002F66  6E27               	movwf	___fldiv@aexp^0,c
 13312  002F68  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 13313  002F6A  EFB9  F017         	goto	u5011
 13314  002F6E  EFBB  F017         	goto	u5010
 13315  002F72                     u5011:
 13316  002F72  EFDF  F017         	goto	l1221
 13317  002F76                     u5010:
 13318  002F76  0EFF               	movlw	255
 13319  002F78  1422               	andwf	___fldiv@grs^0,w,c
 13320  002F7A  6E17               	movwf	??___fldiv^0,c
 13321  002F7C  0EFF               	movlw	255
 13322  002F7E  1423               	andwf	(___fldiv@grs+1)^0,w,c
 13323  002F80  6E18               	movwf	(??___fldiv+1)^0,c
 13324  002F82  0EFF               	movlw	255
 13325  002F84  1424               	andwf	(___fldiv@grs+2)^0,w,c
 13326  002F86  6E19               	movwf	(??___fldiv+2)^0,c
 13327  002F88  0E7F               	movlw	127
 13328  002F8A  1425               	andwf	(___fldiv@grs+3)^0,w,c
 13329  002F8C  6E1A               	movwf	(??___fldiv+3)^0,c
 13330  002F8E  5017               	movf	??___fldiv^0,w,c
 13331  002F90  1018               	iorwf	(??___fldiv+1)^0,w,c
 13332  002F92  1019               	iorwf	(??___fldiv+2)^0,w,c
 13333  002F94  101A               	iorwf	(??___fldiv+3)^0,w,c
 13334  002F96  B4D8               	btfsc	status,2,c
 13335  002F98  EFD0  F017         	goto	u5021
 13336  002F9C  EFD2  F017         	goto	u5020
 13337  002FA0                     u5021:
 13338  002FA0  EFD6  F017         	goto	l1222
 13339  002FA4                     u5020:
 13340  002FA4                     l4628:
 13341  002FA4  0E01               	movlw	1
 13342  002FA6  6E27               	movwf	___fldiv@aexp^0,c
 13343  002FA8  EFDF  F017         	goto	l1221
 13344  002FAC                     l1222:
 13345  002FAC  A00F               	btfss	___fldiv@b^0,0,c
 13346  002FAE  EFDB  F017         	goto	u5031
 13347  002FB2  EFDD  F017         	goto	u5030
 13348  002FB6                     u5031:
 13349  002FB6  EFDF  F017         	goto	l1221
 13350  002FBA                     u5030:
 13351  002FBA  EFD2  F017         	goto	l4628
 13352  002FBE                     l1221:
 13353  002FBE  5027               	movf	___fldiv@aexp^0,w,c
 13354  002FC0  B4D8               	btfsc	status,2,c
 13355  002FC2  EFE5  F017         	goto	u5041
 13356  002FC6  EFE7  F017         	goto	u5040
 13357  002FCA                     u5041:
 13358  002FCA  EF0B  F018         	goto	l4640
 13359  002FCE                     u5040:
 13360  002FCE  0E01               	movlw	1
 13361  002FD0  260F               	addwf	___fldiv@b^0,f,c
 13362  002FD2  0E00               	movlw	0
 13363  002FD4  2210               	addwfc	(___fldiv@b+1)^0,f,c
 13364  002FD6  2211               	addwfc	(___fldiv@b+2)^0,f,c
 13365  002FD8  2212               	addwfc	(___fldiv@b+3)^0,f,c
 13366  002FDA  A012               	btfss	(___fldiv@b+3)^0,0,c
 13367  002FDC  EFF2  F017         	goto	u5051
 13368  002FE0  EFF4  F017         	goto	u5050
 13369  002FE4                     u5051:
 13370  002FE4  EF0B  F018         	goto	l4640
 13371  002FE8                     u5050:
 13372  002FE8  C00F  F017         	movff	___fldiv@b,??___fldiv
 13373  002FEC  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 13374  002FF0  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 13375  002FF4  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 13376  002FF8  341A               	rlcf	(??___fldiv+3)^0,w,c
 13377  002FFA  321A               	rrcf	(??___fldiv+3)^0,f,c
 13378  002FFC  3219               	rrcf	(??___fldiv+2)^0,f,c
 13379  002FFE  3218               	rrcf	(??___fldiv+1)^0,f,c
 13380  003000  3217               	rrcf	??___fldiv^0,f,c
 13381  003002  C017  F00F         	movff	??___fldiv,___fldiv@b
 13382  003006  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 13383  00300A  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 13384  00300E  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 13385  003012  4A20               	infsnz	___fldiv@new_exp^0,f,c
 13386  003014  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 13387  003016                     l4640:
 13388  003016  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13389  003018  EF16  F018         	goto	u5061
 13390  00301C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 13391  00301E  E108               	bnz	u5060
 13392  003020  2820               	incf	___fldiv@new_exp^0,w,c
 13393  003022  A0D8               	btfss	status,0,c
 13394  003024  EF16  F018         	goto	u5061
 13395  003028  EF18  F018         	goto	u5060
 13396  00302C                     u5061:
 13397  00302C  EF23  F018         	goto	l4644
 13398  003030                     u5060:
 13399  003030  0E00               	movlw	0
 13400  003032  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 13401  003034  6820               	setf	___fldiv@new_exp^0,c
 13402  003036  0E00               	movlw	0
 13403  003038  6E0F               	movwf	___fldiv@b^0,c
 13404  00303A  0E00               	movlw	0
 13405  00303C  6E10               	movwf	(___fldiv@b+1)^0,c
 13406  00303E  0E00               	movlw	0
 13407  003040  6E11               	movwf	(___fldiv@b+2)^0,c
 13408  003042  0E00               	movlw	0
 13409  003044  6E12               	movwf	(___fldiv@b+3)^0,c
 13410  003046                     l4644:
 13411  003046  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13412  003048  EF30  F018         	goto	u5070
 13413  00304C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 13414  00304E  E106               	bnz	u5071
 13415  003050  0420               	decf	___fldiv@new_exp^0,w,c
 13416  003052  B0D8               	btfsc	status,0,c
 13417  003054  EF2E  F018         	goto	u5071
 13418  003058  EF30  F018         	goto	u5070
 13419  00305C                     u5071:
 13420  00305C  EF3E  F018         	goto	l4648
 13421  003060                     u5070:
 13422  003060  0E00               	movlw	0
 13423  003062  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 13424  003064  0E00               	movlw	0
 13425  003066  6E20               	movwf	___fldiv@new_exp^0,c
 13426  003068  0E00               	movlw	0
 13427  00306A  6E0F               	movwf	___fldiv@b^0,c
 13428  00306C  0E00               	movlw	0
 13429  00306E  6E10               	movwf	(___fldiv@b+1)^0,c
 13430  003070  0E00               	movlw	0
 13431  003072  6E11               	movwf	(___fldiv@b+2)^0,c
 13432  003074  0E00               	movlw	0
 13433  003076  6E12               	movwf	(___fldiv@b+3)^0,c
 13434  003078  0E00               	movlw	0
 13435  00307A  6E1F               	movwf	___fldiv@sign^0,c
 13436  00307C                     l4648:
 13437  00307C  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 13438  003080  A026               	btfss	___fldiv@bexp^0,0,c
 13439  003082  EF45  F018         	goto	u5081
 13440  003086  EF47  F018         	goto	u5080
 13441  00308A                     u5081:
 13442  00308A  EF4A  F018         	goto	l4654
 13443  00308E                     u5080:
 13444  00308E  8E11               	bsf	(___fldiv@b+2)^0,7,c
 13445  003090  EF4B  F018         	goto	l4656
 13446  003094                     l4654:
 13447  003094  9E11               	bcf	(___fldiv@b+2)^0,7,c
 13448  003096                     l4656:
 13449  003096  90D8               	bcf	status,0,c
 13450  003098  3026               	rrcf	___fldiv@bexp^0,w,c
 13451  00309A  6E12               	movwf	(___fldiv@b+3)^0,c
 13452  00309C  EF01  F017         	goto	l4570
 13453  0030A0                     l1208:
 13454  0030A0  0012               	return		;funcret
 13455  0030A2                     __end_of___fldiv:
 13456                           	callstack 0
 13457                           
 13458 ;; *************** function _LED_C *****************
 13459 ;; Defined at:
 13460 ;;		line 193 in file "color.c"
 13461 ;; Parameters:    Size  Location     Type
 13462 ;;		None
 13463 ;; Auto vars:     Size  Location     Type
 13464 ;;		None
 13465 ;; Return value:  Size  Location     Type
 13466 ;;                  1    wreg      void 
 13467 ;; Registers used:
 13468 ;;		wreg
 13469 ;; Tracked objects:
 13470 ;;		On entry : 0/0
 13471 ;;		On exit  : 0/0
 13472 ;;		Unchanged: 0/0
 13473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13478 ;;Total ram usage:        2 bytes
 13479 ;; Hardware stack levels used: 1
 13480 ;; Hardware stack levels required when called: 1
 13481 ;; This function calls:
 13482 ;;		Nothing
 13483 ;; This function is called by:
 13484 ;;		_calibrate_white
 13485 ;;		_amb_light_measure
 13486 ;;		_detect_wall
 13487 ;;		_color_data_collection
 13488 ;;		_test_function
 13489 ;; This function uses a non-reentrant model
 13490 ;;
 13491                           
 13492                           	psect	text60
 13493  005F6E                     __ptext60:
 13494                           	callstack 0
 13495  005F6E                     _LED_C:
 13496                           	callstack 27
 13497  005F6E                     
 13498                           ;color.c: 195:     LATGbits.LATG1 = 1;
 13499  005F6E  827F               	bsf	127,1,c	;volatile
 13500                           
 13501                           ;color.c: 196:     LATFbits.LATF7 = 1;
 13502  005F70  8E7E               	bsf	126,7,c	;volatile
 13503                           
 13504                           ;color.c: 197:     LATAbits.LATA4 = 1;
 13505  005F72  8879               	bsf	121,4,c	;volatile
 13506  005F74                     
 13507                           ;color.c: 198:     _delay((unsigned long)((200)*(64000000/4000.0)));
 13508  005F74  0E11               	movlw	17
 13509  005F76  6E02               	movwf	(??_LED_C+1)^0,c
 13510  005F78  0E3C               	movlw	60
 13511  005F7A  6E01               	movwf	??_LED_C^0,c
 13512  005F7C  0ECB               	movlw	203
 13513  005F7E                     u6527:
 13514  005F7E  2EE8               	decfsz	wreg,f,c
 13515  005F80  D7FE               	bra	u6527
 13516  005F82  2E01               	decfsz	??_LED_C^0,f,c
 13517  005F84  D7FC               	bra	u6527
 13518  005F86  2E02               	decfsz	(??_LED_C+1)^0,f,c
 13519  005F88  D7FA               	bra	u6527
 13520  005F8A  F000               	nop	
 13521  005F8C  0012               	return		;funcret
 13522  005F8E                     __end_of_LED_C:
 13523                           	callstack 0
 13524                           
 13525 ;; *************** function _pin_init *****************
 13526 ;; Defined at:
 13527 ;;		line 13 in file "color.c"
 13528 ;; Parameters:    Size  Location     Type
 13529 ;;		None
 13530 ;; Auto vars:     Size  Location     Type
 13531 ;;		None
 13532 ;; Return value:  Size  Location     Type
 13533 ;;                  1    wreg      void 
 13534 ;; Registers used:
 13535 ;;		None
 13536 ;; Tracked objects:
 13537 ;;		On entry : 0/0
 13538 ;;		On exit  : 0/0
 13539 ;;		Unchanged: 0/0
 13540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13545 ;;Total ram usage:        0 bytes
 13546 ;; Hardware stack levels used: 1
 13547 ;; Hardware stack levels required when called: 1
 13548 ;; This function calls:
 13549 ;;		Nothing
 13550 ;; This function is called by:
 13551 ;;		_main
 13552 ;; This function uses a non-reentrant model
 13553 ;;
 13554                           
 13555                           	psect	text61
 13556  005DB0                     __ptext61:
 13557                           	callstack 0
 13558  005DB0                     _pin_init:
 13559                           	callstack 29
 13560  005DB0  8486               	bsf	134,2,c	;volatile
 13561                           
 13562                           ;color.c: 15:     ANSELFbits.ANSELF2=0;
 13563  005DB2  010E               	movlb	14	; () banked
 13564  005DB4  95B4               	bcf	180,2,b	;volatile
 13565                           
 13566                           ;color.c: 16:     TRISFbits.TRISF3=1;
 13567  005DB6  8686               	bsf	134,3,c	;volatile
 13568                           
 13569                           ;color.c: 17:     ANSELFbits.ANSELF3=0;
 13570  005DB8  97B4               	bcf	180,3,b	;volatile
 13571                           
 13572                           ;color.c: 19:     TRISGbits.TRISG1 = 0;
 13573  005DBA  9287               	bcf	135,1,c	;volatile
 13574                           
 13575                           ;color.c: 20:     TRISFbits.TRISF7 = 0;
 13576  005DBC  9E86               	bcf	134,7,c	;volatile
 13577                           
 13578                           ;color.c: 21:     TRISAbits.TRISA4 = 0;
 13579  005DBE  9881               	bcf	129,4,c	;volatile
 13580                           
 13581                           ;color.c: 23:     LATGbits.LATG1 = 1;
 13582  005DC0  827F               	bsf	127,1,c	;volatile
 13583                           
 13584                           ;color.c: 24:     LATFbits.LATF7 = 1;
 13585  005DC2  8E7E               	bsf	126,7,c	;volatile
 13586                           
 13587                           ;color.c: 25:     LATAbits.LATA4 = 1;
 13588  005DC4  8879               	bsf	121,4,c	;volatile
 13589                           
 13590                           ;color.c: 28:     TRISDbits.TRISD7 = 0;
 13591  005DC6  9E84               	bcf	132,7,c	;volatile
 13592                           
 13593                           ;color.c: 29:     LATDbits.LATD7 = 0;
 13594  005DC8  9E7C               	bcf	124,7,c	;volatile
 13595                           
 13596                           ;color.c: 30:     TRISHbits.TRISH3 = 0;
 13597  005DCA  9688               	bcf	136,3,c	;volatile
 13598                           
 13599                           ;color.c: 31:     LATHbits.LATH3 = 0;
 13600  005DCC  9680               	bcf	128,3,c	;volatile
 13601                           
 13602                           ;color.c: 34:     TRISHbits.TRISH1=0;
 13603  005DCE  9288               	bcf	136,1,c	;volatile
 13604                           
 13605                           ;color.c: 35:     TRISDbits.TRISD4=0;
 13606  005DD0  9884               	bcf	132,4,c	;volatile
 13607                           
 13608                           ;color.c: 36:     TRISDbits.TRISD3=0;
 13609  005DD2  9684               	bcf	132,3,c	;volatile
 13610                           
 13611                           ;color.c: 37:     TRISFbits.TRISF0=0;
 13612  005DD4  9086               	bcf	134,0,c	;volatile
 13613                           
 13614                           ;color.c: 38:     TRISHbits.TRISH0=0;
 13615  005DD6  9088               	bcf	136,0,c	;volatile
 13616                           
 13617                           ;color.c: 40:     LATHbits.LATH1 = 0;
 13618  005DD8  9280               	bcf	128,1,c	;volatile
 13619                           
 13620                           ;color.c: 41:     LATDbits.LATD4 = 0;
 13621  005DDA  987C               	bcf	124,4,c	;volatile
 13622                           
 13623                           ;color.c: 42:     LATDbits.LATD3 = 0;
 13624  005DDC  967C               	bcf	124,3,c	;volatile
 13625                           
 13626                           ;color.c: 43:     LATFbits.LATF0 = 0;
 13627  005DDE  907E               	bcf	126,0,c	;volatile
 13628                           
 13629                           ;color.c: 44:     LATHbits.LATH0 = 0;
 13630  005DE0  9080               	bcf	128,0,c	;volatile
 13631  005DE2                     
 13632                           ; BSR set to: 14
 13633  005DE2  0012               	return		;funcret
 13634  005DE4                     __end_of_pin_init:
 13635                           	callstack 0
 13636                           
 13637 ;; *************** function _initUSART4 *****************
 13638 ;; Defined at:
 13639 ;;		line 4 in file "serial.c"
 13640 ;; Parameters:    Size  Location     Type
 13641 ;;		None
 13642 ;; Auto vars:     Size  Location     Type
 13643 ;;		None
 13644 ;; Return value:  Size  Location     Type
 13645 ;;                  1    wreg      void 
 13646 ;; Registers used:
 13647 ;;		wreg, status,2
 13648 ;; Tracked objects:
 13649 ;;		On entry : 0/0
 13650 ;;		On exit  : 0/0
 13651 ;;		Unchanged: 0/0
 13652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13657 ;;Total ram usage:        0 bytes
 13658 ;; Hardware stack levels used: 1
 13659 ;; Hardware stack levels required when called: 1
 13660 ;; This function calls:
 13661 ;;		Nothing
 13662 ;; This function is called by:
 13663 ;;		_main
 13664 ;; This function uses a non-reentrant model
 13665 ;;
 13666                           
 13667                           	psect	text62
 13668  005FAE                     __ptext62:
 13669                           	callstack 0
 13670  005FAE                     _initUSART4:
 13671                           	callstack 29
 13672  005FAE                     
 13673                           ;serial.c: 8:     RC0PPS = 0x12;
 13674  005FAE  0E12               	movlw	18
 13675  005FB0  010E               	movlb	14	; () banked
 13676  005FB2  6F62               	movwf	98,b	;volatile
 13677                           
 13678                           ;serial.c: 9:     RX4PPS = 0x11;
 13679  005FB4  0E11               	movlw	17
 13680  005FB6  6F15               	movwf	21,b	;volatile
 13681  005FB8                     
 13682                           ; BSR set to: 14
 13683                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
 13684  005FB8  97E9               	bcf	233,3,b	;volatile
 13685  005FBA                     
 13686                           ; BSR set to: 14
 13687                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
 13688  005FBA  95E8               	bcf	232,2,b	;volatile
 13689                           
 13690                           ;serial.c: 13:     SP4BRGL = 51;
 13691  005FBC  0E33               	movlw	51
 13692  005FBE  6FE5               	movwf	229,b	;volatile
 13693                           
 13694                           ;serial.c: 15:     SP4BRGH = 0;
 13695  005FC0  0E00               	movlw	0
 13696  005FC2  6FE6               	movwf	230,b	;volatile
 13697  005FC4                     
 13698                           ; BSR set to: 14
 13699                           ;serial.c: 17:     RC4STAbits.CREN = 1;
 13700  005FC4  89E7               	bsf	231,4,b	;volatile
 13701  005FC6                     
 13702                           ; BSR set to: 14
 13703                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
 13704  005FC6  8BE8               	bsf	232,5,b	;volatile
 13705  005FC8                     
 13706                           ; BSR set to: 14
 13707                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
 13708  005FC8  8FE7               	bsf	231,7,b	;volatile
 13709  005FCA                     
 13710                           ; BSR set to: 14
 13711  005FCA  0012               	return		;funcret
 13712  005FCC                     __end_of_initUSART4:
 13713                           	callstack 0
 13714                           
 13715 ;; *************** function _initDCmotors_parameter *****************
 13716 ;; Defined at:
 13717 ;;		line 37 in file "dc_motor.c"
 13718 ;; Parameters:    Size  Location     Type
 13719 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
 13720 ;;		 -> main@motorL(9), 
 13721 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
 13722 ;;		 -> main@motorR(9), 
 13723 ;; Auto vars:     Size  Location     Type
 13724 ;;		None
 13725 ;; Return value:  Size  Location     Type
 13726 ;;                  1    wreg      void 
 13727 ;; Registers used:
 13728 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13729 ;; Tracked objects:
 13730 ;;		On entry : 0/0
 13731 ;;		On exit  : 0/0
 13732 ;;		Unchanged: 0/0
 13733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13734 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13737 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13738 ;;Total ram usage:        4 bytes
 13739 ;; Hardware stack levels used: 1
 13740 ;; Hardware stack levels required when called: 1
 13741 ;; This function calls:
 13742 ;;		Nothing
 13743 ;; This function is called by:
 13744 ;;		_main
 13745 ;; This function uses a non-reentrant model
 13746 ;;
 13747                           
 13748                           	psect	text63
 13749  00524E                     __ptext63:
 13750                           	callstack 0
 13751  00524E                     _initDCmotors_parameter:
 13752                           	callstack 29
 13753  00524E                     
 13754                           ;dc_motor.c: 39:     motorL->power = 0;
 13755  00524E  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
 13756  005252  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
 13757  005256  0E00               	movlw	0
 13758  005258  6EDF               	movwf	indf2,c
 13759  00525A                     
 13760                           ;dc_motor.c: 40:     motorL->direction = 1;
 13761  00525A  EE20 F001          	lfsr	2,1
 13762  00525E  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13763  005260  26D9               	addwf	fsr2l,f,c
 13764  005262  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13765  005264  22DA               	addwfc	fsr2h,f,c
 13766  005266  0E01               	movlw	1
 13767  005268  6EDF               	movwf	indf2,c
 13768  00526A                     
 13769                           ;dc_motor.c: 41:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
 13770  00526A  EE20 F002          	lfsr	2,2
 13771  00526E  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13772  005270  26D9               	addwf	fsr2l,f,c
 13773  005272  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13774  005274  22DA               	addwfc	fsr2h,f,c
 13775  005276  0EA3               	movlw	163
 13776  005278  6EDE               	movwf	postinc2,c
 13777  00527A  0E0F               	movlw	15
 13778  00527C  6EDD               	movwf	postdec2,c
 13779  00527E                     
 13780                           ;dc_motor.c: 42:     motorL->dir_LAT = (unsigned char *)(&LATE);
 13781  00527E  EE20 F004          	lfsr	2,4
 13782  005282  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13783  005284  26D9               	addwf	fsr2l,f,c
 13784  005286  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13785  005288  22DA               	addwfc	fsr2h,f,c
 13786  00528A  0E7D               	movlw	125
 13787  00528C  6EDE               	movwf	postinc2,c
 13788  00528E  0E0F               	movlw	15
 13789  005290  6EDD               	movwf	postdec2,c
 13790  005292                     
 13791                           ;dc_motor.c: 43:     motorL->dir_pin = 4;
 13792  005292  EE20 F006          	lfsr	2,6
 13793  005296  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13794  005298  26D9               	addwf	fsr2l,f,c
 13795  00529A  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13796  00529C  22DA               	addwfc	fsr2h,f,c
 13797  00529E  0E04               	movlw	4
 13798  0052A0  6EDF               	movwf	indf2,c
 13799  0052A2                     
 13800                           ;dc_motor.c: 44:     motorL->PWMperiod = 199;
 13801  0052A2  EE20 F007          	lfsr	2,7
 13802  0052A6  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13803  0052A8  26D9               	addwf	fsr2l,f,c
 13804  0052AA  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13805  0052AC  22DA               	addwfc	fsr2h,f,c
 13806  0052AE  0EC7               	movlw	199
 13807  0052B0  6EDE               	movwf	postinc2,c
 13808  0052B2  0E00               	movlw	0
 13809  0052B4  6EDD               	movwf	postdec2,c
 13810  0052B6                     
 13811                           ;dc_motor.c: 47:     motorR->power = 0;
 13812  0052B6  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
 13813  0052BA  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
 13814  0052BE  0E00               	movlw	0
 13815  0052C0  6EDF               	movwf	indf2,c
 13816                           
 13817                           ;dc_motor.c: 48:     motorR->direction = 1;
 13818  0052C2  EE20 F001          	lfsr	2,1
 13819  0052C6  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13820  0052C8  26D9               	addwf	fsr2l,f,c
 13821  0052CA  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13822  0052CC  22DA               	addwfc	fsr2h,f,c
 13823  0052CE  0E01               	movlw	1
 13824  0052D0  6EDF               	movwf	indf2,c
 13825                           
 13826                           ;dc_motor.c: 49:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
 13827  0052D2  EE20 F002          	lfsr	2,2
 13828  0052D6  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13829  0052D8  26D9               	addwf	fsr2l,f,c
 13830  0052DA  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13831  0052DC  22DA               	addwfc	fsr2h,f,c
 13832  0052DE  0EA0               	movlw	160
 13833  0052E0  6EDE               	movwf	postinc2,c
 13834  0052E2  0E0F               	movlw	15
 13835  0052E4  6EDD               	movwf	postdec2,c
 13836                           
 13837                           ;dc_motor.c: 50:     motorR->dir_LAT = (unsigned char *)(&LATG);
 13838  0052E6  EE20 F004          	lfsr	2,4
 13839  0052EA  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13840  0052EC  26D9               	addwf	fsr2l,f,c
 13841  0052EE  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13842  0052F0  22DA               	addwfc	fsr2h,f,c
 13843  0052F2  0E7F               	movlw	127
 13844  0052F4  6EDE               	movwf	postinc2,c
 13845  0052F6  0E0F               	movlw	15
 13846  0052F8  6EDD               	movwf	postdec2,c
 13847                           
 13848                           ;dc_motor.c: 51:     motorR->dir_pin = 6;
 13849  0052FA  EE20 F006          	lfsr	2,6
 13850  0052FE  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13851  005300  26D9               	addwf	fsr2l,f,c
 13852  005302  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13853  005304  22DA               	addwfc	fsr2h,f,c
 13854  005306  0E06               	movlw	6
 13855  005308  6EDF               	movwf	indf2,c
 13856                           
 13857                           ;dc_motor.c: 52:     motorR->PWMperiod = 199;
 13858  00530A  EE20 F007          	lfsr	2,7
 13859  00530E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13860  005310  26D9               	addwf	fsr2l,f,c
 13861  005312  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13862  005314  22DA               	addwfc	fsr2h,f,c
 13863  005316  0EC7               	movlw	199
 13864  005318  6EDE               	movwf	postinc2,c
 13865  00531A  0E00               	movlw	0
 13866  00531C  6EDD               	movwf	postdec2,c
 13867  00531E  0012               	return		;funcret
 13868  005320                     __end_of_initDCmotors_parameter:
 13869                           	callstack 0
 13870                           
 13871 ;; *************** function _initDCmotorsPWM *****************
 13872 ;; Defined at:
 13873 ;;		line 7 in file "dc_motor.c"
 13874 ;; Parameters:    Size  Location     Type
 13875 ;;  PWMperiod       2    0[COMRAM] int 
 13876 ;; Auto vars:     Size  Location     Type
 13877 ;;		None
 13878 ;; Return value:  Size  Location     Type
 13879 ;;                  1    wreg      void 
 13880 ;; Registers used:
 13881 ;;		wreg, status,2
 13882 ;; Tracked objects:
 13883 ;;		On entry : 0/0
 13884 ;;		On exit  : 0/0
 13885 ;;		Unchanged: 0/0
 13886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13890 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13891 ;;Total ram usage:        2 bytes
 13892 ;; Hardware stack levels used: 1
 13893 ;; Hardware stack levels required when called: 1
 13894 ;; This function calls:
 13895 ;;		Nothing
 13896 ;; This function is called by:
 13897 ;;		_main
 13898 ;; This function uses a non-reentrant model
 13899 ;;
 13900                           
 13901                           	psect	text64
 13902  005C16                     __ptext64:
 13903                           	callstack 0
 13904  005C16                     _initDCmotorsPWM:
 13905                           	callstack 29
 13906  005C16                     
 13907                           ;dc_motor.c: 10:     TRISEbits.TRISE2=0;
 13908  005C16  9485               	bcf	133,2,c	;volatile
 13909                           
 13910                           ;dc_motor.c: 11:     TRISCbits.TRISC7=0;
 13911  005C18  9E83               	bcf	131,7,c	;volatile
 13912                           
 13913                           ;dc_motor.c: 12:     TRISGbits.TRISG6=0;
 13914  005C1A  9C87               	bcf	135,6,c	;volatile
 13915                           
 13916                           ;dc_motor.c: 13:     TRISEbits.TRISE4=0;
 13917  005C1C  9885               	bcf	133,4,c	;volatile
 13918                           
 13919                           ;dc_motor.c: 14:     LATEbits.LATE2=0;
 13920  005C1E  947D               	bcf	125,2,c	;volatile
 13921                           
 13922                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
 13923  005C20  9E7B               	bcf	123,7,c	;volatile
 13924                           
 13925                           ;dc_motor.c: 16:     LATGbits.LATG6=0;
 13926  005C22  9C7F               	bcf	127,6,c	;volatile
 13927                           
 13928                           ;dc_motor.c: 17:     LATEbits.LATE4=0;
 13929  005C24  987D               	bcf	125,4,c	;volatile
 13930  005C26                     
 13931                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b011;
 13932  005C26  50BD               	movf	189,w,c	;volatile
 13933  005C28  0B8F               	andlw	-113
 13934  005C2A  0930               	iorlw	48
 13935  005C2C  6EBD               	movwf	189,c	;volatile
 13936                           
 13937                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
 13938  005C2E  0EE0               	movlw	-32
 13939  005C30  16BE               	andwf	190,f,c	;volatile
 13940                           
 13941                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
 13942  005C32  50BF               	movf	191,w,c	;volatile
 13943  005C34  0BF0               	andlw	-16
 13944  005C36  0901               	iorlw	1
 13945  005C38  6EBF               	movwf	191,c	;volatile
 13946                           
 13947                           ;dc_motor.c: 25:     T2PR=200-1;
 13948  005C3A  0EC7               	movlw	199
 13949  005C3C  6EBC               	movwf	188,c	;volatile
 13950  005C3E                     
 13951                           ;dc_motor.c: 26:     T2CONbits.ON=1;
 13952  005C3E  8EBD               	bsf	189,7,c	;volatile
 13953                           
 13954                           ;dc_motor.c: 28:     RE2PPS=0x0A;
 13955  005C40  0E0A               	movlw	10
 13956  005C42  010E               	movlb	14	; () banked
 13957  005C44  6F74               	movwf	116,b	;volatile
 13958                           
 13959                           ;dc_motor.c: 29:     RC7PPS=0x0B;
 13960  005C46  0E0B               	movlw	11
 13961  005C48  6F69               	movwf	105,b	;volatile
 13962                           
 13963                           ;dc_motor.c: 31:     PWM6DCH=0;
 13964  005C4A  0E00               	movlw	0
 13965  005C4C  6EA3               	movwf	163,c	;volatile
 13966                           
 13967                           ;dc_motor.c: 32:     PWM7DCH=0;
 13968  005C4E  0E00               	movlw	0
 13969  005C50  6EA0               	movwf	160,c	;volatile
 13970  005C52                     
 13971                           ; BSR set to: 14
 13972                           ;dc_motor.c: 34:     PWM6CONbits.EN = 1;
 13973  005C52  8EA4               	bsf	164,7,c	;volatile
 13974  005C54                     
 13975                           ; BSR set to: 14
 13976                           ;dc_motor.c: 35:     PWM7CONbits.EN = 1;
 13977  005C54  8EA1               	bsf	161,7,c	;volatile
 13978  005C56                     
 13979                           ; BSR set to: 14
 13980  005C56  0012               	return		;funcret
 13981  005C58                     __end_of_initDCmotorsPWM:
 13982                           	callstack 0
 13983                           
 13984 ;; *************** function _color_click_init *****************
 13985 ;; Defined at:
 13986 ;;		line 87 in file "color.c"
 13987 ;; Parameters:    Size  Location     Type
 13988 ;;		None
 13989 ;; Auto vars:     Size  Location     Type
 13990 ;;		None
 13991 ;; Return value:  Size  Location     Type
 13992 ;;                  1    wreg      void 
 13993 ;; Registers used:
 13994 ;;		wreg, status,2, status,0, cstack
 13995 ;; Tracked objects:
 13996 ;;		On entry : 0/0
 13997 ;;		On exit  : 0/0
 13998 ;;		Unchanged: 0/0
 13999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14004 ;;Total ram usage:        1 bytes
 14005 ;; Hardware stack levels used: 1
 14006 ;; Hardware stack levels required when called: 4
 14007 ;; This function calls:
 14008 ;;		_I2C_2_Master_Init
 14009 ;;		_color_writetoaddr
 14010 ;; This function is called by:
 14011 ;;		_main
 14012 ;; This function uses a non-reentrant model
 14013 ;;
 14014                           
 14015                           	psect	text65
 14016  005DE4                     __ptext65:
 14017                           	callstack 0
 14018  005DE4                     _color_click_init:
 14019                           	callstack 26
 14020  005DE4                     
 14021                           ;color.c: 90:     I2C_2_Master_Init();
 14022  005DE4  EC3B  F02F         	call	_I2C_2_Master_Init	;wreg free
 14023  005DE8                     
 14024                           ;color.c: 93:  color_writetoaddr(0x00, 0x01);
 14025  005DE8  0E01               	movlw	1
 14026  005DEA  6E03               	movwf	color_writetoaddr@value^0,c
 14027  005DEC  0E00               	movlw	0
 14028  005DEE  ECC7  F02F         	call	_color_writetoaddr
 14029  005DF2                     
 14030                           ;color.c: 94:     _delay((unsigned long)((3)*(64000000/4000.0)));
 14031  005DF2  0E3F               	movlw	63
 14032  005DF4  6E05               	movwf	??_color_click_init^0,c
 14033  005DF6  0E55               	movlw	85
 14034  005DF8                     u6537:
 14035  005DF8  2EE8               	decfsz	wreg,f,c
 14036  005DFA  D7FE               	bra	u6537
 14037  005DFC  2E05               	decfsz	??_color_click_init^0,f,c
 14038  005DFE  D7FC               	bra	u6537
 14039  005E00  F000               	nop	
 14040  005E02                     
 14041                           ;color.c: 97:  color_writetoaddr(0x00, 0x03);
 14042  005E02  0E03               	movlw	3
 14043  005E04  6E03               	movwf	color_writetoaddr@value^0,c
 14044  005E06  0E00               	movlw	0
 14045  005E08  ECC7  F02F         	call	_color_writetoaddr
 14046  005E0C                     
 14047                           ;color.c: 100:  color_writetoaddr(0x01, 0xD5);
 14048  005E0C  0ED5               	movlw	213
 14049  005E0E  6E03               	movwf	color_writetoaddr@value^0,c
 14050  005E10  0E01               	movlw	1
 14051  005E12  ECC7  F02F         	call	_color_writetoaddr
 14052  005E16  0012               	return		;funcret
 14053  005E18                     __end_of_color_click_init:
 14054                           	callstack 0
 14055                           
 14056 ;; *************** function _color_writetoaddr *****************
 14057 ;; Defined at:
 14058 ;;		line 103 in file "color.c"
 14059 ;; Parameters:    Size  Location     Type
 14060 ;;  address         1    wreg     unsigned char 
 14061 ;;  value           1    2[COMRAM] unsigned char 
 14062 ;; Auto vars:     Size  Location     Type
 14063 ;;  address         1    3[COMRAM] unsigned char 
 14064 ;; Return value:  Size  Location     Type
 14065 ;;                  1    wreg      void 
 14066 ;; Registers used:
 14067 ;;		wreg, status,2, status,0, cstack
 14068 ;; Tracked objects:
 14069 ;;		On entry : 0/0
 14070 ;;		On exit  : 0/0
 14071 ;;		Unchanged: 0/0
 14072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14073 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14077 ;;Total ram usage:        2 bytes
 14078 ;; Hardware stack levels used: 1
 14079 ;; Hardware stack levels required when called: 3
 14080 ;; This function calls:
 14081 ;;		_I2C_2_Master_Start
 14082 ;;		_I2C_2_Master_Stop
 14083 ;;		_I2C_2_Master_Write
 14084 ;; This function is called by:
 14085 ;;		_color_click_init
 14086 ;; This function uses a non-reentrant model
 14087 ;;
 14088                           
 14089                           	psect	text66
 14090  005F8E                     __ptext66:
 14091                           	callstack 0
 14092  005F8E                     _color_writetoaddr:
 14093                           	callstack 26
 14094                           
 14095                           ;incstack = 0
 14096                           ;color_writetoaddr@address stored from wreg
 14097  005F8E  6E04               	movwf	color_writetoaddr@address^0,c
 14098  005F90                     
 14099                           ;color.c: 104:     I2C_2_Master_Start();
 14100  005F90  EC17  F030         	call	_I2C_2_Master_Start	;wreg free
 14101                           
 14102                           ;color.c: 105:     I2C_2_Master_Write(0x52 | 0x00);
 14103  005F94  0E52               	movlw	82
 14104  005F96  EC01  F030         	call	_I2C_2_Master_Write
 14105                           
 14106                           ;color.c: 106:     I2C_2_Master_Write(0x80 | address);
 14107  005F9A  5004               	movf	color_writetoaddr@address^0,w,c
 14108  005F9C  0980               	iorlw	128
 14109  005F9E  EC01  F030         	call	_I2C_2_Master_Write
 14110                           
 14111                           ;color.c: 107:     I2C_2_Master_Write(value);
 14112  005FA2  5003               	movf	color_writetoaddr@value^0,w,c
 14113  005FA4  EC01  F030         	call	_I2C_2_Master_Write
 14114                           
 14115                           ;color.c: 108:     I2C_2_Master_Stop();
 14116  005FA8  EC12  F030         	call	_I2C_2_Master_Stop	;wreg free
 14117  005FAC  0012               	return		;funcret
 14118  005FAE                     __end_of_color_writetoaddr:
 14119                           	callstack 0
 14120                           
 14121 ;; *************** function _I2C_2_Master_Write *****************
 14122 ;; Defined at:
 14123 ;;		line 45 in file "i2c.c"
 14124 ;; Parameters:    Size  Location     Type
 14125 ;;  data_byte       1    wreg     unsigned char 
 14126 ;; Auto vars:     Size  Location     Type
 14127 ;;  data_byte       1    1[COMRAM] unsigned char 
 14128 ;; Return value:  Size  Location     Type
 14129 ;;                  1    wreg      void 
 14130 ;; Registers used:
 14131 ;;		wreg, status,2, status,0, cstack
 14132 ;; Tracked objects:
 14133 ;;		On entry : 0/0
 14134 ;;		On exit  : 0/0
 14135 ;;		Unchanged: 0/0
 14136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14140 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14141 ;;Total ram usage:        1 bytes
 14142 ;; Hardware stack levels used: 1
 14143 ;; Hardware stack levels required when called: 2
 14144 ;; This function calls:
 14145 ;;		_I2C_2_Master_Idle
 14146 ;; This function is called by:
 14147 ;;		_color_writetoaddr
 14148 ;;		_color_read_Red
 14149 ;;		_color_read_Blue
 14150 ;;		_color_read_Green
 14151 ;;		_color_read_Clear
 14152 ;; This function uses a non-reentrant model
 14153 ;;
 14154                           
 14155                           	psect	text67
 14156  006002                     __ptext67:
 14157                           	callstack 0
 14158  006002                     _I2C_2_Master_Write:
 14159                           	callstack 24
 14160                           
 14161                           ;incstack = 0
 14162                           ;I2C_2_Master_Write@data_byte stored from wreg
 14163  006002  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 14164  006004                     
 14165                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 14166  006004  EC50  F02F         	call	_I2C_2_Master_Idle	;wreg free
 14167  006008                     
 14168                           ;i2c.c: 48:   SSP2BUF = data_byte;
 14169  006008  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 14170  00600C  0012               	return		;funcret
 14171  00600E                     __end_of_I2C_2_Master_Write:
 14172                           	callstack 0
 14173                           
 14174 ;; *************** function _I2C_2_Master_Stop *****************
 14175 ;; Defined at:
 14176 ;;		line 39 in file "i2c.c"
 14177 ;; Parameters:    Size  Location     Type
 14178 ;;		None
 14179 ;; Auto vars:     Size  Location     Type
 14180 ;;		None
 14181 ;; Return value:  Size  Location     Type
 14182 ;;                  1    wreg      void 
 14183 ;; Registers used:
 14184 ;;		wreg, status,2, status,0, cstack
 14185 ;; Tracked objects:
 14186 ;;		On entry : 0/0
 14187 ;;		On exit  : 0/0
 14188 ;;		Unchanged: 0/0
 14189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14194 ;;Total ram usage:        0 bytes
 14195 ;; Hardware stack levels used: 1
 14196 ;; Hardware stack levels required when called: 2
 14197 ;; This function calls:
 14198 ;;		_I2C_2_Master_Idle
 14199 ;; This function is called by:
 14200 ;;		_color_writetoaddr
 14201 ;;		_color_read_Red
 14202 ;;		_color_read_Blue
 14203 ;;		_color_read_Green
 14204 ;;		_color_read_Clear
 14205 ;; This function uses a non-reentrant model
 14206 ;;
 14207                           
 14208                           	psect	text68
 14209  006024                     __ptext68:
 14210                           	callstack 0
 14211  006024                     _I2C_2_Master_Stop:
 14212                           	callstack 24
 14213  006024                     
 14214                           ;i2c.c: 41:   I2C_2_Master_Idle();
 14215  006024  EC50  F02F         	call	_I2C_2_Master_Idle	;wreg free
 14216  006028                     
 14217                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 14218  006028  010E               	movlb	14	; () banked
 14219  00602A  85DA               	bsf	218,2,b	;volatile
 14220  00602C                     
 14221                           ; BSR set to: 14
 14222  00602C  0012               	return		;funcret
 14223  00602E                     __end_of_I2C_2_Master_Stop:
 14224                           	callstack 0
 14225                           
 14226 ;; *************** function _I2C_2_Master_Start *****************
 14227 ;; Defined at:
 14228 ;;		line 27 in file "i2c.c"
 14229 ;; Parameters:    Size  Location     Type
 14230 ;;		None
 14231 ;; Auto vars:     Size  Location     Type
 14232 ;;		None
 14233 ;; Return value:  Size  Location     Type
 14234 ;;                  1    wreg      void 
 14235 ;; Registers used:
 14236 ;;		wreg, status,2, status,0, cstack
 14237 ;; Tracked objects:
 14238 ;;		On entry : 0/0
 14239 ;;		On exit  : 0/0
 14240 ;;		Unchanged: 0/0
 14241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14246 ;;Total ram usage:        0 bytes
 14247 ;; Hardware stack levels used: 1
 14248 ;; Hardware stack levels required when called: 2
 14249 ;; This function calls:
 14250 ;;		_I2C_2_Master_Idle
 14251 ;; This function is called by:
 14252 ;;		_color_writetoaddr
 14253 ;;		_color_read_Red
 14254 ;;		_color_read_Blue
 14255 ;;		_color_read_Green
 14256 ;;		_color_read_Clear
 14257 ;; This function uses a non-reentrant model
 14258 ;;
 14259                           
 14260                           	psect	text69
 14261  00602E                     __ptext69:
 14262                           	callstack 0
 14263  00602E                     _I2C_2_Master_Start:
 14264                           	callstack 24
 14265  00602E                     
 14266                           ;i2c.c: 29:   I2C_2_Master_Idle();
 14267  00602E  EC50  F02F         	call	_I2C_2_Master_Idle	;wreg free
 14268  006032                     
 14269                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 14270  006032  010E               	movlb	14	; () banked
 14271  006034  81DA               	bsf	218,0,b	;volatile
 14272  006036                     
 14273                           ; BSR set to: 14
 14274  006036  0012               	return		;funcret
 14275  006038                     __end_of_I2C_2_Master_Start:
 14276                           	callstack 0
 14277                           
 14278 ;; *************** function _I2C_2_Master_Idle *****************
 14279 ;; Defined at:
 14280 ;;		line 22 in file "i2c.c"
 14281 ;; Parameters:    Size  Location     Type
 14282 ;;		None
 14283 ;; Auto vars:     Size  Location     Type
 14284 ;;		None
 14285 ;; Return value:  Size  Location     Type
 14286 ;;                  1    wreg      void 
 14287 ;; Registers used:
 14288 ;;		wreg, status,2, status,0
 14289 ;; Tracked objects:
 14290 ;;		On entry : 0/0
 14291 ;;		On exit  : 0/0
 14292 ;;		Unchanged: 0/0
 14293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14298 ;;Total ram usage:        1 bytes
 14299 ;; Hardware stack levels used: 1
 14300 ;; Hardware stack levels required when called: 1
 14301 ;; This function calls:
 14302 ;;		Nothing
 14303 ;; This function is called by:
 14304 ;;		_I2C_2_Master_Start
 14305 ;;		_I2C_2_Master_RepStart
 14306 ;;		_I2C_2_Master_Stop
 14307 ;;		_I2C_2_Master_Write
 14308 ;;		_I2C_2_Master_Read
 14309 ;; This function uses a non-reentrant model
 14310 ;;
 14311                           
 14312                           	psect	text70
 14313  005EA0                     __ptext70:
 14314                           	callstack 0
 14315  005EA0                     _I2C_2_Master_Idle:
 14316                           	callstack 24
 14317  005EA0                     l179:
 14318  005EA0  010E               	movlb	14	; () banked
 14319  005EA2  B5D8               	btfsc	216,2,b	;volatile
 14320  005EA4  EF56  F02F         	goto	u3411
 14321  005EA8  EF58  F02F         	goto	u3410
 14322  005EAC                     u3411:
 14323  005EAC  EF50  F02F         	goto	l179
 14324  005EB0                     u3410:
 14325  005EB0                     
 14326                           ; BSR set to: 14
 14327  005EB0  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 14328  005EB4  0E1F               	movlw	31
 14329  005EB6  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 14330  005EB8  A4D8               	btfss	status,2,c
 14331  005EBA  EF61  F02F         	goto	u3421
 14332  005EBE  EF63  F02F         	goto	u3420
 14333  005EC2                     u3421:
 14334  005EC2  EF50  F02F         	goto	l179
 14335  005EC6                     u3420:
 14336  005EC6                     
 14337                           ; BSR set to: 14
 14338  005EC6  0012               	return		;funcret
 14339  005EC8                     __end_of_I2C_2_Master_Idle:
 14340                           	callstack 0
 14341                           
 14342 ;; *************** function _I2C_2_Master_Init *****************
 14343 ;; Defined at:
 14344 ;;		line 4 in file "i2c.c"
 14345 ;; Parameters:    Size  Location     Type
 14346 ;;		None
 14347 ;; Auto vars:     Size  Location     Type
 14348 ;;		None
 14349 ;; Return value:  Size  Location     Type
 14350 ;;                  1    wreg      void 
 14351 ;; Registers used:
 14352 ;;		wreg, status,2
 14353 ;; Tracked objects:
 14354 ;;		On entry : 0/0
 14355 ;;		On exit  : 0/0
 14356 ;;		Unchanged: 0/0
 14357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14362 ;;Total ram usage:        0 bytes
 14363 ;; Hardware stack levels used: 1
 14364 ;; Hardware stack levels required when called: 1
 14365 ;; This function calls:
 14366 ;;		Nothing
 14367 ;; This function is called by:
 14368 ;;		_color_click_init
 14369 ;; This function uses a non-reentrant model
 14370 ;;
 14371                           
 14372                           	psect	text71
 14373  005E76                     __ptext71:
 14374                           	callstack 0
 14375  005E76                     _I2C_2_Master_Init:
 14376                           	callstack 28
 14377  005E76                     
 14378                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 14379  005E76  010E               	movlb	14	; () banked
 14380  005E78  51D9               	movf	217,w,b	;volatile
 14381  005E7A  0BF0               	andlw	-16
 14382  005E7C  0908               	iorlw	8
 14383  005E7E  6FD9               	movwf	217,b	;volatile
 14384  005E80                     
 14385                           ; BSR set to: 14
 14386                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 14387  005E80  8BD9               	bsf	217,5,b	;volatile
 14388                           
 14389                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 14390  005E82  0E9F               	movlw	159
 14391  005E84  6FD6               	movwf	214,b	;volatile
 14392  005E86                     
 14393                           ; BSR set to: 14
 14394                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 14395  005E86  8A84               	bsf	132,5,c	;volatile
 14396  005E88                     
 14397                           ; BSR set to: 14
 14398                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 14399  005E88  8C84               	bsf	132,6,c	;volatile
 14400  005E8A                     
 14401                           ; BSR set to: 14
 14402                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 14403  005E8A  9BA7               	bcf	167,5,b	;volatile
 14404  005E8C                     
 14405                           ; BSR set to: 14
 14406                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 14407  005E8C  9DA7               	bcf	167,6,b	;volatile
 14408                           
 14409                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 14410  005E8E  0E1D               	movlw	29
 14411  005E90  6F1D               	movwf	29,b	;volatile
 14412                           
 14413                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 14414  005E92  0E1E               	movlw	30
 14415  005E94  6F1C               	movwf	28,b	;volatile
 14416                           
 14417                           ;i2c.c: 18:   RD5PPS=0x1C;
 14418  005E96  0E1C               	movlw	28
 14419  005E98  6F6F               	movwf	111,b	;volatile
 14420                           
 14421                           ;i2c.c: 19:   RD6PPS=0x1B;
 14422  005E9A  0E1B               	movlw	27
 14423  005E9C  6F70               	movwf	112,b	;volatile
 14424  005E9E                     
 14425                           ; BSR set to: 14
 14426  005E9E  0012               	return		;funcret
 14427  005EA0                     __end_of_I2C_2_Master_Init:
 14428                           	callstack 0
 14429                           
 14430 ;; *************** function _Timer0_init *****************
 14431 ;; Defined at:
 14432 ;;		line 7 in file "timers.c"
 14433 ;; Parameters:    Size  Location     Type
 14434 ;;		None
 14435 ;; Auto vars:     Size  Location     Type
 14436 ;;		None
 14437 ;; Return value:  Size  Location     Type
 14438 ;;                  1    wreg      void 
 14439 ;; Registers used:
 14440 ;;		wreg, status,2
 14441 ;; Tracked objects:
 14442 ;;		On entry : 0/0
 14443 ;;		On exit  : 0/0
 14444 ;;		Unchanged: 0/0
 14445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14450 ;;Total ram usage:        0 bytes
 14451 ;; Hardware stack levels used: 1
 14452 ;; Hardware stack levels required when called: 1
 14453 ;; This function calls:
 14454 ;;		Nothing
 14455 ;; This function is called by:
 14456 ;;		_main
 14457 ;; This function uses a non-reentrant model
 14458 ;;
 14459                           
 14460                           	psect	text72
 14461  005FCC                     __ptext72:
 14462                           	callstack 0
 14463  005FCC                     _Timer0_init:
 14464                           	callstack 29
 14465  005FCC                     
 14466                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 14467  005FCC  50D6               	movf	214,w,c	;volatile
 14468  005FCE  0B1F               	andlw	-225
 14469  005FD0  0940               	iorlw	64
 14470  005FD2  6ED6               	movwf	214,c	;volatile
 14471  005FD4                     
 14472                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 14473  005FD4  88D6               	bsf	214,4,c	;volatile
 14474                           
 14475                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b0101;
 14476  005FD6  50D6               	movf	214,w,c	;volatile
 14477  005FD8  0BF0               	andlw	-16
 14478  005FDA  0905               	iorlw	5
 14479  005FDC  6ED6               	movwf	214,c	;volatile
 14480  005FDE                     
 14481                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14482  005FDE  88D5               	bsf	213,4,c	;volatile
 14483                           
 14484                           ;timers.c: 16:     TMR0H=0b00111100;
 14485  005FE0  0E3C               	movlw	60
 14486  005FE2  6ED4               	movwf	212,c	;volatile
 14487                           
 14488                           ;timers.c: 17:     TMR0L=0b10101111;
 14489  005FE4  0EAF               	movlw	175
 14490  005FE6  6ED3               	movwf	211,c	;volatile
 14491  005FE8  0012               	return		;funcret
 14492  005FEA                     __end_of_Timer0_init:
 14493                           	callstack 0
 14494                           
 14495 ;; *************** function _Interrupts_init *****************
 14496 ;; Defined at:
 14497 ;;		line 9 in file "interrupts.c"
 14498 ;; Parameters:    Size  Location     Type
 14499 ;;		None
 14500 ;; Auto vars:     Size  Location     Type
 14501 ;;		None
 14502 ;; Return value:  Size  Location     Type
 14503 ;;                  1    wreg      void 
 14504 ;; Registers used:
 14505 ;;		None
 14506 ;; Tracked objects:
 14507 ;;		On entry : 0/0
 14508 ;;		On exit  : 0/0
 14509 ;;		Unchanged: 0/0
 14510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14515 ;;Total ram usage:        0 bytes
 14516 ;; Hardware stack levels used: 1
 14517 ;; Hardware stack levels required when called: 1
 14518 ;; This function calls:
 14519 ;;		Nothing
 14520 ;; This function is called by:
 14521 ;;		_main
 14522 ;; This function uses a non-reentrant model
 14523 ;;
 14524                           
 14525                           	psect	text73
 14526  00600E                     __ptext73:
 14527                           	callstack 0
 14528  00600E                     _Interrupts_init:
 14529                           	callstack 29
 14530  00600E  8EF2               	bsf	242,7,c	;volatile
 14531                           
 14532                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14533  006010  8AF2               	bsf	242,5,c	;volatile
 14534                           
 14535                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14536  006012  8CF2               	bsf	242,6,c	;volatile
 14537                           
 14538                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14539  006014  010E               	movlb	14	; () banked
 14540  006016  8B29               	bsf	41,5,b	;volatile
 14541  006018                     
 14542                           ; BSR set to: 14
 14543  006018  0012               	return		;funcret
 14544  00601A                     __end_of_Interrupts_init:
 14545                           	callstack 0
 14546                           
 14547 ;; *************** function _HighISR *****************
 14548 ;; Defined at:
 14549 ;;		line 21 in file "interrupts.c"
 14550 ;; Parameters:    Size  Location     Type
 14551 ;;		None
 14552 ;; Auto vars:     Size  Location     Type
 14553 ;;		None
 14554 ;; Return value:  Size  Location     Type
 14555 ;;                  1    wreg      void 
 14556 ;; Registers used:
 14557 ;;		wreg, status,2, status,0
 14558 ;; Tracked objects:
 14559 ;;		On entry : 0/0
 14560 ;;		On exit  : 0/0
 14561 ;;		Unchanged: 0/0
 14562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14567 ;;Total ram usage:        0 bytes
 14568 ;; Hardware stack levels used: 1
 14569 ;; This function calls:
 14570 ;;		Nothing
 14571 ;; This function is called by:
 14572 ;;		Interrupt level 2
 14573 ;; This function uses a non-reentrant model
 14574 ;;
 14575                           
 14576                           	psect	intcode
 14577  000008                     __pintcode:
 14578                           	callstack 0
 14579  000008                     _HighISR:
 14580                           	callstack 19
 14581                           
 14582                           ; BSR set to: 14
 14583                           ;incstack = 0
 14584  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14585  00000A                     
 14586                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14587  00000A  010E               	movlb	14	; () banked
 14588  00000C  AB33               	btfss	51,5,b	;volatile
 14589  00000E  EF0B  F000         	goto	i2u589_41
 14590  000012  EF0D  F000         	goto	i2u589_40
 14591  000016                     i2u589_41:
 14592  000016  EF16  F000         	goto	i2l504
 14593  00001A                     i2u589_40:
 14594  00001A                     
 14595                           ; BSR set to: 14
 14596                           ;interrupts.c: 24:         TMR0H=0b00111100;
 14597  00001A  0E3C               	movlw	60
 14598  00001C  6ED4               	movwf	212,c	;volatile
 14599                           
 14600                           ;interrupts.c: 25:         TMR0L=0b10101111;
 14601  00001E  0EAF               	movlw	175
 14602  000020  6ED3               	movwf	211,c	;volatile
 14603  000022                     
 14604                           ; BSR set to: 14
 14605                           ;interrupts.c: 26:         centisecond ++;
 14606  000022  0101               	movlb	1	; () banked
 14607  000024  4B46               	infsnz	_centisecond& (0+255),f,b
 14608  000026  2B47               	incf	(_centisecond+1)& (0+255),f,b
 14609  000028                     
 14610                           ; BSR set to: 1
 14611                           ;interrupts.c: 27:         PIR0bits.TMR0IF = 0;
 14612  000028  010E               	movlb	14	; () banked
 14613  00002A  9B33               	bcf	51,5,b	;volatile
 14614  00002C                     i2l504:
 14615                           
 14616                           ; BSR set to: 14
 14617  00002C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14618  00002E  0011               	retfie		f
 14619  000030                     __end_of_HighISR:
 14620                           	callstack 0
 14621                           
 14622                           	psect	rparam
 14623  0000                     
 14624                           	psect	temp
 14625  00005F                     btemp:
 14626                           	callstack 0
 14627  00005F                     	ds	1
 14628  0000                     int$flags	set	btemp
 14629  0000                     wtemp8	set	btemp+1
 14630  0000                     ttemp5	set	btemp+1
 14631  0000                     ttemp6	set	btemp+4
 14632  0000                     ttemp7	set	btemp+8
 14633                           
 14634                           	psect	idloc
 14635                           
 14636                           ;Config register IDLOC0 @ 0x200000
 14637                           ;	unspecified, using default values
 14638  200000                     	org	2097152
 14639  200000  0FFF               	dw	4095
 14640                           
 14641                           ;Config register IDLOC1 @ 0x200002
 14642                           ;	unspecified, using default values
 14643  200002                     	org	2097154
 14644  200002  0FFF               	dw	4095
 14645                           
 14646                           ;Config register IDLOC2 @ 0x200004
 14647                           ;	unspecified, using default values
 14648  200004                     	org	2097156
 14649  200004  0FFF               	dw	4095
 14650                           
 14651                           ;Config register IDLOC3 @ 0x200006
 14652                           ;	unspecified, using default values
 14653  200006                     	org	2097158
 14654  200006  0FFF               	dw	4095
 14655                           
 14656                           ;Config register IDLOC4 @ 0x200008
 14657                           ;	unspecified, using default values
 14658  200008                     	org	2097160
 14659  200008  0FFF               	dw	4095
 14660                           
 14661                           ;Config register IDLOC5 @ 0x20000A
 14662                           ;	unspecified, using default values
 14663  20000A                     	org	2097162
 14664  20000A  0FFF               	dw	4095
 14665                           
 14666                           ;Config register IDLOC6 @ 0x20000C
 14667                           ;	unspecified, using default values
 14668  20000C                     	org	2097164
 14669  20000C  0FFF               	dw	4095
 14670                           
 14671                           ;Config register IDLOC7 @ 0x20000E
 14672                           ;	unspecified, using default values
 14673  20000E                     	org	2097166
 14674  20000E  0FFF               	dw	4095
 14675                           
 14676                           	psect	config
 14677                           
 14678                           ;Config register CONFIG1L @ 0x300000
 14679                           ;	External Oscillator mode Selection bits
 14680                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14681                           ;	Power-up default value for COSC bits
 14682                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14683  300000                     	org	3145728
 14684  300000  AA                 	db	170
 14685                           
 14686                           ;Config register CONFIG1H @ 0x300001
 14687                           ;	unspecified, using default values
 14688                           ;	Clock Out Enable bit
 14689                           ;	CLKOUTEN = 0x1, unprogrammed default
 14690                           ;	Clock Switch Enable bit
 14691                           ;	CSWEN = 0x1, unprogrammed default
 14692                           ;	Fail-Safe Clock Monitor Enable bit
 14693                           ;	FCMEN = 0x1, unprogrammed default
 14694  300001                     	org	3145729
 14695  300001  FF                 	db	255
 14696                           
 14697                           ;Config register CONFIG2L @ 0x300002
 14698                           ;	unspecified, using default values
 14699                           ;	Master Clear Enable bit
 14700                           ;	MCLRE = 0x1, unprogrammed default
 14701                           ;	Power-up Timer Enable bit
 14702                           ;	PWRTE = 0x1, unprogrammed default
 14703                           ;	Low-power BOR enable bit
 14704                           ;	LPBOREN = 0x1, unprogrammed default
 14705                           ;	Brown-out Reset Enable bits
 14706                           ;	BOREN = 0x3, unprogrammed default
 14707  300002                     	org	3145730
 14708  300002  FF                 	db	255
 14709                           
 14710                           ;Config register CONFIG2H @ 0x300003
 14711                           ;	unspecified, using default values
 14712                           ;	Brown Out Reset Voltage selection bits
 14713                           ;	BORV = 0x3, unprogrammed default
 14714                           ;	ZCD Disable bit
 14715                           ;	ZCD = 0x1, unprogrammed default
 14716                           ;	PPSLOCK bit One-Way Set Enable bit
 14717                           ;	PPS1WAY = 0x1, unprogrammed default
 14718                           ;	Stack Full/Underflow Reset Enable bit
 14719                           ;	STVREN = 0x1, unprogrammed default
 14720                           ;	Debugger Enable bit
 14721                           ;	DEBUG = 0x1, unprogrammed default
 14722                           ;	Extended Instruction Set Enable bit
 14723                           ;	XINST = 0x1, unprogrammed default
 14724  300003                     	org	3145731
 14725  300003  FF                 	db	255
 14726                           
 14727                           ;Config register CONFIG3L @ 0x300004
 14728                           ;	WDT Period Select bits
 14729                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14730                           ;	WDT operating mode
 14731                           ;	WDTE = OFF, WDT Disabled
 14732  300004                     	org	3145732
 14733  300004  9F                 	db	159
 14734                           
 14735                           ;Config register CONFIG3H @ 0x300005
 14736                           ;	unspecified, using default values
 14737                           ;	WDT Window Select bits
 14738                           ;	WDTCWS = 0x7, unprogrammed default
 14739                           ;	WDT input clock selector
 14740                           ;	WDTCCS = 0x7, unprogrammed default
 14741  300005                     	org	3145733
 14742  300005  FF                 	db	255
 14743                           
 14744                           ;Config register CONFIG4L @ 0x300006
 14745                           ;	unspecified, using default values
 14746                           ;	Write Protection Block 0
 14747                           ;	WRT0 = 0x1, unprogrammed default
 14748                           ;	Write Protection Block 1
 14749                           ;	WRT1 = 0x1, unprogrammed default
 14750                           ;	Write Protection Block 2
 14751                           ;	WRT2 = 0x1, unprogrammed default
 14752                           ;	Write Protection Block 3
 14753                           ;	WRT3 = 0x1, unprogrammed default
 14754                           ;	Write Protection Block 3
 14755                           ;	WRT4 = 0x1, unprogrammed default
 14756                           ;	Write Protection Block 3
 14757                           ;	WRT5 = 0x1, unprogrammed default
 14758                           ;	Write Protection Block 3
 14759                           ;	WRT6 = 0x1, unprogrammed default
 14760                           ;	Write Protection Block 3
 14761                           ;	WRT7 = 0x1, unprogrammed default
 14762  300006                     	org	3145734
 14763  300006  FF                 	db	255
 14764                           
 14765                           ;Config register CONFIG4H @ 0x300007
 14766                           ;	unspecified, using default values
 14767                           ;	Configuration Register Write Protection bit
 14768                           ;	WRTC = 0x1, unprogrammed default
 14769                           ;	Boot Block Write Protection bit
 14770                           ;	WRTB = 0x1, unprogrammed default
 14771                           ;	Data EEPROM Write Protection bit
 14772                           ;	WRTD = 0x1, unprogrammed default
 14773                           ;	Scanner Enable bit
 14774                           ;	SCANE = 0x1, unprogrammed default
 14775                           ;	Low Voltage Programming Enable bit
 14776                           ;	LVP = 0x1, unprogrammed default
 14777  300007                     	org	3145735
 14778  300007  FF                 	db	255
 14779                           
 14780                           ;Config register CONFIG5L @ 0x300008
 14781                           ;	unspecified, using default values
 14782                           ;	UserNVM Program Memory Code Protection bit
 14783                           ;	CP = 0x1, unprogrammed default
 14784                           ;	DataNVM Memory Code Protection bit
 14785                           ;	CPD = 0x1, unprogrammed default
 14786  300008                     	org	3145736
 14787  300008  FF                 	db	255
 14788                           
 14789                           ;Config register CONFIG5H @ 0x300009
 14790                           ;	unspecified, using default values
 14791  300009                     	org	3145737
 14792  300009  FF                 	db	255
 14793                           
 14794                           ;Config register CONFIG6L @ 0x30000A
 14795                           ;	unspecified, using default values
 14796                           ;	Table Read Protection Block 0
 14797                           ;	EBTR0 = 0x1, unprogrammed default
 14798                           ;	Table Read Protection Block 1
 14799                           ;	EBTR1 = 0x1, unprogrammed default
 14800                           ;	Table Read Protection Block 2
 14801                           ;	EBTR2 = 0x1, unprogrammed default
 14802                           ;	Table Read Protection Block 3
 14803                           ;	EBTR3 = 0x1, unprogrammed default
 14804                           ;	Table Read Protection Block 4
 14805                           ;	EBTR4 = 0x1, unprogrammed default
 14806                           ;	Table Read Protection Block 5
 14807                           ;	EBTR5 = 0x1, unprogrammed default
 14808                           ;	Table Read Protection Block 6
 14809                           ;	EBTR6 = 0x1, unprogrammed default
 14810                           ;	Table Read Protection Block 7
 14811                           ;	EBTR7 = 0x1, unprogrammed default
 14812  30000A                     	org	3145738
 14813  30000A  FF                 	db	255
 14814                           
 14815                           ;Config register CONFIG6H @ 0x30000B
 14816                           ;	unspecified, using default values
 14817                           ;	Boot Block Table Read Protection bit
 14818                           ;	EBTRB = 0x1, unprogrammed default
 14819  30000B                     	org	3145739
 14820  30000B  FF                 	db	255
 14821                           tosu	equ	0xFFF
 14822                           tosh	equ	0xFFE
 14823                           tosl	equ	0xFFD
 14824                           stkptr	equ	0xFFC
 14825                           pclatu	equ	0xFFB
 14826                           pclath	equ	0xFFA
 14827                           pcl	equ	0xFF9
 14828                           tblptru	equ	0xFF8
 14829                           tblptrh	equ	0xFF7
 14830                           tblptrl	equ	0xFF6
 14831                           tablat	equ	0xFF5
 14832                           prodh	equ	0xFF4
 14833                           prodl	equ	0xFF3
 14834                           indf0	equ	0xFEF
 14835                           postinc0	equ	0xFEE
 14836                           postdec0	equ	0xFED
 14837                           preinc0	equ	0xFEC
 14838                           plusw0	equ	0xFEB
 14839                           fsr0h	equ	0xFEA
 14840                           fsr0l	equ	0xFE9
 14841                           wreg	equ	0xFE8
 14842                           indf1	equ	0xFE7
 14843                           postinc1	equ	0xFE6
 14844                           postdec1	equ	0xFE5
 14845                           preinc1	equ	0xFE4
 14846                           plusw1	equ	0xFE3
 14847                           fsr1h	equ	0xFE2
 14848                           fsr1l	equ	0xFE1
 14849                           bsr	equ	0xFE0
 14850                           indf2	equ	0xFDF
 14851                           postinc2	equ	0xFDE
 14852                           postdec2	equ	0xFDD
 14853                           preinc2	equ	0xFDC
 14854                           plusw2	equ	0xFDB
 14855                           fsr2h	equ	0xFDA
 14856                           fsr2l	equ	0xFD9
 14857                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        2
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    160     160
    BANK1           256     88     196
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    detect_wall@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    detect_wall@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[6]), 
		 -> STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[6]), 
		 -> STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[6]), 
		 -> STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> detect_color@buf(BANK0[100]), color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2538$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2538$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    calibration_motor@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    calibration_motor@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    test_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    setup@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    setup@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setup@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@amb(BANK1[8]), 

    setup@white	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turning_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turning_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    short_burst@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    short_burst@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> detect_color@buf(BANK0[100]), color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turn45@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turn45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turn45@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turn45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S429DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S429DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _turning_action->_goback
    _goback->_turn45
    _fullSpeedBack->_stop
    _detect_color->___fltol
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _short_burst->_stop
    _calibration_motor->_test_action
    _test_action->_turn45
    _turn45->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _main->_verify_color
    _verify_color->_detect_color
    _test_function->_detect_color
    _detect_wall->_lroundf
    _detect_color->_sprintf
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf
    _setup->_amb_light_measure
    _amb_light_measure->_lroundf
    _lroundf->___fltol

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_test_function

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                74    74      0  379472
                                             14 BANK1     74    74      0
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
                      _color_predict
                       _detect_color
                        _detect_wall
                     _fullSpeedAhead
                             _goback
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                              _setup
                        _short_burst
                               _stop
                      _test_function
                     _turning_action
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   35982
                                            158 BANK0      2     2      0
                                              0 BANK1      7     3      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _turning_action                                       5     1      4   54195
                                             52 COMRAM     5     1      4
                      _fullSpeedBack
                             _goback
                       _toggle_light
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   30491
                                             44 COMRAM     8     4      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        7     2      5   10048
                                             31 COMRAM     7     2      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  138151
                                            158 BANK0      2     2      0
                                              0 BANK1     14     6      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                        _detect_wall
                     _fullSpeedAhead
                         _read_color
                               _stop
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _detect_wall                                         19    13      6   19636
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                       133   129      4   35696
                                             25 BANK0    133   129      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                  _sendStringSerial4
                            _sprintf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    1936
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   17200
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7583
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    8029
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    7064
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     447
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _short_burst                                          6     2      4    7442
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _setup                                               12     4      8   41384
                                             24 BANK0     12     4      8
                            _LED_OFF
                  _amb_light_measure
                    _calibrate_white
                  _calibration_motor
 ---------------------------------------------------------------------------------
 (2) _calibration_motor                                    6     2      4   20131
                                             50 COMRAM     6     2      4
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _test_action                                          6     2      4   19935
                                             44 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _turn45                                              13     7      6   12033
                                             31 COMRAM    13     7      6
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    4035
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                       5     1      4    3167
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   19312
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   13309
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11771
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3474
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     452
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2052
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2977
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_predict
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _roundf (ARG)
         ___fladd
         ___flge
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _sendStringSerial4
     _sprintf
     _toggle_light
   _detect_wall
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _goback
     _fullSpeedAhead
     _fullSpeedBack
       _setMotorPWM
       _stop
         _setMotorPWM
     _stop
     _turn45
       _setMotorPWM
       _stop
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _setup
     _LED_OFF
     _amb_light_measure
       _LED_C
       ___fldiv
       ___xxtofl
       _color_read_Clear
       _lroundf
       _toggle_light
     _calibrate_white
       _LED_B
       _LED_C
       _LED_G
       _LED_OFF
       _LED_R
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
       _toggle_light
     _calibration_motor
       _test_action
         _fullSpeedAhead
         _stop
         _turn45
   _short_burst
     _fullSpeedAhead
     _stop
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
         _sprintf
       _color_predict
       _read_color
     _color_display
     _color_predict
     _detect_color
     _detect_wall
     _fullSpeedAhead
     _read_color
     _stop
     _test_action
   _turning_action
     _fullSpeedBack
     _goback
     _toggle_light
     _turn45
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     58      C4       7       76.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBIGSFRlhlllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRlllhhh     32      0       0      46        0.0%
BITBIGSFRlllhll     2A      0       0      50        0.0%
BITBIGSFRlllll      26      0       0      55        0.0%
BITBIGSFRlhllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllh         C      0       0      45        0.0%
BITBIGSFRlllhll      B      0       0      53        0.0%
BITBIGSFRlllhll      9      0       0      52        0.0%
BITBIGSFRlhlllh      8      0       0      42        0.0%
BITBIGSFRllllh       6      0       0      54        0.0%
BITBIGSFRlllhll      6      0       0      49        0.0%
BITBIGSFRlllhlh      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRlllhll      3      0       0      51        0.0%
BITBIGSFRlllhhl      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRlhllll      1      0       0      43        0.0%
BITBIGSFRlhllhl      1      0       0      40        0.0%
BITBIGSFRlhhl        1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C2      56        0.0%
DATA                 0      0     1C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Mar 16 21:24:10 2022

                _color_read_Red 59C8                    ___fldiv@aexp 0027                    ___fldiv@bexp 0026  
                  ___fldiv@sign 001F                 _color_read_Blue 5A68                   _color_predict 5E48  
                            l60 390C                              l71 5E16                              l80 5AB6  
                            l57 5DE2                              l74 5FAC                              l83 5A66  
                            l68 391E                              l92 5F2C                              l77 5A16  
                            l86 5B06                              l95 5F0C                              l89 5974  
                            l98 5F8C                    ___awdiv@sign 000C                _detect_wall$2949 0074  
           ___wmul@multiplicand 0003                _color_read_Clear 5AB8                _color_read_Green 5A18  
             ??_Interrupts_init 0001                             l101 5F6C                             l110 5E74  
                           l104 5F4C                             l113 3D32                             l107 58B4  
                           l133 1CCA                             l141 5844                             l302 4CFC  
                           l136 5CCE                             l145 4F52                             l137 5CD0  
                           l244 5C56                             l148 54AC                             l404 39E2  
                           l325 5FCA                             l149 54AE                             l182 5EC6  
                           l254 3F06                             l262 57BA                             l334 5FEC  
                           l191 602C                             l247 531E                             l271 44D6  
                           l343 5E46                             l176 5E9E                             l440 5BD2  
                           l185 6036                             l337 6000                             l194 600C  
                           l515 5FE8                             l179 5EA0                             l291 5638  
                           l283 45CE                             l188 6022                             l620 5200  
                           l452 3390                             l197 5C14                             l461 2CCA  
                           l614 5160                             l279 459E                             l623 524C  
                           l615 51CA                             l560 4A64                             l626 5EEC  
                           l618 5234                             l570 4AF4                             l562 4A72  
                           l475 2CF8                             l900 5D42                             l564 4AA6  
                           l740 48EC                             l573 4B52                             l469 2CC6  
                           l566 4AB4                             l479 2D06                             l592 4E2A  
                           l576 4BA8                             l753 4A50                             l498 6018  
                           l923 505A                             l589 4764                             l857 56FC  
                           l891 5118                             l896 515E               verify_color@color 0170  
              ?_calibrate_white 000C                             _abs 5C58                             _pad 54B0  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 0039  
                  ___flmul@bexp 003A                    ___flmul@sign 0034                    ___flmul@temp 003F  
                  ___flmul@prod 003B                 __end_of_LED_OFF 5F2E                    ___fltol@exp1 0065  
                          l1210 2F00                            ?_abs 0013                            l1221 2FBE  
                          l1213 2EC4                            l1222 2FAC                            l1302 5D0A  
                          l1208 30A0                            l1240 2250                            l1400 53E8  
                          l1250 24AC                            l1154 1EBA                            l1219 2F46  
                          l1171 1FD4                            l1163 218A                            l1155 1EA8  
                          l1411 603A                            l1244 25B4                            l1180 20A4  
                          l1156 1E6E                            l1181 2092                            l1341 5574  
                          l1309 59C6                            l1247 2446                            l4000 574A  
                          l1408 5B90                            l1432 5DAE                            l1336 54F6  
                          l1281 4112                            l1257 2576                            l1249 24BE  
                          l4010 57A2                            l4002 5756                            l1419 2962  
                          l1339 5538                            l1347 3432                            l1284 426E  
                          l4100 2436                            l4020 21A6                            l1196 5B4C  
                          l4004 5762                            l4012 5FEC                            l1380 590E  
                          l1349 343A                            l1381 5916                            l4110 2476  
                          l4102 2444                            l4030 21DE                            l4022 21A8  
                          l4006 5772                            l4014 5FFC                            l1374 40BA  
                          l1295 4206                            l1367 3672                            l1288 41AA  
                          l4120 24E8                            l4112 24A4                            l4104 2456  
                          l4040 220A                            l4032 21EE                            l4024 21B8  
                          l4016 218C                            l4008 578A                            l1385 5C8E  
                          l4210 5AFE                            l4130 255E                            l4122 2512  
                          l4106 2464                            l4050 2260                            l4042 221A  
                          l4034 21F4                            l4026 21C8                            l4018 2198  
                          l4202 5A18                            l5010 2BD6                            l5002 2B56  
                          l4132 257A                            l4140 25A0                            l4116 24CE  
                          l4124 2516                            l4108 2468                            l4060 229A  
                          l4052 2270                            l4044 222A                            l4036 21FA  
                          l4028 21D8                            l4204 5A5E                            l4300 55FA  
                          l3500 4800                            l1388 5C96                            l4220 5998  
                          l5020 2C6A                            l5004 2B7A                            l4142 25A4  
                          l4134 258A                            l4126 2530                            l4118 24DA  
                          l4070 22EC                            l4062 22B0                            l4046 223A  
                          l4038 2208                            l4302 5608                            l4230 5E2A  
                          l3510 4882                            l3502 4814                            l4222 59B4  
                          l4214 5976                            l5110 46DE                            l5102 46AA  
                          l5030 2CF2                            l5022 2C8E                            l5014 2C0E  
                          l5200 5FC8                            l4208 5AB8                            l4320 4FC0  
                          l4312 4F80                            l4160 50D8                            l4152 505C  
                          l4136 2598                            l4128 2544                            l4080 2332  
                          l4072 22FA                            l4064 22BC                            l4056 2284  
                          l4048 2240                            l4400 374C                            l3600 5658  
                          l4304 5620                            l5040 51AE                            l5032 5172  
                          l4232 5E2E                            l3520 48CC                            l3512 4884  
                          l3504 4822                            l4216 5988                            l5120 4706  
                          l5112 46E4                            l5104 46AE                            l5016 2C32  
                          l5008 2BB2                            l5202 5FCC                            l4330 4FF0  
                          l4322 4FCE                            l4314 4FAA                            l4306 4F54  
                          l4170 515C                            l4162 50E6                            l4154 508A  
                          l4138 259A                            l4090 23A0                            l4082 234C  
                          l4074 2306                            l4066 22D4                            l4058 2290  
                          l4146 5B08                            l4410 380E                            l4402 3784  
                          l3610 568C                            l3602 5666                            l4242 4460  
                          l4250 449E                            l4234 4420                            l5042 51B8  
                          l5034 5188                            l5210 4A52                            l4226 5E18  
                          l3514 4896                            l3506 4834                            l3530 4920  
                          l3450 5332                            l4218 5990                            l5130 4740  
                          l5122 470A                            l5114 46FE                            l5106 46C6  
                          l5026 2CD0                            l5204 5FD4                            l3700 5EB0  
                          l5140 5DE8                            l4340 501A                            l4332 4FFA  
                          l4316 4FAC                            l4308 4F6C                            l4164 50F8  
                          l4156 509A                            l4092 23CA                            l4084 235C  
                          l4076 2316                            l4068 22E0                            l4148 5B18  
                          l4420 389E                            l4412 3820                            l4404 3796  
                          l3620 56C6                            l3612 5694                            l3604 566E  
                          l4252 44B6                            l4244 4478                            l4260 4512  
                          l4236 442C                            l5052 520E                            l5036 5196  
                          l5220 4A8C                            l5212 4A5C                            l4228 5E1C  
                          l3508 4862                            l3516 489C                            l3540 4978  
                          l3532 4924                            l3524 48EE                            l3452 5344  
                          l5132 475A                            l5124 4722                            l5108 46D2  
                          l5060 45D0                            l5300 43EE                            l4500 4CBE  
                          l5028 2CE4                            l5206 5FDE                            l5142 5DF2  
                          l4342 502A                            l4318 4FBC                            l4166 5106  
                          l4158 50C8                            l4094 2400                            l4086 2378  
                          l4078 2322                            l4174 5D0C                            l4350 25B6  
                          l4422 38BC                            l4414 383E                            l4406 37BA  
                          l4430 5F0E                            l4190 59C8                            l3630 56EC  
                          l3622 56CE                            l3614 569C                            l3606 5672  
                          l3710 3E18                            l3702 3D34                            l4270 4558  
                          l4254 44C2                            l4246 4484                            l4238 444C  
                          l4510 4D2A                            l5054 5210                            l5046 51D8  
                          l5038 5198                            l5230 4AF6                            l5222 4A8E  
                          l5214 4A60                            l5310 5BBE                            l3518 48AC  
                          l3550 49FA                            l3542 498C                            l3534 4932  
                          l3526 48F2                            l3454 534E                            l3462 5B4E  
                          l3470 5D7A                            l4182 58B6                            l5134 4760  
                          l5126 472E                            l5070 460E                            l5302 43F4  
                          l4502 4CD0                            l5150 57D8                            l5208 600E  
                          l5144 5E02                            l5136 5DB0                            l4440 5F74  
                          l4600 2EC2                            l4344 503A                            l4328 4FE6  
                          l4168 5156                            l4096 240E                            l4088 2384  
                          l4176 5D22                            l3800 1E56                            l3720 1CE6  
                          l4360 2692                            l4352 25D6                            l4424 38D4  
                          l4416 3856                            l4408 37D2                            l4432 5F14  
                          l4192 5A0E                            l3632 56F4                            l3624 56D0  
                          l3616 56AA                            l3608 567A                            l3712 3E34  
                          l3704 3D50                            l4264 4528                            l4272 4566  
                          l4256 44D2                            l4248 4490                            l4520 4DCE  
                          l4512 4D46                            l5056 5226                            l5048 51EE  
                          l5240 4B74                            l5232 4B1E                            l5224 4AC2  
                          l5216 4A62                            l3480 4766                            l3544 499A  
                          l3552 4A00                            l3536 4952                            l3528 4900  
                          l3456 536C                            l3448 5320                            l3464 5B5A  
                          l3472 5D86                            l3560 54B0                            l3640 33DA  
                          l4184 58BE                            l5128 473A                            l5072 461A  
                          l5304 4406                            l4504 4CE8                            l5320 3112  
                          l5312 30A4                            l5152 57F8                            l5400 395E  
                          l5146 5E0C                            l5138 5DE4                            l5170 5C3E  
                          l4610 2F10                            l4602 2ECE                            l4530 2D22  
                          l4346 504A                            l4338 500E                            l4098 242C  
                          l4178 5D32                            l3810 1E9A                            l3802 1E66  
                          l3730 1D1A                            l3722 1CE8                            l4370 2820  
                          l4362 26AE                            l4354 261E                            l4426 390A  
                          l4418 388C                            l4442 5F4E                            l4434 5EEE  
                          l3626 56D6                            l3618 56B0                            l3714 3E9E  
                          l3706 3DB2                            l4290 55B2                            l4274 457E  
                          l4266 4540                            l4282 45BA                            l4258 44FA  
                          l4522 4DEA                            l4514 4D5A                            l4506 4CFE  
                          l5058 5238                            l5242 4B76                            l5226 4AD6  
                          l5234 4B36                            l5218 4A80                            l5306 5B92  
                          l3490 47AA                            l3482 476A                            l3554 4A10  
                          l3546 49C8                            l3538 4970                            l3458 53A2  
                          l3466 5B6C                            l3474 5D8A                            l3570 5502  
                          l3562 54C0                            l3650 3442                            l3642 33FA  
                          l4186 58CC                            l4450 5846                            l5090 4676  
                          l5074 4626                            l5066 45F2                            l5330 3176  
                          l5322 3114                            l5314 30B4                            l5162 5842  
                          l5154 5810                            l5410 39AE                            l5172 5C52  
                          l5180 526A                            l4612 2F26                            l4620 2F56  
                          l4604 2EEC                            l4540 2D56                            l4532 2D24  
                          l4700 423E                            l3900 214A                            l3812 1E9C  
                          l3804 1E7C                            l3740 1D4C                            l3724 1CF8  
                          l3732 1D22                            l3716 1CCC                            l4380 2952  
                          l4372 2852                            l4356 2632                            l4444 5F54  
                          l4436 5EF4                            l4196 5A68                            l3628 56DC  
                          l3708 3DF8                            l4292 55BE                            l4276 458A  
                          l4268 454C                            l4284 45BC                            l4524 4E16  
                          l4516 4DA2                            l4508 4D12                            l5244 4B84  
                          l5236 4B44                            l5228 4AD8                            l5308 5BA6  
                          l3492 47CA                            l3484 4778                            l3556 4A30  
                          l3548 49E8                            l3468 5B70                            l3476 5DA2  
                          l3572 5516                            l3564 54D4                            l3660 3478  
                          l3652 3454                            l3644 340A                            l3636 3392  
                          l4188 58F2                            l4452 58A8                            l4428 5918  
                          l5092 4682                            l5084 464E                            l5076 462C  
                          l5068 45F6                            l5260 42B8                            l5252 4274  
                          l5340 31EA                            l5332 3188                            l5324 3126  
                          l5316 30C4                            l5156 583A                            l5148 57C0  
                          l5420 3A48                            l5412 39D0                            l5404 398C  
                          l4710 5E76                            l5174 5C54                            l5166 5C16  
                          l5182 527E                            l5190 5FAE                            l4438 5F6E  
                          l4622 2F64                            l4614 2F2C                            l4606 2EEE  
                          l4550 2D88                            l4534 2D34                            l4542 2D5E  
                          l4526 2D08                            l4702 424E                            l3910 216A  
                          l3902 214E                            l3830 1F24                            l3822 1EEC  
                          l3814 1EA6                            l3806 1E88                            l3750 1D82  
                          l3742 1D52                            l3734 1D32                            l3726 1D08  
                          l3718 1CD8                            l4374 28BE                            l4366 26E6  
                          l4358 266E                            l4390 36B2                            l4446 5F2E  
                          l4198 5AAE                            l4294 55D6                            l4286 5576  
                          l4278 459A                            l4518 4DBA                            l5246 4B88  
                          l5238 4B60                            l3494 47CE                            l3486 4798  
                          l3582 5C58                            l3574 551A                            l3566 54E2  
                          l3662 347E                            l3670 3570                            l3654 3462  
                          l3646 340C                            l3638 33B2                            l4454 5E4C  
                          l5094 4688                            l5086 4652                            l5078 4646  
                          l4462 5C98                            l5270 42FA                            l5262 42CC  
                          l5254 4286                            l5350 3280                            l5342 321E  
                          l5334 31BC                            l5326 315A                            l5318 30F8  
                          l5422 3A4A                            l5430 3A7C                            l5414 39EC  
                          l5406 398E                            ?_pad 0011                            l4720 5E8C  
                          l4712 5E80                            l5168 5C26                            l5184 5292  
                          l5176 524E                            l5192 5FB8                            l4632 2FCE  
                          l4640 3016                            l4624 2F68                            l4616 2F36  
                          l4608 2EFE                            l4560 2DBC                            l4552 2D8A  
                          l4544 2D6E                            l4536 2D44                            l4528 2D14  
                          l4704 425C                            l3912 2178                            l3904 215C  
                          l3832 1F28                            l3824 1EFC                            l3816 1EC8  
                          l3840 1F48                            l3808 1E8C                            l3760 1DBE  
                          l3752 1D92                            l3744 1D60                            l3736 1D38  
                          l3728 1D18                            l4376 28F2                            l4368 27B4  
                          l4392 36CA                            l4384 3676                            l4448 5F34  
                          l3592 563A                            l4296 55E2                            l4288 559A  
                          l5248 4BA0                            l3496 47DA                            l3488 479C  
                          l3584 5C72                            l3576 5548                            l3568 54EE  
                          l3672 358A                            l3680 35EC                            l3664 3500  
                          l3656 3468                            l3648 3426                            l3920 3F2C  
                          l4456 5E68                            l5096 46A2                            l5088 466A  
                          l4464 5C9E                            l4800 10E4                            l5280 4344  
                          l5272 430E                            l5264 42DE                            l5256 4298  
                          l4480 4C0A                            l4472 4BAA                            l5360 32FC  
                          l5352 329A                            l5344 3238                            l5336 31D6  
                          l5328 3174                            l5440 3AF2                            l5432 3A90  
                          l5424 3A50                            l5416 3A0E                            l5408 399A  
                          l4714 5E86                            l4722 5F90                            l5186 52A2  
                          l5178 525A                            l5194 5FBA                            l4650 3080  
                          l4642 3030                            l4634 2FDA                            l4626 2F76  
                          l4618 2F44                            l4570 2E02                            l4554 2D9A  
                          l4562 2DC4                            l4546 2D74                            l4538 2D54  
                          l4706 425E                            l3914 217A                            l3906 2162  
                          l3842 1F6E                            l3850 1FC4                            l3834 1F36  
                          l3826 1F0A                            l3818 1ED8                            l3770 1DDC  
                          l3762 1DCC                            l3754 1D94                            l3746 1D62  
                          l3738 1D4A                            l4378 292E                            l4458 5CD2  
                          l4394 3702                            l4386 3682                            l4730 3B50  
                          l3594 563E                            l3586 5EC8                            l4298 55EE  
                          l3498 47F8                            l3578 555C                            l3690 3632  
                          l3682 35FE                            l3674 35A8                            l3666 3506  
                          l3658 3470                            l3930 3F98                            l3922 3F3A  
                          l4466 5CB4                            l4810 1148                            l4802 1112  
                          l5290 437C                            l5282 4350                            l5274 4326  
                          l5266 42E2                            l5258 42A4                            l4490 4C56  
                          l4482 4C16                            l4474 4BCE                            l5370 3360  
                          l5362 32FE                            l5354 329C                            l5346 323A  
                          l5338 31D8                            l5442 3B02                            l5434 3AAA  
                          l5426 3A62                            l5418 3A42                            l4716 5E88  
                          l5188 52B6                            l5196 5FC4                            l4652 308E  
                          l4644 3046                            l4636 2FE8                            l4628 2FA4  
                          l4580 2E2A                            l4572 2E06                            l4564 2DD4  
                          l4556 2DAA                            l4548 2D7A                            l3908 2164  
                          l3860 2018                            l3852 1FEA                            l3844 1FA2  
                          l3836 1F38                            l3828 1F18                            l3780 1DF0  
                          l3772 1DE0                            l3764 1DD0                            l3748 1D72  
                          l3756 1D9C                            l4396 3714                            l4388 3692  
                          l4740 3BB0                            l4732 3B54                            l4724 3B2A  
                          l3596 564C                            l3588 5EE4                            l3692 363A  
                          l3684 360E                            l3676 35C2                            l3668 350C  
                          l3940 404A                            l3932 3FE0                            l3924 3F4C  
                          l4468 5CCA                            l4900 1C46                            l4820 1404  
                          l4812 11EE                            l4804 111E                            l5292 4390  
                          l5284 4356                            l5276 432C                            l5268 42EE  
                          l4492 4C6E                            l4484 4C22                            l4476 4BE6  
                          l5372 3372                            l5364 3310                            l5356 32AE  
                          l5348 324C                            l5444 3B18                            l5436 3ABE  
                          l5428 3A76                            l5380 3928                            l4718 5E8A  
                          l5198 5FC6                            l4654 3094                            l4646 3060  
                          l4638 3012                            l4590 2E78                            l4566 2DEA  
                          l4558 2DBA                            l4670 4122                            l3870 2042  
                          l3862 2026                            l3854 1FFA                            l3846 1FA4  
                          l3838 1F42                            l3790 1E04                            l3782 1DF4  
                          l3774 1DE4                            l3766 1DD4                            l3758 1DAC  
                          l4398 3734                            l4750 3C14                            l4742 3BB4  
                          l4734 3B6C                            l4726 3B2E                            l3598 5654  
                          l3686 3614                            l3694 364A                            l3678 35DC  
                          l3942 405E                            l3926 3F50                            l3918 3F08  
                          l4910 1CC6                            l4902 1C74                            l4830 15BA  
                          l4822 14AC                            l4814 129A                            l4806 1122  
                          l5294 43B0                            l5286 4366                            l4494 4C7E  
                          l4486 4C2E                            l4478 4BF2                            l5374 337C  
                          l5366 3344                            l5358 32E2                            l5446 3B1E  
                          l5438 3AD8                            l5390 3954                            l5382 3934  
                          l3960 602E                            l4656 3096                            l4648 307C  
                          l4592 2E88                            l4584 2E3E                            l4568 2DFA  
                          l4576 2E1A                            l4680 4160                            l4672 4138  
                          l4664 40BE                            l3880 2074                            l3872 2052  
                          l3864 2028                            l3848 1FB4                            l3792 1E08  
                          l3784 1DF8                            l3776 1DE8                            l3768 1DD8  
                          l4920 4E54                            l4760 3C78                            l4752 3C18  
                          l4744 3BCC                            l4736 3B80                            l4728 3B38  
                          l3688 3626                            l3936 4018                            l3928 3F74  
                          l3952 4084                            l4904 1CA2                            l4840 1692  
                          l4832 15C6                            l4824 14C8                            l4816 1346  
                          l4808 113C                            l5296 43C0                            l4496 4C94  
                          l4488 4C3E                            l5368 335E                            l5392 395A  
                          l5384 3948                            l5376 3920                            l3698 5EA0  
                          l3962 6032                            l3970 6028                            l4594 2E90  
                          l4586 2E58                            l4578 2E2A                            l4690 41E8  
                          l4682 4192                            l4666 40CE                            l3890 20CE  
                          l3882 208A                            l3866 2036                            l3858 200E  
                          l3874 2054                            l3786 1DFC                            l3778 1DEC  
                          l3794 1E0C                            l4930 4EB4                            l4922 4E6C  
                          l4914 4E2C                            l4770 3CDC                            l4762 3C90  
                          l4754 3C30                            l4746 3BE4                            l4738 3B98  
                          l3954 40A8                            l3938 403C                            l3946 406A  
                          l4906 1CA8                            l4850 1836                            l4842 16AE  
                          l4834 15CA                            l4826 1570                            l4818 13E8  
                          l5298 43D4                            l4498 4CA6                            l5394 395A  
                          l5386 394C                            l5378 3924                            l3964 6004  
                          l4596 2EA0                            l4588 2E68                            l4692 41F6  
                          l4684 4194                            l4676 414C                            l4668 40DC  
                          l3980 5BE2                            l3972 601A                            l3892 2108  
                          l3868 203E                            l3876 2062                            l3796 1E10  
                          l3788 1E00                            l4932 4EC0                            l4924 4E78  
                          l4916 4E46                            l4772 3CF4                            l4764 3C94  
                          l4756 3C48                            l4748 3BFC                            l3948 4078  
                          l4908 1CBC                            l4860 195A                            l4852 18DE  
                          l4844 1756                            l4836 15E4                            l4828 158C  
                          l4780 0E62                            l5396 395E                            l5388 3950  
                          l3966 6008                            l4598 2EB4                            l4694 4214  
                          l4686 41A0                            l4678 4154                            l3982 5BEA  
                          l3974 601E                            l3886 20B4                            l3894 210A  
                          l3878 2066                            l3798 1E3A                            l4934 4ED8  
                          l4926 4E90                            l4918 4E50                            l4774 3D0C  
                          l4766 3CAC                            l4758 3C60                            l3990 56FE  
                          l4870 1A6A                            l4862 1A28                            l4854 18F2  
                          l4846 1772                            l4838 15F0                            l4790 0F44  
                          l4782 0E66                            l4950 542A                            l4942 53EA  
                          l5398 395E                            l3968 6024                            l4696 4216  
                          l4688 41DC                            l3984 5C10                            l3976 5BD6  
                          l3896 211A                            l3888 20C0                            l4936 4F40  
                          l4928 4E9C                            l4776 3D10                            l4768 3CC4  
                          l3992 5702                            l4880 1B6A                            l4872 1B2A  
                          l4864 1A32                            l4856 1920                            l4848 181A  
                          l4792 0FEC                            l4784 0E80                            l4952 542E  
                          l4944 5400                            l4698 421A                            l3986 5C12  
                          l3978 5BDA                            l3898 212A                            l4938 4F4A  
                          l3994 571A                            l4882 1B80                            l4890 1BAE  
                          l4874 1B34                            l4866 1A3C                            l4858 192C  
                          l4794 1008                            l4786 0E8C                            l4778 0E14  
                          l4954 5474                            l4946 5404                            l4970 29D4  
                          l4962 2964                            l3996 5726                            l4884 1B88  
                          l4868 1A54                            l4876 1B3E                            l4892 1BB2  
                          l4796 10B0                            l4788 0F28                            l4956 5490  
                          l4948 541E                            l4972 29EC                            l4964 29B0  
                          l3998 573E                            l4894 1BE0                            l4886 1B9E  
                          l4878 1B54                            l4798 10CC                            l4958 54A8  
                          l4990 2A9E                            l4982 2A42                            l4974 29F0  
                          l4966 29B4                            l4896 1C10                            l4888 1BA6  
                          l4992 2AC2                            l4984 2A44                            l4976 2A18  
                          l4968 29C8                            l4898 1C40                            l4986 2A66  
                          l4978 2A2C                            l4996 2AFA                            l4998 2B1E  
                          STR_1 0E05                            STR_2 0E0D                            STR_3 0E08  
                          STR_4 0E08                            STR_5 0E08                            u3000 5B90  
                          u3001 5B8C                            u3010 5DA2                            u3011 5D9E  
                          u3020 4778                            u3100 4932                            u3021 4774  
                          u3101 492E                            u3030 47AA                            u3110 4970  
                          u3031 47A6                            u3111 496C                            u4000 2208  
                          u3200 564C                            u3120 499A                    _BAUD4CONbits 000EE9  
                          u4001 2204                            u3201 5648                            u3041 47D4  
                          u3121 4996                            _LATE 000F7D                            u4010 221A  
                          u3210 5666                            u3050 47F8                            u3130 49C8  
                          u4011 2216                            u3211 5662                            u3051 47F4  
                          u3131 49C4                            _LATG 000F7F                            u4100 24BA  
                          u4020 222A                            u3220 568C                            u3060 4822  
                          u3140 4A10                            u3300 3426                            u4101 24B6  
                          u4021 2226                            u3221 5688                            u3061 481E  
                          u3141 4A0C                            u3301 3422                            u4110 24CE  
                          u4030 2260                            u3230 56AA                            u3070 4862  
                          u3150 54C0                            u3310 3454                            u4111 24CA  
                          u4031 225C                            u3231 56A6                            u3071 485E  
                          u3151 54BC                            u3311 3450                            u5000 2F64  
                          u4200 5156                            u4120 24E8                            u4040 2270  
                          u3240 56C6                            u3080 48AC                            u3160 54E2  
                          u3400 3626                            u3320 3462                            u5001 2F60  
                          u4201 5152                            u4121 24E4                            u4041 226C  
                          u3241 56C2                            u3081 48A8                            u3161 54DE  
                          u3401 3622                            u3321 345E                            u3410 5EB0  
                          u5010 2F76                            u4130 2530                            u4050 23EA  
                          u4210 5D22                            u3250 56EC                            u3090 4900  
                          u3170 5538                            u3330 358A                            _T2PR 000FBC  
                          u3411 5EAC                            u5011 2F72                            u4131 252C  
                          u4211 5D1E                            u3251 56E8                            u3091 48FC  
                          u3171 5534                            u3331 3586                            u3420 5EC6  
                          u5020 2FA4                            u5100 40DC                            u4140 255E  
                          u4060 2444                            u3500 1D4A                            u4300 45CE  
                          u3180 5548                            u3340 35A8                            u3260 33C2  
                          u4220 590E                            u3421 5EC2                            u5021 2FA0  
                          u5101 40D8                            u4141 255A                            u4061 2440  
                          u3501 1D46                            u4301 45CA                            u3181 5544  
                          u3341 35A4                            u3261 33BC                            u4221 590A  
                          u5030 2FBA                            u5110 4138                            u4150 2598  
                          u4070 2464                            u3510 1D60                            u3430 3D50  
                          u4310 55B2                            u4230 5E46                            u3190 5C72  
                          u3350 35C2                            u3270 33C4                            u5031 2FB6  
                          u5111 4134                            u4151 2594                            u4071 2460  
                          u4055 23E0                            u3511 1D5C                            u3431 3D4C  
                          u4311 55AE                            u4231 5E42                            u3191 5C6E  
                          u3351 35BE                            u5040 2FCE                            u5120 418E  
                          u4400 502A                            u4160 508A                            u4080 2476  
                          u3600 1E9A                            u3520 1D72                            u3440 3E34  
                          u4320 55D6                            u4240 445C                            u3360 35DC  
                          u3280 33DA                            u5200 1A28                            u5041 2FCA  
                          u5121 418A                            u4401 5026                            u4161 5086  
                          u4081 2472                            u3601 1E96                            u3521 1D6E  
                          u3441 3E30                            u4321 55D2                            u4241 4458  
                          u3361 35D8                            u3281 33D6                            u5201 1A24  
                          u5050 2FE8                            u5130 41D8                            u4410 503A  
                          u4170 50C8                            u4090 24A4                            u3610 1EBA  
                          u3530 1D82                            u4330 5620                            u4250 44B6  
                          u3370 35EC                            u3290 340A                            u5210 1A54  
                          u5051 2FE4                            u5131 41D4                            u4411 5036  
                          u4171 50C4                            u4091 24A0                            u3611 1EB6  
                          u3531 1D7E                            u4331 561C                            u4251 44B2  
                          u3371 35E8                            u3291 3406                            u5211 1A50  
                          u5060 3030                            u5140 41F6                            u4180 50E6  
                          u3700 1FFA                            u3620 1EC8                            u3540 1DBE  
                          u4500 292E                            u4420 25F6                            u4340 5638  
                          u4260 44FA                            u3380 35FE                            u5300 1C40  
                          u5220 1A6A                            u5061 302C                            u5141 41F2  
                          u4181 50E2                            u3701 1FF6                            u3621 1EC4  
                          u3541 1DBA                            u4501 292A                            u4341 5634  
                          u4261 44F6                            u3381 35FA                            u5301 1C3C  
                          u5221 1A66                            u5070 3060                            u5150 4206  
                          u4350 4F6C                            u4190 5106                            u3710 2026  
                          u3630 1ED8                            u3550 1DCC                            u3470 1CE6  
                          u4430 261E                            u4510 3692                            u3454 3E8E  
                          u4270 4524                            u3390 360E                            u5310 1C74  
                          u5230 1B2A                            u5071 305C                            u5151 4202  
                          u4351 4F68                            u4191 5102                            u3711 2022  
                          u3631 1ED4                            u3551 1DC8                            u3471 1CE2  
                          u4431 261A                            u4511 368E                            u3455 3E8A  
                          u4271 4520                            u3391 360A                            u5311 1C70  
                          u5231 1B26                            u6007 0E72                            u5080 308E  
                          u5160 4214                            u4360 4FA0                            u3800 2108  
                          u3720 2036                            u3640 1F0A                            u3560 1E3A  
                          u3480 1CF8                            u4440 2652                            u4520 36A4  
                          u3464 3EF8                            u4280 457E                            u5320 1CA2  
                          u5240 1B54                            u5400 2B7A                            u5081 308A  
                          u5161 4210                            u3801 2104                            u3721 2032  
                          u3641 1F06                            u3561 1E36                            u3481 1CF4  
                          u4425 25EC                            u4521 369C                            u3465 3EF4  
                          u4281 457A                            u5321 1C9E                            u5241 1B50  
                          u6017 10D8                            u5401 2B76                            u5170 424E  
                          u5090 40CE                            u4370 4FCE                            u3810 211A  
                          u3730 2052                            u3650 1F18                            u3570 1E52  
                          u3490 1D08                            u4450 266E                            u4610 3796  
                          u4290 45B6                            u5330 1CBC                            u5250 1B6A  
                          u5410 2BD6              verify_color@color2 016E                            u5171 424A  
                          u5091 40CA                            u4371 4FCA                            u3811 2116  
                          u3731 204E                            u3651 1F14                            u3571 1E4C  
                          u3491 1D04                            u4451 266A                            u4611 3792  
                          u4291 45B2                            u6107 4AE4                            u5331 1CB8  
                          u5251 1B66                            u6027 112E                            u5411 2BD2  
                          u5180 425C                            u3900 5BFE                            u4380 4FE2  
                          u3820 212A                            u3740 2062                            u3660 1F36  
                          u3580 1E54                            u4460 26AE                            u4620 37A8  
                          u4540 36DC                            u5500 51FC                            u5260 1B80  
                          u5340 54A8                            u5420 2C32                            u5181 4258  
                          u3901 5BF6                            u4381 4FDE                            u4365 4F96  
                          u3821 2126                            u3741 205E                            u3661 1F32  
                          u4461 26AA                            u4445 2648                            u4621 37A0  
                          u4541 36D4                            u5501 51F8                            u6117 4B2A  
                          u5261 1B7C                            u6037 15D6                            u5341 54A4  
                          u5421 2C2E                            u4390 500A                            u3830 214A  
                          u3750 2074                            u3670 1F6E                            u3590 1E7C  
                          u4470 27B4                            u4710 389E                            u5510 520E  
                          u5270 1B9E                            u5190 195A                            u5430 2C8E  
                          u5350 2A18                            u4391 5006                            u3831 2146  
                          u3751 2070                            u3671 1F6A                            u3591 1E78  
                          u4471 27B0                            u4711 389A                            u6207 4E08  
                          u5511 520A                            u6127 4B94                            u6047 4600  
                          u5271 1B9A                            u5191 1956                            u5431 2C8A  
                          u5351 2A14                            u3840 215C                            u3760 208A  
                          u3680 1FB4                            u4480 2852                            u4720 38B0  
                          u4640 37E4                            u4608 3760                            u4560 3714  
                          u3920 571A                            u5600 4AC2                            u2960 5332  
                          u5520 4646                            u5280 1BE0                            u4800 4C0A  
                          u5440 2CF2                            u5360 2A3E                            u3841 2158  
                          u3761 2086                            u3681 1FB0                            u4481 284E  
                          u4721 38A8                            u4641 37DC                            u4561 3710  
                          u3921 5716                            u6217 4496                            u6137 517C  
                          u5601 4ABE                            u2961 532E                            u6057 465C  
                          u5521 4642                            u5281 1BDC                            u4801 4C06  
                          u5441 2CEE                            u5361 2A3A                            u3850 2178  
                          u3770 20A0                            u3690 1FEA                            u4490 2912  
                          u4570 3726                            u4538 36A6                            u3930 573E  
                          u5610 4B0A                            u2970 5344                            u5530 46A2  
                          u5290 1C10                            u4810 4C56                            u5450 2D06  
                          u5370 2A66                            u3851 2174                            u3771 209C  
                          u3691 1FE6                            u4571 371E                            u6307 3BBE  
                          u3931 573A                            u6227 44C8                            u6147 51A2  
                          u5611 4B00                            u2971 5340                            u6067 46B8  
                          u5531 469E                            u5291 1C0C                            u4811 4C52  
                          u5451 2D02                            u5371 2A62                            u4900 2D9A  
                          u3780 20B4                            u4740 38E6                            u4708 386A  
                          u4660 3820                            u3940 578A                            u5460 5172  
                          u2980 536C                            u3860 3F2C                            u5540 46FE  
                          u5700 430E                            u4820 4C6E                            u5380 2AC2  
                          u4901 2D96                            u3781 20B0                            u4741 38DE  
                          u4661 381C                            u6317 3C22                            u3941 5786  
                          u6237 455E                            u6157 51E2                            u5461 516E  
                          u2981 5368                            u3861 3F28                            u6077 4714  
                          u5541 46FA                            u5701 430A                            u4821 4C6A  
                          u5381 2ABE                            u4910 2DAA                            u3918 5C00  
                          u3790 20CE                            u4670 3832                            u4638 37AA  
                          u4590 375E                            u4558 36DE                            u3950 57A2  
                          u5470 5196                            u5630 4B44                            u2990 53A2  
                          u3870 3F74                            u5550 475A                            u5710 4340  
                          u4830 4C7E                            u5390 2B1E                            u4911 2DA6  
                          u3791 20CA                            u4495 2908                            u4671 382A  
                          u4591 3756                            u6407 4EA8                            u6327 3C9E  
                          u3951 579E                            u6247 4590                            u6167 521A  
                          u5471 5192                            u5631 4B40                            u6087 5BB0  
                          u2991 539E                            u3871 3F70                            u5551 4756  
                          u5711 433C                            u4831 4C7A                            u5391 2B1A  
                          u4920 2DEA                            u4760 391E                            u5480 51C6  
                          u5640 4B52                            u3960 5FFC                            u3880 3F98  
                          u5720 4366                            u4840 4CA6                            u5800 31EA  
                          u5560 583A                            u4921 2DE6                            u4761 391A  
                          u6417 4ECC                            u6337 3D1A                            u6257 5768  
                          u6177 4D1C                            u5481 51C2                            u5641 4B4E  
                          u6097 4A9A                            u3961 5FF8                            u3881 3F94  
                          u5721 4362                            u4841 4CA2                            u5801 31E6  
                          u5561 5836                            u4930 2E2A                            u3970 21A6  
                          u4738 38B2                            u4690 3868                            u4658 37E6  
                          u5490 51D8                            u5650 4B60                            u5570 4A72  
                          u3890 403C                            u4770 5CB4                            u5730 4378  
                          u4850 4CD0                            u5810 324C                            u4931 2E26  
                          u3971 21A2                            u6507 38C6                            u4691 3860  
                          u6427 36BC                            u6347 5EFE                            u6267 57AC  
                          u6187 4D64                            u5491 51D4                            u5651 4B5C  
                          u5571 4A6E                            u3891 4038                            u4771 5CB0  
                          u5731 4374                            u4851 4CCC                            u5811 3248  
                          u4940 2EA0                            u4860 2D22                            u3980 21B8  
                          u4588 3728                            u5660 4B84                            u5628 4B0E  
                          u5580 4A80                            u4780 5CCA                            u5740 43C0  
                          u5820 32AE                            u4941 2E9C                            u4861 2D1E  
                          u3981 21B4                            u6517 38FC                            u6437 36F4  
                          u6357 5F1E                            u6277 5600                            u6197 4DAC  
                          u5661 4B80                            u5581 4A7C                            u4781 5CC6  
                          u5741 43BC                            u5821 32AA                            u4950 2EC2  
                          u4870 2D34                            u3990 21C8                            u4758 38E8  
                          u5590 4AB4                            u5750 4406                            u5670 4298  
                          u4790 4BE6                            u5830 3310                            u6527 5F7E  
                          u4951 2EBE                            u4871 2D30                            u3991 21C4  
                          u6447 373E                            u6367 5F3E                            u6287 3B42  
                          u5591 4AB0                            u5751 4402                            u5671 4294  
                          u4791 4BE2                            u5831 330C                            u4960 2EEC  
                          u4880 2D44                            u4688 3834                            u5680 42B8  
                          u5840 3372                            u5760 30B4                            u6537 5DF8  
                          u4961 2EE8                            u4881 2D40                            u6457 3776  
                          u6377 5F5E                            u6297 3B5E                            u5681 42B4  
                          u5841 336E                            u5761 30B0                            u4970 2F10  
                          u4890 2D88                            u5690 42DE                            u5770 30C4  
                          u5850 39E2                            u4971 2F0C                            u4891 2D84  
                          u6467 37C4                            u6387 4E60                            u5691 42DA  
                          u5771 30C0                            u5907 3A9C                            u5851 39DE  
                          u4980 2F26                            u5780 3126                            u5860 3A0E  
                          u4981 2F22                            u6477 3800                            u6397 4E84  
                          u5781 3122                            u5917 57CC                            u5861 3A0A  
                          u4990 2F44                            u5790 3188                            u5870 3A62  
                          u4991 2F40                            u6487 3848                            u5791 3184  
                          u5927 5804                            u5871 3A5E                            u5880 3B02  
                          u6497 387E                            u5937 29DE                            u5881 3AFE  
                          u5947 4C34                            u5957 4C88                            u5967 4CB0  
                          u5977 4CDA                            u5987 43E0                            u5997 5410  
                          abs@a 0013                            _dbuf 014A                            _main 3920  
                          _dtoa 3392                turning_action@mL 0035                turning_action@mR 0037  
                          _prec 0142                            _nout 013E                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001A                            fsr2l 000FD9                            btemp 005F  
                          _stop 56FE                            prodh 000FF4                            prodl 000FF3  
                          start 0030                    main@accident 018B                  ?_color_display 0058  
                 test_action@mL 002D                   test_action@mR 002F                 ___fldiv@new_exp 0020  
        __end_of_color_read_Red 5A18                 __end_of_HighISR 0030                    ___param_bank 000000  
               detect_color@buf 0081                  ?_color_predict 0001                           ??_abs 0015  
                         ??_pad 0017                   ___fltol@sign1 0064                 __end_of___aodiv 48EE  
     amb_light_measure@CC_amb_1 0072       amb_light_measure@CC_amb_2 0074       amb_light_measure@CC_amb_3 0076  
               __end_of___fladd 218C                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 4A52                 __end_of___fldiv 30A2                 __end_of___awdiv 56FE  
               __end_of___flneg 5D44                 __end_of___flmul 25B6                 __end_of___flsub 5B4E  
               __end_of___fltol 505C                           ?_stop 001A                 ___awdiv@divisor 0009  
                         _LED_B 5F4E                           _LED_C 5F6E                           _LED_G 5F2E  
                         _LED_R 5EEE                           i2l504 002C                 ___awdiv@counter 000B  
                  vfpfcnvrt@fmt 0042                           _TMR0H 000FD4                           _TMR0L 000FD3  
       __end_of_sendCharSerial4 6002      __end_of_I2C_2_Master_Start 6038         ??_color_data_collection 005C  
    __end_of_I2C_2_Master_Write 600E                 __end_of_compare 5CD2                    compare@lower 006A  
                         _flags 0144                           _color 0148                    compare@upper 006E  
                         _fputc 5320                           _fputs 5B4E                           _setup 4A52  
                         pad@fp 0011                           _width 0140                           _putch 603A  
                         _toint 0E01                           dtoa@d 001E                           dtoa@i 003E  
                         dtoa@n 0036                           dtoa@p 0030                           dtoa@s 0034  
                         dtoa@w 0032                 ??_test_function 00FE            amb_light_measure@amb 006A  
                         tablat 000FF5                 __end_of_lroundf 5D0C                 detect_wall@stop 007C  
                         ttemp5 0060                           ttemp6 0063                           ttemp7 0067  
                         status 000FD8                           wtemp8 0060                 __end_of_sprintf 59C8  
              color_display@buf 0079         __end_of_color_read_Blue 5AB8           _I2C_2_Master_RepStart 601A  
             _calibration_motor 5160                 ?_color_read_Red 0005                 __initialization 5D44  
                 short_burst@mL 0020                   short_burst@mR 0022              ?_calibration_motor 0033  
                  __end_of_main 3B2A                    __end_of_dtoa 3674                   main@amb_light 0184  
          __end_of_detect_color 1CCC                    __end_of_stop 57BC          color_data_collection@i 00DE  
        color_data_collection@j 00E0          color_data_collection@k 00E2          color_data_collection@m 005A  
        color_data_collection@x 00E4             ??_calibration_motor 0037                          ??_main 0178  
                        ??_dtoa 0026                          ??_stop 001E                   __activetblptr 000001  
                        ?_LED_B 0001                          ?_LED_C 0001                          ?_LED_G 0001  
                        ?_LED_R 0001                       ??_LED_OFF 0001          _initDCmotors_parameter 524E  
                  turn45@i_1335 0028                    turn45@i_1337 002A                    ?_setMotorPWM 000F  
                        ?_fputc 0001                          ?_fputs 000A                ___awdiv@dividend 0007  
                        ?_setup 0078                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70                          i2l5450 001A  
                        i2l5452 0022                          i2l5454 0028                          i2l5448 000A  
                     ??_HighISR 0001        __end_of_color_click_init 5E18                          _RX4PPS 000E15  
                        _TX4REG 000EE4                 ??_color_display 005A       __end_of_calibration_motor 524E  
              __end_of___xxtofl 4270                   ??_Timer0_init 0001                 ??_color_predict 0058  
                  vfprintf@cfmt 0056                          ___flge 505C                       ??___aodiv 0011  
                     ??___fladd 0009                       ??___aomod 0011                          ___wmul 5EC8  
                     ??___fldiv 0017                       ??___awdiv 000B                       ??___flneg 0005  
                     ??___flmul 0030                       ??___flsub 0019                       ??___fltol 0060  
                        _goback 2964                   compare@result 0070                          _memory 0100  
                        clear_0 5D62                ___awdiv@quotient 000D                          _motorL 0131  
                        _motorR 0128                          isa$std 000001                          pad@buf 0013  
                        _turn45 4420                          _roundf 25B6                          dtoa@fp 001C  
                        _strlen 5D7A                       ??_compare 005F                   toggle_light@i 0004  
              __end_of_pin_init 5DE4                          fputc@c 0001         toggle_light@lightnumber 0005  
                        fputs@c 000E                          fputs@i 000F                          fputs@s 000A  
                test_function@m 016A                  test_function@w 016C                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0001                       ??_lroundf 005F                     read_color@m 000C  
                        putch@c 0001                __end_of_vfprintf 5918                          stop@mL 001A  
                        stop@mR 001C               ??_initDCmotorsPWM 0003                ??_turning_action 0039  
                  ?_test_action 002D                       ??_sprintf 0058                      ___flge@ff1 0001  
                    ___flge@ff2 0005                    ___xxtofl@arg 000B                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                    ?_short_burst 0020                calibrate_white@w 000C  
               fullSpeedBack@mL 0020                 fullSpeedBack@mR 0022                   main@stop_time 0189  
                    __accesstop 0060         __end_of__initialization 5D68                   verify_color@m 016A  
                 verify_color@w 016C        __end_of_color_read_Clear 5B08                      ___flneg@f1 0001  
      __end_of_color_read_Green 5A68          ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD  
  initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003                   ___rparam_used 000001  
                    ___fltol@f1 005B                   __end_of_LED_B 5F6E                   __end_of_LED_C 5F8E  
                 __end_of_LED_G 5F4E                   __end_of_LED_R 5F0E                ?_color_read_Blue 0005  
               _Interrupts_init 600E                  __pcstackCOMRAM 0001                   _fullSpeedBack 4BAA  
                  __pidataBANK1 6038                   __end_of_fputc 53EA               detect_color@color 00F5  
                 __end_of_fputs 5B92                   __end_of_setup 4BAA                   __end_of_putch 603C  
                 __end_of_toint 0E05             __end_of_Timer0_init 5FEA                         ??_LED_B 0001  
                       ??_LED_C 0001                         ??_LED_G 0001                         ??_LED_R 0001  
                       ??_fputc 0005                         ??_fputs 000E                         ??_setup 0080  
                       ??_putch 0001                      __pbssBANK1 0100             calibration_motor@mL 0033  
           calibration_motor@mR 0035                color_predict@buf 0079               _color_writetoaddr 5F8E  
                  _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020                         ?___flge 0001  
            ?_color_writetoaddr 0003                         ?___wmul 0001                         ?_goback 002D  
                       ?_turn45 0020                         ?_roundf 0041             ??_color_writetoaddr 0004  
                       ?_strlen 0001                         _LED_OFF 5F0E                       ?___xxtofl 0001  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
  amb_light_measure@upper_bound 006E                    _detect_color 0E14   __end_of_color_data_collection 4766  
       __end_of_Interrupts_init 601A          color_writetoaddr@value 0003                ??_color_read_Red 0007  
                       _HighISR 0008       __end_of_color_writetoaddr 5FAE              _I2C_2_Master_Start 602E  
                    _initUSART4 5FAE              _I2C_2_Master_Write 6002                       ?_pin_init 0001  
                       __Hparam 0000           test_function@complete 0174                         __Lparam 0000  
             color_read_Red@tmp 000A                     _Timer0_init 5FCC         sendStringSerial4@string 0002  
                       ___aodiv 4766                         ___fladd 1CCC                         ___aomod 48EE  
                       ___fldiv 2D08                         ___awdiv 563A                         ___flneg 5D0C  
                       ___flmul 218C                         ___flsub 5B08                         ___fltol 4F54  
           ?_I2C_2_Master_Start 0001        fullSpeedBack@instruction 0024             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 0050                    __psmallconst 0E00                         __pcinit 5D44  
                       __ramtop 0E00                      _read_color 5918                         __ptext0 3920  
                       __ptext1 57BC                         __ptext2 30A2                         __ptext3 2964  
                       __ptext4 4BAA                         __ptext5 4270                         __ptext6 53EA  
                       __ptext7 0E14                         __ptext8 5C98                         __ptext9 45D0  
                       _compare 5C98         ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD  
                    ??___xxtofl 0005               detect_wall@CC_amb 0078               detect_wall@CG_amb 0072  
           turning_action@color 0039                       _T2HLTbits 000FBE                         _lroundf 5CD2  
                       goback@i 0033                         main@amb 017C                         _sprintf 5976  
                       main@rgb 018C            ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002  
          end_of_initialization 5D68              setMotorPWM@PWMduty 0018                         fputc@fp 0003  
         __end_of_test_function 4420                         fputs@fp 000C               ?_color_click_init 0001  
               test_function@mL 016E                 test_function@mR 0170                 ??_fullSpeedBack 0025  
                    ??_pin_init 0001              ??_color_click_init 0005                         setup@mL 007C  
             __end_of_vfpfcnvrt 40BC                         setup@mR 007E                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                         turn45@i 002C                         roundf@e 004D  
                       roundf@u 0053                         roundf@x 0041                         roundf@y 0057  
                    ??_vfprintf 0056                  main@start_time 0187                         strlen@a 0003  
                       strlen@s 0001                 _initDCmotorsPWM 5C16                 turn45@direction 0025  
__end_of_initDCmotors_parameter 5320                   ??_detect_wall 0070                       _PORTFbits 000F8E  
      test_function@stop_signal 0176                     ___fladd@grs 0010                   ___xxtofl@sign 0009  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
              fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C        color_writetoaddr@address 0004  
       ??_I2C_2_Master_RepStart 0002                ?_Interrupts_init 0001                     ___flmul@grs 0035  
                 ?_toggle_light 0001               ?_color_read_Clear 0005               ?_color_read_Green 0005  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0001                   ?_verify_color 016A  
         __end_of_color_display 58B6                      main@motorL 01B0                      main@motorR 01B9  
   amb_light_measure@CC_amb_ave 0070               ??_calibrate_white 000E              ??_color_read_Clear 0007  
                color_display@m 0058              ??_color_read_Green 0007                  detect_color@BB 00EF  
                detect_color@BC 00E5                  detect_color@BG 00F6                  detect_color@GB 00F1  
                detect_color@GG 00F3                  detect_color@BR 00E9                  detect_color@GR 00EB  
                detect_color@RB 00ED                  detect_color@RG 00E7                  detect_color@RR 00F8  
         __end_of_color_predict 5E76                  __end_of___flge 5160                  _fullSpeedAhead 5576  
                   vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048  
                __end_of___wmul 5EEE                     ?_read_color 000C                  __end_of_goback 2D08  
                __end_of_turn45 45D0                  __end_of_roundf 2964                  __end_of_strlen 5DB0  
           color_read_Clear@tmp 000A             start_initialization 5D44                     __end_of_abs 5C98  
                   __end_of_pad 5576             __end_of_detect_wall 54B0                 turn45@turn_time 0024  
                ??_toggle_light 0002                  ??_verify_color 00FE             color_read_Green@tmp 000A  
       __end_of_initDCmotorsPWM 5C58                     vfprintf@fmt 0052          __end_of_fullSpeedAhead 563A  
                      ??___flge 0009                        ??___wmul 0005                        ??_goback 0031  
                   __pdataBANK1 01C2                        ??_turn45 0026                        ??_roundf 0045  
                      ??_strlen 0003                       ___fladd@a 0005                       ___fladd@b 0001  
                      ?_LED_OFF 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
                     ___flmul@a 002C                       ___flmul@b 0028                       ___flsub@a 0015  
                     ___flsub@b 0011                   __pcstackBANK0 0060                   __pcstackBANK1 016A  
              ___aodiv@dividend 0001            detect_wall@amb_light 006E                        ?_HighISR 0001  
                     _dtoa$2620 002E                    ?_Timer0_init 0001                 ?_fullSpeedAhead 001A  
                     __pintcode 0008                        ?___aodiv 0001                        ?___fladd 0001  
                      ?___aomod 0001                        ?___fldiv 000F                        ?___awdiv 0007  
              ___aodiv@quotient 0013                        ?___flneg 0001                        ?___flmul 0028  
                      ?___flsub 0011                        ?___fltol 005B              test_function@color 0175  
                   _centisecond 0146            I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004  
                      ?_compare 006A                     _detect_wall 53EA                     __smallconst 0E00  
             _I2C_2_Master_Idle 5EA0               _I2C_2_Master_Init 5E76               _I2C_2_Master_Read 5BD4  
             _I2C_2_Master_Stop 6024          toggle_light@toggletime 0001                        ?_lroundf 0066  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
                 ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001  
                      ?_sprintf 0060               _sendStringSerial4 5E18           _color_data_collection 45D0  
           ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002  
                ___wmul@product 0005                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F                        _LATHbits 000F80  
                      _PIE0bits 000E29              ?_sendStringSerial4 0002                        _PIR0bits 000E33  
                      _PIR4bits 000E37                        i2u589_40 001A                        i2u589_41 0016  
          detect_wall@threshold 007A                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                        _SSP2STAT 000ED8  
                   _array_index 0149                       _vfpfcnvrt 3F08                      setup@white 0078  
     __end_of_I2C_2_Master_Idle 5EC8            __end_of_toggle_light 3920       __end_of_I2C_2_Master_Init 5EA0  
     __end_of_I2C_2_Master_Read 5C16               ___wmul@multiplier 0001       __end_of_I2C_2_Master_Stop 602E  
                  setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002            __end_of_verify_color 5846  
        test_function@amb_light 0172                       main@white 0194               ??_color_read_Blue 0007  
                 detect_color@m 0079                   detect_color@w 007B                   ??_test_action 0031  
               _calibrate_white 3B2A       __end_of_sendStringSerial4 5E48                   detect_wall@mL 006A  
                 detect_wall@mR 006C                   ??_short_burst 0024               _amb_light_measure 4E2C  
 __end_of_I2C_2_Master_RepStart 6024              color_read_Blue@tmp 000A             __end_of_setMotorPWM 3F08  
                    roundf@F527 013A                    ??_initUSART4 0001              ?_amb_light_measure 006A  
                      __Hrparam 0000                      vfprintf@ap 0054                        __Lrparam 0000  
                    vfprintf@fp 0050           __end_of_fullSpeedBack 4CFE                    __Lsmallconst 0E00  
          compare@value2compare 006C             ??_amb_light_measure 006C                      ?_vfpfcnvrt 0040  
                  ??_read_color 000E                 ___aodiv@divisor 0009                 ___aodiv@counter 0011  
                    _ANSELDbits 000EA7                      _ANSELFbits 000EB4                      sprintf@fmt 0062  
                      ___xxtofl 40BC                      _T0CON0bits 000FD5                      _T0CON1bits 000FD6  
            __end_of_initUSART4 5FCC                        __ptext10 5918                        __ptext11 5E48  
                      __ptext20 5320                        __ptext12 5846                        __ptext21 603A  
                      __ptext13 5976                        __ptext30 4CFE                        __ptext22 5C58  
                      __ptext14 58B6                        __ptext31 4420                        __ptext23 48EE  
                      __ptext15 3F08                        __ptext40 5A68                        __ptext32 56FE  
                      __ptext24 4766                        __ptext16 3392                        __ptext41 5EEE  
                      __ptext33 5576                        __ptext25 5E18                        __ptext17 54B0  
                      __ptext50 1CCC                        __ptext42 5F0E                        __ptext34 3D34  
                      __ptext26 5FEA                        __ptext18 5D7A                        __ptext51 5D0C  
                      __ptext43 5F2E                        __ptext35 5EC8                        __ptext27 5B92  
                      __ptext19 5B4E                        __ptext60 5F6E                        __ptext52 218C  
                      __ptext44 5F4E                        __ptext36 563A                        __ptext28 4A52  
                      __ptext61 5DB0                        __ptext53 505C                        __ptext45 4E2C  
                      __ptext37 3B2A                        __ptext29 5160                        __ptext70 5EA0  
                      __ptext62 5FAE                        __ptext54 4F54                        __ptext46 3674  
                      __ptext38 59C8                        __ptext71 5E76                        __ptext63 524E  
                      __ptext55 5AB8                        __ptext47 5CD2                        __ptext39 5A18  
                      __ptext72 5FCC                        __ptext64 5C16                        __ptext56 601A  
                      __ptext48 25B6                        __ptext73 600E                        __ptext65 5DE4  
                      __ptext57 5BD4                        __ptext49 5B08                        __ptext66 5F8E  
                      __ptext58 40BC                        __ptext67 6002                        __ptext59 2D08  
                      __ptext68 6024                        __ptext69 602E       __end_of_amb_light_measure 4F54  
                  _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA          ?_color_data_collection 005A  
        test_function@test_code 0177             __end_of_test_action 4E2C              __end_of_read_color 5976  
                      _pin_init 5DB0                  _turning_action 30A2             __end_of_short_burst 5BD4  
                      isa$xinst 000000                      _RC4STAbits 000EE7                        int$flags 005F  
                   _SENSITIVITY 01C2                        goback@mL 002D                        goback@mR 002F  
                      _vfprintf 58B6                ___aomod@dividend 0001         __end_of_calibrate_white 3D34  
                    _INTCONbits 000FF2                     _setMotorPWM 3D34                   ?_detect_color 0079  
                   _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1                        intlevel2 0000  
                     sprintf@ap 006C          __end_of_turning_action 3392                ??_fullSpeedAhead 001E  
                 _test_function 4270                  setup@amb_light 0082                        lroundf@x 0066  
      ??_initDCmotors_parameter 0005                        setup@amb 007A                 ___aomod@divisor 0009  
                   ??_vfpfcnvrt 0046                 ___aomod@counter 0011                        turn45@mL 0020  
                      turn45@mR 0022                _color_click_init 5DE4                    ?_detect_wall 006A  
                      sprintf@f 006E                        sprintf@s 0060               _detect_color$2948 00FA  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C                  ??_detect_color 007D  
                   _test_action 4CFE                   ___fladd@signs 000D                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012                 _sendCharSerial4 5FEA                     _short_burst 5B92  
                  ___fladd@aexp 000E                    ___fladd@bexp 000F                  ?_test_function 016A  
               ?_turning_action 0035                    _toggle_light 3674                    ___aomod@sign 0012  
                  _verify_color 57BC                     _roundf$2950 004F                     _roundf$2951 0049  
                 _color_display 5846                 main@stop_signal 0186  
